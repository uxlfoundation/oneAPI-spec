Search.setIndex({"docnames": ["architecture", "elements/element_list", "elements/oneCCL/source/definitions", "elements/oneCCL/source/index", "elements/oneCCL/source/introduction", "elements/oneCCL/source/namespaces", "elements/oneCCL/source/programming_model", "elements/oneCCL/source/spec/collective_operations", "elements/oneCCL/source/spec/datatypes", "elements/oneCCL/source/spec/error_handling", "elements/oneCCL/source/spec/generic_workflow", "elements/oneCCL/source/spec/group_calls", "elements/oneCCL/source/spec/main_objects", "elements/oneCCL/source/spec/operation_attributes", "elements/oneCCL/source/spec/operation_progress", "elements/oneCCL/source/spec/operations", "elements/oneCCL/source/spec/reductions", "elements/oneCCL/source/spec_version", "elements/oneDAL/source/algorithms/clustering/index", "elements/oneDAL/source/algorithms/clustering/kmeans", "elements/oneDAL/source/algorithms/clustering/kmeans_init", "elements/oneDAL/source/algorithms/decomposition/index", "elements/oneDAL/source/algorithms/decomposition/pca", "elements/oneDAL/source/algorithms/index", "elements/oneDAL/source/algorithms/nearest_neighbors/index", "elements/oneDAL/source/algorithms/nearest_neighbors/knn_classification", "elements/oneDAL/source/appendix/index", "elements/oneDAL/source/appendix/kd_tree", "elements/oneDAL/source/bibliography", "elements/oneDAL/source/common_interface/common_type_definitions", "elements/oneDAL/source/common_interface/error_handling", "elements/oneDAL/source/common_interface/header_files_and_namespaces", "elements/oneDAL/source/common_interface/index", "elements/oneDAL/source/common_interface/spec_version", "elements/oneDAL/source/data_management/accessor/column", "elements/oneDAL/source/data_management/accessor/row", "elements/oneDAL/source/data_management/accessors", "elements/oneDAL/source/data_management/array", "elements/oneDAL/source/data_management/csv_data_source", "elements/oneDAL/source/data_management/data_sources", "elements/oneDAL/source/data_management/index", "elements/oneDAL/source/data_management/table/homogen", "elements/oneDAL/source/data_management/tables", "elements/oneDAL/source/glossary", "elements/oneDAL/source/index", "elements/oneDAL/source/introduction", "elements/oneDAL/source/notations", "elements/oneDAL/source/programming_model/computational_modes", "elements/oneDAL/source/programming_model/descriptors", "elements/oneDAL/source/programming_model/end_to_end_example", "elements/oneDAL/source/programming_model/index", "elements/oneDAL/source/programming_model/operations/index", "elements/oneDAL/source/programming_model/operations/support", "elements/oneDNN/source/conventions", "elements/oneDNN/source/data_model/data_types/bfloat16", "elements/oneDNN/source/data_model/data_types/index", "elements/oneDNN/source/data_model/data_types/int8", "elements/oneDNN/source/data_model/index", "elements/oneDNN/source/data_model/memory/formats", "elements/oneDNN/source/data_model/memory/index", "elements/oneDNN/source/data_model/memory/objects", "elements/oneDNN/source/execution_model/index", "elements/oneDNN/source/graph/data_model", "elements/oneDNN/source/graph/general", "elements/oneDNN/source/graph/index", "elements/oneDNN/source/graph/ops/Abs", "elements/oneDNN/source/graph/ops/AbsBackward", "elements/oneDNN/source/graph/ops/Add", "elements/oneDNN/source/graph/ops/AvgPool", "elements/oneDNN/source/graph/ops/AvgPoolBackward", "elements/oneDNN/source/graph/ops/BatchNormForwardTraining", "elements/oneDNN/source/graph/ops/BatchNormInference", "elements/oneDNN/source/graph/ops/BatchNormTrainingBackward", "elements/oneDNN/source/graph/ops/BiasAdd", "elements/oneDNN/source/graph/ops/BiasAddBackward", "elements/oneDNN/source/graph/ops/Clamp", "elements/oneDNN/source/graph/ops/ClampBackward", "elements/oneDNN/source/graph/ops/Concat", "elements/oneDNN/source/graph/ops/ConvTranspose", "elements/oneDNN/source/graph/ops/ConvTransposeBackwardData", "elements/oneDNN/source/graph/ops/ConvTransposeBackwardWeights", "elements/oneDNN/source/graph/ops/Convolution", "elements/oneDNN/source/graph/ops/ConvolutionBackwardData", "elements/oneDNN/source/graph/ops/ConvolutionBackwardWeights", "elements/oneDNN/source/graph/ops/Dequantize", "elements/oneDNN/source/graph/ops/Divide", "elements/oneDNN/source/graph/ops/DynamicDequantize", "elements/oneDNN/source/graph/ops/DynamicQuantize", "elements/oneDNN/source/graph/ops/Elu", "elements/oneDNN/source/graph/ops/EluBackward", "elements/oneDNN/source/graph/ops/End", "elements/oneDNN/source/graph/ops/Exp", "elements/oneDNN/source/graph/ops/GELU", "elements/oneDNN/source/graph/ops/GELUBackward", "elements/oneDNN/source/graph/ops/HardSigmoid", "elements/oneDNN/source/graph/ops/HardSigmoidBackward", "elements/oneDNN/source/graph/ops/HardSwish", "elements/oneDNN/source/graph/ops/HardSwishBackward", "elements/oneDNN/source/graph/ops/Interpolate", "elements/oneDNN/source/graph/ops/InterpolateBackward", "elements/oneDNN/source/graph/ops/LayerNorm", "elements/oneDNN/source/graph/ops/LayerNormBackward", "elements/oneDNN/source/graph/ops/LeakyReLU", "elements/oneDNN/source/graph/ops/Log", "elements/oneDNN/source/graph/ops/LogSoftmax", "elements/oneDNN/source/graph/ops/LogSoftmaxBackward", "elements/oneDNN/source/graph/ops/MatMul", "elements/oneDNN/source/graph/ops/MaxPool", "elements/oneDNN/source/graph/ops/MaxPoolBackward", "elements/oneDNN/source/graph/ops/Maximum", "elements/oneDNN/source/graph/ops/Minimum", "elements/oneDNN/source/graph/ops/Mish", "elements/oneDNN/source/graph/ops/MishBackward", "elements/oneDNN/source/graph/ops/Multiply", "elements/oneDNN/source/graph/ops/PReLU", "elements/oneDNN/source/graph/ops/PReLUBackward", "elements/oneDNN/source/graph/ops/Pow", "elements/oneDNN/source/graph/ops/Quantize", "elements/oneDNN/source/graph/ops/ReLU", "elements/oneDNN/source/graph/ops/ReLUBackward", "elements/oneDNN/source/graph/ops/Reciprocal", "elements/oneDNN/source/graph/ops/ReduceL1", "elements/oneDNN/source/graph/ops/ReduceL2", "elements/oneDNN/source/graph/ops/ReduceMax", "elements/oneDNN/source/graph/ops/ReduceMean", "elements/oneDNN/source/graph/ops/ReduceMin", "elements/oneDNN/source/graph/ops/ReduceProd", "elements/oneDNN/source/graph/ops/ReduceSum", "elements/oneDNN/source/graph/ops/Reorder", "elements/oneDNN/source/graph/ops/Round", "elements/oneDNN/source/graph/ops/Select", "elements/oneDNN/source/graph/ops/Sigmoid", "elements/oneDNN/source/graph/ops/SigmoidBackward", "elements/oneDNN/source/graph/ops/SoftPlus", "elements/oneDNN/source/graph/ops/SoftPlusBackward", "elements/oneDNN/source/graph/ops/Softmax", "elements/oneDNN/source/graph/ops/SoftmaxBackward", "elements/oneDNN/source/graph/ops/Sqrt", "elements/oneDNN/source/graph/ops/SqrtBackward", "elements/oneDNN/source/graph/ops/Square", "elements/oneDNN/source/graph/ops/SquaredDifference", "elements/oneDNN/source/graph/ops/StaticReshape", "elements/oneDNN/source/graph/ops/StaticTranspose", "elements/oneDNN/source/graph/ops/Subtract", "elements/oneDNN/source/graph/ops/Tanh", "elements/oneDNN/source/graph/ops/TanhBackward", "elements/oneDNN/source/graph/ops/TypeCast", "elements/oneDNN/source/graph/ops/Wildcard", "elements/oneDNN/source/graph/ops/index", "elements/oneDNN/source/graph/programming_model", "elements/oneDNN/source/index", "elements/oneDNN/source/introduction", "elements/oneDNN/source/primitives/attributes/index", "elements/oneDNN/source/primitives/attributes/post-ops", "elements/oneDNN/source/primitives/batch_normalization", "elements/oneDNN/source/primitives/binary", "elements/oneDNN/source/primitives/concat", "elements/oneDNN/source/primitives/convolution", "elements/oneDNN/source/primitives/eltwise", "elements/oneDNN/source/primitives/general", "elements/oneDNN/source/primitives/index", "elements/oneDNN/source/primitives/inner-product", "elements/oneDNN/source/primitives/layer_normalization", "elements/oneDNN/source/primitives/lrn", "elements/oneDNN/source/primitives/matmul", "elements/oneDNN/source/primitives/pooling", "elements/oneDNN/source/primitives/prelu", "elements/oneDNN/source/primitives/reduction", "elements/oneDNN/source/primitives/reorder", "elements/oneDNN/source/primitives/resampling", "elements/oneDNN/source/primitives/rnn", "elements/oneDNN/source/primitives/shuffle", "elements/oneDNN/source/primitives/softmax", "elements/oneDNN/source/primitives/sum", "elements/oneDPL/source/common", "elements/oneDPL/source/index", "elements/oneDPL/source/parallel_api", "elements/oneDPL/source/parallel_api/algorithms", "elements/oneDPL/source/parallel_api/buffer_wrappers", "elements/oneDPL/source/parallel_api/execution_policies", "elements/oneDPL/source/parallel_api/iterators", "elements/oneDPL/source/parallel_api/parallel_range_api", "elements/oneDPL/source/sycl_kernels_api", "elements/oneMath/source/appendix/appendix", "elements/oneMath/source/architecture/architecture", "elements/oneMath/source/domains/blas/asum", "elements/oneMath/source/domains/blas/axpby", "elements/oneMath/source/domains/blas/axpy", "elements/oneMath/source/domains/blas/axpy_batch", "elements/oneMath/source/domains/blas/blas", "elements/oneMath/source/domains/blas/blas-level-1-routines", "elements/oneMath/source/domains/blas/blas-level-2-routines", "elements/oneMath/source/domains/blas/blas-level-3-routines", "elements/oneMath/source/domains/blas/blas-like-extensions", "elements/oneMath/source/domains/blas/copy", "elements/oneMath/source/domains/blas/copy_batch", "elements/oneMath/source/domains/blas/dgmm_batch", "elements/oneMath/source/domains/blas/dot", "elements/oneMath/source/domains/blas/dotc", "elements/oneMath/source/domains/blas/dotu", "elements/oneMath/source/domains/blas/gbmv", "elements/oneMath/source/domains/blas/gemm", "elements/oneMath/source/domains/blas/gemm_batch", "elements/oneMath/source/domains/blas/gemm_bias", "elements/oneMath/source/domains/blas/gemmt", "elements/oneMath/source/domains/blas/gemv", "elements/oneMath/source/domains/blas/gemv_batch", "elements/oneMath/source/domains/blas/ger", "elements/oneMath/source/domains/blas/gerc", "elements/oneMath/source/domains/blas/geru", "elements/oneMath/source/domains/blas/hbmv", "elements/oneMath/source/domains/blas/hemm", "elements/oneMath/source/domains/blas/hemv", "elements/oneMath/source/domains/blas/her", "elements/oneMath/source/domains/blas/her2", "elements/oneMath/source/domains/blas/her2k", "elements/oneMath/source/domains/blas/herk", "elements/oneMath/source/domains/blas/hpmv", "elements/oneMath/source/domains/blas/hpr", "elements/oneMath/source/domains/blas/hpr2", "elements/oneMath/source/domains/blas/iamax", "elements/oneMath/source/domains/blas/iamin", "elements/oneMath/source/domains/blas/imatcopy", "elements/oneMath/source/domains/blas/imatcopy_batch", "elements/oneMath/source/domains/blas/nrm2", "elements/oneMath/source/domains/blas/omatadd", "elements/oneMath/source/domains/blas/omatadd_batch", "elements/oneMath/source/domains/blas/omatcopy", "elements/oneMath/source/domains/blas/omatcopy2", "elements/oneMath/source/domains/blas/omatcopy_batch", "elements/oneMath/source/domains/blas/rot", "elements/oneMath/source/domains/blas/rotg", "elements/oneMath/source/domains/blas/rotm", "elements/oneMath/source/domains/blas/rotmg", "elements/oneMath/source/domains/blas/sbmv", "elements/oneMath/source/domains/blas/scal", "elements/oneMath/source/domains/blas/sdsdot", "elements/oneMath/source/domains/blas/spmv", "elements/oneMath/source/domains/blas/spr", "elements/oneMath/source/domains/blas/spr2", "elements/oneMath/source/domains/blas/swap", "elements/oneMath/source/domains/blas/symm", "elements/oneMath/source/domains/blas/symv", "elements/oneMath/source/domains/blas/syr", "elements/oneMath/source/domains/blas/syr2", "elements/oneMath/source/domains/blas/syr2k", "elements/oneMath/source/domains/blas/syrk", "elements/oneMath/source/domains/blas/syrk_batch", "elements/oneMath/source/domains/blas/tbmv", "elements/oneMath/source/domains/blas/tbsv", "elements/oneMath/source/domains/blas/tpmv", "elements/oneMath/source/domains/blas/tpsv", "elements/oneMath/source/domains/blas/trmm", "elements/oneMath/source/domains/blas/trmv", "elements/oneMath/source/domains/blas/trsm", "elements/oneMath/source/domains/blas/trsm_batch", "elements/oneMath/source/domains/blas/trsv", "elements/oneMath/source/domains/dft/compute_backward", "elements/oneMath/source/domains/dft/compute_forward", "elements/oneMath/source/domains/dft/config_params/data_layouts", "elements/oneMath/source/domains/dft/config_params/storage_formats", "elements/oneMath/source/domains/dft/config_params/workspace_placement", "elements/oneMath/source/domains/dft/descriptor", "elements/oneMath/source/domains/dft/dft", "elements/oneMath/source/domains/dft/enums_and_config_params", "elements/oneMath/source/domains/domains", "elements/oneMath/source/domains/lapack/gebrd", "elements/oneMath/source/domains/lapack/gebrd_scratchpad_size", "elements/oneMath/source/domains/lapack/geqrf", "elements/oneMath/source/domains/lapack/geqrf_batch", "elements/oneMath/source/domains/lapack/geqrf_batch_scratchpad_size", "elements/oneMath/source/domains/lapack/geqrf_scratchpad_size", "elements/oneMath/source/domains/lapack/gerqf", "elements/oneMath/source/domains/lapack/gerqf_scratchpad_size", "elements/oneMath/source/domains/lapack/gesvd", "elements/oneMath/source/domains/lapack/gesvd_scratchpad_size", "elements/oneMath/source/domains/lapack/getrf", "elements/oneMath/source/domains/lapack/getrf_batch", "elements/oneMath/source/domains/lapack/getrf_batch_scratchpad_size", "elements/oneMath/source/domains/lapack/getrf_scratchpad_size", "elements/oneMath/source/domains/lapack/getri", "elements/oneMath/source/domains/lapack/getri_batch", "elements/oneMath/source/domains/lapack/getri_batch_scratchpad_size", "elements/oneMath/source/domains/lapack/getri_scratchpad_size", "elements/oneMath/source/domains/lapack/getrs", "elements/oneMath/source/domains/lapack/getrs_batch", "elements/oneMath/source/domains/lapack/getrs_batch_scratchpad_size", "elements/oneMath/source/domains/lapack/getrs_scratchpad_size", "elements/oneMath/source/domains/lapack/heevd", "elements/oneMath/source/domains/lapack/heevd_scratchpad_size", "elements/oneMath/source/domains/lapack/hegvd", "elements/oneMath/source/domains/lapack/hegvd_scratchpad_size", "elements/oneMath/source/domains/lapack/hetrd", "elements/oneMath/source/domains/lapack/hetrd_scratchpad_size", "elements/oneMath/source/domains/lapack/hetrf", "elements/oneMath/source/domains/lapack/hetrf_scratchpad_size", "elements/oneMath/source/domains/lapack/lapack", "elements/oneMath/source/domains/lapack/orgbr", "elements/oneMath/source/domains/lapack/orgbr_scratchpad_size", "elements/oneMath/source/domains/lapack/orgqr", "elements/oneMath/source/domains/lapack/orgqr_batch", "elements/oneMath/source/domains/lapack/orgqr_batch_scratchpad_size", "elements/oneMath/source/domains/lapack/orgqr_scratchpad_size", "elements/oneMath/source/domains/lapack/orgtr", "elements/oneMath/source/domains/lapack/orgtr_scratchpad_size", "elements/oneMath/source/domains/lapack/ormqr", "elements/oneMath/source/domains/lapack/ormqr_scratchpad_size", "elements/oneMath/source/domains/lapack/ormrq", "elements/oneMath/source/domains/lapack/ormrq_scratchpad_size", "elements/oneMath/source/domains/lapack/ormtr", "elements/oneMath/source/domains/lapack/ormtr_scratchpad_size", "elements/oneMath/source/domains/lapack/potrf", "elements/oneMath/source/domains/lapack/potrf_batch", "elements/oneMath/source/domains/lapack/potrf_batch_scratchpad_size", "elements/oneMath/source/domains/lapack/potrf_scratchpad_size", "elements/oneMath/source/domains/lapack/potri", "elements/oneMath/source/domains/lapack/potri_scratchpad_size", "elements/oneMath/source/domains/lapack/potrs", "elements/oneMath/source/domains/lapack/potrs_batch", "elements/oneMath/source/domains/lapack/potrs_batch_scratchpad_size", "elements/oneMath/source/domains/lapack/potrs_scratchpad_size", "elements/oneMath/source/domains/lapack/syevd", "elements/oneMath/source/domains/lapack/syevd_scratchpad_size", "elements/oneMath/source/domains/lapack/sygvd", "elements/oneMath/source/domains/lapack/sygvd_scratchpad_size", "elements/oneMath/source/domains/lapack/sytrd", "elements/oneMath/source/domains/lapack/sytrd_scratchpad_size", "elements/oneMath/source/domains/lapack/sytrf", "elements/oneMath/source/domains/lapack/sytrf_scratchpad_size", "elements/oneMath/source/domains/lapack/trtrs", "elements/oneMath/source/domains/lapack/trtrs_scratchpad_size", "elements/oneMath/source/domains/lapack/ungbr", "elements/oneMath/source/domains/lapack/ungbr_scratchpad_size", "elements/oneMath/source/domains/lapack/ungqr", "elements/oneMath/source/domains/lapack/ungqr_batch", "elements/oneMath/source/domains/lapack/ungqr_batch_scratchpad_size", "elements/oneMath/source/domains/lapack/ungqr_scratchpad_size", "elements/oneMath/source/domains/lapack/ungtr", "elements/oneMath/source/domains/lapack/ungtr_scratchpad_size", "elements/oneMath/source/domains/lapack/unmqr", "elements/oneMath/source/domains/lapack/unmqr_scratchpad_size", "elements/oneMath/source/domains/lapack/unmrq", "elements/oneMath/source/domains/lapack/unmrq_scratchpad_size", "elements/oneMath/source/domains/lapack/unmtr", "elements/oneMath/source/domains/lapack/unmtr_scratchpad_size", "elements/oneMath/source/domains/matrix-storage", "elements/oneMath/source/domains/rng/bibliography", "elements/oneMath/source/domains/rng/device_api/device-adaptors", "elements/oneMath/source/domains/rng/device_api/device-distributions", "elements/oneMath/source/domains/rng/device_api/device-distributions-template-parameter-method", "elements/oneMath/source/domains/rng/device_api/device-engines", "elements/oneMath/source/domains/rng/device_api/device-rng-bernoulli", "elements/oneMath/source/domains/rng/device_api/device-rng-beta", "elements/oneMath/source/domains/rng/device_api/device-rng-bits", "elements/oneMath/source/domains/rng/device_api/device-rng-count_engine_adaptor", "elements/oneMath/source/domains/rng/device_api/device-rng-exponential", "elements/oneMath/source/domains/rng/device_api/device-rng-gamma", "elements/oneMath/source/domains/rng/device_api/device-rng-gaussian", "elements/oneMath/source/domains/rng/device_api/device-rng-generate", "elements/oneMath/source/domains/rng/device_api/device-rng-generate-routines", "elements/oneMath/source/domains/rng/device_api/device-rng-geometric", "elements/oneMath/source/domains/rng/device_api/device-rng-lognormal", "elements/oneMath/source/domains/rng/device_api/device-rng-mcg31m1", "elements/oneMath/source/domains/rng/device_api/device-rng-mcg59", "elements/oneMath/source/domains/rng/device_api/device-rng-mrg32k3a", "elements/oneMath/source/domains/rng/device_api/device-rng-pcg64-dxsm", "elements/oneMath/source/domains/rng/device_api/device-rng-philox4x32x10", "elements/oneMath/source/domains/rng/device_api/device-rng-poisson", "elements/oneMath/source/domains/rng/device_api/device-rng-skip-ahead", "elements/oneMath/source/domains/rng/device_api/device-rng-uniform-bits", "elements/oneMath/source/domains/rng/device_api/device-rng-uniform-continuous", "elements/oneMath/source/domains/rng/device_api/device-rng-uniform-discrete", "elements/oneMath/source/domains/rng/device_api/device-rng-usage-model", "elements/oneMath/source/domains/rng/device_api/device-routines", "elements/oneMath/source/domains/rng/device_api/device-service-routines", "elements/oneMath/source/domains/rng/host_api/distributions", "elements/oneMath/source/domains/rng/host_api/distributions-template-parameter-onemath-rng-method-values", "elements/oneMath/source/domains/rng/host_api/engines-basic-random-number-generators", "elements/oneMath/source/domains/rng/host_api/generate-routine", "elements/oneMath/source/domains/rng/host_api/onemath-rng-ars5", "elements/oneMath/source/domains/rng/host_api/onemath-rng-bernoulli", "elements/oneMath/source/domains/rng/host_api/onemath-rng-beta", "elements/oneMath/source/domains/rng/host_api/onemath-rng-binomial", "elements/oneMath/source/domains/rng/host_api/onemath-rng-bits", "elements/oneMath/source/domains/rng/host_api/onemath-rng-cauchy", "elements/oneMath/source/domains/rng/host_api/onemath-rng-chi_square", "elements/oneMath/source/domains/rng/host_api/onemath-rng-default_engine", "elements/oneMath/source/domains/rng/host_api/onemath-rng-exponential", "elements/oneMath/source/domains/rng/host_api/onemath-rng-gamma", "elements/oneMath/source/domains/rng/host_api/onemath-rng-gaussian", "elements/oneMath/source/domains/rng/host_api/onemath-rng-gaussian_mv", "elements/oneMath/source/domains/rng/host_api/onemath-rng-generate", "elements/oneMath/source/domains/rng/host_api/onemath-rng-geometric", "elements/oneMath/source/domains/rng/host_api/onemath-rng-gumbel", "elements/oneMath/source/domains/rng/host_api/onemath-rng-hypergeometric", "elements/oneMath/source/domains/rng/host_api/onemath-rng-laplace", "elements/oneMath/source/domains/rng/host_api/onemath-rng-leapfrog", "elements/oneMath/source/domains/rng/host_api/onemath-rng-lognormal", "elements/oneMath/source/domains/rng/host_api/onemath-rng-mcg31m1", "elements/oneMath/source/domains/rng/host_api/onemath-rng-mcg59", "elements/oneMath/source/domains/rng/host_api/onemath-rng-mrg32k3a", "elements/oneMath/source/domains/rng/host_api/onemath-rng-mt19937", "elements/oneMath/source/domains/rng/host_api/onemath-rng-mt2203", "elements/oneMath/source/domains/rng/host_api/onemath-rng-multinomial", "elements/oneMath/source/domains/rng/host_api/onemath-rng-negbinomial", "elements/oneMath/source/domains/rng/host_api/onemath-rng-niederreiter", "elements/oneMath/source/domains/rng/host_api/onemath-rng-nondeterministic", "elements/oneMath/source/domains/rng/host_api/onemath-rng-philox4x32x10", "elements/oneMath/source/domains/rng/host_api/onemath-rng-poisson", "elements/oneMath/source/domains/rng/host_api/onemath-rng-poisson_v", "elements/oneMath/source/domains/rng/host_api/onemath-rng-r250", "elements/oneMath/source/domains/rng/host_api/onemath-rng-rayleigh", "elements/oneMath/source/domains/rng/host_api/onemath-rng-sfmt19937", "elements/oneMath/source/domains/rng/host_api/onemath-rng-skip_ahead", "elements/oneMath/source/domains/rng/host_api/onemath-rng-sobol", "elements/oneMath/source/domains/rng/host_api/onemath-rng-uniform-continuous", "elements/oneMath/source/domains/rng/host_api/onemath-rng-uniform-discrete", "elements/oneMath/source/domains/rng/host_api/onemath-rng-uniform_bits", "elements/oneMath/source/domains/rng/host_api/onemath-rng-usage-model", "elements/oneMath/source/domains/rng/host_api/onemath-rng-weibull", "elements/oneMath/source/domains/rng/host_api/onemath-rng-wichmann_hill", "elements/oneMath/source/domains/rng/host_api/rng-host-routines", "elements/oneMath/source/domains/rng/host_api/service-routines", "elements/oneMath/source/domains/rng/onemath-rng-overview", "elements/oneMath/source/domains/spblas/data_types/data_handles", "elements/oneMath/source/domains/spblas/data_types/format-descriptions", "elements/oneMath/source/domains/spblas/data_types/init_coo_matrix", "elements/oneMath/source/domains/spblas/data_types/init_csr_matrix", "elements/oneMath/source/domains/spblas/data_types/init_dense_matrix", "elements/oneMath/source/domains/spblas/data_types/init_dense_vector", "elements/oneMath/source/domains/spblas/data_types/release_dense_matrix", "elements/oneMath/source/domains/spblas/data_types/release_dense_vector", "elements/oneMath/source/domains/spblas/data_types/release_sparse_matrix", "elements/oneMath/source/domains/spblas/data_types/set_coo_matrix_data", "elements/oneMath/source/domains/spblas/data_types/set_csr_matrix_data", "elements/oneMath/source/domains/spblas/data_types/set_dense_matrix_data", "elements/oneMath/source/domains/spblas/data_types/set_dense_vector_data", "elements/oneMath/source/domains/spblas/data_types/set_matrix_property", "elements/oneMath/source/domains/spblas/matrix_view", "elements/oneMath/source/domains/spblas/operations/spmm", "elements/oneMath/source/domains/spblas/operations/spmv", "elements/oneMath/source/domains/spblas/operations/spsv", "elements/oneMath/source/domains/spblas/spblas", "elements/oneMath/source/domains/spblas/supported-types", "elements/oneMath/source/domains/stats/onemath_stats_central_moment", "elements/oneMath/source/domains/stats/onemath_stats_central_moment_user_mean", "elements/oneMath/source/domains/stats/onemath_stats_central_sum", "elements/oneMath/source/domains/stats/onemath_stats_central_sum_user_mean", "elements/oneMath/source/domains/stats/onemath_stats_dataset", "elements/oneMath/source/domains/stats/onemath_stats_kurtosis", "elements/oneMath/source/domains/stats/onemath_stats_kurtosis_user_mean", "elements/oneMath/source/domains/stats/onemath_stats_make_dataset", "elements/oneMath/source/domains/stats/onemath_stats_max", "elements/oneMath/source/domains/stats/onemath_stats_mean", "elements/oneMath/source/domains/stats/onemath_stats_min", "elements/oneMath/source/domains/stats/onemath_stats_min_max", "elements/oneMath/source/domains/stats/onemath_stats_overview", "elements/oneMath/source/domains/stats/onemath_stats_raw_moment", "elements/oneMath/source/domains/stats/onemath_stats_raw_sum", "elements/oneMath/source/domains/stats/onemath_stats_routines", "elements/oneMath/source/domains/stats/onemath_stats_service_routines", "elements/oneMath/source/domains/stats/onemath_stats_skewness", "elements/oneMath/source/domains/stats/onemath_stats_skewness_user_mean", "elements/oneMath/source/domains/stats/onemath_stats_usage_model", "elements/oneMath/source/domains/stats/onemath_stats_variation", "elements/oneMath/source/domains/stats/onemath_stats_variation_user_mean", "elements/oneMath/source/domains/value_or_pointer", "elements/oneMath/source/domains/vm/abs", "elements/oneMath/source/domains/vm/acos", "elements/oneMath/source/domains/vm/acosh", "elements/oneMath/source/domains/vm/acospi", "elements/oneMath/source/domains/vm/add", "elements/oneMath/source/domains/vm/arg", "elements/oneMath/source/domains/vm/asin", "elements/oneMath/source/domains/vm/asinh", "elements/oneMath/source/domains/vm/asinpi", "elements/oneMath/source/domains/vm/atan", "elements/oneMath/source/domains/vm/atan2", "elements/oneMath/source/domains/vm/atan2pi", "elements/oneMath/source/domains/vm/atanh", "elements/oneMath/source/domains/vm/atanpi", "elements/oneMath/source/domains/vm/bibliography", "elements/oneMath/source/domains/vm/cbrt", "elements/oneMath/source/domains/vm/cdfnorm", "elements/oneMath/source/domains/vm/cdfnorminv", "elements/oneMath/source/domains/vm/ceil", "elements/oneMath/source/domains/vm/cis", "elements/oneMath/source/domains/vm/clear_status", "elements/oneMath/source/domains/vm/conj", "elements/oneMath/source/domains/vm/copysign", "elements/oneMath/source/domains/vm/cos", "elements/oneMath/source/domains/vm/cosd", "elements/oneMath/source/domains/vm/cosh", "elements/oneMath/source/domains/vm/cospi", "elements/oneMath/source/domains/vm/create_error_handler", "elements/oneMath/source/domains/vm/div", "elements/oneMath/source/domains/vm/erf", "elements/oneMath/source/domains/vm/erfc", "elements/oneMath/source/domains/vm/erfcinv", "elements/oneMath/source/domains/vm/erfinv", "elements/oneMath/source/domains/vm/exp", "elements/oneMath/source/domains/vm/exp10", "elements/oneMath/source/domains/vm/exp2", "elements/oneMath/source/domains/vm/expint1", "elements/oneMath/source/domains/vm/expm1", "elements/oneMath/source/domains/vm/fdim", "elements/oneMath/source/domains/vm/floor", "elements/oneMath/source/domains/vm/fmax", "elements/oneMath/source/domains/vm/fmin", "elements/oneMath/source/domains/vm/fmod", "elements/oneMath/source/domains/vm/frac", "elements/oneMath/source/domains/vm/get_mode", "elements/oneMath/source/domains/vm/get_status", "elements/oneMath/source/domains/vm/hypot", "elements/oneMath/source/domains/vm/inv", "elements/oneMath/source/domains/vm/invcbrt", "elements/oneMath/source/domains/vm/invsqrt", "elements/oneMath/source/domains/vm/lgamma", "elements/oneMath/source/domains/vm/linearfrac", "elements/oneMath/source/domains/vm/ln", "elements/oneMath/source/domains/vm/log10", "elements/oneMath/source/domains/vm/log1p", "elements/oneMath/source/domains/vm/log2", "elements/oneMath/source/domains/vm/logb", "elements/oneMath/source/domains/vm/maxmag", "elements/oneMath/source/domains/vm/minmag", "elements/oneMath/source/domains/vm/modf", "elements/oneMath/source/domains/vm/mul", "elements/oneMath/source/domains/vm/mulbyconj", "elements/oneMath/source/domains/vm/nearbyint", "elements/oneMath/source/domains/vm/nextafter", "elements/oneMath/source/domains/vm/pow", "elements/oneMath/source/domains/vm/pow2o3", "elements/oneMath/source/domains/vm/pow3o2", "elements/oneMath/source/domains/vm/powr", "elements/oneMath/source/domains/vm/powx", "elements/oneMath/source/domains/vm/remainder", "elements/oneMath/source/domains/vm/rint", "elements/oneMath/source/domains/vm/round", "elements/oneMath/source/domains/vm/set_status", "elements/oneMath/source/domains/vm/setmode", "elements/oneMath/source/domains/vm/sin", "elements/oneMath/source/domains/vm/sincos", "elements/oneMath/source/domains/vm/sind", "elements/oneMath/source/domains/vm/sinh", "elements/oneMath/source/domains/vm/sinpi", "elements/oneMath/source/domains/vm/special-value-notations", "elements/oneMath/source/domains/vm/sqr", "elements/oneMath/source/domains/vm/sqrt", "elements/oneMath/source/domains/vm/sub", "elements/oneMath/source/domains/vm/tan", "elements/oneMath/source/domains/vm/tand", "elements/oneMath/source/domains/vm/tanh", "elements/oneMath/source/domains/vm/tanpi", "elements/oneMath/source/domains/vm/tgamma", "elements/oneMath/source/domains/vm/trunc", "elements/oneMath/source/domains/vm/vm", "elements/oneMath/source/domains/vm/vm-exceptions", "elements/oneMath/source/domains/vm/vm-mathematical-functions", "elements/oneMath/source/domains/vm/vm-service-functions", "elements/oneMath/source/index", "elements/oneTBB/source/algorithms", "elements/oneTBB/source/algorithms/blocked_ranges/blocked_nd_range_cls", "elements/oneTBB/source/algorithms/blocked_ranges/blocked_range2d_cls", "elements/oneTBB/source/algorithms/blocked_ranges/blocked_range3d_cls", "elements/oneTBB/source/algorithms/blocked_ranges/blocked_range_cls", "elements/oneTBB/source/algorithms/functions/collaborative_call_once_func", "elements/oneTBB/source/algorithms/functions/collaborative_once_flag_cls", "elements/oneTBB/source/algorithms/functions/feeder", "elements/oneTBB/source/algorithms/functions/parallel_deterministic_reduce_func", "elements/oneTBB/source/algorithms/functions/parallel_for_each_func", "elements/oneTBB/source/algorithms/functions/parallel_for_func", "elements/oneTBB/source/algorithms/functions/parallel_invoke_func", "elements/oneTBB/source/algorithms/functions/parallel_pipeline_func", "elements/oneTBB/source/algorithms/functions/parallel_pipeline_func/filter_cls", "elements/oneTBB/source/algorithms/functions/parallel_pipeline_func/filter_mode_enum", "elements/oneTBB/source/algorithms/functions/parallel_pipeline_func/flow_control_cls", "elements/oneTBB/source/algorithms/functions/parallel_reduce_func", "elements/oneTBB/source/algorithms/functions/parallel_scan_func", "elements/oneTBB/source/algorithms/functions/parallel_sort_func", "elements/oneTBB/source/algorithms/functions/pre_scan_tag_and_final_scan_tag_clses", "elements/oneTBB/source/algorithms/partitioners/affinity_partitioner", "elements/oneTBB/source/algorithms/partitioners/auto_partitioner", "elements/oneTBB/source/algorithms/partitioners/simple_partitioner", "elements/oneTBB/source/algorithms/partitioners/static_partitioner", "elements/oneTBB/source/algorithms/split_tags/proportional_split_cls", "elements/oneTBB/source/algorithms/split_tags/split_cls", "elements/oneTBB/source/configuration", "elements/oneTBB/source/configuration/enabling_debugging_features", "elements/oneTBB/source/configuration/feature_macros", "elements/oneTBB/source/configuration/namespaces", "elements/oneTBB/source/configuration/version_information", "elements/oneTBB/source/containers", "elements/oneTBB/source/containers/auxiliary/node_handles_cls", "elements/oneTBB/source/containers/auxiliary/tbb_hash_compare_cls", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/construct_destroy_copy", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/iterators", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/safe_member_functions", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/unsafe_member_functions", "elements/oneTBB/source/containers/concurrent_hash_map_cls", "elements/oneTBB/source/containers/concurrent_hash_map_cls/accessors", "elements/oneTBB/source/containers/concurrent_hash_map_cls/construct_destroy_copy", "elements/oneTBB/source/containers/concurrent_hash_map_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_hash_map_cls/hash_policy", "elements/oneTBB/source/containers/concurrent_hash_map_cls/iterators", "elements/oneTBB/source/containers/concurrent_hash_map_cls/lookup", "elements/oneTBB/source/containers/concurrent_hash_map_cls/modifiers", "elements/oneTBB/source/containers/concurrent_hash_map_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_hash_map_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_hash_map_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_hash_map_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_hash_map_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_map_cls", "elements/oneTBB/source/containers/concurrent_map_cls/construction_destruction_copying", "elements/oneTBB/source/containers/concurrent_map_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_map_cls/element_access", "elements/oneTBB/source/containers/concurrent_map_cls/iterators", "elements/oneTBB/source/containers/concurrent_map_cls/lookup", "elements/oneTBB/source/containers/concurrent_map_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_map_cls/non_member_lexicographical_comparisons", "elements/oneTBB/source/containers/concurrent_map_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_map_cls/observers", "elements/oneTBB/source/containers/concurrent_map_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_map_cls/safe_modifiers", "elements/oneTBB/source/containers/concurrent_map_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_map_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_map_cls/value_compare_cls", "elements/oneTBB/source/containers/concurrent_multimap_cls", "elements/oneTBB/source/containers/concurrent_multimap_cls/construction_destruction_copying", "elements/oneTBB/source/containers/concurrent_multimap_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_multimap_cls/iterators", "elements/oneTBB/source/containers/concurrent_multimap_cls/lookup", "elements/oneTBB/source/containers/concurrent_multimap_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_multimap_cls/non_member_lexicographical_comparisons", "elements/oneTBB/source/containers/concurrent_multimap_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_multimap_cls/observers", "elements/oneTBB/source/containers/concurrent_multimap_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_multimap_cls/safe_modifiers", "elements/oneTBB/source/containers/concurrent_multimap_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_multimap_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_multimap_cls/value_compare_cls", "elements/oneTBB/source/containers/concurrent_multiset_cls", "elements/oneTBB/source/containers/concurrent_multiset_cls/construction_destruction_copying", "elements/oneTBB/source/containers/concurrent_multiset_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_multiset_cls/iterators", "elements/oneTBB/source/containers/concurrent_multiset_cls/lookup", "elements/oneTBB/source/containers/concurrent_multiset_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_multiset_cls/non_member_lexicographical_comparisons", "elements/oneTBB/source/containers/concurrent_multiset_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_multiset_cls/observers", "elements/oneTBB/source/containers/concurrent_multiset_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_multiset_cls/safe_modifiers", "elements/oneTBB/source/containers/concurrent_multiset_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_multiset_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_priority_queue_cls", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/construct_destroy_copy", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/safe_modifiers", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_queue_cls", "elements/oneTBB/source/containers/concurrent_queue_cls/construct_destroy_copy", "elements/oneTBB/source/containers/concurrent_queue_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_queue_cls/iterators", "elements/oneTBB/source/containers/concurrent_queue_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_queue_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_queue_cls/safe_member_functions", "elements/oneTBB/source/containers/concurrent_queue_cls/unsafe_member_functions", "elements/oneTBB/source/containers/concurrent_set_cls", "elements/oneTBB/source/containers/concurrent_set_cls/construction_destruction_copying", "elements/oneTBB/source/containers/concurrent_set_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_set_cls/iterators", "elements/oneTBB/source/containers/concurrent_set_cls/lookup", "elements/oneTBB/source/containers/concurrent_set_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_set_cls/non_member_lexicographical_comparisons", "elements/oneTBB/source/containers/concurrent_set_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_set_cls/observers", "elements/oneTBB/source/containers/concurrent_set_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_set_cls/safe_modifiers", "elements/oneTBB/source/containers/concurrent_set_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_set_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_unordered_map_cls", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/bucket_interface", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/construction_destruction_copying", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/element_access", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/hash_policy", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/iterators", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/lookup", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/observers", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/safe_modifiers", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_unordered_multimap", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/bucket_interface", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/construction_destruction_copying", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/hash_policy", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/iterators", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/lookup", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/observers", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/safe_modifiers", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_unordered_multiset", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/bucket_interface", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/construction_destruction_copying", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/hash_policy", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/iterators", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/lookup", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/observers", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/safe_modifiers", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_unordered_set_cls", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/bucket_interface", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/construction_destruction_copying", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/hash_policy", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/iterators", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/lookup", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/observers", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/safe_modifiers", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_vector_cls", "elements/oneTBB/source/containers/concurrent_vector_cls/concurrent_growth", "elements/oneTBB/source/containers/concurrent_vector_cls/construct_destroy_copy", "elements/oneTBB/source/containers/concurrent_vector_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_vector_cls/element_access", "elements/oneTBB/source/containers/concurrent_vector_cls/iterators", "elements/oneTBB/source/containers/concurrent_vector_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_vector_cls/non_member_lexicographical_comparisons", "elements/oneTBB/source/containers/concurrent_vector_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_vector_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_vector_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_vector_cls/unsafe_operations", "elements/oneTBB/source/deprecated/task_arena_attach_tag", "elements/oneTBB/source/flow_graph", "elements/oneTBB/source/flow_graph/async_node_cls", "elements/oneTBB/source/flow_graph/broadcast_node_cls", "elements/oneTBB/source/flow_graph/buffer_node_cls", "elements/oneTBB/source/flow_graph/composite_node_cls", "elements/oneTBB/source/flow_graph/continue_msg_cls", "elements/oneTBB/source/flow_graph/continue_node_cls", "elements/oneTBB/source/flow_graph/copy_body_func", "elements/oneTBB/source/flow_graph/dependency_flow_graph_example", "elements/oneTBB/source/flow_graph/forwarding_and_buffering", "elements/oneTBB/source/flow_graph/func_node_cls", "elements/oneTBB/source/flow_graph/functional_node_policies", "elements/oneTBB/source/flow_graph/graph_cls", "elements/oneTBB/source/flow_graph/graph_node_cls", "elements/oneTBB/source/flow_graph/indexer_node_cls", "elements/oneTBB/source/flow_graph/input_node_cls", "elements/oneTBB/source/flow_graph/input_port_func", "elements/oneTBB/source/flow_graph/join_node_cls", "elements/oneTBB/source/flow_graph/join_node_policies", "elements/oneTBB/source/flow_graph/limiter_node_cls", "elements/oneTBB/source/flow_graph/make_edge_func", "elements/oneTBB/source/flow_graph/message_flow_graph_example", "elements/oneTBB/source/flow_graph/multifunc_node_cls", "elements/oneTBB/source/flow_graph/node_priorities", "elements/oneTBB/source/flow_graph/output_port_func", "elements/oneTBB/source/flow_graph/overwrite_node_cls", "elements/oneTBB/source/flow_graph/predefined_concurrency_limits", "elements/oneTBB/source/flow_graph/priority_queue_node_cls", "elements/oneTBB/source/flow_graph/queue_node_cls", "elements/oneTBB/source/flow_graph/receiver", "elements/oneTBB/source/flow_graph/remove_edge_func", "elements/oneTBB/source/flow_graph/reset_flags_enum", "elements/oneTBB/source/flow_graph/sender", "elements/oneTBB/source/flow_graph/sequencer_node_cls", "elements/oneTBB/source/flow_graph/split_node_cls", "elements/oneTBB/source/flow_graph/tagged_msg_cls", "elements/oneTBB/source/flow_graph/write_once_node_cls", "elements/oneTBB/source/identifiers", "elements/oneTBB/source/info_namespace", "elements/oneTBB/source/intro", "elements/oneTBB/source/memory_allocation", "elements/oneTBB/source/memory_allocation/c_interface_to_scalable_allocator", "elements/oneTBB/source/memory_allocation/cache_aligned_allocator_cls", "elements/oneTBB/source/memory_allocation/cache_aligned_resource_cls", "elements/oneTBB/source/memory_allocation/scalable_allocator_cls", "elements/oneTBB/source/memory_allocation/scalable_memory_resource_func", "elements/oneTBB/source/memory_allocation/tbb_allocator_cls", "elements/oneTBB/source/mutual_exclusion", "elements/oneTBB/source/mutual_exclusion/mutex_cls", "elements/oneTBB/source/mutual_exclusion/null_mutex_cls", "elements/oneTBB/source/mutual_exclusion/null_rw_mutex_cls", "elements/oneTBB/source/mutual_exclusion/queuing_mutex_cls", "elements/oneTBB/source/mutual_exclusion/queuing_rw_mutex_cls", "elements/oneTBB/source/mutual_exclusion/rw_mutex_cls", "elements/oneTBB/source/mutual_exclusion/speculative_spin_mutex_cls", "elements/oneTBB/source/mutual_exclusion/speculative_spin_rw_mutex_cls", "elements/oneTBB/source/mutual_exclusion/spin_mutex_cls", "elements/oneTBB/source/mutual_exclusion/spin_rw_mutex_cls", "elements/oneTBB/source/named_requirements", "elements/oneTBB/source/named_requirements/algorithms/blocked_range_val", "elements/oneTBB/source/named_requirements/algorithms/container_based_sequence", "elements/oneTBB/source/named_requirements/algorithms/filter_body", "elements/oneTBB/source/named_requirements/algorithms/par_for_body", "elements/oneTBB/source/named_requirements/algorithms/par_for_each_body", "elements/oneTBB/source/named_requirements/algorithms/par_for_func", "elements/oneTBB/source/named_requirements/algorithms/par_for_index", "elements/oneTBB/source/named_requirements/algorithms/par_reduce_body", "elements/oneTBB/source/named_requirements/algorithms/par_reduce_func", "elements/oneTBB/source/named_requirements/algorithms/par_reduce_reduction", "elements/oneTBB/source/named_requirements/algorithms/par_scan_body", "elements/oneTBB/source/named_requirements/algorithms/par_scan_combine", "elements/oneTBB/source/named_requirements/algorithms/par_scan_func", "elements/oneTBB/source/named_requirements/algorithms/range", "elements/oneTBB/source/named_requirements/algorithms/splittable", "elements/oneTBB/source/named_requirements/containers/container_range", "elements/oneTBB/source/named_requirements/containers/hash_compare", "elements/oneTBB/source/named_requirements/flow_graph/async_node_body", "elements/oneTBB/source/named_requirements/flow_graph/continue_node_body", "elements/oneTBB/source/named_requirements/flow_graph/function_node_body", "elements/oneTBB/source/named_requirements/flow_graph/gateway_type", "elements/oneTBB/source/named_requirements/flow_graph/input_node_body", "elements/oneTBB/source/named_requirements/flow_graph/join_node_func_obj", "elements/oneTBB/source/named_requirements/flow_graph/multifunction_node_body", "elements/oneTBB/source/named_requirements/flow_graph/sequencer", "elements/oneTBB/source/named_requirements/mutexes/mutex", "elements/oneTBB/source/named_requirements/mutexes/rw_mutex", "elements/oneTBB/source/named_requirements/task_scheduler/suspend_func", "elements/oneTBB/source/nested-aux-interfaces", "elements/oneTBB/source/nested-depr-interfaces", "elements/oneTBB/source/nested-gen-info", "elements/oneTBB/source/nested-index", "elements/oneTBB/source/nested-interfaces", "elements/oneTBB/source/notation", "elements/oneTBB/source/task_scheduler", "elements/oneTBB/source/task_scheduler/attach_tag_type", "elements/oneTBB/source/task_scheduler/scheduling_controls/global_control_cls", "elements/oneTBB/source/task_scheduler/scheduling_controls/resumable_tasks", "elements/oneTBB/source/task_scheduler/scheduling_controls/task_group_context_cls", "elements/oneTBB/source/task_scheduler/scheduling_controls/task_scheduler_handle_cls", "elements/oneTBB/source/task_scheduler/task_arena/task_arena_cls", "elements/oneTBB/source/task_scheduler/task_arena/task_scheduler_observer_cls", "elements/oneTBB/source/task_scheduler/task_arena/this_task_arena_ns", "elements/oneTBB/source/task_scheduler/task_group/task_group_cls", "elements/oneTBB/source/task_scheduler/task_group/task_group_status_enum", "elements/oneTBB/source/task_scheduler/task_group/task_handle", "elements/oneTBB/source/thread_local_storage", "elements/oneTBB/source/thread_local_storage/combinable_cls", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/combining", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/construct_destroy_copy", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/iteration", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/safe_modifiers", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/size_and_capacity", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/unsafe_modifiers", "elements/oneTBB/source/thread_local_storage/flattened2d_cls", "elements/oneTBB/source/thread_safety", "elements/oneTBB/source/timing", "elements/oneTBB/source/timing/tick_count_cls", "index", "introduction", "notices"], "filenames": ["architecture.rst", "elements/element_list.rst", "elements/oneCCL/source/definitions.rst", "elements/oneCCL/source/index.rst", "elements/oneCCL/source/introduction.rst", "elements/oneCCL/source/namespaces.rst", "elements/oneCCL/source/programming_model.rst", "elements/oneCCL/source/spec/collective_operations.rst", "elements/oneCCL/source/spec/datatypes.rst", "elements/oneCCL/source/spec/error_handling.rst", "elements/oneCCL/source/spec/generic_workflow.rst", "elements/oneCCL/source/spec/group_calls.rst", "elements/oneCCL/source/spec/main_objects.rst", "elements/oneCCL/source/spec/operation_attributes.rst", "elements/oneCCL/source/spec/operation_progress.rst", "elements/oneCCL/source/spec/operations.rst", "elements/oneCCL/source/spec/reductions.rst", "elements/oneCCL/source/spec_version.rst", "elements/oneDAL/source/algorithms/clustering/index.rst", "elements/oneDAL/source/algorithms/clustering/kmeans.rst", "elements/oneDAL/source/algorithms/clustering/kmeans_init.rst", "elements/oneDAL/source/algorithms/decomposition/index.rst", "elements/oneDAL/source/algorithms/decomposition/pca.rst", "elements/oneDAL/source/algorithms/index.rst", "elements/oneDAL/source/algorithms/nearest_neighbors/index.rst", "elements/oneDAL/source/algorithms/nearest_neighbors/knn_classification.rst", "elements/oneDAL/source/appendix/index.rst", "elements/oneDAL/source/appendix/kd_tree.rst", "elements/oneDAL/source/bibliography.rst", "elements/oneDAL/source/common_interface/common_type_definitions.rst", "elements/oneDAL/source/common_interface/error_handling.rst", "elements/oneDAL/source/common_interface/header_files_and_namespaces.rst", "elements/oneDAL/source/common_interface/index.rst", "elements/oneDAL/source/common_interface/spec_version.rst", "elements/oneDAL/source/data_management/accessor/column.rst", "elements/oneDAL/source/data_management/accessor/row.rst", "elements/oneDAL/source/data_management/accessors.rst", "elements/oneDAL/source/data_management/array.rst", "elements/oneDAL/source/data_management/csv_data_source.rst", "elements/oneDAL/source/data_management/data_sources.rst", "elements/oneDAL/source/data_management/index.rst", "elements/oneDAL/source/data_management/table/homogen.rst", "elements/oneDAL/source/data_management/tables.rst", "elements/oneDAL/source/glossary.rst", "elements/oneDAL/source/index.rst", "elements/oneDAL/source/introduction.rst", "elements/oneDAL/source/notations.rst", "elements/oneDAL/source/programming_model/computational_modes.rst", "elements/oneDAL/source/programming_model/descriptors.rst", "elements/oneDAL/source/programming_model/end_to_end_example.rst", "elements/oneDAL/source/programming_model/index.rst", "elements/oneDAL/source/programming_model/operations/index.rst", "elements/oneDAL/source/programming_model/operations/support.rst", "elements/oneDNN/source/conventions.rst", "elements/oneDNN/source/data_model/data_types/bfloat16.rst", "elements/oneDNN/source/data_model/data_types/index.rst", "elements/oneDNN/source/data_model/data_types/int8.rst", "elements/oneDNN/source/data_model/index.rst", "elements/oneDNN/source/data_model/memory/formats.rst", "elements/oneDNN/source/data_model/memory/index.rst", "elements/oneDNN/source/data_model/memory/objects.rst", "elements/oneDNN/source/execution_model/index.rst", "elements/oneDNN/source/graph/data_model.rst", "elements/oneDNN/source/graph/general.rst", "elements/oneDNN/source/graph/index.rst", "elements/oneDNN/source/graph/ops/Abs.rst", "elements/oneDNN/source/graph/ops/AbsBackward.rst", "elements/oneDNN/source/graph/ops/Add.rst", "elements/oneDNN/source/graph/ops/AvgPool.rst", "elements/oneDNN/source/graph/ops/AvgPoolBackward.rst", "elements/oneDNN/source/graph/ops/BatchNormForwardTraining.rst", "elements/oneDNN/source/graph/ops/BatchNormInference.rst", "elements/oneDNN/source/graph/ops/BatchNormTrainingBackward.rst", "elements/oneDNN/source/graph/ops/BiasAdd.rst", "elements/oneDNN/source/graph/ops/BiasAddBackward.rst", "elements/oneDNN/source/graph/ops/Clamp.rst", "elements/oneDNN/source/graph/ops/ClampBackward.rst", "elements/oneDNN/source/graph/ops/Concat.rst", "elements/oneDNN/source/graph/ops/ConvTranspose.rst", "elements/oneDNN/source/graph/ops/ConvTransposeBackwardData.rst", "elements/oneDNN/source/graph/ops/ConvTransposeBackwardWeights.rst", "elements/oneDNN/source/graph/ops/Convolution.rst", "elements/oneDNN/source/graph/ops/ConvolutionBackwardData.rst", "elements/oneDNN/source/graph/ops/ConvolutionBackwardWeights.rst", "elements/oneDNN/source/graph/ops/Dequantize.rst", "elements/oneDNN/source/graph/ops/Divide.rst", "elements/oneDNN/source/graph/ops/DynamicDequantize.rst", "elements/oneDNN/source/graph/ops/DynamicQuantize.rst", "elements/oneDNN/source/graph/ops/Elu.rst", "elements/oneDNN/source/graph/ops/EluBackward.rst", "elements/oneDNN/source/graph/ops/End.rst", "elements/oneDNN/source/graph/ops/Exp.rst", "elements/oneDNN/source/graph/ops/GELU.rst", "elements/oneDNN/source/graph/ops/GELUBackward.rst", "elements/oneDNN/source/graph/ops/HardSigmoid.rst", "elements/oneDNN/source/graph/ops/HardSigmoidBackward.rst", "elements/oneDNN/source/graph/ops/HardSwish.rst", "elements/oneDNN/source/graph/ops/HardSwishBackward.rst", "elements/oneDNN/source/graph/ops/Interpolate.rst", "elements/oneDNN/source/graph/ops/InterpolateBackward.rst", "elements/oneDNN/source/graph/ops/LayerNorm.rst", "elements/oneDNN/source/graph/ops/LayerNormBackward.rst", "elements/oneDNN/source/graph/ops/LeakyReLU.rst", "elements/oneDNN/source/graph/ops/Log.rst", "elements/oneDNN/source/graph/ops/LogSoftmax.rst", "elements/oneDNN/source/graph/ops/LogSoftmaxBackward.rst", "elements/oneDNN/source/graph/ops/MatMul.rst", "elements/oneDNN/source/graph/ops/MaxPool.rst", "elements/oneDNN/source/graph/ops/MaxPoolBackward.rst", "elements/oneDNN/source/graph/ops/Maximum.rst", "elements/oneDNN/source/graph/ops/Minimum.rst", "elements/oneDNN/source/graph/ops/Mish.rst", "elements/oneDNN/source/graph/ops/MishBackward.rst", "elements/oneDNN/source/graph/ops/Multiply.rst", "elements/oneDNN/source/graph/ops/PReLU.rst", "elements/oneDNN/source/graph/ops/PReLUBackward.rst", "elements/oneDNN/source/graph/ops/Pow.rst", "elements/oneDNN/source/graph/ops/Quantize.rst", "elements/oneDNN/source/graph/ops/ReLU.rst", "elements/oneDNN/source/graph/ops/ReLUBackward.rst", "elements/oneDNN/source/graph/ops/Reciprocal.rst", "elements/oneDNN/source/graph/ops/ReduceL1.rst", "elements/oneDNN/source/graph/ops/ReduceL2.rst", "elements/oneDNN/source/graph/ops/ReduceMax.rst", "elements/oneDNN/source/graph/ops/ReduceMean.rst", "elements/oneDNN/source/graph/ops/ReduceMin.rst", "elements/oneDNN/source/graph/ops/ReduceProd.rst", "elements/oneDNN/source/graph/ops/ReduceSum.rst", "elements/oneDNN/source/graph/ops/Reorder.rst", "elements/oneDNN/source/graph/ops/Round.rst", "elements/oneDNN/source/graph/ops/Select.rst", "elements/oneDNN/source/graph/ops/Sigmoid.rst", "elements/oneDNN/source/graph/ops/SigmoidBackward.rst", "elements/oneDNN/source/graph/ops/SoftPlus.rst", "elements/oneDNN/source/graph/ops/SoftPlusBackward.rst", "elements/oneDNN/source/graph/ops/Softmax.rst", "elements/oneDNN/source/graph/ops/SoftmaxBackward.rst", "elements/oneDNN/source/graph/ops/Sqrt.rst", "elements/oneDNN/source/graph/ops/SqrtBackward.rst", "elements/oneDNN/source/graph/ops/Square.rst", "elements/oneDNN/source/graph/ops/SquaredDifference.rst", "elements/oneDNN/source/graph/ops/StaticReshape.rst", "elements/oneDNN/source/graph/ops/StaticTranspose.rst", "elements/oneDNN/source/graph/ops/Subtract.rst", "elements/oneDNN/source/graph/ops/Tanh.rst", "elements/oneDNN/source/graph/ops/TanhBackward.rst", "elements/oneDNN/source/graph/ops/TypeCast.rst", "elements/oneDNN/source/graph/ops/Wildcard.rst", "elements/oneDNN/source/graph/ops/index.rst", "elements/oneDNN/source/graph/programming_model.rst", "elements/oneDNN/source/index.rst", "elements/oneDNN/source/introduction.rst", "elements/oneDNN/source/primitives/attributes/index.rst", "elements/oneDNN/source/primitives/attributes/post-ops.rst", "elements/oneDNN/source/primitives/batch_normalization.rst", "elements/oneDNN/source/primitives/binary.rst", "elements/oneDNN/source/primitives/concat.rst", "elements/oneDNN/source/primitives/convolution.rst", "elements/oneDNN/source/primitives/eltwise.rst", "elements/oneDNN/source/primitives/general.rst", "elements/oneDNN/source/primitives/index.rst", "elements/oneDNN/source/primitives/inner-product.rst", "elements/oneDNN/source/primitives/layer_normalization.rst", "elements/oneDNN/source/primitives/lrn.rst", "elements/oneDNN/source/primitives/matmul.rst", "elements/oneDNN/source/primitives/pooling.rst", "elements/oneDNN/source/primitives/prelu.rst", "elements/oneDNN/source/primitives/reduction.rst", "elements/oneDNN/source/primitives/reorder.rst", "elements/oneDNN/source/primitives/resampling.rst", "elements/oneDNN/source/primitives/rnn.rst", "elements/oneDNN/source/primitives/shuffle.rst", "elements/oneDNN/source/primitives/softmax.rst", "elements/oneDNN/source/primitives/sum.rst", "elements/oneDPL/source/common.rst", "elements/oneDPL/source/index.rst", "elements/oneDPL/source/parallel_api.rst", "elements/oneDPL/source/parallel_api/algorithms.rst", "elements/oneDPL/source/parallel_api/buffer_wrappers.rst", "elements/oneDPL/source/parallel_api/execution_policies.rst", "elements/oneDPL/source/parallel_api/iterators.rst", "elements/oneDPL/source/parallel_api/parallel_range_api.rst", "elements/oneDPL/source/sycl_kernels_api.rst", "elements/oneMath/source/appendix/appendix.rst", "elements/oneMath/source/architecture/architecture.rst", "elements/oneMath/source/domains/blas/asum.rst", "elements/oneMath/source/domains/blas/axpby.rst", "elements/oneMath/source/domains/blas/axpy.rst", "elements/oneMath/source/domains/blas/axpy_batch.rst", "elements/oneMath/source/domains/blas/blas.rst", "elements/oneMath/source/domains/blas/blas-level-1-routines.rst", "elements/oneMath/source/domains/blas/blas-level-2-routines.rst", "elements/oneMath/source/domains/blas/blas-level-3-routines.rst", "elements/oneMath/source/domains/blas/blas-like-extensions.rst", "elements/oneMath/source/domains/blas/copy.rst", "elements/oneMath/source/domains/blas/copy_batch.rst", "elements/oneMath/source/domains/blas/dgmm_batch.rst", "elements/oneMath/source/domains/blas/dot.rst", "elements/oneMath/source/domains/blas/dotc.rst", "elements/oneMath/source/domains/blas/dotu.rst", "elements/oneMath/source/domains/blas/gbmv.rst", "elements/oneMath/source/domains/blas/gemm.rst", "elements/oneMath/source/domains/blas/gemm_batch.rst", "elements/oneMath/source/domains/blas/gemm_bias.rst", "elements/oneMath/source/domains/blas/gemmt.rst", "elements/oneMath/source/domains/blas/gemv.rst", "elements/oneMath/source/domains/blas/gemv_batch.rst", "elements/oneMath/source/domains/blas/ger.rst", "elements/oneMath/source/domains/blas/gerc.rst", "elements/oneMath/source/domains/blas/geru.rst", "elements/oneMath/source/domains/blas/hbmv.rst", "elements/oneMath/source/domains/blas/hemm.rst", "elements/oneMath/source/domains/blas/hemv.rst", "elements/oneMath/source/domains/blas/her.rst", "elements/oneMath/source/domains/blas/her2.rst", "elements/oneMath/source/domains/blas/her2k.rst", "elements/oneMath/source/domains/blas/herk.rst", "elements/oneMath/source/domains/blas/hpmv.rst", "elements/oneMath/source/domains/blas/hpr.rst", "elements/oneMath/source/domains/blas/hpr2.rst", "elements/oneMath/source/domains/blas/iamax.rst", "elements/oneMath/source/domains/blas/iamin.rst", "elements/oneMath/source/domains/blas/imatcopy.rst", "elements/oneMath/source/domains/blas/imatcopy_batch.rst", "elements/oneMath/source/domains/blas/nrm2.rst", "elements/oneMath/source/domains/blas/omatadd.rst", "elements/oneMath/source/domains/blas/omatadd_batch.rst", "elements/oneMath/source/domains/blas/omatcopy.rst", "elements/oneMath/source/domains/blas/omatcopy2.rst", "elements/oneMath/source/domains/blas/omatcopy_batch.rst", "elements/oneMath/source/domains/blas/rot.rst", "elements/oneMath/source/domains/blas/rotg.rst", "elements/oneMath/source/domains/blas/rotm.rst", "elements/oneMath/source/domains/blas/rotmg.rst", "elements/oneMath/source/domains/blas/sbmv.rst", "elements/oneMath/source/domains/blas/scal.rst", "elements/oneMath/source/domains/blas/sdsdot.rst", "elements/oneMath/source/domains/blas/spmv.rst", "elements/oneMath/source/domains/blas/spr.rst", "elements/oneMath/source/domains/blas/spr2.rst", "elements/oneMath/source/domains/blas/swap.rst", "elements/oneMath/source/domains/blas/symm.rst", "elements/oneMath/source/domains/blas/symv.rst", "elements/oneMath/source/domains/blas/syr.rst", "elements/oneMath/source/domains/blas/syr2.rst", "elements/oneMath/source/domains/blas/syr2k.rst", "elements/oneMath/source/domains/blas/syrk.rst", "elements/oneMath/source/domains/blas/syrk_batch.rst", "elements/oneMath/source/domains/blas/tbmv.rst", "elements/oneMath/source/domains/blas/tbsv.rst", "elements/oneMath/source/domains/blas/tpmv.rst", "elements/oneMath/source/domains/blas/tpsv.rst", "elements/oneMath/source/domains/blas/trmm.rst", "elements/oneMath/source/domains/blas/trmv.rst", "elements/oneMath/source/domains/blas/trsm.rst", "elements/oneMath/source/domains/blas/trsm_batch.rst", "elements/oneMath/source/domains/blas/trsv.rst", "elements/oneMath/source/domains/dft/compute_backward.rst", "elements/oneMath/source/domains/dft/compute_forward.rst", "elements/oneMath/source/domains/dft/config_params/data_layouts.rst", "elements/oneMath/source/domains/dft/config_params/storage_formats.rst", "elements/oneMath/source/domains/dft/config_params/workspace_placement.rst", "elements/oneMath/source/domains/dft/descriptor.rst", "elements/oneMath/source/domains/dft/dft.rst", "elements/oneMath/source/domains/dft/enums_and_config_params.rst", "elements/oneMath/source/domains/domains.rst", "elements/oneMath/source/domains/lapack/gebrd.rst", "elements/oneMath/source/domains/lapack/gebrd_scratchpad_size.rst", "elements/oneMath/source/domains/lapack/geqrf.rst", "elements/oneMath/source/domains/lapack/geqrf_batch.rst", "elements/oneMath/source/domains/lapack/geqrf_batch_scratchpad_size.rst", "elements/oneMath/source/domains/lapack/geqrf_scratchpad_size.rst", "elements/oneMath/source/domains/lapack/gerqf.rst", "elements/oneMath/source/domains/lapack/gerqf_scratchpad_size.rst", "elements/oneMath/source/domains/lapack/gesvd.rst", "elements/oneMath/source/domains/lapack/gesvd_scratchpad_size.rst", "elements/oneMath/source/domains/lapack/getrf.rst", "elements/oneMath/source/domains/lapack/getrf_batch.rst", "elements/oneMath/source/domains/lapack/getrf_batch_scratchpad_size.rst", "elements/oneMath/source/domains/lapack/getrf_scratchpad_size.rst", "elements/oneMath/source/domains/lapack/getri.rst", "elements/oneMath/source/domains/lapack/getri_batch.rst", "elements/oneMath/source/domains/lapack/getri_batch_scratchpad_size.rst", "elements/oneMath/source/domains/lapack/getri_scratchpad_size.rst", "elements/oneMath/source/domains/lapack/getrs.rst", "elements/oneMath/source/domains/lapack/getrs_batch.rst", "elements/oneMath/source/domains/lapack/getrs_batch_scratchpad_size.rst", "elements/oneMath/source/domains/lapack/getrs_scratchpad_size.rst", "elements/oneMath/source/domains/lapack/heevd.rst", "elements/oneMath/source/domains/lapack/heevd_scratchpad_size.rst", "elements/oneMath/source/domains/lapack/hegvd.rst", "elements/oneMath/source/domains/lapack/hegvd_scratchpad_size.rst", "elements/oneMath/source/domains/lapack/hetrd.rst", "elements/oneMath/source/domains/lapack/hetrd_scratchpad_size.rst", "elements/oneMath/source/domains/lapack/hetrf.rst", "elements/oneMath/source/domains/lapack/hetrf_scratchpad_size.rst", "elements/oneMath/source/domains/lapack/lapack.rst", "elements/oneMath/source/domains/lapack/orgbr.rst", "elements/oneMath/source/domains/lapack/orgbr_scratchpad_size.rst", "elements/oneMath/source/domains/lapack/orgqr.rst", "elements/oneMath/source/domains/lapack/orgqr_batch.rst", "elements/oneMath/source/domains/lapack/orgqr_batch_scratchpad_size.rst", "elements/oneMath/source/domains/lapack/orgqr_scratchpad_size.rst", "elements/oneMath/source/domains/lapack/orgtr.rst", "elements/oneMath/source/domains/lapack/orgtr_scratchpad_size.rst", "elements/oneMath/source/domains/lapack/ormqr.rst", "elements/oneMath/source/domains/lapack/ormqr_scratchpad_size.rst", "elements/oneMath/source/domains/lapack/ormrq.rst", "elements/oneMath/source/domains/lapack/ormrq_scratchpad_size.rst", "elements/oneMath/source/domains/lapack/ormtr.rst", "elements/oneMath/source/domains/lapack/ormtr_scratchpad_size.rst", "elements/oneMath/source/domains/lapack/potrf.rst", "elements/oneMath/source/domains/lapack/potrf_batch.rst", "elements/oneMath/source/domains/lapack/potrf_batch_scratchpad_size.rst", "elements/oneMath/source/domains/lapack/potrf_scratchpad_size.rst", "elements/oneMath/source/domains/lapack/potri.rst", "elements/oneMath/source/domains/lapack/potri_scratchpad_size.rst", "elements/oneMath/source/domains/lapack/potrs.rst", "elements/oneMath/source/domains/lapack/potrs_batch.rst", "elements/oneMath/source/domains/lapack/potrs_batch_scratchpad_size.rst", "elements/oneMath/source/domains/lapack/potrs_scratchpad_size.rst", "elements/oneMath/source/domains/lapack/syevd.rst", "elements/oneMath/source/domains/lapack/syevd_scratchpad_size.rst", "elements/oneMath/source/domains/lapack/sygvd.rst", "elements/oneMath/source/domains/lapack/sygvd_scratchpad_size.rst", "elements/oneMath/source/domains/lapack/sytrd.rst", "elements/oneMath/source/domains/lapack/sytrd_scratchpad_size.rst", "elements/oneMath/source/domains/lapack/sytrf.rst", "elements/oneMath/source/domains/lapack/sytrf_scratchpad_size.rst", "elements/oneMath/source/domains/lapack/trtrs.rst", "elements/oneMath/source/domains/lapack/trtrs_scratchpad_size.rst", "elements/oneMath/source/domains/lapack/ungbr.rst", "elements/oneMath/source/domains/lapack/ungbr_scratchpad_size.rst", "elements/oneMath/source/domains/lapack/ungqr.rst", "elements/oneMath/source/domains/lapack/ungqr_batch.rst", "elements/oneMath/source/domains/lapack/ungqr_batch_scratchpad_size.rst", "elements/oneMath/source/domains/lapack/ungqr_scratchpad_size.rst", "elements/oneMath/source/domains/lapack/ungtr.rst", "elements/oneMath/source/domains/lapack/ungtr_scratchpad_size.rst", "elements/oneMath/source/domains/lapack/unmqr.rst", "elements/oneMath/source/domains/lapack/unmqr_scratchpad_size.rst", "elements/oneMath/source/domains/lapack/unmrq.rst", "elements/oneMath/source/domains/lapack/unmrq_scratchpad_size.rst", "elements/oneMath/source/domains/lapack/unmtr.rst", "elements/oneMath/source/domains/lapack/unmtr_scratchpad_size.rst", "elements/oneMath/source/domains/matrix-storage.rst", "elements/oneMath/source/domains/rng/bibliography.rst", "elements/oneMath/source/domains/rng/device_api/device-adaptors.rst", "elements/oneMath/source/domains/rng/device_api/device-distributions.rst", "elements/oneMath/source/domains/rng/device_api/device-distributions-template-parameter-method.rst", "elements/oneMath/source/domains/rng/device_api/device-engines.rst", "elements/oneMath/source/domains/rng/device_api/device-rng-bernoulli.rst", "elements/oneMath/source/domains/rng/device_api/device-rng-beta.rst", "elements/oneMath/source/domains/rng/device_api/device-rng-bits.rst", "elements/oneMath/source/domains/rng/device_api/device-rng-count_engine_adaptor.rst", "elements/oneMath/source/domains/rng/device_api/device-rng-exponential.rst", "elements/oneMath/source/domains/rng/device_api/device-rng-gamma.rst", "elements/oneMath/source/domains/rng/device_api/device-rng-gaussian.rst", "elements/oneMath/source/domains/rng/device_api/device-rng-generate.rst", "elements/oneMath/source/domains/rng/device_api/device-rng-generate-routines.rst", "elements/oneMath/source/domains/rng/device_api/device-rng-geometric.rst", "elements/oneMath/source/domains/rng/device_api/device-rng-lognormal.rst", "elements/oneMath/source/domains/rng/device_api/device-rng-mcg31m1.rst", "elements/oneMath/source/domains/rng/device_api/device-rng-mcg59.rst", "elements/oneMath/source/domains/rng/device_api/device-rng-mrg32k3a.rst", "elements/oneMath/source/domains/rng/device_api/device-rng-pcg64-dxsm.rst", "elements/oneMath/source/domains/rng/device_api/device-rng-philox4x32x10.rst", "elements/oneMath/source/domains/rng/device_api/device-rng-poisson.rst", "elements/oneMath/source/domains/rng/device_api/device-rng-skip-ahead.rst", "elements/oneMath/source/domains/rng/device_api/device-rng-uniform-bits.rst", "elements/oneMath/source/domains/rng/device_api/device-rng-uniform-continuous.rst", "elements/oneMath/source/domains/rng/device_api/device-rng-uniform-discrete.rst", "elements/oneMath/source/domains/rng/device_api/device-rng-usage-model.rst", "elements/oneMath/source/domains/rng/device_api/device-routines.rst", "elements/oneMath/source/domains/rng/device_api/device-service-routines.rst", "elements/oneMath/source/domains/rng/host_api/distributions.rst", "elements/oneMath/source/domains/rng/host_api/distributions-template-parameter-onemath-rng-method-values.rst", "elements/oneMath/source/domains/rng/host_api/engines-basic-random-number-generators.rst", "elements/oneMath/source/domains/rng/host_api/generate-routine.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-ars5.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-bernoulli.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-beta.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-binomial.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-bits.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-cauchy.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-chi_square.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-default_engine.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-exponential.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-gamma.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-gaussian.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-gaussian_mv.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-generate.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-geometric.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-gumbel.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-hypergeometric.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-laplace.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-leapfrog.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-lognormal.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-mcg31m1.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-mcg59.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-mrg32k3a.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-mt19937.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-mt2203.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-multinomial.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-negbinomial.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-niederreiter.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-nondeterministic.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-philox4x32x10.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-poisson.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-poisson_v.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-r250.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-rayleigh.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-sfmt19937.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-skip_ahead.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-sobol.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-uniform-continuous.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-uniform-discrete.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-uniform_bits.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-usage-model.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-weibull.rst", "elements/oneMath/source/domains/rng/host_api/onemath-rng-wichmann_hill.rst", "elements/oneMath/source/domains/rng/host_api/rng-host-routines.rst", "elements/oneMath/source/domains/rng/host_api/service-routines.rst", "elements/oneMath/source/domains/rng/onemath-rng-overview.rst", "elements/oneMath/source/domains/spblas/data_types/data_handles.rst", "elements/oneMath/source/domains/spblas/data_types/format-descriptions.rst", "elements/oneMath/source/domains/spblas/data_types/init_coo_matrix.rst", "elements/oneMath/source/domains/spblas/data_types/init_csr_matrix.rst", "elements/oneMath/source/domains/spblas/data_types/init_dense_matrix.rst", "elements/oneMath/source/domains/spblas/data_types/init_dense_vector.rst", "elements/oneMath/source/domains/spblas/data_types/release_dense_matrix.rst", "elements/oneMath/source/domains/spblas/data_types/release_dense_vector.rst", "elements/oneMath/source/domains/spblas/data_types/release_sparse_matrix.rst", "elements/oneMath/source/domains/spblas/data_types/set_coo_matrix_data.rst", "elements/oneMath/source/domains/spblas/data_types/set_csr_matrix_data.rst", "elements/oneMath/source/domains/spblas/data_types/set_dense_matrix_data.rst", "elements/oneMath/source/domains/spblas/data_types/set_dense_vector_data.rst", "elements/oneMath/source/domains/spblas/data_types/set_matrix_property.rst", "elements/oneMath/source/domains/spblas/matrix_view.rst", "elements/oneMath/source/domains/spblas/operations/spmm.rst", "elements/oneMath/source/domains/spblas/operations/spmv.rst", "elements/oneMath/source/domains/spblas/operations/spsv.rst", "elements/oneMath/source/domains/spblas/spblas.rst", "elements/oneMath/source/domains/spblas/supported-types.rst", "elements/oneMath/source/domains/stats/onemath_stats_central_moment.rst", "elements/oneMath/source/domains/stats/onemath_stats_central_moment_user_mean.rst", "elements/oneMath/source/domains/stats/onemath_stats_central_sum.rst", "elements/oneMath/source/domains/stats/onemath_stats_central_sum_user_mean.rst", "elements/oneMath/source/domains/stats/onemath_stats_dataset.rst", "elements/oneMath/source/domains/stats/onemath_stats_kurtosis.rst", "elements/oneMath/source/domains/stats/onemath_stats_kurtosis_user_mean.rst", "elements/oneMath/source/domains/stats/onemath_stats_make_dataset.rst", "elements/oneMath/source/domains/stats/onemath_stats_max.rst", "elements/oneMath/source/domains/stats/onemath_stats_mean.rst", "elements/oneMath/source/domains/stats/onemath_stats_min.rst", "elements/oneMath/source/domains/stats/onemath_stats_min_max.rst", "elements/oneMath/source/domains/stats/onemath_stats_overview.rst", "elements/oneMath/source/domains/stats/onemath_stats_raw_moment.rst", "elements/oneMath/source/domains/stats/onemath_stats_raw_sum.rst", "elements/oneMath/source/domains/stats/onemath_stats_routines.rst", "elements/oneMath/source/domains/stats/onemath_stats_service_routines.rst", "elements/oneMath/source/domains/stats/onemath_stats_skewness.rst", "elements/oneMath/source/domains/stats/onemath_stats_skewness_user_mean.rst", "elements/oneMath/source/domains/stats/onemath_stats_usage_model.rst", "elements/oneMath/source/domains/stats/onemath_stats_variation.rst", "elements/oneMath/source/domains/stats/onemath_stats_variation_user_mean.rst", "elements/oneMath/source/domains/value_or_pointer.rst", "elements/oneMath/source/domains/vm/abs.rst", "elements/oneMath/source/domains/vm/acos.rst", "elements/oneMath/source/domains/vm/acosh.rst", "elements/oneMath/source/domains/vm/acospi.rst", "elements/oneMath/source/domains/vm/add.rst", "elements/oneMath/source/domains/vm/arg.rst", "elements/oneMath/source/domains/vm/asin.rst", "elements/oneMath/source/domains/vm/asinh.rst", "elements/oneMath/source/domains/vm/asinpi.rst", "elements/oneMath/source/domains/vm/atan.rst", "elements/oneMath/source/domains/vm/atan2.rst", "elements/oneMath/source/domains/vm/atan2pi.rst", "elements/oneMath/source/domains/vm/atanh.rst", "elements/oneMath/source/domains/vm/atanpi.rst", "elements/oneMath/source/domains/vm/bibliography.rst", "elements/oneMath/source/domains/vm/cbrt.rst", "elements/oneMath/source/domains/vm/cdfnorm.rst", "elements/oneMath/source/domains/vm/cdfnorminv.rst", "elements/oneMath/source/domains/vm/ceil.rst", "elements/oneMath/source/domains/vm/cis.rst", "elements/oneMath/source/domains/vm/clear_status.rst", "elements/oneMath/source/domains/vm/conj.rst", "elements/oneMath/source/domains/vm/copysign.rst", "elements/oneMath/source/domains/vm/cos.rst", "elements/oneMath/source/domains/vm/cosd.rst", "elements/oneMath/source/domains/vm/cosh.rst", "elements/oneMath/source/domains/vm/cospi.rst", "elements/oneMath/source/domains/vm/create_error_handler.rst", "elements/oneMath/source/domains/vm/div.rst", "elements/oneMath/source/domains/vm/erf.rst", "elements/oneMath/source/domains/vm/erfc.rst", "elements/oneMath/source/domains/vm/erfcinv.rst", "elements/oneMath/source/domains/vm/erfinv.rst", "elements/oneMath/source/domains/vm/exp.rst", "elements/oneMath/source/domains/vm/exp10.rst", "elements/oneMath/source/domains/vm/exp2.rst", "elements/oneMath/source/domains/vm/expint1.rst", "elements/oneMath/source/domains/vm/expm1.rst", "elements/oneMath/source/domains/vm/fdim.rst", "elements/oneMath/source/domains/vm/floor.rst", "elements/oneMath/source/domains/vm/fmax.rst", "elements/oneMath/source/domains/vm/fmin.rst", "elements/oneMath/source/domains/vm/fmod.rst", "elements/oneMath/source/domains/vm/frac.rst", "elements/oneMath/source/domains/vm/get_mode.rst", "elements/oneMath/source/domains/vm/get_status.rst", "elements/oneMath/source/domains/vm/hypot.rst", "elements/oneMath/source/domains/vm/inv.rst", "elements/oneMath/source/domains/vm/invcbrt.rst", "elements/oneMath/source/domains/vm/invsqrt.rst", "elements/oneMath/source/domains/vm/lgamma.rst", "elements/oneMath/source/domains/vm/linearfrac.rst", "elements/oneMath/source/domains/vm/ln.rst", "elements/oneMath/source/domains/vm/log10.rst", "elements/oneMath/source/domains/vm/log1p.rst", "elements/oneMath/source/domains/vm/log2.rst", "elements/oneMath/source/domains/vm/logb.rst", "elements/oneMath/source/domains/vm/maxmag.rst", "elements/oneMath/source/domains/vm/minmag.rst", "elements/oneMath/source/domains/vm/modf.rst", "elements/oneMath/source/domains/vm/mul.rst", "elements/oneMath/source/domains/vm/mulbyconj.rst", "elements/oneMath/source/domains/vm/nearbyint.rst", "elements/oneMath/source/domains/vm/nextafter.rst", "elements/oneMath/source/domains/vm/pow.rst", "elements/oneMath/source/domains/vm/pow2o3.rst", "elements/oneMath/source/domains/vm/pow3o2.rst", "elements/oneMath/source/domains/vm/powr.rst", "elements/oneMath/source/domains/vm/powx.rst", "elements/oneMath/source/domains/vm/remainder.rst", "elements/oneMath/source/domains/vm/rint.rst", "elements/oneMath/source/domains/vm/round.rst", "elements/oneMath/source/domains/vm/set_status.rst", "elements/oneMath/source/domains/vm/setmode.rst", "elements/oneMath/source/domains/vm/sin.rst", "elements/oneMath/source/domains/vm/sincos.rst", "elements/oneMath/source/domains/vm/sind.rst", "elements/oneMath/source/domains/vm/sinh.rst", "elements/oneMath/source/domains/vm/sinpi.rst", "elements/oneMath/source/domains/vm/special-value-notations.rst", "elements/oneMath/source/domains/vm/sqr.rst", "elements/oneMath/source/domains/vm/sqrt.rst", "elements/oneMath/source/domains/vm/sub.rst", "elements/oneMath/source/domains/vm/tan.rst", "elements/oneMath/source/domains/vm/tand.rst", "elements/oneMath/source/domains/vm/tanh.rst", "elements/oneMath/source/domains/vm/tanpi.rst", "elements/oneMath/source/domains/vm/tgamma.rst", "elements/oneMath/source/domains/vm/trunc.rst", "elements/oneMath/source/domains/vm/vm.rst", "elements/oneMath/source/domains/vm/vm-exceptions.rst", "elements/oneMath/source/domains/vm/vm-mathematical-functions.rst", "elements/oneMath/source/domains/vm/vm-service-functions.rst", "elements/oneMath/source/index.rst", "elements/oneTBB/source/algorithms.rst", "elements/oneTBB/source/algorithms/blocked_ranges/blocked_nd_range_cls.rst", "elements/oneTBB/source/algorithms/blocked_ranges/blocked_range2d_cls.rst", "elements/oneTBB/source/algorithms/blocked_ranges/blocked_range3d_cls.rst", "elements/oneTBB/source/algorithms/blocked_ranges/blocked_range_cls.rst", "elements/oneTBB/source/algorithms/functions/collaborative_call_once_func.rst", "elements/oneTBB/source/algorithms/functions/collaborative_once_flag_cls.rst", "elements/oneTBB/source/algorithms/functions/feeder.rst", "elements/oneTBB/source/algorithms/functions/parallel_deterministic_reduce_func.rst", "elements/oneTBB/source/algorithms/functions/parallel_for_each_func.rst", "elements/oneTBB/source/algorithms/functions/parallel_for_func.rst", "elements/oneTBB/source/algorithms/functions/parallel_invoke_func.rst", "elements/oneTBB/source/algorithms/functions/parallel_pipeline_func.rst", "elements/oneTBB/source/algorithms/functions/parallel_pipeline_func/filter_cls.rst", "elements/oneTBB/source/algorithms/functions/parallel_pipeline_func/filter_mode_enum.rst", "elements/oneTBB/source/algorithms/functions/parallel_pipeline_func/flow_control_cls.rst", "elements/oneTBB/source/algorithms/functions/parallel_reduce_func.rst", "elements/oneTBB/source/algorithms/functions/parallel_scan_func.rst", "elements/oneTBB/source/algorithms/functions/parallel_sort_func.rst", "elements/oneTBB/source/algorithms/functions/pre_scan_tag_and_final_scan_tag_clses.rst", "elements/oneTBB/source/algorithms/partitioners/affinity_partitioner.rst", "elements/oneTBB/source/algorithms/partitioners/auto_partitioner.rst", "elements/oneTBB/source/algorithms/partitioners/simple_partitioner.rst", "elements/oneTBB/source/algorithms/partitioners/static_partitioner.rst", "elements/oneTBB/source/algorithms/split_tags/proportional_split_cls.rst", "elements/oneTBB/source/algorithms/split_tags/split_cls.rst", "elements/oneTBB/source/configuration.rst", "elements/oneTBB/source/configuration/enabling_debugging_features.rst", "elements/oneTBB/source/configuration/feature_macros.rst", "elements/oneTBB/source/configuration/namespaces.rst", "elements/oneTBB/source/configuration/version_information.rst", "elements/oneTBB/source/containers.rst", "elements/oneTBB/source/containers/auxiliary/node_handles_cls.rst", "elements/oneTBB/source/containers/auxiliary/tbb_hash_compare_cls.rst", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls.rst", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/construct_destroy_copy.rst", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/safe_member_functions.rst", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/unsafe_member_functions.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/accessors.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/construct_destroy_copy.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/hash_policy.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/lookup.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/modifiers.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_map_cls.rst", "elements/oneTBB/source/containers/concurrent_map_cls/construction_destruction_copying.rst", "elements/oneTBB/source/containers/concurrent_map_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_map_cls/element_access.rst", "elements/oneTBB/source/containers/concurrent_map_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_map_cls/lookup.rst", "elements/oneTBB/source/containers/concurrent_map_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_map_cls/non_member_lexicographical_comparisons.rst", "elements/oneTBB/source/containers/concurrent_map_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_map_cls/observers.rst", "elements/oneTBB/source/containers/concurrent_map_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_map_cls/safe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_map_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_map_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_map_cls/value_compare_cls.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/construction_destruction_copying.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/lookup.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/non_member_lexicographical_comparisons.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/observers.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/safe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/value_compare_cls.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/construction_destruction_copying.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/lookup.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/non_member_lexicographical_comparisons.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/observers.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/safe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_priority_queue_cls.rst", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/construct_destroy_copy.rst", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/safe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_queue_cls.rst", "elements/oneTBB/source/containers/concurrent_queue_cls/construct_destroy_copy.rst", "elements/oneTBB/source/containers/concurrent_queue_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_queue_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_queue_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_queue_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_queue_cls/safe_member_functions.rst", "elements/oneTBB/source/containers/concurrent_queue_cls/unsafe_member_functions.rst", "elements/oneTBB/source/containers/concurrent_set_cls.rst", "elements/oneTBB/source/containers/concurrent_set_cls/construction_destruction_copying.rst", "elements/oneTBB/source/containers/concurrent_set_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_set_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_set_cls/lookup.rst", "elements/oneTBB/source/containers/concurrent_set_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_set_cls/non_member_lexicographical_comparisons.rst", "elements/oneTBB/source/containers/concurrent_set_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_set_cls/observers.rst", "elements/oneTBB/source/containers/concurrent_set_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_set_cls/safe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_set_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_set_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/bucket_interface.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/construction_destruction_copying.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/element_access.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/hash_policy.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/lookup.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/observers.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/safe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/bucket_interface.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/construction_destruction_copying.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/hash_policy.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/lookup.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/observers.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/safe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/bucket_interface.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/construction_destruction_copying.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/hash_policy.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/lookup.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/observers.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/safe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/bucket_interface.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/construction_destruction_copying.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/hash_policy.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/lookup.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/observers.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/safe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_vector_cls.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/concurrent_growth.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/construct_destroy_copy.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/element_access.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/non_member_lexicographical_comparisons.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/unsafe_operations.rst", "elements/oneTBB/source/deprecated/task_arena_attach_tag.rst", "elements/oneTBB/source/flow_graph.rst", "elements/oneTBB/source/flow_graph/async_node_cls.rst", "elements/oneTBB/source/flow_graph/broadcast_node_cls.rst", "elements/oneTBB/source/flow_graph/buffer_node_cls.rst", "elements/oneTBB/source/flow_graph/composite_node_cls.rst", "elements/oneTBB/source/flow_graph/continue_msg_cls.rst", "elements/oneTBB/source/flow_graph/continue_node_cls.rst", "elements/oneTBB/source/flow_graph/copy_body_func.rst", "elements/oneTBB/source/flow_graph/dependency_flow_graph_example.rst", "elements/oneTBB/source/flow_graph/forwarding_and_buffering.rst", "elements/oneTBB/source/flow_graph/func_node_cls.rst", "elements/oneTBB/source/flow_graph/functional_node_policies.rst", "elements/oneTBB/source/flow_graph/graph_cls.rst", "elements/oneTBB/source/flow_graph/graph_node_cls.rst", "elements/oneTBB/source/flow_graph/indexer_node_cls.rst", "elements/oneTBB/source/flow_graph/input_node_cls.rst", "elements/oneTBB/source/flow_graph/input_port_func.rst", "elements/oneTBB/source/flow_graph/join_node_cls.rst", "elements/oneTBB/source/flow_graph/join_node_policies.rst", "elements/oneTBB/source/flow_graph/limiter_node_cls.rst", "elements/oneTBB/source/flow_graph/make_edge_func.rst", "elements/oneTBB/source/flow_graph/message_flow_graph_example.rst", "elements/oneTBB/source/flow_graph/multifunc_node_cls.rst", "elements/oneTBB/source/flow_graph/node_priorities.rst", "elements/oneTBB/source/flow_graph/output_port_func.rst", "elements/oneTBB/source/flow_graph/overwrite_node_cls.rst", "elements/oneTBB/source/flow_graph/predefined_concurrency_limits.rst", "elements/oneTBB/source/flow_graph/priority_queue_node_cls.rst", "elements/oneTBB/source/flow_graph/queue_node_cls.rst", "elements/oneTBB/source/flow_graph/receiver.rst", "elements/oneTBB/source/flow_graph/remove_edge_func.rst", "elements/oneTBB/source/flow_graph/reset_flags_enum.rst", "elements/oneTBB/source/flow_graph/sender.rst", "elements/oneTBB/source/flow_graph/sequencer_node_cls.rst", "elements/oneTBB/source/flow_graph/split_node_cls.rst", "elements/oneTBB/source/flow_graph/tagged_msg_cls.rst", "elements/oneTBB/source/flow_graph/write_once_node_cls.rst", "elements/oneTBB/source/identifiers.rst", "elements/oneTBB/source/info_namespace.rst", "elements/oneTBB/source/intro.rst", "elements/oneTBB/source/memory_allocation.rst", "elements/oneTBB/source/memory_allocation/c_interface_to_scalable_allocator.rst", "elements/oneTBB/source/memory_allocation/cache_aligned_allocator_cls.rst", "elements/oneTBB/source/memory_allocation/cache_aligned_resource_cls.rst", "elements/oneTBB/source/memory_allocation/scalable_allocator_cls.rst", "elements/oneTBB/source/memory_allocation/scalable_memory_resource_func.rst", "elements/oneTBB/source/memory_allocation/tbb_allocator_cls.rst", "elements/oneTBB/source/mutual_exclusion.rst", "elements/oneTBB/source/mutual_exclusion/mutex_cls.rst", "elements/oneTBB/source/mutual_exclusion/null_mutex_cls.rst", "elements/oneTBB/source/mutual_exclusion/null_rw_mutex_cls.rst", "elements/oneTBB/source/mutual_exclusion/queuing_mutex_cls.rst", "elements/oneTBB/source/mutual_exclusion/queuing_rw_mutex_cls.rst", "elements/oneTBB/source/mutual_exclusion/rw_mutex_cls.rst", "elements/oneTBB/source/mutual_exclusion/speculative_spin_mutex_cls.rst", "elements/oneTBB/source/mutual_exclusion/speculative_spin_rw_mutex_cls.rst", "elements/oneTBB/source/mutual_exclusion/spin_mutex_cls.rst", "elements/oneTBB/source/mutual_exclusion/spin_rw_mutex_cls.rst", "elements/oneTBB/source/named_requirements.rst", "elements/oneTBB/source/named_requirements/algorithms/blocked_range_val.rst", "elements/oneTBB/source/named_requirements/algorithms/container_based_sequence.rst", "elements/oneTBB/source/named_requirements/algorithms/filter_body.rst", "elements/oneTBB/source/named_requirements/algorithms/par_for_body.rst", "elements/oneTBB/source/named_requirements/algorithms/par_for_each_body.rst", "elements/oneTBB/source/named_requirements/algorithms/par_for_func.rst", "elements/oneTBB/source/named_requirements/algorithms/par_for_index.rst", "elements/oneTBB/source/named_requirements/algorithms/par_reduce_body.rst", "elements/oneTBB/source/named_requirements/algorithms/par_reduce_func.rst", "elements/oneTBB/source/named_requirements/algorithms/par_reduce_reduction.rst", "elements/oneTBB/source/named_requirements/algorithms/par_scan_body.rst", "elements/oneTBB/source/named_requirements/algorithms/par_scan_combine.rst", "elements/oneTBB/source/named_requirements/algorithms/par_scan_func.rst", "elements/oneTBB/source/named_requirements/algorithms/range.rst", "elements/oneTBB/source/named_requirements/algorithms/splittable.rst", "elements/oneTBB/source/named_requirements/containers/container_range.rst", "elements/oneTBB/source/named_requirements/containers/hash_compare.rst", "elements/oneTBB/source/named_requirements/flow_graph/async_node_body.rst", "elements/oneTBB/source/named_requirements/flow_graph/continue_node_body.rst", "elements/oneTBB/source/named_requirements/flow_graph/function_node_body.rst", "elements/oneTBB/source/named_requirements/flow_graph/gateway_type.rst", "elements/oneTBB/source/named_requirements/flow_graph/input_node_body.rst", "elements/oneTBB/source/named_requirements/flow_graph/join_node_func_obj.rst", "elements/oneTBB/source/named_requirements/flow_graph/multifunction_node_body.rst", "elements/oneTBB/source/named_requirements/flow_graph/sequencer.rst", "elements/oneTBB/source/named_requirements/mutexes/mutex.rst", "elements/oneTBB/source/named_requirements/mutexes/rw_mutex.rst", "elements/oneTBB/source/named_requirements/task_scheduler/suspend_func.rst", "elements/oneTBB/source/nested-aux-interfaces.rst", "elements/oneTBB/source/nested-depr-interfaces.rst", "elements/oneTBB/source/nested-gen-info.rst", "elements/oneTBB/source/nested-index.rst", "elements/oneTBB/source/nested-interfaces.rst", "elements/oneTBB/source/notation.rst", "elements/oneTBB/source/task_scheduler.rst", "elements/oneTBB/source/task_scheduler/attach_tag_type.rst", "elements/oneTBB/source/task_scheduler/scheduling_controls/global_control_cls.rst", "elements/oneTBB/source/task_scheduler/scheduling_controls/resumable_tasks.rst", "elements/oneTBB/source/task_scheduler/scheduling_controls/task_group_context_cls.rst", "elements/oneTBB/source/task_scheduler/scheduling_controls/task_scheduler_handle_cls.rst", "elements/oneTBB/source/task_scheduler/task_arena/task_arena_cls.rst", "elements/oneTBB/source/task_scheduler/task_arena/task_scheduler_observer_cls.rst", "elements/oneTBB/source/task_scheduler/task_arena/this_task_arena_ns.rst", "elements/oneTBB/source/task_scheduler/task_group/task_group_cls.rst", "elements/oneTBB/source/task_scheduler/task_group/task_group_status_enum.rst", "elements/oneTBB/source/task_scheduler/task_group/task_handle.rst", "elements/oneTBB/source/thread_local_storage.rst", "elements/oneTBB/source/thread_local_storage/combinable_cls.rst", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls.rst", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/combining.rst", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/construct_destroy_copy.rst", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/iteration.rst", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/safe_modifiers.rst", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/size_and_capacity.rst", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/unsafe_modifiers.rst", "elements/oneTBB/source/thread_local_storage/flattened2d_cls.rst", "elements/oneTBB/source/thread_safety.rst", "elements/oneTBB/source/timing.rst", "elements/oneTBB/source/timing/tick_count_cls.rst", "index.rst", "introduction.rst", "notices.rst"], "titles": ["Software Architecture", "&lt;no title&gt;", "Definitions", "oneCCL", "Introduction", "Namespaces", "Programming Model", "Collective Operations", "Datatypes", "Error handling", "Generic Workflow", "Group Calls", "oneCCL Concepts", "Operation Attributes", "Operation Progress Tracking", "Communication Operations", "Reductions", "Current Version of this oneCCL Specification", "Clustering", "K-Means", "K-Means initialization", "Decomposition", "Principal Components Analysis (PCA)", "Algorithms", "Nearest Neighbors (kNN)", "k-Nearest Neighbors Classification (k-NN)", "Appendix", "k-d Tree", "Bibliography", "Common type definitions", "Error handling", "Header files", "Common Interface", "Current Version of this oneDAL Specification", "Column accessor", "Row accessor", "Accessors", "Array", "CSV data source", "Data Sources", "Data management", "Homogeneous table", "Tables", "Glossary", "oneDAL", "Introduction", "Mathematical Notations", "Computational modes", "Descriptors", "End-to-end example", "Programming model", "Operations", "Supported operations", "Conventions", "Bfloat16", "Data types", "Int8", "Data model", "Memory Formats", "Memory", "Memory Descriptors and Objects", "Execution Model", "Data Model", "Common Definitions", "Graph extension", "Abs", "AbsBackward", "Add", "AvgPool", "AvgPoolBackward", "BatchNormForwardTraining", "BatchNormInference", "BatchNormTrainingBackward", "BiasAdd", "BiasAddBackward", "Clamp", "ClampBackward", "Concat", "ConvTranspose", "ConvTransposeBackwardData", "ConvTransposeBackwardWeights", "Convolution", "ConvolutionBackwardData", "ConvolutionBackwardWeights", "Dequantize", "Divide", "DynamicDequantize", "DynamicQuantize", "Elu", "EluBackward", "End", "Exp", "GELU", "GELUBackward", "HardSigmoid", "HardSigmoidBackward", "HardSwish", "HardSwishBackward", "Interpolate", "InterpolateBackward", "LayerNorm", "LayerNormBackward", "LeakyReLU", "Log", "LogSoftmax", "LogSoftmaxBackward", "MatMul", "MaxPool", "MaxPoolBackward", "Maximum", "Minimum", "Mish", "MishBackward", "Multiply", "PReLU", "PReLUBackward", "Pow", "Quantize", "ReLU", "ReLUBackward", "Reciprocal", "ReduceL1", "ReduceL2", "ReduceMax", "ReduceMean", "ReduceMin", "ReduceProd", "ReduceSum", "Reorder", "Round", "Select", "Sigmoid", "SigmoidBackward", "SoftPlus", "SoftPlusBackward", "SoftMax", "SoftMaxBackward", "Sqrt", "SqrtBackward", "Square", "SquaredDifference", "StaticReshape", "StaticTranspose", "Subtract", "Tanh", "TanhBackward", "TypeCast", "Wildcard", "Operation Set", "Programming Model", "oneDNN", "Introduction", "Attributes", "Post-ops", "Batch Normalization", "Binary", "Concat", "Convolution and Deconvolution", "Elementwise", "Common Definitions", "Primitives", "Inner Product", "Layer normalization", "Local Response Normalization", "Matrix Multiplication", "Pooling", "Prelu", "Reduction", "Reorder", "Resampling", "RNN", "Shuffle", "Softmax", "Sum", "General Information", "oneDPL", "Parallel API", "Parallel Algorithms", "Buffer Wrappers", "Execution Policies", "Iterators", "Parallel Range Algorithms", "SYCL Kernels API", "oneMath Appendix", "oneMath Architecture", "asum", "axpby", "axpy", "axpy_batch", "BLAS Routines", "BLAS Level 1 Routines", "BLAS Level 2 Routines", "BLAS Level 3 Routines", "BLAS-like Extensions", "copy", "copy_batch", "dgmm_batch", "dot", "dotc", "dotu", "gbmv", "gemm", "gemm_batch", "gemm_bias", "gemmt", "gemv", "gemv_batch", "ger", "gerc", "geru", "hbmv", "hemm", "hemv", "her", "her2", "her2k", "herk", "hpmv", "hpr", "hpr2", "iamax", "iamin", "imatcopy", "imatcopy_batch", "nrm2", "omatadd", "omatadd_batch", "omatcopy", "omatcopy2", "omatcopy_batch", "rot", "rotg", "rotm", "rotmg", "sbmv", "scal", "sdsdot", "spmv", "spr", "spr2", "swap", "symm", "symv", "syr", "syr2", "syr2k", "syrk", "syrk_batch", "tbmv", "tbsv", "tpmv", "tpsv", "trmm", "trmv", "trsm", "trsm_batch", "trsv", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">compute_backward</span></code> function templates", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">compute_forward</span></code> function templates", "Configuration of data layouts", "Data storage", "Workspace placement", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">descriptor</span></code> class template", "Discrete Fourier Transform Functions", "DFT-related scoped enumeration types", "oneMath Domains", "gebrd", "gebrd_scratchpad_size", "geqrf", "geqrf_batch", "geqrf_batch_scratchpad_size", "geqrf_scratchpad_size", "gerqf", "gerqf_scratchpad_size", "gesvd", "gesvd_scratchpad_size", "getrf", "getrf_batch", "getrf_batch_scratchpad_size", "getrf_scratchpad_size", "getri", "getri_batch", "getri_batch_scratchpad_size", "getri_scratchpad_size", "getrs", "getrs_batch", "getrs_batch_scratchpad_size", "getrs_scratchpad_size", "heevd", "heevd_scratchpad_size", "hegvd", "hegvd_scratchpad_size", "hetrd", "hetrd_scratchpad_size", "hetrf", "hetrf_scratchpad_size", "LAPACK Routines", "orgbr", "orgbr_scratchpad_size", "orgqr", "orgqr_batch", "orgqr_batch_scratchpad_size", "orgqr_scratchpad_size", "orgtr", "orgtr_scratchpad_size", "ormqr", "ormqr_scratchpad_size", "ormrq", "ormrq_scratchpad_size", "ormtr", "ormtr_scratchpad_size", "potrf", "potrf_batch", "potrf_batch_scratchpad_size", "potrf_scratchpad_size", "potri", "potri_scratchpad_size", "potrs", "potrs_batch", "potrs_batch_scratchpad_size", "potrs_scratchpad_size", "syevd", "syevd_scratchpad_size", "sygvd", "sygvd_scratchpad_size", "sytrd", "sytrd_scratchpad_size", "sytrf", "sytrf_scratchpad_size", "trtrs", "trtrs_scratchpad_size", "ungbr", "ungbr_scratchpad_size", "ungqr", "ungqr_batch", "ungqr_batch_scratchpad_size", "ungqr_scratchpad_size", "ungtr", "ungtr_scratchpad_size", "unmqr", "unmqr_scratchpad_size", "unmrq", "unmrq_scratchpad_size", "unmtr", "unmtr_scratchpad_size", "Matrix Storage", "Bibliography", "Engine Adaptors", "Device Distributions", "Distributions Template Parameter Method", "Device Engines (Basic Random Number Generators)", "bernoulli", "beta", "bits", "Count Engine Adaptor", "exponential", "gamma", "gaussian", "generate", "Device Generate Routines", "geometric", "lognormal", "mcg31m1", "mcg59", "mrg32k3a", "pcg64_dxsm", "philox4x32x10", "poisson", "skip_ahead", "uniform_bits", "uniform (Continuous)", "uniform (Discrete)", "oneMath RNG Device Usage Model", "Random Number Generators Device Routines", "Device Service Routines", "Host Distributions", "Distributions Template Parameter Method", "Host Engines (Basic Random Number Generators)", "Host Generate Routine", "ars5", "bernoulli", "beta", "binomial", "bits", "cauchy", "chi_square", "default_engine", "exponential", "gamma", "gaussian", "gaussian_mv", "generate", "geometric", "gumbel", "hypergeometric", "laplace", "leapfrog", "lognormal", "mcg31m1", "mcg59", "mrg32k3a", "mt19937", "mt2203", "multinomial", "negative_binomial", "niederreiter", "nondeterministic", "philox4x32x10", "poisson", "poisson_v", "r250", "rayleigh", "sfmt19937", "skip_ahead", "sobol", "uniform (continuous)", "uniform (discrete)", "uniform_bits", "oneMath RNG Host Usage Model", "weibull", "wichmann_hill", "Random Number Generators Host Routines", "Host Service Routines", "Random Number Generators (RNG)", "Data handles", "Sparse storage formats", "init_coo_matrix", "init_csr_matrix", "init_dense_matrix", "init_dense_vector", "release_dense_matrix", "release_dense_vector", "release_sparse_matrix", "set_coo_matrix_data", "set_csr_matrix_data", "set_dense_matrix_data", "set_dense_vector_data", "set_matrix_property", "Matrix view", "spmm", "spmv", "spsv", "Sparse BLAS", "Supported template types", "central_moment", "central_moment with provided mean", "central_sum", "central_sum with provided mean", "dataset", "kurtosis", "kurtosis with provided mean", "make_dataset", "max", "mean", "min", "min_max", "Summary Statistics", "raw_moment", "raw_sum", "Summary Statistics Routines", "Service Routines", "skewness", "skewness with provided mean", "oneMath Summary Statistics Usage Model", "variation", "variation with provided mean", "Scalar Arguments in BLAS", "abs", "acos", "acosh", "acospi", "add", "arg", "asin", "asinh", "asinpi", "atan", "atan2", "atan2pi", "atanh", "atanpi", "Bibliography", "cbrt", "cdfnorm", "cdfnorminv", "ceil", "cis", "clear_status", "conj", "copysign", "cos", "cosd", "cosh", "cospi", "create_error_handler", "div", "erf", "erfc", "erfcinv", "erfinv", "exp", "exp10", "exp2", "expint1", "expm1", "fdim", "floor", "fmax", "fmin", "fmod", "frac", "get_mode", "get_status", "hypot", "inv", "invcbrt", "invsqrt", "lgamma", "linearfrac", "ln", "log10", "log1p", "log2", "logb", "maxmag", "minmag", "modf", "mul", "mulbyconj", "nearbyint", "nextafter", "pow", "pow2o3", "pow3o2", "powr", "powx", "remainder", "rint", "round", "set_status", "set_mode", "sin", "sincos", "sind", "sinh", "sinpi", "Special Value Notations", "sqr", "sqrt", "sub", "tan", "tand", "tanh", "tanpi", "tgamma", "trunc", "Vector Math", "Exceptions", "VM Mathematical Functions", "VM Service Functions", "oneMath", "Algorithms", "blocked_nd_range", "blocked_range2d", "blocked_range3d", "blocked_range", "collaborative_call_once", "collaborative_once_flag", "feeder", "parallel_deterministic_reduce", "parallel_for_each", "parallel_for", "parallel_invoke", "parallel_pipeline", "filter", "filter_mode", "flow_control", "parallel_reduce", "parallel_scan", "parallel_sort", "pre_scan_tag and final_scan_tag", "affinity_partitioner", "auto_partitioner", "simple_partitioner", "static_partitioner", "proportional split", "split", "Configuration", "Enabling Debugging Features", "Feature Macros", "Namespaces", "Version Information", "Containers", "Node handles", "tbb_hash_compare", "concurrent_bounded_queue", "Construction, destruction, copying", "Deduction guides", "Iterators", "Non-member binary comparisons", "Non-member swap", "Concurrently safe member functions", "Concurrently unsafe member functions", "concurrent_hash_map", "accessor and const_accessor", "Construction, destruction, copying", "Deduction guides", "Hash policy", "Iterators", "Lookup", "Concurrently safe modifiers", "Non-member binary comparisons", "Non-member swap", "Parallel iteration", "Size and capacity", "Concurrently unsafe modifiers", "concurrent_map", "Construction, destruction, copying", "Deduction guides", "Element access", "Iterators", "Lookup", "Non-member binary comparisons", "Non-member lexicographical comparisons", "Non-member swap", "Observers", "Parallel iteration", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "value_compare", "concurrent_multimap", "Construction, destruction, copying", "Deduction guides", "Iterators", "Lookup", "Non-member binary comparisons", "Non-member lexicographical comparisons", "Non-member swap", "Observers", "Parallel iteration", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "value_compare", "concurrent_multiset", "Construction, destruction, copying", "Deduction guides", "Iterators", "Lookup", "Non-member binary comparisons", "Non-member lexicographical comparisons", "Non-member swap", "Observers", "Parallel iteration", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "concurrent_priority_queue", "Construction, destruction, copying", "Deduction guides", "Non-member binary comparisons", "Non-member swap", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "concurrent_queue", "Construction, destruction, copying", "Deduction guides", "Iterators", "Non-member binary comparisons", "Non-member swap", "Concurrently safe member functions", "Concurrently unsafe member functions", "concurrent_set", "Construction, destruction, copying", "Deduction guides", "Iterators", "Lookup", "Non-member binary comparisons", "Non-member lexicographical comparisons", "Non-member swap", "Observers", "Parallel iteration", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "concurrent_unordered_map", "Bucket interface", "Construction, destruction, copying", "Deduction guides", "Element access", "Hash policy", "Iterators", "Lookup", "Non-member binary comparisons", "Non-member swap", "Observers", "Parallel iteration", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "concurrent_unordered_multimap", "Bucket interface", "Construction, destruction, copying", "Deduction guides", "Hash policy", "Iterators", "Lookup", "Non-member binary comparisons", "Non-member swap", "Observers", "Parallel iteration", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "concurrent_unordered_multiset", "Bucket interface", "Construction, destruction, copying", "Deduction guides", "Hash policy", "Iterators", "Lookup", "Non-member binary comparisons", "Non-member swap", "Observers", "Parallel iteration", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "concurrent_unordered_set", "Bucket interface", "Construction, destruction, copying", "Deduction guides", "Hash policy", "Iterators", "Lookup", "Non-member binary comparisons", "Non-member swap", "Observers", "Parallel iteration", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "concurrent_vector", "Concurrent growth", "Construction, destruction, copying", "Deduction guides", "Element access", "Iterators", "Non-member binary comparisons", "Non-member lexicographical comparisons", "Non-member swap", "Parallel iteration", "Size and capacity", "Concurrently unsafe operations", "task_arena::attach", "Flow Graph", "async_node", "broadcast_node", "buffer_node", "composite_node", "continue_msg", "continue_node", "copy_body", "Dependency Flow Graph Example", "Forwarding and Buffering", "function_node", "Function Nodes Policies", "graph", "graph_node", "indexer_node", "input_node", "input_port", "join_node", "join_node Policies", "limiter_node", "make_edge", "Message Flow Graph Example", "multifunction_node", "Nodes Priorities", "output_port", "overwrite_node", "Predefined Concurrency Limits", "priority_queue_node", "queue_node", "receiver", "remove_edge", "reset_flags Enumeration", "sender", "sequencer_node", "split_node", "tagged_msg", "write_once_node", "Identifiers", "info Namespace", "Introduction", "Memory Allocation", "C Interface to Scalable Allocator", "cache_aligned_allocator", "cache_aligned_resource", "scalable_allocator", "scalable_memory_resource", "tbb_allocator", "Mutual Exclusion", "mutex", "null_mutex", "null_rw_mutex", "queuing_mutex", "queuing_rw_mutex", "rw_mutex", "speculative_spin_mutex", "speculative_spin_rw_mutex", "spin_mutex", "spin_rw_mutex", "Named Requirements", "BlockedRangeValue", "ContainerBasedSequence", "FilterBody", "ParallelForBody", "ParallelForEachBody", "ParallelForFunc", "ParallelForIndex", "ParallelReduceBody", "ParallelReduceFunc", "ParallelReduceReduction", "ParallelScanBody", "ParallelScanCombine", "ParallelScanFunc", "Range", "Splittable", "ContainerRange", "HashCompare", "AsyncNodeBody", "ContinueNodeBody", "FunctionNodeBody", "GatewayType", "InputNodeBody", "JoinNodeFunctionObject", "MultifunctionNodeBody", "Sequencer", "Mutex", "ReaderWriterMutex", "SuspendFunc", "oneTBB Auxiliary Interfaces", "oneTBB Deprecated Interfaces", "General Information", "oneTBB", "oneTBB Interfaces", "Notational Conventions", "Task Scheduler", "attach tag type", "global_control", "Resumable tasks", "task_group_context", "task_scheduler_handle", "task_arena", "task_scheduler_observer", "this_task_arena", "task_group", "task_group_status", "task_handle", "Thread Local Storage", "combinable", "enumerable_thread_specific", "Combining", "Construction, destruction, copying", "Iteration", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "flattened2d", "Thread Safety", "Timing", "tick_count class", "oneAPI Specification", "Introduction", "Legal Notices and Disclaimers"], "terms": {"dpc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "librari": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "4": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "provision": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "rev": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "collect": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "commun": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "data": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 63, 64, 148, 149, 150, 151, 152, 153, 159, 160, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "analyt": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "oned": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "daal": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "deep": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "neural": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "network": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "level": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "zero": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "thread": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 863, 864, 865, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 877], "build": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "block": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "math": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "\u00bd": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "\u00bc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "\u215b": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "\u00be": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "\u215c": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "\u215d": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "\u215e": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "_": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "\u00b5": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "\u03c9": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "\u00aa": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "\u00ba": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "\u00b9": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "\u00b2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "\u00b3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "intel": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "media": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "develop": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "kit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "provid": [0, 4, 7, 9, 12, 13, 14, 31, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 48, 49, 55, 56, 58, 60, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 157, 159, 160, 162, 163, 164, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 193, 223, 226, 229, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 272, 277, 281, 285, 292, 296, 312, 313, 318, 319, 325, 347, 349, 350, 351, 352, 353, 355, 356, 357, 360, 361, 367, 369, 370, 371, 373, 375, 377, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 397, 403, 404, 408, 409, 411, 414, 415, 416, 417, 419, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 451, 459, 460, 466, 490, 491, 493, 494, 541, 542, 543, 545, 546, 550, 551, 553, 561, 562, 569, 571, 574, 578, 582, 591, 592, 595, 596, 597, 603, 604, 605, 606, 609, 610, 616, 617, 618, 631, 632, 633, 645, 646, 647, 658, 659, 660, 666, 667, 668, 674, 675, 676, 687, 689, 690, 702, 704, 705, 716, 718, 719, 730, 732, 733, 744, 746, 747, 757, 758, 763, 767, 772, 775, 777, 779, 780, 784, 787, 790, 796, 797, 798, 799, 801, 803, 804, 811, 812, 815, 829, 831, 832, 840, 850, 853, 856, 862, 863, 864, 868, 871, 873, 874, 875, 876, 877], "common": [0, 2, 3, 13, 31, 42, 44, 48, 50, 51, 64, 149, 152, 153, 160, 260, 264, 362, 363, 364, 365, 366, 368, 376, 379, 398, 399, 400, 401, 402, 407, 410, 412, 420, 518, 777, 787, 862, 877], "interfac": [0, 12, 36, 39, 40, 43, 44, 45, 48, 64, 184, 189, 259, 263, 265, 296, 368, 559, 573, 591, 687, 702, 716, 730, 758, 780, 795, 796, 797, 833, 841, 847, 851, 854, 876], "across": [0, 1, 7, 40, 45, 47, 150, 159, 162, 164, 184, 265, 396, 562, 563, 564, 578, 584, 763, 829, 862, 864, 865, 875, 876], "rang": [0, 30, 31, 32, 34, 35, 36, 37, 42, 54, 56, 77, 84, 86, 87, 117, 121, 122, 123, 124, 125, 126, 127, 142, 153, 175, 176, 177, 182, 259, 262, 264, 373, 420, 443, 487, 494, 512, 531, 535, 539, 558, 562, 563, 564, 565, 569, 571, 577, 578, 581, 582, 583, 584, 585, 586, 603, 605, 608, 616, 617, 629, 631, 643, 645, 657, 674, 675, 686, 687, 689, 701, 702, 715, 716, 729, 730, 732, 743, 744, 790, 815, 816, 819, 822, 823, 824, 826, 828, 830, 831, 848, 864, 867, 871], "parallel": [0, 1, 43, 44, 152, 174, 175, 262, 265, 346, 377, 418, 566, 570, 571, 572, 573, 575, 577, 578, 582, 583, 584, 603, 616, 631, 645, 674, 687, 702, 716, 730, 744, 757, 774, 780, 790, 796, 811, 812, 829, 831, 848, 850, 853, 855, 856, 863, 864, 873, 875, 876], "acceler": [0, 1, 28, 40, 149, 163, 560, 875, 876], "see": [0, 7, 12, 19, 20, 22, 25, 37, 40, 41, 42, 43, 48, 58, 60, 61, 100, 151, 152, 153, 154, 158, 159, 162, 164, 165, 170, 178, 179, 180, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 264, 294, 297, 298, 311, 312, 327, 331, 332, 351, 353, 355, 357, 358, 360, 361, 367, 369, 370, 371, 380, 381, 382, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 403, 404, 408, 409, 411, 413, 415, 416, 419, 424, 426, 427, 428, 429, 433, 434, 435, 436, 438, 456, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 562, 563, 564, 565, 569, 571, 573, 576, 577, 578, 580, 581, 583, 584, 585, 586, 590, 687, 689, 701, 702, 704, 715, 716, 718, 729, 730, 732, 743, 744, 746, 755, 756, 761, 765, 771, 773, 781, 782, 792, 797, 800, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 834, 840, 841, 842, 843, 851, 852, 855, 856, 859, 876], "figur": [0, 170, 396, 413, 483, 484, 496, 497, 498, 499, 778], "below": [0, 7, 10, 12, 31, 36, 40, 48, 49, 55, 58, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 153, 154, 157, 158, 161, 162, 164, 165, 171, 179, 180, 181, 184, 203, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 292, 309, 310, 325, 343, 344, 348, 375, 426, 427, 437, 466, 472, 487, 512, 518, 539, 559, 562, 569, 571, 577, 578, 588, 591, 687, 689, 701, 702, 704, 715, 716, 718, 729, 730, 732, 743, 746, 755, 765, 766, 768, 776, 778, 798, 815, 850], "programm": [0, 37, 184, 876], "us": [0, 4, 7, 8, 9, 10, 11, 12, 13, 14, 19, 20, 22, 25, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 67, 70, 76, 81, 82, 84, 85, 86, 87, 89, 90, 98, 99, 100, 101, 109, 110, 113, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 130, 132, 138, 140, 141, 143, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 191, 193, 196, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 217, 222, 223, 225, 226, 227, 228, 229, 241, 247, 248, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 272, 274, 276, 277, 280, 281, 284, 285, 288, 290, 292, 294, 296, 297, 299, 300, 303, 304, 305, 307, 309, 310, 311, 312, 315, 317, 318, 321, 323, 325, 327, 329, 331, 333, 334, 337, 338, 339, 341, 343, 344, 345, 346, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 367, 369, 370, 371, 373, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 402, 403, 404, 405, 408, 409, 411, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 463, 464, 465, 466, 472, 483, 484, 490, 491, 493, 496, 497, 498, 499, 518, 531, 537, 541, 542, 543, 545, 550, 551, 553, 557, 560, 562, 563, 564, 565, 567, 568, 569, 573, 574, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 589, 591, 593, 594, 595, 596, 597, 601, 603, 604, 605, 606, 610, 616, 617, 618, 625, 627, 630, 631, 632, 633, 639, 641, 644, 645, 646, 647, 653, 655, 658, 659, 660, 663, 666, 667, 668, 672, 674, 675, 676, 682, 684, 687, 688, 689, 690, 699, 702, 703, 704, 705, 713, 716, 717, 718, 719, 727, 730, 731, 732, 733, 741, 744, 745, 746, 747, 756, 757, 758, 761, 762, 763, 765, 766, 767, 768, 770, 771, 772, 774, 775, 776, 778, 779, 780, 783, 790, 791, 792, 793, 794, 795, 796, 798, 799, 801, 802, 803, 805, 806, 807, 810, 811, 813, 815, 817, 822, 829, 830, 831, 832, 838, 841, 849, 850, 851, 852, 853, 854, 856, 857, 858, 861, 863, 864, 865, 866, 871, 874, 876, 877], "sycl": [0, 10, 12, 28, 34, 35, 37, 39, 41, 43, 49, 51, 52, 60, 61, 150, 159, 175, 176, 178, 179, 180, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 354, 358, 362, 363, 364, 365, 366, 372, 373, 379, 391, 398, 399, 400, 401, 402, 405, 406, 407, 410, 412, 414, 418, 420, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555], "both": [0, 4, 37, 43, 45, 48, 54, 57, 58, 60, 62, 63, 67, 69, 70, 72, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 100, 101, 109, 110, 113, 117, 143, 149, 152, 154, 158, 162, 172, 177, 180, 181, 184, 215, 223, 226, 228, 229, 245, 259, 260, 272, 274, 373, 421, 437, 500, 559, 565, 569, 578, 761, 765, 778, 798, 820, 858], "The": [0, 4, 5, 7, 8, 11, 12, 13, 14, 19, 20, 22, 23, 25, 28, 29, 30, 31, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 350, 351, 352, 353, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 581, 582, 583, 584, 588, 589, 590, 591, 592, 593, 595, 596, 597, 598, 601, 603, 604, 605, 606, 608, 613, 614, 615, 616, 617, 618, 620, 627, 628, 629, 630, 631, 632, 633, 634, 641, 642, 643, 644, 645, 646, 647, 648, 655, 656, 657, 658, 659, 660, 663, 664, 665, 666, 667, 668, 669, 672, 674, 675, 676, 677, 684, 685, 686, 687, 689, 690, 693, 699, 700, 701, 702, 704, 705, 707, 713, 714, 715, 716, 718, 719, 721, 727, 728, 729, 730, 732, 733, 735, 741, 742, 743, 744, 746, 747, 748, 749, 755, 756, 757, 758, 759, 760, 761, 763, 765, 766, 767, 768, 770, 771, 772, 774, 775, 776, 777, 778, 779, 780, 782, 784, 785, 786, 787, 789, 790, 791, 792, 793, 794, 795, 797, 798, 799, 800, 801, 802, 803, 804, 805, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 820, 823, 824, 825, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 849, 850, 852, 853, 854, 855, 856, 857, 858, 859, 861, 863, 864, 865, 866, 867, 869, 870, 871, 873, 874, 876, 877], "capabl": [0, 4, 50, 62, 63, 178, 179, 790, 796], "ar": [0, 7, 9, 11, 12, 19, 22, 25, 30, 31, 34, 35, 36, 37, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 78, 79, 80, 81, 82, 83, 100, 101, 106, 107, 108, 121, 122, 123, 124, 125, 126, 127, 130, 140, 141, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 225, 226, 227, 228, 229, 232, 233, 234, 237, 239, 241, 242, 244, 245, 246, 247, 249, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 272, 274, 275, 276, 277, 284, 285, 288, 289, 290, 291, 292, 294, 296, 297, 312, 313, 317, 318, 319, 321, 322, 323, 324, 325, 327, 329, 330, 331, 334, 345, 348, 349, 352, 355, 357, 362, 366, 370, 371, 373, 375, 376, 377, 379, 381, 383, 398, 402, 405, 407, 410, 412, 414, 415, 416, 420, 421, 423, 425, 426, 427, 433, 434, 437, 438, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 466, 467, 471, 473, 476, 477, 483, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 512, 517, 518, 521, 527, 531, 534, 535, 536, 538, 539, 541, 542, 543, 544, 545, 546, 549, 550, 551, 553, 554, 556, 558, 559, 560, 562, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 580, 584, 589, 590, 593, 594, 595, 597, 601, 603, 604, 606, 611, 613, 616, 618, 622, 626, 627, 629, 630, 631, 633, 635, 636, 640, 641, 643, 644, 645, 647, 649, 650, 654, 655, 657, 658, 660, 666, 668, 674, 676, 678, 679, 683, 684, 686, 687, 690, 695, 698, 699, 701, 702, 703, 705, 708, 709, 712, 713, 715, 716, 717, 719, 722, 723, 726, 727, 729, 730, 733, 737, 740, 741, 743, 744, 747, 750, 753, 757, 758, 759, 760, 761, 765, 766, 767, 768, 769, 771, 772, 774, 775, 776, 778, 779, 780, 782, 785, 788, 790, 791, 792, 793, 794, 795, 796, 798, 799, 800, 801, 803, 811, 812, 815, 816, 817, 822, 829, 841, 842, 849, 850, 852, 853, 854, 855, 856, 857, 858, 859, 863, 864, 865, 866, 867, 871, 872, 874, 876, 877], "determin": [0, 25, 63, 149, 157, 177, 180, 211, 241, 252, 261, 262, 263, 267, 270, 271, 273, 275, 278, 279, 280, 281, 282, 283, 286, 287, 289, 291, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 308, 309, 310, 313, 314, 316, 319, 320, 322, 324, 326, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 342, 343, 344, 395, 562, 563, 564, 565, 579, 687, 702, 716, 730, 774, 776, 784, 790, 792, 817, 856, 858], "which": [0, 7, 8, 12, 13, 25, 29, 30, 31, 33, 34, 35, 37, 40, 41, 42, 43, 45, 54, 56, 58, 60, 61, 62, 63, 68, 77, 81, 84, 86, 87, 100, 101, 102, 104, 105, 117, 121, 122, 123, 124, 125, 126, 127, 135, 136, 147, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 184, 190, 191, 192, 201, 223, 226, 229, 257, 258, 259, 262, 263, 266, 269, 288, 290, 299, 300, 312, 321, 323, 333, 334, 351, 352, 353, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 377, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 403, 404, 408, 409, 411, 413, 415, 416, 417, 419, 421, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 490, 491, 493, 494, 541, 542, 543, 545, 550, 551, 553, 558, 562, 563, 564, 565, 566, 568, 575, 578, 579, 583, 585, 591, 595, 603, 604, 605, 608, 610, 616, 617, 627, 629, 631, 632, 635, 643, 645, 646, 649, 657, 658, 666, 674, 675, 684, 687, 688, 689, 692, 699, 702, 703, 704, 706, 708, 715, 716, 717, 718, 720, 722, 729, 730, 731, 732, 734, 741, 744, 758, 761, 766, 768, 771, 772, 774, 776, 778, 780, 788, 799, 800, 801, 803, 815, 816, 829, 830, 832, 833, 834, 835, 837, 838, 839, 840, 841, 850, 855, 856, 857, 858, 862, 867, 873, 874], "system": [0, 12, 31, 50, 61, 149, 151, 152, 171, 184, 191, 249, 251, 255, 256, 265, 276, 277, 284, 285, 294, 296, 317, 318, 327, 329, 362, 398, 402, 441, 442, 588, 589, 795, 798, 856, 875, 876], "abstract": [0, 12, 30, 43, 45, 48, 51, 58, 59, 61, 149, 151, 160, 184, 797], "devic": [0, 1, 2, 3, 4, 7, 10, 28, 30, 40, 43, 45, 47, 49, 61, 149, 150, 151, 175, 176, 182, 259, 260, 262, 263, 267, 269, 270, 271, 272, 273, 275, 277, 278, 279, 281, 282, 283, 285, 286, 287, 289, 291, 293, 295, 298, 300, 301, 302, 304, 306, 308, 310, 312, 313, 314, 316, 318, 319, 320, 322, 324, 326, 328, 330, 332, 334, 335, 336, 338, 340, 342, 344, 347, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 406, 418, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 440, 441, 466, 557, 560, 875], "A": [0, 1, 7, 12, 19, 20, 22, 27, 29, 31, 37, 38, 39, 40, 42, 43, 46, 47, 48, 51, 58, 60, 61, 63, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 98, 99, 107, 108, 117, 121, 122, 123, 124, 125, 126, 127, 142, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 184, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 225, 226, 227, 228, 229, 234, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 266, 267, 268, 271, 272, 273, 274, 275, 276, 279, 280, 283, 284, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 302, 303, 309, 311, 314, 315, 316, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333, 336, 337, 343, 345, 346, 365, 366, 372, 377, 382, 394, 401, 407, 412, 418, 425, 437, 439, 440, 441, 463, 466, 494, 561, 562, 563, 564, 565, 569, 571, 573, 574, 575, 577, 578, 579, 582, 583, 588, 593, 756, 757, 758, 759, 760, 761, 763, 765, 767, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 781, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 796, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 855, 856, 857, 858, 859, 860, 863, 864, 865, 867, 868, 871, 874, 875, 876], "i": [0, 7, 8, 9, 10, 12, 14, 17, 19, 20, 22, 25, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 67, 68, 69, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 95, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 130, 135, 136, 140, 141, 142, 143, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 558, 560, 562, 563, 564, 565, 566, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 586, 588, 589, 590, 591, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 621, 622, 623, 625, 627, 628, 629, 630, 631, 632, 635, 636, 637, 639, 641, 642, 643, 644, 645, 646, 647, 649, 650, 651, 653, 655, 656, 657, 658, 659, 660, 661, 663, 664, 665, 666, 667, 668, 669, 670, 672, 673, 674, 675, 676, 678, 679, 680, 682, 684, 685, 686, 687, 688, 689, 691, 692, 694, 695, 699, 700, 701, 702, 703, 704, 706, 708, 709, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 727, 728, 729, 730, 731, 732, 733, 734, 736, 737, 741, 742, 743, 744, 745, 746, 747, 748, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 774, 775, 776, 778, 779, 780, 782, 784, 785, 786, 788, 789, 790, 791, 792, 793, 795, 796, 797, 798, 799, 800, 801, 802, 803, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 820, 822, 826, 829, 830, 831, 832, 833, 834, 835, 837, 838, 839, 840, 841, 842, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 861, 863, 864, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "compris": [0, 175, 394, 745], "host": [0, 7, 9, 10, 12, 30, 39, 43, 51, 60, 149, 179, 180, 262, 372, 373, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 423, 439, 440, 441, 466, 557, 560], "typic": [0, 37, 43, 45, 46, 49, 50, 51, 56, 60, 106, 147, 149, 153, 154, 163, 168, 171, 172, 181, 182, 265, 372, 373, 418, 421, 463, 565, 571, 577, 578, 593, 758, 829, 857], "multi": [0, 45, 67, 85, 109, 110, 113, 140, 143, 151, 184, 259, 263, 265, 402, 448, 456, 761, 777, 787, 796, 876], "core": [0, 152, 184, 795, 796, 856, 876], "cpu": [0, 11, 12, 43, 60, 61, 151, 182, 184, 418, 560, 796, 876], "one": [0, 4, 7, 12, 19, 20, 22, 29, 36, 37, 39, 40, 41, 42, 43, 45, 48, 51, 54, 56, 58, 60, 61, 62, 63, 77, 82, 84, 86, 87, 114, 115, 117, 121, 122, 123, 124, 125, 126, 127, 128, 130, 141, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 164, 165, 167, 168, 169, 170, 173, 177, 178, 179, 180, 181, 182, 184, 192, 194, 195, 200, 201, 202, 203, 204, 205, 206, 211, 216, 220, 221, 222, 223, 225, 226, 227, 228, 229, 241, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 305, 307, 309, 339, 341, 343, 345, 390, 403, 409, 425, 466, 489, 494, 530, 536, 558, 562, 563, 564, 569, 571, 573, 575, 577, 578, 611, 622, 635, 636, 643, 649, 650, 679, 695, 708, 709, 715, 722, 723, 737, 744, 756, 757, 758, 766, 767, 774, 775, 776, 778, 779, 780, 792, 793, 798, 815, 817, 818, 820, 849, 852, 854, 855, 856, 863, 865, 874], "more": [0, 7, 12, 19, 20, 22, 25, 28, 39, 43, 47, 48, 51, 52, 54, 56, 58, 60, 62, 130, 141, 149, 150, 151, 152, 153, 154, 157, 160, 164, 170, 172, 179, 180, 183, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 261, 262, 263, 264, 265, 346, 481, 494, 569, 571, 577, 578, 584, 590, 754, 757, 779, 798, 799, 800, 829, 839, 849, 855, 872], "gpu": [0, 12, 43, 49, 61, 150, 151, 184, 349, 560, 876], "fpga": [0, 560, 876], "other": [0, 7, 9, 10, 12, 29, 30, 31, 37, 38, 39, 42, 43, 48, 50, 51, 53, 55, 58, 60, 62, 63, 149, 150, 151, 152, 153, 154, 157, 159, 160, 161, 163, 164, 165, 168, 170, 171, 172, 177, 178, 179, 181, 182, 223, 226, 229, 232, 233, 240, 257, 258, 259, 262, 263, 264, 288, 321, 345, 379, 398, 399, 400, 401, 402, 405, 406, 407, 410, 412, 414, 420, 438, 451, 489, 556, 558, 560, 562, 566, 569, 575, 578, 581, 588, 593, 596, 598, 601, 602, 605, 608, 609, 610, 611, 615, 617, 621, 622, 627, 629, 632, 635, 636, 641, 643, 646, 649, 650, 655, 657, 659, 663, 665, 667, 669, 672, 673, 675, 678, 679, 684, 686, 688, 689, 694, 695, 699, 701, 703, 704, 708, 709, 713, 715, 717, 718, 722, 723, 727, 729, 731, 732, 736, 737, 741, 743, 745, 746, 748, 755, 756, 757, 761, 766, 768, 771, 774, 779, 780, 791, 798, 800, 812, 829, 842, 850, 853, 855, 856, 859, 863, 864, 866, 868, 870], "processor": [0, 43, 157, 402, 799, 801, 811, 812], "serv": [0, 7, 11, 13, 43, 48, 178, 769, 792], "can": [0, 7, 9, 11, 19, 20, 22, 25, 29, 31, 34, 35, 37, 40, 42, 43, 45, 48, 49, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 67, 85, 86, 87, 100, 102, 104, 106, 109, 110, 113, 130, 141, 143, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 178, 179, 180, 182, 184, 202, 228, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 353, 357, 369, 377, 379, 383, 390, 403, 405, 409, 414, 417, 425, 426, 427, 428, 429, 430, 431, 432, 437, 439, 440, 441, 466, 490, 491, 493, 494, 503, 530, 541, 542, 543, 545, 550, 551, 553, 556, 562, 563, 564, 565, 566, 568, 570, 571, 572, 574, 575, 577, 578, 582, 584, 588, 589, 590, 591, 595, 598, 601, 602, 603, 608, 609, 610, 614, 615, 616, 621, 627, 628, 629, 631, 635, 641, 642, 643, 645, 649, 655, 656, 657, 658, 663, 665, 666, 669, 672, 673, 674, 678, 684, 685, 686, 687, 688, 692, 694, 699, 700, 701, 702, 703, 706, 708, 713, 714, 715, 716, 717, 720, 722, 727, 728, 729, 730, 731, 734, 736, 741, 742, 743, 744, 745, 748, 754, 755, 757, 758, 760, 761, 763, 766, 767, 768, 769, 770, 771, 772, 774, 776, 778, 779, 782, 783, 785, 788, 790, 792, 793, 796, 799, 811, 812, 815, 816, 822, 826, 829, 830, 831, 842, 849, 852, 853, 856, 857, 858, 859, 863, 864, 866, 868, 870, 872, 874, 876], "also": [0, 7, 12, 29, 56, 58, 62, 63, 102, 149, 151, 152, 153, 154, 157, 159, 160, 164, 168, 174, 176, 178, 179, 180, 182, 183, 184, 257, 258, 259, 262, 290, 323, 373, 375, 377, 405, 414, 421, 425, 426, 427, 433, 434, 435, 436, 562, 563, 564, 565, 569, 570, 571, 573, 574, 576, 577, 578, 581, 583, 584, 585, 586, 611, 695, 737, 755, 756, 757, 758, 761, 765, 767, 771, 773, 774, 776, 779, 780, 781, 790, 792, 796, 799, 807, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 834, 840, 841, 842, 843, 851, 852, 855, 856, 858, 862], "target": [0, 50, 87, 149, 152, 177, 262, 471, 492, 494, 495, 500, 517, 527, 531, 544, 549, 554], "each": [0, 7, 12, 19, 20, 22, 25, 27, 36, 39, 42, 43, 47, 48, 50, 51, 52, 55, 56, 58, 60, 62, 63, 78, 79, 80, 82, 121, 122, 123, 124, 125, 126, 127, 130, 140, 149, 151, 152, 155, 157, 161, 165, 166, 169, 170, 171, 173, 177, 180, 182, 184, 188, 195, 202, 206, 223, 226, 229, 232, 240, 247, 255, 259, 260, 265, 269, 270, 277, 278, 281, 282, 285, 286, 300, 301, 312, 313, 318, 319, 334, 335, 345, 348, 353, 369, 375, 377, 383, 412, 417, 424, 425, 437, 438, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 461, 462, 464, 465, 485, 494, 506, 507, 508, 509, 510, 518, 523, 524, 525, 526, 529, 532, 533, 534, 536, 537, 538, 555, 558, 562, 563, 564, 565, 569, 570, 571, 572, 573, 577, 582, 583, 591, 601, 609, 610, 611, 621, 622, 627, 635, 636, 641, 649, 650, 655, 663, 672, 678, 679, 684, 694, 695, 699, 708, 709, 713, 722, 723, 727, 736, 737, 741, 744, 745, 748, 757, 761, 763, 765, 766, 768, 771, 774, 775, 778, 790, 791, 798, 812, 852, 854, 855, 856, 857, 862, 863, 865, 866, 868, 876], "ha": [0, 14, 25, 27, 37, 40, 43, 46, 48, 53, 54, 56, 58, 60, 62, 63, 100, 101, 102, 149, 150, 151, 154, 155, 179, 180, 184, 202, 220, 221, 223, 226, 228, 229, 262, 265, 274, 276, 277, 294, 315, 316, 317, 320, 327, 352, 355, 356, 365, 366, 377, 379, 401, 402, 407, 425, 439, 440, 441, 451, 466, 471, 490, 491, 493, 509, 511, 518, 527, 531, 535, 536, 540, 541, 542, 543, 545, 549, 550, 551, 553, 563, 564, 565, 567, 569, 570, 577, 578, 591, 709, 723, 744, 756, 757, 758, 759, 760, 761, 762, 763, 765, 766, 767, 771, 772, 774, 776, 779, 780, 782, 784, 785, 788, 791, 793, 798, 799, 801, 803, 815, 829, 830, 836, 852, 854, 856, 858, 861, 863, 864], "an": [0, 5, 7, 8, 9, 10, 12, 13, 14, 19, 20, 22, 25, 27, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 354, 372, 396, 414, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 444, 445, 446, 447, 448, 450, 458, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 562, 565, 567, 569, 571, 573, 574, 575, 577, 578, 579, 581, 582, 583, 584, 585, 586, 588, 589, 590, 591, 593, 595, 596, 597, 598, 603, 604, 605, 606, 608, 609, 610, 616, 617, 618, 620, 621, 625, 627, 629, 631, 632, 633, 634, 635, 639, 641, 643, 645, 646, 647, 648, 649, 653, 655, 657, 658, 659, 660, 666, 667, 668, 669, 674, 675, 676, 677, 678, 682, 684, 686, 687, 688, 689, 690, 693, 694, 695, 699, 701, 702, 703, 704, 705, 707, 708, 709, 713, 715, 716, 717, 718, 719, 721, 722, 723, 727, 729, 730, 731, 732, 733, 735, 736, 737, 741, 743, 744, 745, 746, 747, 749, 750, 756, 757, 758, 759, 760, 761, 762, 763, 767, 768, 769, 771, 772, 774, 775, 776, 777, 779, 782, 783, 784, 785, 787, 788, 790, 791, 792, 793, 796, 797, 798, 799, 801, 803, 805, 810, 811, 812, 813, 815, 817, 818, 822, 826, 829, 830, 831, 832, 833, 836, 841, 842, 849, 851, 852, 853, 854, 855, 856, 857, 858, 859, 861, 862, 863, 864, 865, 866, 868, 871, 873, 874, 875, 876, 877], "associ": [0, 7, 12, 23, 25, 27, 37, 60, 61, 62, 155, 156, 158, 166, 167, 168, 171, 172, 173, 177, 179, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 577, 578, 593, 594, 601, 603, 605, 616, 625, 631, 639, 653, 672, 682, 687, 697, 702, 711, 725, 739, 746, 768, 769, 848, 854, 856, 859, 861, 863, 865], "command": [0, 151, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 589, 798, 849], "queue": [0, 10, 12, 34, 35, 37, 39, 41, 42, 49, 51, 52, 61, 150, 151, 179, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 372, 373, 379, 396, 398, 399, 400, 401, 402, 405, 406, 407, 410, 412, 413, 414, 418, 420, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 457, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 559, 658, 758, 766, 767, 775, 778, 779, 848], "applic": [0, 1, 4, 29, 31, 36, 40, 43, 45, 56, 150, 152, 157, 177, 180, 182, 184, 259, 262, 263, 375, 401, 410, 556, 560, 573, 578, 591, 768, 796, 815, 852, 853, 855, 856, 858, 864, 873, 875, 876], "emploi": [0, 58, 182, 796], "run": [0, 19, 20, 22, 25, 43, 48, 49, 58, 70, 149, 154, 157, 160, 164, 175, 179, 487, 512, 539, 565, 569, 571, 573, 577, 578, 591, 757, 765, 778, 798, 811, 812, 823, 826, 829, 830, 850, 852, 853, 854, 858, 859, 873], "follow": [0, 4, 7, 8, 9, 11, 12, 13, 16, 19, 22, 25, 28, 29, 30, 31, 37, 39, 40, 41, 42, 45, 46, 48, 49, 51, 53, 55, 56, 58, 59, 60, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 350, 351, 352, 355, 356, 357, 360, 361, 366, 367, 368, 370, 371, 379, 380, 381, 382, 384, 385, 387, 388, 389, 392, 393, 394, 395, 397, 401, 402, 404, 407, 408, 409, 411, 412, 415, 416, 418, 419, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 562, 566, 569, 570, 571, 572, 573, 575, 577, 578, 588, 593, 597, 598, 606, 608, 611, 618, 620, 629, 633, 634, 635, 643, 647, 648, 649, 657, 660, 668, 669, 676, 677, 686, 687, 688, 690, 693, 695, 701, 702, 703, 705, 707, 708, 709, 715, 716, 717, 719, 721, 722, 723, 729, 730, 731, 733, 735, 737, 743, 744, 747, 749, 764, 765, 766, 780, 788, 793, 794, 798, 811, 812, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 849, 855, 857, 859, 872], "standard": [0, 1, 8, 9, 29, 30, 43, 49, 53, 55, 62, 63, 65, 68, 75, 77, 81, 88, 91, 92, 94, 96, 102, 103, 106, 107, 118, 131, 133, 135, 144, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 346, 349, 357, 361, 370, 371, 376, 389, 395, 397, 415, 416, 481, 518, 566, 568, 570, 572, 577, 578, 579, 588, 595, 596, 597, 598, 601, 603, 605, 606, 608, 610, 616, 617, 618, 620, 627, 631, 632, 633, 634, 641, 645, 646, 647, 648, 655, 658, 659, 660, 663, 666, 667, 668, 669, 672, 674, 675, 676, 677, 684, 687, 688, 689, 690, 691, 693, 699, 702, 703, 704, 705, 707, 713, 716, 717, 718, 719, 721, 727, 730, 731, 732, 733, 735, 741, 744, 745, 746, 747, 749, 758, 760, 761, 763, 767, 768, 771, 772, 774, 776, 779, 782, 784, 785, 790, 792, 793, 794, 796, 797, 798, 803, 805, 810, 815, 820, 822, 856, 858, 859, 863, 865, 875, 876], "c": [0, 1, 7, 9, 19, 20, 25, 28, 29, 30, 31, 43, 44, 53, 58, 62, 63, 68, 70, 71, 73, 77, 100, 101, 107, 135, 149, 150, 152, 154, 156, 157, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 183, 196, 201, 202, 203, 204, 211, 215, 216, 222, 223, 225, 226, 230, 231, 240, 241, 245, 246, 247, 252, 254, 265, 305, 306, 307, 308, 309, 310, 339, 340, 341, 342, 343, 344, 346, 366, 376, 377, 379, 382, 390, 394, 403, 404, 405, 407, 409, 412, 414, 439, 444, 445, 449, 450, 461, 462, 559, 562, 566, 568, 570, 572, 574, 577, 578, 579, 581, 582, 583, 584, 588, 595, 596, 597, 598, 601, 603, 605, 606, 608, 610, 616, 617, 618, 619, 620, 627, 630, 631, 632, 633, 634, 641, 644, 645, 646, 647, 648, 655, 658, 659, 660, 663, 666, 667, 668, 669, 672, 674, 675, 676, 677, 684, 687, 688, 689, 690, 691, 693, 699, 702, 703, 704, 705, 707, 713, 716, 717, 718, 719, 721, 727, 730, 731, 732, 733, 735, 741, 744, 745, 746, 747, 749, 758, 760, 761, 763, 765, 767, 768, 771, 772, 774, 776, 779, 782, 784, 785, 790, 792, 793, 794, 795, 796, 797, 799, 801, 803, 805, 807, 810, 813, 814, 815, 817, 820, 822, 841, 849, 856, 858, 859, 863, 865, 871, 875], "execut": [0, 4, 7, 10, 11, 12, 30, 39, 43, 48, 51, 54, 55, 56, 58, 60, 62, 63, 64, 116, 148, 149, 150, 151, 152, 153, 160, 174, 175, 176, 177, 178, 181, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 265, 266, 268, 274, 276, 280, 284, 288, 290, 292, 294, 297, 299, 303, 305, 307, 309, 311, 315, 317, 321, 323, 325, 327, 329, 331, 333, 337, 339, 341, 343, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 560, 566, 569, 570, 571, 572, 573, 575, 577, 578, 579, 581, 583, 584, 598, 602, 608, 609, 610, 613, 615, 621, 629, 635, 643, 649, 657, 665, 669, 673, 678, 686, 688, 694, 701, 703, 708, 715, 717, 722, 729, 731, 736, 743, 755, 757, 758, 763, 765, 766, 767, 768, 769, 772, 779, 780, 783, 788, 795, 796, 811, 812, 829, 843, 850, 852, 853, 854, 855, 856, 857, 858, 859, 870], "semant": [0, 37, 53, 60, 62, 106, 114, 115, 152, 153, 155, 164, 166, 178, 179, 180, 181, 568, 596, 601, 605, 610, 617, 627, 632, 641, 646, 655, 659, 663, 667, 672, 675, 684, 689, 699, 704, 713, 718, 727, 732, 741, 745, 746, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 832, 833, 834, 835, 836, 837, 838, 839, 840, 843, 861], "To": [0, 2, 3, 22, 27, 31, 40, 48, 50, 51, 56, 61, 81, 130, 149, 151, 157, 163, 168, 169, 184, 297, 299, 300, 331, 333, 334, 413, 494, 569, 573, 588, 757, 798, 856, 864], "function": [0, 7, 9, 11, 12, 13, 16, 19, 20, 22, 25, 29, 30, 31, 34, 35, 37, 38, 39, 41, 42, 45, 46, 50, 51, 53, 56, 60, 61, 75, 91, 102, 104, 111, 121, 122, 123, 124, 125, 126, 127, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 193, 259, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 351, 352, 353, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 403, 404, 407, 408, 409, 411, 413, 415, 416, 417, 418, 419, 421, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 560, 566, 569, 570, 571, 572, 577, 578, 579, 598, 608, 615, 617, 627, 629, 632, 641, 643, 646, 655, 657, 660, 663, 665, 669, 675, 684, 686, 688, 689, 690, 697, 699, 701, 703, 704, 705, 711, 713, 715, 717, 718, 719, 725, 727, 729, 731, 732, 733, 739, 741, 743, 745, 748, 755, 764, 765, 766, 773, 775, 777, 778, 780, 781, 787, 788, 798, 802, 815, 820, 821, 830, 831, 832, 844, 845, 848, 849, 853, 858, 865, 868, 870, 872, 873], "object": [0, 7, 8, 10, 12, 13, 14, 19, 34, 35, 37, 39, 41, 42, 43, 45, 48, 51, 56, 57, 59, 61, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 179, 180, 181, 184, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 351, 352, 353, 355, 356, 357, 358, 360, 361, 367, 368, 369, 370, 371, 372, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 461, 462, 463, 464, 465, 466, 494, 562, 566, 567, 570, 571, 572, 573, 574, 576, 577, 581, 595, 603, 605, 611, 613, 616, 617, 622, 625, 626, 631, 632, 636, 639, 640, 645, 646, 650, 653, 654, 658, 666, 674, 675, 679, 682, 683, 687, 689, 695, 698, 702, 704, 709, 712, 716, 718, 723, 726, 730, 732, 737, 740, 744, 750, 753, 758, 759, 762, 763, 764, 765, 767, 772, 774, 775, 776, 778, 779, 782, 790, 791, 792, 793, 798, 799, 801, 803, 804, 815, 817, 820, 830, 831, 832, 833, 834, 835, 837, 838, 839, 840, 841, 850, 852, 853, 854, 856, 857, 858, 859, 861, 863, 864, 865, 866, 871, 872, 874], "submit": [0, 37, 372, 373, 379, 398, 399, 400, 401, 402, 405, 406, 407, 410, 412, 414, 420, 758, 833, 836, 852, 853, 856], "group": [0, 2, 3, 7, 12, 15, 22, 28, 30, 37, 43, 54, 55, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 183, 188, 193, 195, 196, 202, 206, 223, 226, 229, 247, 255, 269, 270, 277, 278, 281, 282, 285, 286, 296, 300, 301, 312, 313, 318, 319, 334, 335, 348, 375, 394, 556, 558, 709, 723, 848, 854, 858, 859, 860], "contain": [0, 5, 7, 8, 22, 29, 31, 34, 35, 37, 38, 40, 42, 43, 52, 62, 68, 69, 78, 79, 80, 81, 82, 83, 84, 98, 99, 107, 108, 117, 121, 122, 123, 124, 125, 126, 127, 142, 149, 150, 152, 154, 157, 159, 160, 165, 179, 181, 184, 188, 195, 196, 202, 206, 220, 221, 223, 226, 229, 232, 233, 247, 255, 257, 258, 259, 260, 262, 264, 265, 266, 268, 269, 272, 274, 276, 277, 281, 284, 285, 288, 290, 292, 294, 296, 300, 305, 307, 309, 311, 312, 315, 317, 318, 321, 323, 325, 327, 329, 334, 339, 341, 343, 345, 348, 373, 375, 390, 394, 403, 409, 412, 421, 425, 426, 427, 433, 434, 437, 439, 440, 441, 448, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558, 562, 563, 564, 565, 570, 578, 579, 590, 593, 594, 595, 598, 599, 601, 602, 603, 607, 608, 610, 611, 613, 614, 615, 616, 619, 620, 622, 626, 627, 628, 629, 631, 634, 636, 640, 642, 643, 645, 648, 650, 654, 656, 657, 658, 661, 663, 664, 665, 666, 669, 670, 672, 673, 674, 677, 679, 683, 685, 686, 687, 688, 691, 692, 693, 695, 698, 699, 700, 701, 702, 703, 706, 707, 709, 712, 714, 715, 716, 717, 720, 721, 723, 726, 728, 729, 730, 731, 734, 735, 737, 740, 742, 743, 744, 745, 748, 750, 753, 755, 771, 774, 775, 778, 788, 793, 795, 831, 846, 847, 848, 855, 856, 858, 862, 864, 865, 867, 869, 871, 872, 877], "": [0, 7, 8, 10, 12, 13, 14, 22, 37, 40, 43, 45, 47, 48, 51, 52, 59, 60, 61, 62, 63, 100, 101, 107, 108, 141, 147, 149, 150, 152, 155, 157, 158, 160, 161, 164, 167, 168, 177, 180, 182, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 354, 361, 373, 376, 390, 394, 397, 403, 405, 409, 413, 414, 420, 421, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 565, 570, 571, 572, 573, 577, 578, 582, 593, 758, 763, 765, 767, 775, 776, 777, 778, 787, 790, 811, 812, 840, 852, 854, 856, 857, 876], "definit": [0, 3, 31, 32, 40, 42, 43, 44, 46, 48, 50, 52, 60, 62, 64, 149, 160, 170, 171, 179, 180, 262, 290, 296, 311, 312, 315, 317, 318, 323, 375, 423, 424, 438, 439, 440, 441, 456, 487, 494, 512, 539, 546, 578], "togeth": [0, 52, 64, 153, 170], "variabl": [0, 37, 43, 48, 63, 65, 68, 75, 77, 81, 88, 91, 92, 94, 96, 102, 103, 106, 107, 118, 131, 133, 135, 144, 152, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 180, 345, 373, 421, 423, 494, 758, 763, 767, 772, 779, 790, 798, 815, 852], "refer": [0, 28, 34, 35, 37, 41, 42, 43, 48, 50, 51, 52, 55, 56, 62, 149, 152, 154, 158, 160, 168, 171, 172, 175, 179, 180, 184, 261, 262, 263, 346, 373, 421, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 456, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 570, 578, 590, 593, 595, 596, 603, 604, 605, 616, 617, 619, 629, 631, 632, 643, 645, 646, 657, 658, 659, 666, 667, 674, 675, 686, 687, 689, 690, 691, 701, 702, 704, 705, 715, 716, 718, 719, 729, 730, 732, 733, 743, 744, 746, 748, 758, 761, 763, 765, 767, 771, 772, 773, 774, 776, 779, 781, 791, 798, 815, 820, 830, 831, 849, 855, 856, 858, 861, 863, 864, 866, 868, 871], "kernel": [0, 43, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 180, 184, 372, 373, 379, 398, 399, 400, 401, 402, 405, 406, 407, 410, 412, 414, 420, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 466, 856], "simpli": [0, 60, 152, 156, 173], "through": [0, 12, 16, 22, 40, 45, 56, 58, 149, 152, 288, 290, 321, 323, 349, 439, 440, 441, 565, 770, 774, 776, 778, 784, 790, 791, 796, 856, 876], "memori": [0, 7, 9, 12, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 47, 54, 55, 56, 57, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 179, 180, 186, 223, 225, 226, 228, 229, 259, 261, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 372, 418, 426, 427, 428, 429, 433, 434, 435, 436, 439, 440, 463, 466, 556, 557, 560, 596, 597, 605, 617, 632, 646, 659, 667, 668, 675, 689, 704, 718, 732, 744, 746, 747, 754, 755, 796, 798, 799, 800, 801, 802, 803, 811, 812, 844, 847], "defin": [0, 5, 7, 8, 9, 11, 12, 13, 15, 16, 19, 22, 25, 27, 29, 30, 31, 36, 37, 39, 40, 41, 42, 43, 48, 50, 51, 52, 58, 59, 60, 62, 63, 77, 81, 84, 86, 87, 95, 100, 102, 106, 117, 148, 149, 150, 151, 152, 154, 156, 157, 160, 161, 162, 163, 165, 166, 169, 170, 171, 172, 174, 176, 177, 178, 179, 181, 182, 188, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 225, 226, 227, 228, 229, 230, 231, 234, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 268, 269, 272, 292, 299, 300, 301, 302, 305, 306, 307, 308, 325, 333, 334, 335, 336, 339, 340, 341, 342, 343, 344, 351, 352, 353, 355, 356, 357, 360, 361, 367, 369, 370, 373, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 397, 402, 403, 404, 405, 406, 408, 409, 411, 412, 414, 415, 416, 417, 419, 421, 423, 424, 425, 426, 427, 439, 440, 441, 448, 467, 471, 473, 476, 483, 484, 487, 490, 494, 495, 496, 497, 498, 499, 503, 511, 512, 518, 527, 539, 540, 541, 546, 549, 550, 560, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 589, 590, 591, 594, 595, 597, 603, 606, 616, 618, 631, 633, 645, 647, 658, 660, 666, 668, 674, 676, 687, 689, 690, 702, 704, 705, 716, 718, 719, 730, 732, 733, 744, 747, 756, 758, 759, 760, 761, 762, 763, 764, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 781, 782, 783, 784, 785, 787, 788, 790, 791, 792, 793, 795, 796, 798, 799, 800, 801, 802, 803, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 829, 830, 841, 842, 852, 853, 854, 855, 856, 857, 858, 859, 863, 864, 871, 874, 876], "sever": [0, 36, 37, 40, 45, 47, 157, 158, 160, 184, 189, 262, 263, 265, 296, 345, 353, 383, 560, 572, 792, 797, 849, 852], "mechan": [0, 9, 10, 12, 30, 37, 48, 56, 62, 151, 152, 153, 180, 184], "share": [0, 34, 35, 37, 40, 42, 50, 149, 170, 179, 180, 223, 226, 229, 260, 262, 463, 778, 799, 800, 807, 810, 814, 856, 858], "depend": [0, 7, 12, 37, 41, 43, 45, 46, 48, 50, 56, 58, 60, 62, 74, 130, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 162, 170, 177, 178, 180, 181, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 305, 307, 309, 339, 341, 343, 348, 391, 430, 431, 432, 439, 440, 441, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 565, 573, 578, 595, 603, 616, 631, 645, 658, 666, 674, 687, 702, 716, 730, 744, 757, 758, 763, 766, 767, 779, 780, 799, 801, 803, 815, 818, 829, 850, 874], "descript": [0, 9, 30, 31, 36, 37, 39, 40, 42, 46, 59, 60, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 130, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 145, 149, 150, 151, 152, 154, 155, 157, 158, 161, 163, 164, 167, 168, 170, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558, 559, 798, 841, 872], "buffer": [0, 7, 12, 60, 62, 149, 151, 152, 160, 175, 176, 179, 180, 259, 260, 261, 262, 273, 275, 295, 328, 396, 430, 431, 432, 439, 440, 441, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 760, 771, 772, 774, 775, 782, 784, 785, 788, 793, 798], "creat": [0, 7, 8, 10, 12, 13, 19, 20, 22, 25, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 49, 56, 58, 60, 61, 63, 149, 150, 151, 152, 153, 154, 157, 160, 161, 164, 165, 168, 169, 170, 179, 184, 261, 262, 263, 354, 372, 377, 396, 413, 418, 433, 434, 435, 436, 451, 460, 463, 466, 494, 556, 559, 568, 569, 582, 593, 756, 757, 761, 765, 772, 774, 777, 778, 779, 787, 788, 826, 829, 850, 852, 854, 855, 856, 857, 859, 861, 862, 863, 864, 865, 866, 871, 875, 876], "pass": [0, 7, 12, 13, 16, 39, 48, 51, 52, 56, 58, 60, 61, 62, 63, 100, 141, 149, 150, 151, 152, 153, 154, 157, 159, 160, 162, 163, 164, 165, 169, 170, 178, 179, 180, 184, 257, 258, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 466, 494, 562, 565, 572, 573, 576, 578, 581, 757, 758, 763, 765, 767, 772, 774, 776, 778, 779, 784, 785, 788, 790, 791, 793, 815, 833, 834, 835, 837, 838, 839, 840, 853, 854, 856], "arrai": [0, 7, 29, 34, 35, 40, 42, 43, 44, 49, 56, 58, 149, 152, 157, 158, 165, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 256, 266, 268, 269, 270, 272, 274, 276, 277, 278, 280, 281, 282, 284, 285, 286, 288, 290, 292, 294, 296, 297, 300, 301, 311, 312, 313, 314, 317, 318, 319, 321, 323, 325, 327, 329, 330, 331, 334, 335, 343, 345, 352, 356, 372, 380, 381, 382, 385, 387, 388, 392, 394, 395, 397, 401, 402, 404, 408, 409, 410, 411, 412, 415, 416, 419, 425, 426, 427, 433, 434, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 494, 556, 562, 577, 747, 815, 826, 876], "accessor": [0, 43, 44, 180, 184, 603, 609, 610], "identifi": [0, 5, 8, 13, 25, 27, 31, 62, 149, 177, 263, 590, 591, 771, 792, 795, 846, 847, 856, 864], "access": [0, 34, 35, 36, 37, 38, 40, 43, 48, 49, 51, 54, 60, 178, 179, 181, 184, 257, 258, 259, 260, 262, 263, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 440, 441, 562, 563, 564, 565, 579, 609, 610, 616, 687, 744, 745, 749, 782, 799, 816, 864, 867], "thi": [0, 3, 5, 9, 12, 15, 19, 20, 22, 25, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 49, 51, 52, 53, 54, 56, 58, 60, 61, 63, 73, 74, 81, 84, 100, 101, 117, 141, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 180, 183, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 353, 354, 362, 363, 364, 365, 366, 369, 375, 379, 383, 386, 394, 396, 398, 399, 400, 401, 402, 405, 406, 407, 410, 412, 414, 420, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558, 562, 565, 566, 570, 571, 572, 573, 574, 577, 578, 583, 587, 588, 589, 590, 591, 593, 595, 596, 597, 598, 601, 602, 604, 605, 608, 609, 610, 615, 617, 621, 625, 627, 629, 631, 632, 635, 639, 641, 643, 645, 646, 649, 653, 655, 657, 659, 663, 665, 666, 667, 668, 669, 672, 673, 675, 678, 682, 684, 686, 687, 688, 689, 694, 697, 699, 701, 702, 703, 704, 708, 711, 713, 715, 716, 717, 718, 722, 725, 727, 729, 730, 731, 732, 736, 739, 741, 743, 745, 746, 747, 748, 755, 756, 757, 758, 761, 762, 763, 765, 766, 767, 768, 769, 772, 776, 778, 779, 780, 782, 788, 791, 793, 794, 796, 797, 798, 799, 800, 802, 815, 822, 823, 826, 829, 832, 847, 849, 850, 852, 853, 854, 855, 856, 857, 858, 859, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 872, 874, 876, 877], "call": [0, 2, 3, 7, 9, 12, 15, 19, 22, 30, 31, 37, 39, 41, 45, 48, 51, 53, 60, 63, 102, 149, 151, 152, 157, 161, 171, 181, 184, 188, 195, 196, 201, 202, 203, 204, 206, 211, 241, 247, 255, 261, 262, 264, 265, 266, 267, 271, 273, 275, 279, 280, 281, 283, 284, 285, 287, 289, 291, 293, 295, 298, 300, 302, 303, 304, 306, 308, 309, 310, 314, 315, 316, 317, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 337, 338, 340, 342, 343, 344, 347, 348, 352, 354, 356, 372, 373, 375, 379, 398, 399, 400, 401, 402, 405, 406, 407, 410, 412, 413, 414, 418, 420, 423, 426, 427, 428, 429, 439, 440, 441, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558, 565, 566, 567, 568, 569, 579, 588, 596, 604, 605, 617, 630, 632, 644, 646, 659, 667, 675, 689, 704, 718, 732, 746, 755, 756, 758, 761, 763, 765, 767, 768, 769, 772, 774, 776, 779, 782, 783, 788, 792, 793, 798, 799, 801, 818, 829, 837, 839, 850, 853, 854, 855, 856, 857, 858, 859, 863, 864, 865, 866, 869, 876], "runtim": [0, 12, 30, 42, 56, 70, 100, 154, 162, 184, 202, 262, 589, 591, 758, 792], "ensur": [0, 60, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 266, 268, 269, 272, 274, 276, 277, 280, 281, 284, 285, 288, 290, 292, 294, 297, 299, 300, 303, 305, 307, 309, 311, 312, 315, 317, 318, 321, 323, 325, 327, 329, 331, 333, 334, 337, 339, 341, 343, 369, 391, 417, 437, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 577, 800, 876], "avail": [0, 19, 20, 22, 25, 28, 29, 34, 35, 37, 38, 40, 41, 42, 43, 47, 49, 121, 122, 123, 124, 125, 126, 127, 141, 157, 164, 174, 181, 184, 252, 254, 263, 264, 265, 396, 413, 425, 439, 440, 441, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558, 559, 568, 573, 590, 593, 601, 611, 695, 737, 772, 774, 775, 780, 784, 790, 795, 801, 803, 815, 850], "all": [0, 7, 8, 9, 11, 12, 13, 19, 20, 22, 25, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 51, 52, 54, 55, 56, 58, 60, 61, 62, 63, 74, 77, 78, 79, 80, 82, 106, 121, 122, 123, 124, 125, 126, 127, 130, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 166, 169, 170, 172, 173, 174, 176, 177, 180, 181, 182, 184, 185, 188, 195, 196, 202, 206, 220, 221, 223, 226, 229, 247, 252, 254, 255, 257, 258, 259, 262, 263, 264, 269, 270, 274, 275, 277, 278, 281, 282, 285, 286, 288, 290, 296, 297, 300, 301, 312, 313, 318, 319, 321, 323, 331, 334, 335, 345, 373, 375, 396, 413, 421, 437, 439, 440, 441, 448, 451, 466, 471, 494, 527, 531, 534, 540, 549, 556, 557, 558, 562, 563, 564, 570, 571, 572, 573, 575, 577, 588, 590, 591, 596, 598, 599, 601, 602, 605, 608, 609, 610, 613, 615, 617, 621, 626, 627, 629, 632, 635, 640, 641, 643, 646, 649, 654, 655, 657, 659, 661, 663, 665, 667, 669, 670, 672, 673, 675, 678, 683, 684, 686, 688, 689, 694, 698, 699, 701, 703, 704, 708, 712, 713, 715, 717, 718, 722, 726, 727, 729, 731, 732, 736, 740, 741, 743, 744, 745, 746, 748, 753, 755, 757, 759, 765, 766, 769, 770, 771, 772, 774, 775, 776, 778, 782, 784, 786, 788, 789, 792, 793, 798, 800, 805, 807, 810, 812, 813, 814, 836, 842, 850, 852, 854, 855, 856, 857, 859, 860, 863, 864, 865, 866, 867, 868, 870, 871, 876, 877], "unifi": [0, 40, 179, 463], "address": [0, 10, 12, 58, 184, 223, 226, 229, 259, 262, 426, 427, 428, 429, 439, 440, 441, 770], "guarante": [0, 141, 142, 149, 184, 263, 375, 437, 518, 571, 579, 584, 744, 796, 798, 805, 810, 850, 851, 853, 855, 856, 857, 864], "space": [0, 25, 27, 43, 58, 60, 151, 152, 264, 299, 300, 333, 334, 346, 423, 562, 563, 564, 569, 571, 577], "pointer": [0, 13, 34, 35, 36, 37, 41, 42, 49, 60, 149, 152, 179, 180, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 265, 266, 268, 269, 274, 276, 277, 280, 284, 285, 288, 290, 292, 294, 297, 299, 303, 305, 307, 309, 311, 312, 315, 317, 318, 321, 323, 325, 327, 329, 331, 333, 337, 339, 341, 343, 391, 418, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 440, 441, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 570, 574, 577, 578, 595, 603, 604, 616, 629, 631, 643, 645, 657, 666, 674, 686, 687, 701, 702, 715, 716, 729, 730, 743, 744, 758, 767, 770, 774, 778, 779, 790, 799, 800, 801, 802, 803, 816, 822, 864, 871], "valu": [0, 2, 3, 7, 8, 10, 13, 19, 20, 22, 25, 27, 28, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 51, 53, 54, 55, 56, 58, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 145, 149, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 351, 352, 353, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 375, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 419, 420, 423, 425, 426, 427, 430, 431, 432, 433, 434, 437, 438, 439, 440, 441, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 562, 563, 564, 565, 569, 571, 572, 573, 574, 575, 576, 577, 578, 588, 589, 591, 593, 595, 596, 601, 602, 603, 605, 607, 608, 609, 615, 616, 617, 629, 631, 632, 643, 645, 646, 657, 658, 659, 663, 665, 666, 667, 672, 673, 674, 675, 686, 687, 689, 692, 701, 702, 704, 706, 715, 716, 718, 720, 729, 730, 732, 734, 743, 744, 745, 746, 755, 758, 763, 767, 768, 771, 774, 776, 778, 779, 780, 782, 788, 792, 793, 798, 799, 815, 816, 820, 822, 824, 825, 827, 828, 829, 833, 834, 835, 837, 852, 856, 858, 863, 864, 866, 869], "alwai": [0, 40, 55, 58, 60, 63, 149, 152, 154, 160, 161, 162, 164, 168, 170, 184, 263, 264, 538, 565, 569, 641, 655, 713, 727, 757, 759, 842, 855, 866], "same": [0, 7, 12, 36, 37, 39, 41, 42, 43, 45, 50, 51, 54, 55, 58, 60, 62, 63, 71, 73, 77, 78, 81, 100, 101, 141, 146, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 177, 178, 179, 180, 181, 182, 184, 220, 221, 223, 225, 226, 229, 259, 260, 262, 263, 264, 274, 303, 304, 309, 310, 337, 338, 343, 344, 345, 372, 377, 433, 434, 435, 436, 437, 438, 439, 440, 441, 494, 509, 534, 535, 536, 556, 562, 563, 564, 565, 566, 568, 569, 570, 574, 577, 578, 579, 581, 592, 593, 595, 599, 603, 616, 622, 631, 636, 645, 650, 658, 661, 666, 670, 674, 679, 687, 702, 709, 716, 723, 730, 744, 750, 758, 759, 760, 763, 767, 772, 774, 776, 779, 784, 785, 788, 790, 791, 792, 796, 798, 799, 801, 803, 821, 824, 825, 827, 828, 833, 834, 835, 836, 837, 838, 839, 840, 842, 853, 855, 856, 858, 859, 863, 864, 865, 866, 871, 872, 874, 876], "locat": [0, 31, 62, 159, 168, 223, 226, 229, 259, 556, 799], "enabl": [0, 4, 7, 13, 38, 40, 43, 45, 55, 56, 60, 149, 151, 157, 158, 164, 181, 184, 257, 258, 262, 265, 466, 494, 559, 562, 576, 578, 581, 584, 587, 589, 758, 772, 796, 798, 815, 848, 857, 867, 876], "without": [0, 12, 37, 40, 42, 43, 56, 60, 151, 152, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 177, 179, 180, 184, 262, 394, 396, 438, 575, 578, 593, 754, 761, 768, 811, 812, 841, 842, 849, 856, 877], "There": [0, 59, 149, 152, 155, 157, 158, 159, 161, 166, 167, 168, 169, 171, 172, 173, 184, 223, 226, 229, 252, 254, 425, 466, 571, 757, 766, 829, 841, 850, 852, 853, 856], "support": [0, 4, 7, 8, 9, 11, 12, 29, 30, 34, 35, 36, 38, 40, 43, 45, 48, 50, 55, 58, 60, 63, 148, 149, 150, 151, 152, 159, 160, 174, 175, 177, 178, 181, 183, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 348, 351, 352, 353, 355, 356, 357, 360, 361, 367, 368, 369, 370, 371, 375, 376, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 403, 404, 408, 409, 411, 413, 415, 416, 417, 419, 423, 424, 425, 426, 427, 428, 429, 433, 434, 435, 436, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 584, 585, 588, 591, 593, 594, 597, 603, 606, 616, 618, 631, 633, 645, 647, 660, 668, 674, 676, 687, 690, 702, 705, 716, 719, 730, 733, 747, 757, 771, 774, 775, 778, 782, 796, 798, 811, 812, 856, 867, 871], "featur": [0, 19, 20, 22, 25, 27, 38, 40, 41, 43, 46, 153, 162, 377, 396, 560, 587, 590, 744, 757, 848], "underli": [0, 12, 14, 40, 45, 48, 60, 61, 63, 150, 348, 353, 354, 375, 383, 426, 427, 428, 429, 433, 434, 435, 436, 466, 800, 864], "schedul": [0, 184, 584, 768, 846, 847, 848, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861], "when": [0, 7, 9, 11, 14, 29, 30, 34, 35, 36, 37, 40, 41, 42, 43, 45, 47, 53, 56, 58, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 180, 182, 259, 261, 262, 263, 303, 309, 337, 343, 345, 351, 352, 355, 356, 357, 360, 361, 367, 369, 370, 371, 375, 380, 381, 382, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 402, 403, 404, 405, 408, 409, 411, 414, 415, 416, 419, 420, 433, 434, 435, 436, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 466, 471, 492, 495, 500, 527, 531, 544, 549, 557, 562, 570, 571, 573, 576, 577, 578, 581, 582, 583, 588, 589, 593, 744, 756, 758, 763, 765, 767, 768, 772, 775, 776, 779, 780, 788, 791, 799, 811, 812, 826, 829, 837, 842, 850, 852, 854, 855, 856, 857, 864, 876], "readi": [0, 37, 63, 263, 264, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555], "If": [0, 7, 9, 12, 22, 29, 30, 34, 35, 37, 42, 46, 48, 51, 60, 62, 63, 69, 72, 76, 80, 82, 83, 86, 87, 89, 119, 121, 122, 123, 124, 125, 126, 127, 130, 132, 138, 145, 149, 152, 153, 154, 159, 162, 168, 170, 177, 178, 179, 180, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 266, 268, 269, 272, 274, 275, 276, 277, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 339, 340, 341, 342, 343, 344, 345, 352, 356, 376, 405, 410, 414, 420, 430, 431, 432, 439, 440, 441, 448, 451, 493, 494, 517, 518, 524, 525, 531, 536, 545, 546, 553, 554, 562, 569, 570, 571, 573, 574, 577, 578, 579, 582, 588, 593, 596, 597, 601, 604, 605, 606, 607, 608, 609, 610, 617, 618, 619, 627, 629, 632, 633, 635, 641, 643, 646, 647, 649, 655, 657, 659, 660, 663, 667, 668, 672, 675, 676, 684, 686, 687, 689, 690, 691, 692, 699, 701, 702, 704, 705, 706, 708, 713, 715, 716, 718, 719, 720, 722, 727, 729, 730, 732, 733, 734, 741, 743, 744, 746, 747, 755, 756, 757, 758, 763, 766, 767, 769, 772, 774, 775, 776, 779, 782, 784, 788, 790, 792, 793, 795, 800, 801, 829, 832, 841, 849, 852, 854, 855, 856, 857, 858, 863, 864, 865, 868], "method": [0, 12, 13, 29, 30, 31, 34, 35, 36, 37, 41, 42, 43, 45, 50, 51, 56, 63, 152, 159, 169, 178, 182, 184, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 351, 352, 354, 355, 356, 357, 360, 361, 367, 368, 370, 371, 373, 374, 375, 377, 380, 381, 382, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 403, 404, 408, 409, 411, 413, 415, 416, 419, 421, 422, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 568, 569, 570, 577, 578, 592, 593, 598, 602, 608, 609, 610, 615, 621, 627, 629, 635, 641, 643, 649, 655, 657, 665, 669, 673, 678, 684, 686, 688, 694, 699, 701, 703, 708, 713, 715, 717, 722, 727, 729, 731, 736, 741, 743, 744, 745, 748, 755, 756, 761, 776, 792, 793, 799, 801, 802, 803, 823, 849, 854, 855, 856, 857, 859, 863, 868, 870, 872], "copi": [0, 34, 35, 36, 37, 40, 42, 43, 54, 60, 63, 141, 142, 149, 152, 153, 168, 178, 179, 190, 193, 195, 222, 223, 226, 227, 228, 229, 262, 379, 398, 399, 400, 401, 402, 405, 406, 407, 410, 412, 414, 420, 557, 562, 571, 574, 577, 585, 586, 593, 595, 597, 601, 603, 606, 616, 618, 625, 627, 629, 631, 633, 639, 641, 643, 645, 647, 653, 655, 657, 658, 660, 663, 666, 668, 672, 674, 676, 682, 684, 686, 687, 690, 697, 699, 701, 702, 705, 711, 713, 715, 716, 719, 725, 727, 729, 730, 733, 739, 741, 743, 744, 745, 747, 755, 758, 759, 760, 763, 764, 767, 771, 772, 774, 776, 778, 779, 782, 784, 785, 788, 790, 791, 793, 815, 816, 819, 822, 829, 830, 832, 833, 834, 835, 837, 838, 839, 840, 843, 856, 863, 864, 868, 871], "necessari": [0, 43, 56, 60, 151, 157, 159, 161, 168, 170, 184, 262, 582, 709, 829, 855], "order": [0, 7, 12, 22, 25, 39, 43, 51, 54, 55, 56, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 180, 184, 228, 259, 261, 262, 265, 274, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 303, 304, 305, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 337, 338, 339, 341, 343, 344, 364, 400, 423, 425, 437, 439, 440, 441, 444, 445, 446, 447, 456, 457, 458, 459, 466, 569, 571, 573, 575, 579, 658, 709, 723, 757, 760, 765, 768, 784, 785, 790, 799, 808, 809, 815, 829, 848], "soon": [0, 780], "prior": [0, 153, 184, 262, 263, 761], "finish": [0, 25, 61, 63, 149, 184, 257, 258, 856], "you": [0, 37, 49, 58, 150, 157, 170, 276, 277, 284, 294, 297, 317, 327, 331, 362, 398, 405, 414, 490, 491, 493, 541, 542, 543, 545, 550, 551, 553, 559, 562, 577, 578, 589, 590, 815, 829, 849, 852, 857, 859, 876, 877], "must": [0, 7, 16, 22, 37, 55, 56, 58, 60, 61, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 152, 153, 154, 156, 157, 159, 161, 162, 164, 165, 166, 168, 170, 174, 177, 179, 180, 181, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 426, 427, 428, 429, 433, 434, 435, 436, 437, 439, 440, 441, 466, 494, 531, 535, 562, 563, 564, 565, 566, 568, 570, 571, 572, 573, 574, 577, 578, 579, 591, 595, 596, 601, 603, 605, 610, 616, 617, 619, 627, 629, 631, 632, 641, 643, 645, 646, 655, 657, 658, 659, 663, 666, 667, 672, 674, 675, 684, 686, 687, 689, 691, 699, 701, 702, 704, 713, 715, 716, 718, 727, 729, 730, 732, 741, 743, 744, 745, 746, 758, 760, 761, 763, 765, 767, 768, 771, 772, 774, 776, 777, 779, 782, 784, 785, 787, 790, 791, 792, 793, 798, 800, 819, 820, 821, 823, 824, 825, 827, 828, 833, 834, 835, 836, 837, 838, 839, 840, 853, 854, 856, 858, 859, 863, 865, 866, 871, 876], "specifi": [0, 7, 12, 16, 19, 20, 22, 25, 27, 29, 44, 48, 50, 52, 54, 56, 58, 60, 61, 62, 67, 68, 69, 77, 82, 83, 84, 85, 86, 87, 98, 99, 107, 108, 109, 110, 113, 117, 121, 122, 123, 124, 125, 126, 127, 130, 140, 141, 142, 143, 149, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 178, 179, 181, 182, 184, 186, 187, 188, 195, 196, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 225, 226, 227, 228, 229, 233, 234, 235, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 267, 269, 270, 271, 273, 274, 275, 277, 278, 279, 281, 282, 283, 285, 286, 287, 289, 290, 291, 292, 293, 295, 297, 298, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 322, 323, 324, 325, 326, 328, 330, 331, 332, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 375, 405, 413, 414, 425, 428, 435, 438, 439, 440, 441, 448, 451, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558, 561, 562, 565, 569, 571, 573, 574, 577, 582, 583, 584, 585, 589, 757, 758, 763, 767, 768, 769, 771, 774, 776, 779, 780, 788, 791, 795, 796, 798, 829, 842, 849, 852, 853, 856, 857, 858, 871, 874, 876], "set": [0, 12, 13, 19, 20, 22, 25, 27, 29, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 51, 53, 60, 62, 63, 64, 68, 81, 100, 101, 114, 121, 122, 123, 124, 125, 126, 127, 130, 149, 151, 152, 153, 154, 155, 157, 161, 162, 164, 167, 168, 175, 176, 177, 179, 180, 213, 214, 216, 217, 218, 219, 220, 221, 223, 226, 229, 232, 233, 252, 254, 255, 259, 260, 261, 262, 263, 264, 265, 346, 348, 351, 352, 355, 356, 357, 360, 361, 367, 370, 371, 375, 377, 380, 381, 382, 384, 385, 387, 388, 389, 392, 393, 394, 395, 397, 402, 404, 405, 408, 410, 411, 414, 415, 416, 419, 420, 423, 425, 433, 434, 435, 436, 437, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 559, 560, 561, 562, 569, 573, 574, 575, 584, 591, 593, 601, 607, 609, 610, 692, 706, 720, 734, 756, 757, 758, 760, 763, 765, 766, 767, 768, 772, 774, 778, 779, 780, 782, 785, 790, 793, 797, 798, 804, 815, 829, 841, 842, 852, 854, 856, 863, 867, 868, 871, 876], "event": [0, 2, 3, 7, 10, 34, 35, 37, 41, 43, 150, 159, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 266, 268, 269, 272, 274, 276, 277, 280, 281, 284, 285, 288, 290, 292, 294, 297, 299, 300, 303, 305, 307, 309, 311, 312, 315, 317, 318, 321, 323, 325, 327, 329, 331, 333, 334, 337, 339, 341, 343, 354, 391, 418, 430, 431, 432, 439, 440, 441, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 457, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 582], "complet": [0, 7, 11, 14, 40, 43, 58, 60, 147, 149, 152, 155, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 262, 263, 266, 268, 269, 272, 274, 276, 277, 280, 281, 284, 285, 288, 290, 292, 294, 297, 299, 300, 303, 305, 307, 309, 311, 312, 315, 317, 318, 321, 323, 325, 327, 329, 331, 333, 334, 337, 339, 341, 343, 352, 375, 381, 391, 430, 431, 432, 438, 439, 440, 441, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 457, 458, 461, 462, 463, 464, 465, 487, 494, 512, 539, 744, 757, 762, 763, 765, 769, 836, 850, 852, 854, 855, 856, 857, 859, 860], "synchron": [0, 7, 11, 12, 13, 58, 60, 61, 804, 811, 812, 856], "coordin": [0, 58, 98, 99, 231, 233, 425], "destruct": [0, 181, 571, 593, 595, 603, 616, 631, 645, 658, 666, 674, 687, 702, 716, 730, 744, 782, 793, 841, 852, 855, 856, 864], "advanc": [0, 159, 346, 426, 427, 578, 757], "requir": [0, 7, 9, 19, 22, 29, 38, 39, 40, 44, 46, 48, 49, 50, 51, 53, 54, 55, 58, 60, 61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 165, 167, 168, 170, 173, 177, 178, 181, 182, 184, 232, 233, 257, 258, 259, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 362, 364, 398, 400, 418, 439, 440, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 577, 578, 579, 581, 582, 583, 584, 585, 586, 594, 595, 596, 597, 598, 601, 603, 605, 606, 608, 610, 613, 616, 617, 618, 619, 620, 626, 627, 629, 631, 632, 633, 634, 640, 641, 643, 645, 646, 647, 648, 654, 655, 657, 658, 659, 660, 663, 666, 667, 668, 669, 672, 674, 675, 676, 677, 683, 684, 686, 687, 688, 689, 690, 691, 693, 698, 699, 701, 702, 703, 704, 705, 707, 712, 713, 715, 716, 717, 718, 719, 721, 726, 727, 729, 730, 731, 732, 733, 735, 740, 741, 743, 745, 746, 747, 749, 753, 757, 758, 760, 761, 763, 767, 768, 771, 772, 774, 776, 777, 779, 782, 784, 785, 787, 790, 791, 792, 793, 796, 797, 799, 801, 803, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 843, 846, 847, 853, 856, 858, 859, 863, 865, 867, 871, 876], "strategi": [0, 37, 571, 797], "In": [0, 7, 9, 19, 30, 34, 35, 39, 40, 43, 46, 47, 48, 49, 50, 51, 54, 56, 58, 60, 61, 62, 81, 82, 106, 149, 150, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 177, 184, 215, 225, 226, 228, 232, 233, 245, 259, 260, 263, 265, 272, 288, 297, 309, 310, 321, 343, 344, 345, 346, 348, 353, 377, 383, 423, 425, 426, 427, 428, 429, 433, 434, 435, 436, 439, 440, 441, 466, 471, 494, 495, 509, 527, 531, 549, 562, 566, 571, 573, 577, 584, 588, 591, 597, 606, 618, 627, 631, 633, 645, 647, 660, 668, 676, 684, 687, 690, 699, 702, 705, 716, 719, 730, 733, 741, 747, 748, 757, 765, 766, 772, 778, 788, 792, 801, 802, 815, 829, 853, 855, 876], "we": [0, 54, 56, 58, 81, 82, 130, 152, 154, 157, 158, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 184, 223, 226, 229, 263, 876], "onemath": [0, 1, 189, 196, 200, 202, 203, 204, 205, 206, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 225, 226, 227, 228, 229, 234, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 262, 263, 264, 296, 345, 347, 348, 350, 373, 375, 377, 421, 423, 426, 427, 456, 459, 466, 875], "matrix": [0, 22, 23, 46, 53, 56, 58, 106, 152, 159, 160, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 279, 280, 283, 284, 287, 288, 289, 290, 292, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321, 322, 323, 325, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 390, 401, 402, 410, 425, 426, 427, 428, 433, 434, 439, 440, 441, 442, 448, 451, 466, 577], "multipli": [0, 43, 53, 60, 63, 148, 152, 153, 170, 173, 202, 254, 255, 294, 296, 305, 306, 307, 308, 309, 310, 327, 339, 340, 341, 342, 343, 344, 365, 491, 493, 518, 543, 545, 551, 553, 558, 768], "routin": [0, 1, 9, 39, 51, 184, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 375, 377, 379, 380, 381, 382, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558, 560, 588, 798, 875], "gemm": [0, 152, 157, 184, 192, 202], "write": [0, 31, 37, 41, 60, 180, 184, 259, 262, 483, 484, 496, 497, 498, 499, 503, 517, 554, 571, 573, 604, 804, 807, 810, 814, 815, 842, 849, 876], "omit": [0, 12, 39, 51, 58, 151, 152, 159, 180, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 379, 571, 829, 856], "irrelev": [0, 259, 849], "detail": [0, 19, 20, 22, 25, 31, 43, 48, 54, 60, 63, 150, 151, 152, 160, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 261, 263, 264, 265, 266, 268, 269, 272, 274, 276, 277, 280, 281, 284, 285, 288, 290, 292, 294, 297, 299, 300, 303, 305, 307, 309, 311, 312, 315, 317, 318, 321, 323, 325, 327, 329, 331, 333, 334, 337, 339, 341, 343, 353, 358, 369, 373, 377, 391, 421, 426, 427, 433, 434, 437, 456, 466, 511, 687, 702, 716, 730, 744, 797, 815], "initi": [0, 4, 11, 18, 19, 22, 23, 25, 37, 40, 41, 42, 44, 45, 48, 52, 53, 58, 60, 154, 157, 161, 162, 164, 167, 169, 170, 177, 181, 184, 201, 202, 203, 204, 211, 241, 252, 254, 255, 260, 262, 263, 362, 363, 364, 365, 366, 372, 379, 398, 399, 400, 401, 402, 405, 407, 410, 412, 414, 418, 420, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 463, 494, 562, 566, 567, 570, 582, 605, 659, 689, 704, 718, 732, 756, 758, 763, 767, 772, 774, 776, 779, 782, 791, 793, 815, 824, 856, 858], "gpu_selector": [0, 49, 150], "want": [0, 152, 405, 414], "comput": [0, 4, 12, 19, 22, 25, 28, 29, 30, 40, 43, 44, 45, 50, 51, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 66, 68, 70, 74, 76, 78, 79, 80, 81, 82, 83, 89, 93, 95, 97, 99, 100, 101, 105, 106, 107, 112, 115, 119, 132, 134, 136, 138, 145, 146, 147, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 177, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 377, 391, 396, 402, 423, 439, 440, 442, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 560, 569, 573, 577, 578, 757, 765, 767, 790, 793, 826, 828, 850, 853, 859, 863, 865, 874, 876], "perform": [0, 1, 7, 9, 19, 22, 25, 29, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 50, 51, 52, 56, 58, 60, 64, 65, 67, 68, 70, 78, 81, 85, 86, 87, 98, 100, 101, 103, 107, 109, 110, 111, 113, 114, 116, 121, 122, 123, 124, 125, 126, 127, 130, 137, 139, 140, 143, 146, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 177, 184, 188, 190, 191, 192, 195, 196, 197, 198, 199, 202, 206, 215, 216, 219, 222, 223, 225, 226, 227, 228, 229, 230, 232, 236, 238, 245, 246, 247, 255, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 277, 278, 279, 281, 282, 283, 285, 286, 287, 289, 291, 293, 295, 296, 298, 300, 301, 302, 304, 306, 308, 310, 312, 313, 314, 316, 318, 319, 320, 322, 324, 326, 328, 330, 332, 334, 335, 336, 338, 340, 342, 344, 346, 375, 386, 402, 425, 426, 427, 428, 429, 439, 440, 441, 471, 487, 488, 490, 491, 493, 495, 509, 511, 512, 514, 518, 527, 528, 536, 539, 540, 541, 542, 543, 545, 547, 549, 550, 551, 553, 556, 558, 560, 567, 571, 577, 578, 582, 584, 588, 598, 601, 602, 608, 615, 627, 629, 641, 643, 655, 657, 663, 665, 669, 672, 673, 684, 686, 699, 701, 713, 715, 727, 729, 741, 743, 745, 748, 755, 763, 767, 780, 788, 795, 798, 799, 811, 812, 834, 835, 839, 841, 855, 856, 868, 870, 875, 876], "hold": [0, 7, 13, 37, 42, 58, 60, 61, 121, 122, 123, 124, 125, 126, 127, 149, 152, 158, 177, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 373, 421, 428, 429, 437, 438, 451, 583, 601, 603, 614, 628, 642, 656, 685, 688, 700, 703, 714, 717, 728, 731, 742, 744, 754, 770, 782, 793, 841, 842, 855, 863], "alloc": [0, 9, 30, 31, 34, 35, 37, 45, 60, 149, 151, 152, 168, 180, 184, 186, 188, 195, 226, 229, 257, 258, 259, 260, 261, 262, 263, 264, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 440, 441, 463, 466, 494, 557, 593, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 611, 612, 615, 616, 617, 618, 622, 623, 624, 625, 627, 629, 630, 631, 632, 633, 636, 637, 638, 639, 641, 643, 644, 645, 646, 647, 650, 651, 652, 653, 655, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 682, 684, 686, 687, 689, 690, 695, 696, 697, 699, 701, 702, 704, 705, 709, 710, 711, 713, 715, 716, 718, 719, 723, 724, 725, 727, 729, 730, 732, 733, 737, 738, 739, 741, 743, 744, 746, 747, 750, 751, 752, 754, 755, 799, 800, 801, 802, 803, 844, 847, 864, 866], "compar": [0, 43, 54, 60, 63, 130, 177, 178, 179, 579, 594, 603, 605, 608, 609, 610, 616, 618, 621, 622, 623, 624, 625, 630, 631, 633, 635, 636, 637, 638, 639, 644, 645, 647, 649, 650, 651, 652, 653, 658, 659, 660, 661, 662, 674, 676, 678, 679, 680, 681, 682, 689, 704, 718, 732, 780, 784, 800, 802, 815, 832], "add": [0, 60, 63, 68, 69, 73, 78, 79, 80, 81, 82, 83, 107, 108, 148, 149, 155, 157, 159, 161, 164, 168, 186, 187, 188, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 234, 237, 238, 239, 241, 242, 243, 244, 254, 558, 568, 570, 760, 768, 778, 784, 785, 790, 799, 820, 829, 855, 856, 858, 859], "paramet": [0, 7, 19, 20, 22, 25, 29, 34, 35, 37, 38, 39, 40, 41, 42, 43, 48, 49, 50, 51, 56, 58, 60, 61, 62, 63, 81, 82, 100, 101, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 348, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 377, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558, 562, 565, 571, 572, 574, 577, 578, 627, 641, 655, 684, 687, 699, 702, 713, 716, 727, 730, 741, 756, 768, 771, 776, 780, 792, 798, 815, 821, 824, 825, 827, 828, 829, 842, 852, 856, 858, 863, 864, 865, 867], "replac": [0, 37, 42, 75, 76, 153, 170, 171, 181, 184, 232, 240, 394, 577, 596, 605, 617, 632, 646, 659, 667, 675, 689, 704, 718, 732, 746, 788, 799, 861], "otherwis": [0, 7, 34, 35, 37, 60, 63, 76, 89, 95, 119, 121, 122, 123, 124, 125, 126, 127, 132, 138, 145, 154, 158, 159, 175, 177, 178, 179, 180, 182, 184, 196, 213, 214, 218, 219, 223, 227, 228, 231, 376, 426, 427, 433, 434, 439, 440, 441, 505, 507, 508, 518, 524, 525, 534, 546, 558, 562, 565, 568, 580, 588, 589, 591, 593, 594, 599, 601, 602, 604, 609, 610, 611, 614, 615, 621, 622, 627, 628, 629, 630, 635, 636, 641, 642, 643, 644, 649, 650, 655, 656, 657, 661, 663, 664, 665, 670, 672, 673, 678, 679, 684, 685, 686, 687, 694, 695, 699, 700, 701, 702, 708, 709, 713, 714, 715, 716, 722, 723, 727, 728, 729, 730, 736, 737, 741, 742, 743, 744, 750, 751, 754, 755, 758, 767, 769, 772, 774, 775, 779, 782, 784, 792, 793, 803, 805, 810, 811, 812, 813, 814, 820, 841, 842, 854, 855, 856, 857, 859, 861, 863, 868, 869, 872, 877], "namespac": [0, 3, 10, 19, 20, 22, 25, 29, 32, 34, 35, 37, 38, 39, 41, 42, 44, 48, 49, 51, 52, 160, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 583, 584, 585, 587, 594, 595, 603, 604, 616, 630, 631, 644, 645, 658, 666, 674, 687, 702, 716, 730, 744, 756, 758, 759, 760, 761, 762, 763, 764, 765, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 799, 800, 801, 803, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 844, 847, 848, 849, 851, 852, 854, 855, 856, 857, 858, 859, 860, 861, 863, 864, 871, 874], "cl": [0, 34, 35, 37, 60, 61, 159, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344], "declar": [0, 19, 20, 22, 25, 29, 34, 35, 37, 38, 39, 41, 42, 48, 49, 51, 152, 180, 184, 257, 258, 262, 765, 795, 829, 849, 873], "doubl": [0, 7, 8, 19, 20, 22, 25, 34, 35, 41, 43, 48, 50, 184, 185, 186, 187, 188, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 348, 349, 352, 355, 356, 357, 361, 365, 367, 370, 375, 381, 382, 384, 385, 387, 388, 389, 390, 393, 395, 397, 403, 404, 408, 409, 411, 415, 418, 419, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558, 566, 780, 874], "new": [0, 12, 19, 20, 22, 25, 28, 34, 35, 37, 38, 40, 41, 42, 43, 44, 60, 63, 149, 151, 159, 178, 179, 184, 433, 434, 435, 436, 466, 539, 540, 569, 570, 601, 619, 663, 672, 691, 744, 745, 755, 756, 758, 763, 767, 772, 776, 779, 790, 793, 837, 849, 856, 863, 868], "m": [0, 19, 22, 25, 46, 58, 106, 164, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 222, 223, 225, 226, 227, 228, 229, 241, 242, 252, 254, 255, 259, 260, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 294, 296, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 309, 310, 327, 331, 332, 333, 334, 335, 336, 339, 340, 341, 342, 343, 344, 345, 346, 361, 362, 363, 376, 382, 394, 397, 398, 399, 403, 439, 440, 441, 453, 466, 603, 616, 631, 645, 674, 687, 702, 716, 730, 841, 842, 849], "n": [0, 19, 20, 22, 25, 40, 46, 56, 58, 68, 69, 70, 71, 73, 77, 81, 98, 99, 100, 101, 104, 106, 107, 142, 150, 152, 153, 154, 156, 157, 161, 162, 163, 164, 165, 166, 168, 169, 170, 173, 178, 181, 182, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 261, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 354, 362, 363, 364, 365, 366, 368, 372, 379, 382, 385, 390, 391, 394, 398, 399, 400, 401, 402, 403, 405, 407, 409, 410, 412, 413, 414, 418, 420, 439, 440, 444, 445, 446, 447, 451, 453, 457, 458, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 562, 569, 571, 573, 577, 578, 579, 603, 605, 607, 687, 688, 692, 702, 703, 706, 716, 717, 720, 730, 731, 734, 744, 745, 746, 755, 761, 764, 765, 773, 774, 778, 781, 782, 790, 799, 800, 801, 803, 849, 853], "b": [0, 46, 53, 58, 149, 164, 170, 178, 196, 201, 202, 203, 204, 211, 215, 225, 226, 227, 228, 229, 231, 241, 245, 247, 249, 251, 252, 254, 255, 256, 259, 266, 274, 284, 285, 286, 287, 290, 291, 293, 317, 318, 319, 320, 323, 324, 329, 330, 346, 348, 352, 357, 361, 365, 366, 370, 371, 375, 381, 384, 393, 395, 397, 407, 411, 412, 415, 416, 419, 439, 449, 450, 471, 477, 478, 489, 495, 505, 507, 508, 509, 513, 518, 524, 525, 527, 528, 530, 531, 534, 535, 536, 549, 558, 578, 765, 780, 826, 871], "p": [0, 19, 20, 22, 25, 28, 37, 40, 46, 159, 167, 266, 276, 296, 297, 298, 299, 300, 331, 332, 333, 334, 346, 351, 352, 360, 364, 367, 371, 376, 380, 381, 382, 392, 400, 403, 404, 408, 409, 416, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 518, 569, 571, 573, 577, 616, 627, 631, 641, 687, 699, 702, 713, 777, 787, 799, 800, 801, 803, 839, 849, 852], "q": [0, 184, 266, 268, 272, 292, 296, 297, 298, 299, 302, 303, 304, 305, 306, 307, 308, 309, 310, 325, 331, 332, 333, 336, 337, 338, 339, 340, 341, 342, 343, 344, 352, 354, 372, 376, 381, 418], "1d": [0, 58, 73, 86, 87, 98, 99, 100, 101, 106, 114, 115, 121, 122, 123, 124, 125, 126, 127, 154, 157, 161, 163, 165, 169, 184], "matric": [0, 22, 28, 40, 184, 192, 193, 196, 201, 202, 203, 204, 206, 211, 215, 222, 223, 225, 226, 227, 228, 229, 241, 245, 247, 252, 254, 255, 265, 266, 269, 270, 277, 278, 281, 282, 285, 286, 290, 291, 292, 293, 294, 296, 297, 300, 301, 312, 313, 318, 319, 323, 324, 325, 326, 327, 329, 331, 334, 335, 345, 425, 426, 427, 442], "bound": [0, 37, 63, 75, 76, 152, 178, 181, 357, 370, 371, 415, 416, 565, 570, 571, 572, 573, 577, 582, 595, 613, 626, 640, 654, 683, 698, 712, 726, 740, 753, 761, 769, 798, 850, 854, 856, 867], "transpos": [0, 58, 106, 171, 184, 193, 200, 201, 202, 203, 204, 205, 206, 215, 216, 222, 223, 225, 226, 227, 228, 229, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 284, 285, 286, 287, 305, 306, 307, 308, 309, 310, 329, 330, 339, 340, 341, 342, 343, 344, 437, 439, 440, 441], "nt": [0, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "nontran": [0, 184, 215, 216, 222, 225, 226, 227, 228, 245, 246, 284, 285, 286, 287, 305, 306, 307, 308, 309, 310, 329, 330, 339, 340, 341, 342, 343, 344, 439, 440, 441], "syntax": [0, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 771, 774, 844], "void": [0, 7, 8, 10, 11, 12, 13, 14, 37, 41, 43, 60, 63, 152, 153, 159, 168, 177, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 266, 268, 269, 272, 274, 276, 277, 280, 281, 284, 285, 288, 290, 292, 294, 297, 299, 300, 303, 305, 307, 309, 311, 312, 315, 317, 318, 321, 323, 325, 327, 329, 331, 333, 334, 337, 339, 341, 343, 368, 391, 396, 413, 426, 427, 428, 429, 433, 434, 435, 436, 439, 440, 441, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 566, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 593, 595, 596, 600, 601, 602, 603, 604, 607, 610, 612, 615, 616, 624, 627, 629, 631, 638, 641, 643, 645, 652, 655, 657, 658, 659, 662, 663, 665, 666, 667, 671, 672, 673, 674, 681, 684, 686, 687, 692, 696, 699, 701, 702, 706, 710, 713, 715, 716, 720, 724, 727, 729, 730, 734, 738, 741, 743, 744, 746, 752, 755, 756, 761, 763, 765, 769, 772, 777, 780, 782, 787, 793, 798, 799, 800, 801, 803, 805, 806, 807, 810, 813, 814, 815, 816, 818, 819, 820, 821, 823, 826, 833, 836, 839, 841, 842, 843, 853, 854, 855, 856, 857, 858, 859, 863, 864, 865, 870], "exec_queu": [0, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555], "transa": [0, 201, 202, 203, 204, 225, 226, 252, 254, 329], "transb": [0, 201, 202, 203, 204, 225, 226], "int64_t": [0, 19, 20, 22, 25, 29, 34, 35, 37, 41, 42, 43, 49, 59, 159, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 261, 262, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 354, 360, 371, 391, 426, 427, 428, 429, 433, 434, 435, 436, 443, 448, 451, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555], "k": [0, 18, 23, 24, 26, 44, 52, 106, 152, 159, 163, 164, 192, 196, 201, 202, 203, 204, 210, 215, 216, 234, 245, 246, 247, 248, 249, 251, 259, 277, 294, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 327, 331, 332, 333, 334, 335, 336, 339, 340, 341, 342, 343, 344, 345, 346, 360, 366, 367, 371, 376, 379, 382, 392, 394, 403, 404, 407, 408, 409, 410, 412, 416, 439, 444, 445, 446, 447, 457, 458, 562, 564, 594, 603, 608, 609, 610, 616, 621, 629, 631, 635, 643, 645, 649, 657, 674, 678, 686, 687, 694, 701, 702, 708, 715, 716, 722, 729, 730, 736, 743, 744, 774, 775, 816, 822, 832, 838, 849], "t": [0, 19, 22, 28, 34, 35, 40, 53, 58, 60, 62, 63, 100, 101, 149, 152, 153, 159, 162, 170, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 390, 439, 440, 441, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 574, 578, 595, 599, 600, 601, 603, 604, 606, 611, 612, 616, 618, 622, 623, 624, 627, 630, 631, 633, 636, 637, 638, 641, 644, 645, 650, 651, 652, 655, 658, 660, 661, 662, 663, 666, 670, 671, 672, 674, 679, 680, 681, 684, 687, 690, 695, 696, 699, 702, 705, 709, 710, 713, 716, 719, 723, 724, 727, 730, 733, 737, 738, 741, 744, 750, 751, 752, 759, 760, 761, 769, 771, 774, 776, 782, 784, 785, 786, 789, 790, 792, 793, 799, 801, 803, 815, 836, 840, 863, 864, 865, 866], "alpha": [0, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 184, 186, 187, 188, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 225, 226, 227, 228, 229, 234, 235, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 252, 254, 255, 265, 352, 356, 376, 381, 388, 411, 419, 439, 440, 441, 466], "lda": [0, 58, 184, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 225, 226, 227, 228, 229, 234, 241, 242, 243, 244, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 466], "ldb": [0, 201, 202, 203, 204, 211, 215, 225, 226, 227, 228, 229, 241, 245, 252, 254, 255, 284, 285, 286, 287, 290, 291, 317, 318, 319, 320, 323, 324, 329, 330], "beta": [0, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 184, 186, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 215, 216, 217, 225, 226, 234, 237, 241, 242, 245, 246, 247, 252, 254, 265, 348, 354, 355, 356, 361, 375, 376, 384, 387, 388, 393, 395, 397, 411, 419, 439, 440, 466], "ldc": [0, 196, 201, 202, 203, 204, 211, 215, 216, 225, 226, 241, 245, 246, 247, 252, 254, 305, 306, 307, 308, 309, 310, 339, 340, 341, 342, 343, 344], "bla": [0, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 265, 345, 424, 425, 426, 427, 428, 429, 438, 439, 440, 441, 443, 876], "0": [0, 10, 12, 17, 19, 20, 22, 25, 29, 33, 34, 35, 37, 38, 41, 42, 46, 49, 58, 60, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 152, 153, 155, 156, 157, 158, 159, 161, 162, 164, 166, 168, 169, 170, 171, 173, 177, 179, 180, 182, 184, 188, 195, 196, 201, 202, 203, 204, 206, 211, 220, 221, 223, 226, 229, 231, 232, 233, 236, 241, 247, 252, 254, 255, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 351, 352, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 376, 379, 380, 381, 382, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 423, 425, 426, 427, 433, 434, 435, 436, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 526, 527, 529, 531, 532, 533, 534, 536, 537, 538, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 558, 562, 563, 564, 566, 573, 577, 578, 588, 589, 603, 607, 609, 629, 686, 701, 743, 763, 765, 768, 774, 776, 777, 778, 780, 782, 787, 790, 793, 798, 849, 852, 853, 854, 855, 856, 858, 877], "exit": [0, 274, 288, 290, 292, 321, 323, 325, 841, 857, 858], "destructor": [0, 744, 770, 791, 816, 819, 822, 823, 829, 832, 833, 834, 835, 837, 838, 839, 840, 849, 859, 874], "result": [0, 7, 12, 30, 38, 40, 43, 45, 47, 49, 50, 52, 53, 54, 55, 56, 58, 121, 122, 123, 124, 125, 126, 127, 140, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 163, 164, 166, 167, 168, 170, 172, 177, 178, 180, 181, 185, 187, 193, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 220, 221, 224, 225, 226, 233, 234, 236, 237, 238, 241, 242, 243, 244, 257, 258, 259, 262, 264, 266, 268, 269, 272, 274, 276, 277, 280, 281, 284, 285, 288, 290, 292, 294, 296, 297, 299, 300, 303, 305, 307, 309, 311, 312, 315, 317, 318, 321, 323, 325, 327, 329, 331, 333, 334, 337, 339, 341, 343, 405, 439, 440, 441, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 566, 569, 577, 578, 595, 603, 609, 610, 614, 628, 642, 656, 664, 666, 685, 700, 714, 728, 742, 757, 761, 765, 767, 768, 772, 776, 778, 793, 798, 799, 801, 803, 823, 825, 826, 827, 828, 829, 856, 857, 863, 865, 866], "back": [0, 7, 40, 60, 62, 68, 69, 78, 79, 80, 81, 82, 83, 107, 108, 157, 165, 168, 179, 263, 744, 748, 801], "With": [0, 54, 60, 149, 170, 184, 757, 798, 852], "do": [0, 7, 12, 40, 43, 54, 56, 58, 60, 61, 68, 107, 152, 153, 154, 169, 177, 178, 184, 252, 254, 255, 262, 296, 345, 437, 490, 491, 493, 541, 542, 543, 545, 550, 551, 553, 570, 571, 578, 582, 584, 585, 589, 593, 627, 684, 699, 741, 757, 758, 763, 767, 772, 779, 790, 793, 798, 812, 842, 855, 856, 872], "addit": [0, 4, 9, 39, 40, 42, 43, 51, 53, 55, 58, 60, 67, 78, 79, 80, 82, 106, 127, 149, 154, 155, 157, 164, 175, 184, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 349, 377, 402, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 471, 562, 568, 570, 578, 582, 584, 591, 597, 606, 618, 633, 647, 660, 668, 676, 690, 705, 719, 733, 747, 757, 820, 856], "simpl": [0, 37, 153, 180, 346, 765, 778], "should": [0, 7, 10, 11, 12, 13, 22, 31, 34, 39, 40, 56, 58, 60, 62, 63, 67, 69, 70, 72, 73, 77, 80, 82, 83, 85, 86, 87, 98, 99, 109, 110, 113, 121, 122, 123, 124, 125, 126, 127, 130, 143, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 405, 413, 414, 438, 439, 440, 441, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 561, 562, 573, 574, 576, 577, 581, 582, 583, 584, 585, 610, 627, 629, 635, 641, 643, 645, 649, 655, 657, 684, 686, 699, 701, 708, 713, 715, 722, 727, 729, 741, 743, 774, 788, 794, 796, 798, 801, 818, 823, 829, 830, 832, 850, 852, 855, 856, 858, 863, 865], "read": [0, 31, 34, 35, 36, 37, 40, 41, 49, 60, 184, 259, 260, 262, 263, 264, 438, 439, 440, 441, 565, 593, 604, 790, 807, 810, 814], "lambda": [0, 263, 288, 290, 291, 321, 323, 324, 349, 367, 376, 408, 409], "element": [0, 7, 22, 27, 28, 29, 34, 37, 40, 41, 42, 43, 46, 58, 62, 63, 65, 67, 75, 81, 84, 85, 86, 87, 88, 91, 92, 94, 96, 100, 101, 102, 103, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 133, 135, 137, 139, 140, 141, 142, 143, 144, 146, 149, 152, 157, 158, 159, 165, 177, 179, 180, 182, 184, 185, 186, 187, 188, 190, 194, 195, 196, 197, 198, 199, 202, 203, 206, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 226, 228, 229, 230, 232, 233, 235, 236, 240, 247, 251, 252, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 362, 363, 364, 365, 366, 368, 374, 394, 422, 425, 426, 427, 429, 433, 434, 436, 451, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 577, 578, 579, 598, 599, 604, 608, 609, 611, 613, 614, 615, 616, 620, 621, 622, 626, 628, 631, 634, 635, 636, 640, 642, 645, 648, 649, 650, 654, 656, 661, 664, 665, 669, 670, 674, 677, 678, 679, 683, 685, 687, 688, 692, 693, 694, 695, 698, 700, 702, 703, 706, 707, 708, 709, 712, 714, 716, 717, 720, 721, 722, 723, 726, 728, 730, 731, 734, 735, 736, 737, 740, 742, 744, 745, 749, 750, 753, 754, 755, 761, 771, 774, 791, 795, 818, 826, 831, 837, 838, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 876], "parallel_for": [0, 37, 354, 372, 373, 561, 565, 577, 585, 586, 816, 819, 821, 822, 829, 831, 853, 855], "map": [0, 10, 12, 48, 60, 84, 86, 87, 117, 147, 151, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 180, 569, 573, 574, 593, 761, 796, 850, 863, 876], "leav": [0, 588, 857], "scope": [0, 12, 36, 41, 42, 149, 151, 152, 184, 259, 260, 261, 262, 263, 517, 554, 810, 814, 841, 842, 852, 858], "includ": [0, 12, 23, 29, 34, 35, 37, 40, 43, 45, 48, 49, 55, 62, 149, 150, 152, 157, 159, 174, 175, 176, 178, 179, 180, 181, 182, 184, 190, 191, 192, 193, 265, 290, 296, 323, 372, 373, 418, 421, 463, 466, 556, 562, 566, 572, 577, 597, 606, 618, 633, 647, 660, 668, 676, 690, 705, 719, 733, 747, 760, 765, 768, 778, 780, 782, 784, 785, 790, 793, 796, 799, 800, 842, 849, 850, 855, 856, 876, 877], "hpp": [0, 19, 20, 22, 25, 29, 31, 34, 35, 37, 38, 41, 42, 49, 372, 418, 463], "int": [0, 7, 8, 10, 12, 34, 35, 37, 58, 60, 150, 152, 153, 155, 156, 159, 171, 172, 173, 178, 180, 182, 346, 352, 356, 366, 372, 379, 381, 385, 388, 389, 407, 412, 418, 463, 562, 563, 564, 565, 566, 572, 578, 591, 597, 606, 618, 633, 647, 660, 668, 676, 690, 705, 719, 733, 747, 763, 765, 768, 778, 780, 782, 790, 793, 795, 798, 815, 822, 849, 853, 855, 856, 858], "main": [0, 10, 12, 30, 31, 34, 35, 37, 40, 47, 54, 58, 149, 151, 153, 345, 372, 373, 418, 438, 463, 597, 606, 618, 633, 647, 660, 668, 676, 690, 705, 719, 733, 747, 765, 768, 778, 780, 782, 790, 793, 855, 856], "ahost": 0, "bhost": 0, "chost": 0, "2d": [0, 58, 106, 152, 154, 157, 158, 161, 162, 163, 164, 165, 166, 169, 171], "2": [0, 19, 20, 25, 28, 29, 34, 35, 37, 46, 60, 70, 71, 72, 78, 80, 81, 82, 83, 86, 87, 99, 100, 101, 106, 112, 114, 115, 122, 130, 140, 153, 154, 158, 159, 162, 163, 170, 177, 184, 189, 190, 200, 205, 207, 208, 209, 210, 212, 213, 214, 217, 218, 219, 228, 232, 233, 234, 237, 238, 239, 242, 243, 244, 248, 249, 250, 251, 253, 256, 259, 260, 261, 263, 274, 288, 290, 291, 294, 305, 307, 321, 323, 324, 327, 339, 341, 345, 346, 349, 350, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 376, 377, 379, 384, 385, 389, 390, 392, 395, 396, 397, 398, 399, 400, 401, 404, 405, 407, 409, 410, 411, 412, 413, 414, 418, 420, 425, 444, 445, 446, 447, 457, 458, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 483, 484, 489, 491, 493, 495, 496, 497, 498, 499, 502, 505, 507, 508, 509, 513, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 531, 533, 534, 536, 537, 542, 543, 544, 545, 549, 551, 553, 558, 562, 563, 564, 565, 572, 573, 578, 589, 618, 633, 647, 676, 768, 780, 793, 820], "handler": [0, 37, 372, 373, 468, 469, 470, 471, 473, 475, 479, 483, 484, 486, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 509, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 527, 528, 530, 531, 532, 533, 534, 535, 536, 541, 542, 543, 544, 545, 548, 549, 550, 551, 553, 554, 556, 559], "h": [0, 53, 58, 70, 71, 73, 150, 152, 154, 157, 161, 163, 165, 166, 168, 200, 201, 202, 203, 204, 205, 206, 208, 213, 214, 215, 216, 218, 219, 222, 223, 225, 226, 227, 228, 229, 232, 233, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 266, 274, 275, 288, 290, 292, 294, 295, 305, 307, 311, 312, 317, 318, 319, 320, 329, 331, 337, 339, 340, 341, 342, 343, 344, 346, 439, 440, 441, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 591, 594, 595, 597, 603, 606, 618, 633, 645, 647, 660, 666, 668, 674, 676, 687, 690, 702, 705, 716, 719, 730, 733, 744, 747, 756, 758, 759, 760, 761, 762, 763, 764, 765, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 787, 788, 790, 791, 792, 793, 795, 798, 799, 800, 801, 802, 803, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 832, 849, 852, 853, 854, 855, 856, 857, 858, 859, 861, 863, 864, 871, 873], "from": [0, 1, 7, 9, 10, 12, 19, 20, 25, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 49, 50, 51, 53, 58, 60, 61, 62, 63, 74, 98, 99, 100, 101, 106, 114, 115, 121, 122, 123, 124, 125, 126, 127, 128, 130, 135, 136, 141, 142, 146, 149, 150, 151, 152, 156, 159, 160, 163, 165, 168, 170, 171, 177, 179, 180, 181, 182, 184, 223, 226, 228, 229, 232, 259, 260, 262, 263, 269, 285, 286, 290, 296, 299, 300, 305, 306, 307, 308, 309, 310, 312, 313, 318, 319, 323, 333, 334, 339, 340, 341, 342, 343, 344, 345, 347, 350, 354, 358, 359, 363, 373, 374, 375, 376, 377, 378, 379, 391, 394, 396, 398, 399, 400, 401, 402, 405, 406, 407, 410, 412, 414, 420, 421, 422, 423, 438, 451, 460, 507, 508, 524, 525, 530, 538, 549, 557, 558, 562, 563, 564, 566, 568, 569, 570, 571, 573, 574, 577, 578, 579, 581, 582, 583, 584, 585, 586, 589, 590, 591, 593, 595, 598, 599, 601, 602, 603, 608, 610, 611, 615, 616, 619, 620, 627, 629, 631, 634, 641, 643, 645, 648, 655, 656, 657, 658, 661, 663, 664, 665, 666, 669, 670, 672, 673, 674, 677, 684, 685, 686, 687, 688, 691, 693, 695, 699, 700, 701, 702, 703, 707, 713, 714, 715, 716, 717, 721, 727, 729, 730, 731, 735, 737, 741, 742, 743, 744, 745, 749, 755, 757, 758, 760, 761, 763, 764, 765, 766, 767, 768, 771, 772, 774, 775, 776, 777, 779, 780, 782, 784, 785, 787, 788, 790, 791, 792, 793, 795, 796, 797, 798, 799, 801, 803, 807, 813, 814, 815, 818, 822, 826, 830, 841, 842, 849, 852, 853, 854, 856, 857, 863, 866, 871, 872, 875], "auto": [0, 10, 19, 20, 22, 25, 34, 35, 37, 38, 48, 49, 62, 67, 85, 109, 110, 113, 130, 140, 141, 143, 152, 157, 170, 178, 180, 260, 354, 358, 418, 463, 566, 571, 815, 856, 858], "get_access": 0, "mode": [0, 43, 44, 45, 50, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 184, 375, 376, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 573, 574, 575, 798], "widtha": 0, "get_rang": 0, "id": [0, 37, 41, 42, 63, 149, 184, 277, 285, 312, 318, 578, 608, 609, 610, 621, 629, 635, 643, 649, 657, 678, 686, 687, 694, 701, 702, 708, 715, 716, 722, 729, 730, 736, 743, 777, 787, 790, 795, 856, 864], "index": [0, 19, 29, 30, 34, 37, 53, 61, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 180, 182, 184, 190, 220, 221, 228, 259, 260, 263, 269, 270, 277, 278, 281, 282, 285, 286, 300, 301, 312, 313, 318, 319, 334, 335, 345, 396, 402, 420, 425, 426, 427, 433, 434, 494, 571, 744, 771, 791, 792, 795, 821, 822, 856, 858], "row": [0, 19, 20, 22, 29, 34, 36, 40, 41, 42, 43, 44, 46, 49, 58, 106, 149, 183, 184, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 222, 223, 225, 226, 227, 228, 229, 234, 237, 238, 239, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 284, 285, 286, 287, 288, 290, 294, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 309, 310, 321, 323, 327, 329, 330, 331, 332, 333, 334, 335, 336, 339, 340, 341, 342, 343, 344, 345, 425, 426, 427, 428, 433, 434, 435, 437, 546, 563, 564], "col": [0, 203, 563, 564], "sum": [0, 7, 16, 22, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 185, 190, 225, 230, 269, 270, 277, 278, 281, 282, 285, 286, 300, 301, 312, 313, 318, 319, 334, 335, 382, 394, 403, 404, 425, 446, 447, 456, 458, 459, 513, 558, 573, 577, 578, 778, 822, 826, 828, 871, 874], "oneapi": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 876, 877], "softwar": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877], "onedpl": [1, 174, 176, 177, 178, 179, 181, 182, 875], "companion": [1, 175, 875], "compil": [1, 37, 43, 48, 51, 62, 63, 64, 106, 179, 180, 181, 262, 562, 588, 589, 591, 815, 849, 875], "program": [1, 3, 32, 36, 39, 40, 43, 44, 45, 60, 64, 151, 157, 160, 161, 170, 175, 179, 263, 345, 556, 588, 590, 687, 702, 716, 730, 796, 829, 853, 855, 873, 875, 876], "api": [1, 10, 37, 38, 42, 43, 44, 45, 59, 62, 63, 64, 150, 159, 160, 175, 188, 195, 196, 202, 206, 223, 226, 229, 247, 255, 265, 269, 270, 277, 278, 281, 282, 285, 286, 300, 301, 312, 313, 318, 319, 334, 335, 423, 426, 427, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 560, 590, 757, 796, 850, 856, 873, 875, 876], "stl": [1, 184, 565, 816, 875], "extens": [1, 44, 50, 62, 149, 150, 174, 175, 184, 186, 188, 189, 195, 196, 202, 203, 204, 206, 222, 223, 225, 226, 227, 228, 229, 247, 255, 269, 270, 277, 278, 281, 282, 285, 286, 300, 301, 312, 313, 318, 319, 334, 335, 562, 564, 796, 811, 812, 849, 875], "onednn": [1, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 148, 149, 151, 152, 157, 160, 161, 168, 169, 170, 875], "high": [1, 43, 150, 151, 157, 165, 346, 366, 375, 407, 490, 491, 493, 511, 540, 541, 542, 543, 545, 550, 551, 553, 560, 841, 856, 875, 876], "implement": [1, 9, 19, 20, 22, 23, 25, 28, 29, 30, 31, 36, 39, 40, 41, 42, 43, 44, 45, 48, 50, 51, 52, 54, 55, 56, 58, 59, 62, 63, 84, 86, 87, 106, 117, 147, 148, 149, 151, 152, 153, 154, 157, 159, 160, 161, 162, 163, 164, 165, 168, 169, 171, 174, 175, 179, 180, 181, 182, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 362, 377, 386, 390, 398, 402, 403, 406, 409, 414, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 466, 518, 531, 562, 566, 575, 578, 591, 595, 603, 616, 631, 645, 658, 666, 674, 687, 689, 702, 704, 716, 718, 730, 732, 744, 757, 758, 763, 767, 768, 773, 774, 779, 781, 783, 788, 791, 795, 796, 797, 799, 801, 803, 811, 812, 815, 841, 842, 849, 850, 852, 853, 854, 864, 871, 874, 875, 876], "primit": [1, 4, 53, 54, 55, 56, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 804, 875], "learn": [1, 4, 28, 49, 50, 52, 55, 62, 149, 150, 153, 875], "framework": [1, 45, 62, 147, 149, 150, 875], "oneccl": [1, 2, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 875], "scale": [1, 4, 28, 43, 53, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 186, 188, 193, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 225, 226, 227, 228, 229, 230, 233, 234, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 252, 254, 255, 263, 352, 356, 361, 376, 381, 384, 388, 397, 402, 518, 801, 875, 876], "multipl": [1, 4, 7, 10, 11, 12, 16, 43, 53, 55, 56, 58, 60, 62, 63, 126, 149, 151, 152, 153, 154, 155, 159, 160, 162, 167, 184, 188, 195, 196, 202, 203, 206, 211, 215, 223, 226, 229, 241, 245, 247, 252, 255, 263, 265, 284, 285, 296, 317, 318, 329, 346, 350, 362, 363, 364, 377, 398, 399, 400, 402, 420, 426, 427, 437, 439, 440, 441, 494, 527, 528, 569, 574, 575, 577, 578, 592, 595, 604, 605, 610, 617, 627, 631, 632, 635, 643, 645, 646, 649, 657, 658, 666, 675, 684, 689, 699, 702, 704, 708, 715, 716, 722, 729, 732, 741, 744, 757, 771, 774, 778, 791, 799, 811, 812, 822, 839, 842, 854, 863, 866, 875], "algorithm": [1, 4, 19, 20, 22, 25, 28, 30, 31, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 262, 264, 265, 288, 290, 296, 321, 323, 346, 354, 362, 363, 364, 365, 366, 376, 379, 398, 399, 400, 401, 402, 405, 407, 410, 412, 414, 418, 420, 439, 440, 441, 463, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 687, 702, 716, 730, 796, 816, 817, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 831, 846, 847, 848, 850, 855, 858, 875, 876], "scienc": [1, 346, 401, 875], "onetbb": [1, 566, 587, 590, 591, 592, 756, 757, 780, 794, 796, 797, 802, 803, 815, 850, 852, 853, 855, 856, 857, 875], "ad": [1, 40, 43, 63, 70, 71, 72, 73, 100, 101, 149, 152, 176, 179, 181, 186, 193, 236, 254, 426, 427, 430, 431, 432, 439, 440, 441, 570, 772, 775, 784, 785, 859, 875], "base": [1, 9, 12, 29, 30, 42, 43, 48, 52, 54, 55, 56, 58, 101, 102, 111, 114, 116, 151, 153, 154, 155, 157, 158, 160, 161, 162, 163, 165, 166, 167, 169, 170, 171, 172, 176, 180, 182, 184, 220, 221, 232, 233, 259, 345, 350, 354, 365, 366, 376, 377, 379, 405, 407, 413, 414, 425, 426, 427, 433, 434, 501, 502, 520, 522, 558, 582, 757, 770, 774, 786, 789, 849, 856, 875, 876], "complex": [1, 40, 45, 47, 151, 157, 160, 184, 185, 186, 187, 188, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 235, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 305, 307, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 443, 467, 468, 469, 471, 472, 473, 474, 476, 479, 486, 488, 490, 492, 494, 495, 500, 519, 520, 527, 528, 531, 535, 541, 544, 546, 548, 549, 550, 552, 558, 569, 571, 577, 578, 579, 875], "multiprocessor": [1, 377, 875], "engin": [1, 54, 55, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 182, 353, 358, 359, 362, 363, 364, 365, 366, 368, 369, 372, 373, 374, 378, 379, 383, 386, 391, 396, 398, 399, 400, 401, 402, 405, 406, 407, 410, 412, 413, 414, 417, 418, 420, 421, 422, 850, 875], "financi": [1, 556, 875], "concept": [2, 3, 29, 31, 37, 39, 42, 43, 45, 149, 151, 181, 184, 578, 794, 806, 809], "context": [2, 3, 7, 10, 13, 46, 58, 60, 61, 149, 150, 151, 178, 182, 260, 263, 565, 569, 570, 571, 572, 573, 577, 769, 829, 830, 853, 854, 859], "kei": [2, 3, 10, 31, 149, 177, 366, 379, 407, 579, 593, 594, 603, 605, 606, 608, 609, 610, 611, 612, 616, 617, 618, 619, 621, 622, 623, 624, 625, 627, 629, 630, 631, 632, 633, 635, 636, 637, 638, 639, 641, 643, 644, 645, 646, 647, 649, 653, 657, 674, 675, 676, 678, 682, 684, 686, 687, 688, 689, 690, 691, 694, 695, 696, 697, 699, 701, 702, 703, 704, 705, 708, 709, 710, 711, 713, 715, 716, 717, 722, 723, 725, 729, 730, 731, 736, 739, 743, 774, 775, 832, 838, 864, 866], "store": [2, 3, 7, 10, 19, 20, 22, 25, 27, 34, 35, 37, 38, 40, 41, 42, 43, 48, 49, 53, 55, 56, 57, 58, 60, 63, 141, 151, 152, 153, 157, 160, 170, 177, 184, 185, 196, 197, 198, 199, 201, 202, 203, 204, 211, 215, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 236, 241, 245, 246, 247, 252, 254, 255, 257, 258, 259, 260, 264, 266, 268, 269, 272, 274, 276, 277, 280, 281, 284, 285, 288, 289, 290, 291, 292, 293, 294, 295, 297, 299, 300, 303, 305, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 333, 334, 337, 339, 341, 343, 345, 425, 494, 556, 596, 605, 616, 617, 630, 631, 632, 644, 645, 646, 659, 667, 675, 687, 688, 689, 692, 702, 703, 704, 706, 716, 717, 718, 720, 731, 732, 734, 746, 766, 774, 782, 784, 792, 793, 866], "split": [2, 3, 27, 60, 265, 368, 377, 413, 562, 563, 564, 565, 569, 571, 577, 578, 581, 582, 583, 584, 766, 823, 826, 829, 830, 848], "stream": [2, 3, 7, 10, 40, 45, 47, 54, 55, 58, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 377, 396, 410, 413, 573, 576, 818], "oper": [2, 3, 4, 8, 9, 10, 11, 16, 30, 36, 37, 40, 42, 43, 44, 45, 47, 48, 49, 50, 53, 54, 55, 56, 58, 60, 61, 62, 64, 116, 150, 151, 152, 153, 159, 160, 177, 178, 179, 180, 182, 188, 190, 191, 192, 193, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 225, 226, 227, 228, 229, 230, 234, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 263, 264, 265, 346, 379, 398, 399, 400, 401, 402, 405, 406, 407, 410, 412, 414, 420, 425, 426, 427, 428, 429, 437, 438, 439, 440, 441, 442, 443, 556, 567, 568, 569, 570, 571, 572, 573, 574, 577, 578, 579, 580, 585, 589, 593, 595, 599, 601, 603, 604, 611, 616, 622, 623, 630, 631, 636, 637, 644, 645, 650, 651, 658, 661, 664, 666, 670, 674, 679, 680, 687, 695, 702, 709, 716, 723, 730, 737, 744, 748, 750, 751, 765, 768, 769, 778, 780, 798, 799, 801, 803, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 833, 834, 835, 837, 838, 839, 840, 841, 842, 843, 855, 861, 863, 864, 871, 872, 874, 876], "attribut": [2, 3, 7, 8, 15, 16, 38, 43, 56, 116, 148, 149, 151, 153, 159, 160, 162, 877], "datatyp": [2, 3, 7, 13, 15, 56, 152, 196, 200, 202, 203, 204, 205, 206, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 225, 226, 227, 228, 229, 234, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 426, 427, 428, 429, 433, 434, 435, 436, 443], "custom": [2, 3, 7, 13, 16, 31, 37, 45, 152, 757, 796, 876], "reduct": [2, 3, 7, 13, 15, 22, 43, 121, 122, 123, 124, 125, 126, 127, 152, 159, 160, 177, 266, 569, 577, 578, 825, 863, 865], "allgath": [2, 3], "allgatherv": [2, 3, 4], "allreduc": [2, 3, 4, 10, 13, 16], "alltoallv": [2, 3, 4], "barrier": [2, 3], "broadcast": [2, 3, 4, 60, 67, 73, 85, 106, 109, 110, 113, 130, 140, 141, 143, 148, 152, 153, 155, 156, 164, 166, 168, 173, 758, 759, 763, 765, 766, 767, 771, 772, 774, 775, 776, 778, 779, 780, 782, 791, 793, 836], "reduc": [2, 3, 4, 13, 16, 49, 54, 56, 121, 122, 123, 124, 125, 126, 127, 149, 151, 152, 157, 167, 261, 266, 292, 296, 297, 303, 309, 325, 332, 337, 343, 376, 577, 755, 768, 780, 798], "reducescatt": [2, 3, 13, 16], "point": [2, 3, 8, 9, 11, 19, 20, 22, 25, 27, 29, 30, 34, 35, 37, 41, 50, 54, 55, 56, 62, 63, 86, 150, 153, 155, 157, 159, 161, 164, 167, 168, 169, 170, 181, 182, 184, 190, 223, 225, 226, 229, 230, 231, 232, 262, 263, 264, 266, 268, 269, 272, 274, 276, 277, 280, 281, 284, 285, 288, 290, 292, 294, 297, 299, 300, 303, 305, 307, 309, 311, 312, 315, 317, 318, 321, 323, 325, 327, 329, 331, 333, 334, 337, 339, 341, 343, 346, 348, 358, 378, 391, 426, 427, 428, 429, 439, 440, 441, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 466, 481, 494, 530, 537, 546, 558, 571, 577, 578, 604, 627, 629, 641, 643, 655, 657, 684, 686, 699, 701, 713, 715, 727, 729, 741, 743, 798, 799, 800, 801, 803, 843, 852, 853, 854, 855, 856, 859, 867, 871], "send": [2, 3, 757, 789, 791], "recv": [2, 3], "progress": [2, 3, 7, 12, 15, 25, 149, 257, 258, 262], "track": [2, 3, 7, 12, 15, 90, 149, 257, 258], "group_start": [2, 3], "group_end": [2, 3], "error": [2, 3, 32, 44, 51, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 588, 795, 856], "handl": [2, 3, 7, 8, 12, 32, 44, 60, 153, 168, 183, 259, 265, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 468, 469, 470, 471, 473, 475, 479, 483, 484, 486, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 509, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 527, 528, 530, 531, 532, 533, 534, 535, 536, 541, 542, 543, 544, 545, 548, 549, 550, 551, 553, 554, 560, 589, 592, 616, 627, 629, 631, 641, 643, 645, 655, 657, 674, 684, 686, 687, 699, 701, 702, 713, 715, 716, 727, 729, 730, 741, 743, 766, 767, 768, 769, 855], "except": [2, 3, 12, 14, 32, 37, 51, 60, 61, 63, 77, 78, 98, 149, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 181, 182, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 351, 352, 355, 356, 357, 360, 361, 367, 370, 371, 375, 380, 381, 382, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 402, 403, 404, 408, 409, 411, 415, 416, 419, 420, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 560, 562, 566, 578, 589, 601, 619, 689, 691, 701, 704, 715, 718, 729, 732, 743, 746, 755, 769, 784, 785, 790, 792, 796, 798, 841, 852, 854, 855, 856, 857, 858, 859, 863, 864, 868], "classif": [2, 3, 23, 24, 32, 43, 44, 45, 48, 50], "introduct": [3, 37, 44, 150, 168, 259, 264, 815, 846, 847], "ccl": [3, 7, 8, 9, 10, 12, 13], "current": [3, 7, 11, 19, 25, 32, 40, 44, 152, 168, 170, 184, 291, 293, 322, 373, 379, 398, 399, 400, 401, 402, 405, 406, 407, 410, 412, 413, 414, 420, 421, 426, 427, 511, 523, 529, 530, 537, 558, 591, 610, 756, 760, 763, 776, 784, 785, 788, 792, 795, 798, 805, 807, 810, 813, 814, 842, 843, 852, 853, 854, 856, 858, 863, 868, 874], "version": [3, 19, 28, 32, 44, 58, 151, 154, 156, 173, 175, 177, 179, 183, 262, 273, 362, 398, 466, 511, 531, 540, 565, 578, 587, 589, 796, 847, 848, 856, 858], "specif": [3, 7, 8, 9, 10, 11, 12, 13, 15, 16, 28, 29, 31, 32, 36, 40, 42, 44, 45, 48, 50, 51, 55, 58, 59, 60, 61, 63, 130, 149, 150, 151, 152, 158, 160, 163, 167, 174, 175, 177, 179, 180, 181, 183, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 348, 355, 357, 370, 375, 379, 417, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 467, 471, 473, 476, 487, 490, 494, 495, 512, 527, 531, 535, 539, 541, 549, 550, 560, 591, 593, 689, 701, 704, 715, 718, 729, 732, 743, 746, 755, 756, 757, 761, 771, 773, 774, 781, 796, 798, 815, 841, 842, 847, 851, 852, 853, 854, 856, 863, 864, 865, 877], "model": [3, 23, 43, 44, 45, 49, 52, 53, 55, 64, 84, 117, 150, 151, 152, 157, 160, 161, 170, 181, 346, 373, 421, 423, 456, 560, 796, 799, 801, 803, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 822, 829, 867, 876], "gener": [3, 6, 9, 19, 39, 43, 44, 45, 48, 50, 52, 53, 58, 60, 63, 116, 154, 157, 160, 162, 164, 165, 166, 169, 170, 172, 175, 184, 190, 191, 192, 193, 200, 201, 202, 203, 204, 205, 207, 208, 209, 211, 215, 216, 222, 223, 225, 226, 227, 228, 229, 241, 245, 246, 247, 252, 254, 255, 259, 263, 266, 268, 269, 272, 274, 276, 277, 280, 281, 290, 296, 297, 298, 299, 300, 303, 312, 318, 323, 331, 332, 333, 334, 337, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 438, 439, 440, 441, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 560, 561, 571, 573, 577, 578, 587, 588, 591, 597, 606, 618, 633, 647, 660, 668, 676, 687, 690, 702, 705, 716, 719, 730, 733, 747, 772, 774, 779, 791, 796, 800, 815, 829, 837, 847, 849, 850, 856, 858, 871, 875], "workflow": [3, 6, 45, 49, 261], "pattern": [4, 29, 62, 149, 151, 153, 265, 562, 566, 578, 581, 584, 815, 841], "occur": [4, 9, 30, 47, 184, 276, 277, 294, 327, 471, 494, 495, 527, 530, 531, 549, 571, 744, 766, 795, 856], "up": [4, 12, 29, 44, 48, 58, 153, 165, 377, 401, 444, 445, 446, 447, 456, 457, 458, 459, 578, 601, 765, 776, 778, 857, 873], "platform": [4, 149, 182, 796, 798, 876], "out": [4, 7, 10, 12, 22, 30, 40, 41, 42, 56, 58, 61, 78, 79, 80, 81, 82, 83, 149, 151, 152, 154, 156, 159, 162, 165, 168, 171, 173, 178, 184, 193, 225, 226, 227, 228, 229, 257, 258, 259, 260, 264, 487, 494, 512, 539, 562, 573, 593, 595, 666, 765, 775, 785, 841, 854], "cluster": [4, 19, 20, 23, 43, 44, 45], "node": [4, 25, 27, 45, 47, 141, 396, 592, 616, 631, 645, 674, 687, 702, 716, 730, 758, 759, 760, 761, 763, 764, 765, 766, 767, 769, 770, 772, 774, 776, 777, 778, 779, 782, 784, 785, 786, 787, 788, 789, 790, 791, 793, 795, 848, 855, 856], "dl": [4, 149], "reduce_scatt": [4, 7], "expos": [4, 40, 43, 48, 151, 152, 154, 162, 593], "control": [4, 12, 43, 50, 55, 61, 68, 69, 70, 71, 72, 73, 74, 78, 79, 80, 81, 82, 83, 98, 99, 106, 107, 108, 141, 151, 152, 154, 162, 184, 264, 511, 540, 588, 589, 757, 780, 829, 848, 852, 876], "over": [4, 12, 25, 37, 43, 56, 69, 77, 80, 82, 83, 100, 101, 121, 122, 123, 124, 125, 126, 127, 152, 156, 159, 160, 162, 170, 172, 177, 178, 180, 181, 184, 305, 307, 339, 341, 354, 370, 371, 373, 415, 416, 423, 562, 569, 570, 571, 577, 578, 780, 798, 800, 824, 856, 863, 865, 867, 876], "optim": [4, 31, 44, 45, 50, 59, 60, 63, 86, 87, 149, 150, 151, 154, 157, 158, 161, 162, 163, 164, 165, 168, 170, 171, 265, 437, 439, 440, 441, 581, 582, 768], "priorit": [4, 780], "persist": [4, 13, 439, 440, 441], "decoupl": 4, "time": [4, 19, 20, 22, 40, 43, 45, 46, 48, 51, 56, 58, 60, 63, 81, 82, 84, 113, 149, 151, 152, 154, 157, 159, 160, 161, 162, 163, 164, 165, 169, 171, 179, 180, 259, 260, 262, 263, 265, 266, 268, 269, 272, 274, 276, 277, 280, 281, 294, 297, 298, 299, 300, 303, 305, 307, 327, 331, 332, 333, 334, 337, 339, 341, 354, 379, 439, 440, 441, 466, 575, 578, 579, 591, 763, 765, 768, 774, 778, 780, 793, 798, 805, 810, 839, 842, 844, 847, 849, 850, 852, 856, 858, 863, 866, 874], "repetit": 4, "section": [5, 15, 19, 20, 22, 25, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 51, 52, 53, 54, 55, 58, 63, 150, 151, 152, 154, 157, 159, 164, 174, 184, 261, 262, 264, 265, 373, 377, 421, 558, 566, 568, 569, 570, 572, 577, 578, 579, 580, 581, 582, 583, 584, 587, 589, 590, 595, 596, 597, 598, 601, 602, 603, 605, 606, 608, 609, 610, 615, 616, 617, 618, 619, 620, 621, 627, 629, 631, 632, 633, 634, 635, 641, 643, 645, 646, 647, 648, 649, 655, 657, 658, 659, 660, 663, 665, 666, 667, 668, 669, 672, 673, 674, 675, 676, 677, 678, 684, 686, 687, 688, 689, 690, 691, 693, 694, 699, 701, 702, 703, 704, 705, 707, 708, 713, 715, 716, 717, 718, 719, 721, 722, 727, 729, 730, 731, 732, 733, 735, 736, 741, 743, 744, 745, 746, 747, 748, 749, 755, 758, 760, 761, 763, 767, 768, 771, 772, 774, 776, 779, 782, 784, 785, 790, 792, 793, 794, 797, 799, 800, 801, 803, 805, 807, 810, 811, 812, 813, 814, 815, 820, 822, 856, 858, 859, 862, 863, 865, 868, 870, 871, 876], "describ": [5, 12, 22, 29, 31, 39, 42, 43, 51, 52, 53, 56, 57, 58, 60, 62, 63, 98, 99, 142, 149, 151, 152, 160, 168, 170, 174, 180, 182, 184, 190, 191, 192, 203, 215, 245, 265, 297, 331, 354, 362, 363, 364, 365, 366, 372, 401, 402, 412, 426, 427, 433, 434, 438, 439, 440, 441, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 558, 560, 566, 572, 587, 590, 591, 597, 606, 610, 618, 633, 647, 660, 668, 676, 690, 705, 719, 733, 747, 794, 797, 798, 805, 810, 815, 820, 849, 850, 856, 858, 859, 862, 863, 865], "convent": [5, 60, 65, 68, 75, 77, 81, 88, 91, 92, 96, 102, 103, 106, 107, 118, 131, 133, 135, 144, 150, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 184, 260, 345, 472, 590, 794, 815, 829, 846, 847, 872], "shall": [5, 7, 9, 12, 13, 14, 19, 20, 22, 25, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 48, 51, 56, 149, 152, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 562], "public": [5, 12, 19, 20, 22, 25, 28, 29, 30, 31, 34, 35, 37, 38, 39, 41, 42, 48, 51, 60, 61, 62, 63, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 179, 180, 262, 346, 351, 352, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 370, 371, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 419, 420, 481, 562, 563, 564, 565, 566, 567, 568, 572, 574, 576, 578, 581, 582, 583, 584, 585, 590, 593, 595, 603, 616, 630, 631, 644, 645, 658, 666, 674, 687, 702, 716, 730, 756, 758, 759, 760, 761, 763, 767, 769, 770, 771, 772, 774, 776, 778, 779, 782, 784, 785, 790, 791, 792, 793, 799, 800, 801, 803, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 841, 842, 849, 852, 854, 855, 856, 857, 859, 861, 863, 864, 871, 874], "altern": [5, 19, 61, 149, 151, 169, 182, 183, 262, 490, 541, 542, 550, 562, 815, 820], "consid": [5, 43, 56, 58, 60, 61, 154, 157, 162, 177, 183, 259, 260, 262, 263, 394, 590, 780, 829, 856], "alia": [5, 19, 20, 22, 25, 39, 48, 51, 58, 151, 159, 170, 574, 590, 595, 597, 603, 616, 631, 645, 647, 658, 660, 666, 668, 674, 676, 687, 702, 716, 719, 730, 733, 744, 747, 763, 767, 771, 772, 774, 779, 790, 799, 801, 803, 874], "pointtopoint": 7, "These": [7, 11, 23, 36, 45, 50, 56, 58, 158, 178, 181, 182, 184, 193, 257, 258, 260, 262, 296, 345, 373, 377, 401, 421, 423, 439, 440, 441, 466, 490, 541, 542, 550, 559, 573, 584, 593, 595, 603, 606, 613, 616, 618, 621, 626, 631, 633, 635, 640, 645, 647, 649, 654, 658, 660, 666, 674, 676, 678, 683, 687, 690, 694, 698, 702, 703, 705, 708, 712, 716, 717, 719, 722, 726, 730, 733, 736, 740, 744, 753, 757, 790, 798, 799, 801, 803, 871, 874], "mean": [7, 18, 22, 23, 40, 43, 44, 48, 51, 52, 53, 56, 58, 60, 62, 63, 70, 71, 72, 78, 79, 80, 81, 82, 83, 100, 101, 107, 108, 124, 141, 142, 149, 154, 155, 156, 157, 158, 159, 163, 164, 165, 166, 167, 168, 171, 172, 173, 177, 357, 361, 375, 389, 390, 395, 397, 409, 437, 457, 459, 463, 494, 511, 573, 575, 768, 772, 788, 849, 856], "particip": [7, 12, 562, 569, 584, 597, 606, 608, 609, 610, 618, 621, 627, 629, 633, 635, 641, 643, 647, 649, 657, 660, 668, 676, 678, 686, 690, 694, 699, 701, 705, 708, 713, 715, 719, 722, 729, 733, 736, 743, 745, 746, 747, 774, 798, 853, 856, 857, 859, 866], "rank": [7, 10, 12, 58, 77, 84, 86, 87, 100, 101, 106, 117, 121, 122, 123, 124, 125, 126, 127, 149, 191, 192, 207, 208, 209, 213, 214, 215, 216, 218, 219, 238, 239, 243, 244, 245, 246, 247], "make": [7, 37, 39, 44, 45, 49, 51, 58, 106, 147, 151, 152, 153, 160, 259, 262, 263, 373, 401, 569, 571, 577, 578, 583, 585, 757, 761, 777, 780, 796, 850, 876], "abil": [7, 12, 14, 37, 40, 184], "either": [7, 12, 34, 35, 37, 40, 43, 48, 54, 56, 60, 69, 70, 72, 80, 82, 83, 98, 99, 130, 149, 151, 154, 155, 156, 159, 160, 162, 163, 165, 166, 167, 169, 172, 173, 178, 180, 184, 211, 220, 221, 241, 252, 254, 255, 259, 263, 265, 292, 294, 309, 310, 311, 312, 327, 343, 344, 439, 440, 441, 466, 494, 531, 535, 563, 564, 573, 598, 602, 608, 615, 629, 643, 657, 665, 669, 673, 686, 688, 701, 703, 715, 717, 729, 731, 743, 755, 758, 767, 779, 850, 859, 870], "addition": [7, 22, 106, 149, 151, 153, 176, 182, 259, 830], "accept": [7, 30, 39, 43, 48, 51, 56, 64, 69, 82, 83, 108, 147, 151, 178, 180, 184, 349, 354, 376, 466, 570, 571, 572, 577, 582, 747, 757, 758, 766, 767, 768, 772, 775, 776, 777, 779, 787, 792, 815, 820, 843, 853], "mai": [7, 8, 12, 13, 19, 37, 40, 46, 48, 50, 55, 56, 58, 60, 62, 63, 141, 142, 148, 149, 151, 152, 153, 155, 157, 160, 161, 167, 168, 169, 170, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 348, 362, 363, 364, 365, 366, 375, 386, 396, 398, 413, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 466, 531, 535, 569, 570, 571, 572, 574, 577, 578, 579, 582, 583, 585, 588, 589, 591, 593, 595, 603, 614, 616, 628, 631, 642, 645, 656, 658, 664, 666, 674, 685, 687, 700, 702, 714, 716, 728, 730, 742, 744, 757, 758, 765, 767, 772, 774, 775, 778, 779, 780, 786, 788, 789, 790, 798, 799, 800, 801, 803, 811, 812, 815, 820, 830, 837, 839, 850, 852, 856, 858, 864, 871, 874], "vector": [7, 10, 12, 19, 20, 22, 25, 27, 37, 40, 43, 46, 59, 60, 63, 81, 82, 150, 152, 156, 157, 159, 161, 165, 169, 170, 173, 183, 184, 185, 186, 187, 188, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 266, 268, 269, 272, 274, 275, 276, 277, 280, 281, 284, 285, 288, 290, 292, 294, 297, 299, 300, 303, 305, 307, 309, 311, 312, 315, 317, 318, 321, 323, 325, 327, 329, 331, 333, 334, 337, 339, 341, 343, 345, 353, 362, 363, 364, 365, 366, 376, 383, 390, 391, 401, 405, 410, 414, 423, 429, 430, 431, 432, 439, 440, 441, 442, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558, 559, 560, 597, 606, 618, 633, 647, 660, 668, 676, 690, 705, 719, 733, 744, 745, 748, 749, 754, 755, 770, 795, 856], "input": [7, 12, 31, 38, 40, 43, 50, 52, 53, 56, 58, 62, 63, 64, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 180, 181, 182, 184, 185, 186, 187, 188, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 348, 354, 358, 362, 363, 364, 365, 366, 368, 375, 379, 391, 396, 398, 399, 400, 401, 402, 405, 406, 407, 410, 412, 413, 414, 420, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 569, 570, 573, 574, 576, 596, 597, 605, 606, 610, 617, 618, 627, 632, 633, 641, 646, 647, 655, 659, 660, 667, 668, 675, 676, 684, 689, 690, 699, 704, 705, 713, 718, 719, 727, 732, 733, 741, 745, 746, 747, 757, 758, 761, 763, 767, 768, 771, 772, 773, 774, 775, 777, 778, 779, 787, 790, 791, 818, 833, 835, 838, 839], "output": [7, 31, 43, 51, 53, 54, 56, 58, 60, 62, 63, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 181, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 266, 268, 269, 272, 274, 276, 277, 280, 281, 284, 285, 288, 290, 292, 294, 297, 299, 300, 303, 305, 307, 309, 311, 312, 315, 317, 318, 321, 323, 325, 327, 329, 331, 333, 334, 337, 339, 341, 343, 348, 365, 366, 375, 379, 390, 391, 405, 407, 412, 413, 414, 423, 426, 427, 428, 429, 430, 431, 432, 439, 440, 441, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 457, 458, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 569, 573, 574, 576, 591, 757, 758, 761, 763, 766, 767, 771, 772, 777, 778, 779, 781, 787, 791, 792, 834, 835, 836, 837, 839], "option": [7, 8, 12, 13, 38, 39, 40, 48, 55, 60, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 184, 225, 265, 274, 275, 288, 290, 296, 321, 323, 391, 426, 427, 433, 434, 437, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 571, 589, 627, 641, 655, 684, 699, 713, 727, 741, 820, 829, 830, 849], "buffertyp": 7, "type": [7, 12, 19, 20, 22, 25, 30, 31, 32, 34, 35, 37, 38, 40, 41, 43, 44, 45, 50, 51, 54, 56, 57, 58, 59, 60, 61, 62, 148, 149, 150, 151, 152, 153, 159, 177, 178, 181, 182, 184, 230, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 367, 369, 370, 371, 373, 375, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 403, 404, 408, 409, 411, 413, 415, 416, 417, 419, 421, 424, 425, 426, 427, 428, 429, 433, 434, 435, 436, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 466, 492, 494, 500, 501, 502, 504, 513, 518, 533, 534, 544, 558, 561, 565, 566, 568, 569, 570, 571, 572, 573, 574, 577, 578, 579, 580, 581, 584, 585, 586, 593, 595, 596, 597, 598, 601, 603, 605, 606, 608, 609, 610, 613, 616, 617, 618, 619, 620, 621, 626, 627, 629, 631, 632, 633, 634, 635, 640, 641, 643, 645, 646, 647, 648, 649, 654, 655, 657, 658, 659, 660, 663, 666, 667, 668, 669, 672, 674, 675, 676, 677, 678, 683, 684, 686, 687, 688, 689, 690, 691, 693, 694, 698, 699, 701, 702, 703, 704, 705, 707, 708, 712, 713, 715, 716, 717, 718, 719, 721, 722, 726, 727, 729, 730, 731, 732, 733, 735, 736, 740, 741, 743, 744, 745, 746, 747, 749, 753, 759, 760, 761, 763, 765, 767, 772, 775, 776, 777, 778, 780, 782, 784, 785, 786, 787, 789, 790, 791, 792, 793, 796, 799, 801, 803, 807, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 848, 849, 853, 858, 859, 860, 861, 863, 865, 866, 867, 871, 874], "buf": [7, 178], "send_buf": 7, "recv_buf": 7, "At": [7, 40, 45, 77, 164], "least": [7, 28, 34, 35, 41, 43, 48, 60, 77, 152, 160, 178, 181, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 265, 266, 268, 269, 270, 272, 273, 274, 276, 277, 278, 280, 281, 282, 284, 285, 286, 288, 290, 292, 294, 296, 297, 300, 301, 303, 305, 307, 309, 311, 312, 313, 315, 317, 318, 319, 321, 323, 325, 327, 329, 331, 334, 335, 337, 339, 341, 343, 345, 426, 427, 428, 429, 433, 434, 435, 436, 439, 440, 441, 494, 635, 643, 649, 708, 715, 722, 755, 775, 785, 795, 855], "u": [7, 53, 159, 170, 171, 180, 184, 274, 275, 276, 284, 290, 294, 311, 317, 320, 323, 327, 346, 423, 574, 799, 801, 803, 815], "8": [7, 8, 29, 54, 55, 62, 63, 150, 152, 153, 346, 362, 363, 364, 365, 366, 412, 562], "16": [7, 8, 29, 54, 55, 62, 63, 150, 362, 363, 364, 365, 366, 573], "32": [7, 8, 29, 54, 55, 62, 63, 150, 152, 182, 345, 348, 350, 354, 362, 364, 365, 366, 369, 375, 377, 379, 400, 401, 405, 407, 410, 412, 414, 417], "64": [7, 8, 29, 182, 184, 348, 364, 365, 366, 368, 369, 375, 379, 407, 413, 417], "_t": [7, 170], "float": [7, 8, 19, 20, 22, 25, 29, 34, 35, 37, 41, 43, 49, 50, 54, 55, 56, 62, 63, 71, 84, 117, 150, 153, 154, 157, 158, 159, 162, 163, 167, 168, 169, 170, 173, 182, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 348, 349, 351, 352, 355, 356, 357, 360, 361, 370, 372, 380, 381, 384, 385, 387, 388, 389, 390, 392, 393, 395, 397, 411, 415, 419, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558, 573, 577, 578, 606, 618, 633, 687, 690, 692, 702, 705, 706, 716, 720, 730, 734, 854, 856], "explicit": [7, 19, 20, 22, 25, 37, 39, 51, 179, 180, 351, 352, 354, 355, 356, 357, 360, 361, 367, 370, 371, 380, 381, 382, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 397, 403, 404, 408, 409, 411, 415, 416, 419, 426, 427, 433, 434, 448, 562, 585, 593, 595, 596, 597, 603, 605, 606, 616, 617, 618, 631, 632, 633, 645, 646, 647, 658, 659, 660, 666, 667, 668, 674, 675, 676, 687, 689, 690, 702, 704, 705, 716, 718, 719, 730, 732, 733, 744, 746, 747, 756, 759, 760, 763, 770, 774, 782, 784, 785, 791, 793, 800, 855, 856, 857, 861, 863, 864, 866, 871, 874], "cannot": [7, 30, 42, 43, 58, 60, 61, 63, 128, 151, 164, 165, 168, 178, 179, 180, 181, 184, 262, 263, 274, 439, 440, 441, 562, 583, 766, 767, 768, 776, 793, 805, 810, 837, 850, 856, 858, 876], "infer": [7, 28, 39, 43, 46, 48, 49, 50, 51, 55, 56, 60, 63, 149, 153, 159, 170], "argument": [7, 9, 12, 30, 39, 51, 56, 58, 60, 61, 116, 148, 152, 153, 177, 178, 179, 180, 181, 182, 184, 186, 187, 188, 193, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 225, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 252, 254, 255, 257, 258, 262, 263, 265, 267, 270, 271, 273, 275, 278, 279, 282, 283, 286, 287, 289, 291, 293, 295, 297, 298, 301, 302, 304, 306, 308, 310, 313, 314, 316, 319, 320, 322, 324, 326, 328, 330, 331, 332, 335, 336, 338, 340, 342, 344, 366, 379, 407, 426, 427, 439, 440, 441, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 562, 565, 569, 570, 573, 577, 578, 579, 583, 585, 586, 595, 596, 597, 603, 605, 606, 616, 617, 618, 631, 632, 633, 645, 646, 647, 658, 659, 660, 666, 667, 668, 674, 675, 676, 687, 689, 690, 702, 704, 705, 716, 718, 719, 730, 732, 733, 744, 746, 747, 758, 763, 767, 772, 774, 776, 779, 783, 784, 790, 792, 795, 799, 801, 803, 815, 820, 829, 830, 833, 834, 835, 836, 837, 838, 839, 840, 852, 853, 856, 866, 874], "native_device_typ": [7, 12], "translat": 7, "native_stream_typ": [7, 12], "correspond": [7, 12, 13, 19, 27, 37, 48, 51, 55, 56, 58, 60, 61, 81, 82, 106, 121, 122, 123, 124, 125, 126, 127, 141, 149, 151, 152, 154, 155, 157, 158, 160, 161, 162, 164, 166, 167, 168, 171, 177, 178, 180, 182, 184, 259, 260, 262, 264, 269, 292, 294, 300, 312, 318, 325, 327, 334, 345, 348, 375, 377, 403, 405, 414, 439, 440, 441, 478, 489, 505, 507, 508, 509, 518, 524, 525, 530, 534, 536, 557, 558, 578, 588, 687, 702, 709, 716, 723, 730, 757, 771, 791, 792, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 821, 824, 825, 826, 827, 828, 836, 838, 841, 842, 856, 863, 864, 865, 866, 868], "miss": [7, 40, 63, 801], "default": [7, 19, 20, 22, 25, 37, 38, 41, 42, 43, 44, 48, 60, 61, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 117, 119, 121, 122, 123, 124, 125, 126, 127, 130, 132, 133, 134, 135, 136, 138, 140, 141, 143, 145, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 179, 180, 182, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 261, 262, 264, 266, 268, 269, 272, 274, 276, 277, 280, 281, 284, 285, 288, 290, 292, 294, 297, 299, 300, 303, 305, 307, 309, 311, 312, 315, 317, 318, 321, 323, 325, 327, 329, 331, 333, 334, 337, 339, 341, 343, 351, 352, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 370, 371, 377, 380, 381, 382, 384, 385, 386, 387, 388, 389, 392, 393, 394, 395, 397, 398, 404, 405, 408, 411, 414, 415, 416, 419, 430, 431, 432, 438, 439, 440, 441, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 570, 571, 572, 573, 574, 577, 581, 582, 583, 584, 588, 589, 593, 744, 745, 746, 755, 756, 758, 763, 767, 768, 769, 772, 776, 779, 780, 795, 799, 801, 803, 829, 851, 852, 855, 856, 857, 863, 864, 866, 868], "default_": 7, "operation_nam": 7, "_attr": 7, "compli": 7, "behavior": [7, 12, 13, 40, 42, 50, 61, 152, 154, 157, 159, 163, 164, 170, 178, 180, 182, 259, 260, 263, 426, 427, 428, 429, 433, 434, 435, 436, 439, 440, 441, 518, 569, 583, 593, 596, 598, 602, 604, 605, 608, 613, 615, 617, 627, 629, 632, 641, 643, 646, 655, 657, 659, 665, 667, 669, 673, 675, 684, 686, 688, 689, 699, 701, 703, 704, 713, 715, 717, 718, 727, 729, 731, 732, 741, 743, 744, 746, 748, 755, 761, 768, 774, 776, 780, 784, 790, 798, 799, 801, 803, 852, 854, 855, 856, 857, 858, 859, 870], "undefin": [7, 42, 55, 56, 58, 62, 63, 159, 170, 178, 180, 184, 259, 262, 263, 425, 426, 427, 428, 429, 433, 434, 435, 436, 439, 440, 441, 568, 574, 588, 593, 596, 598, 602, 604, 605, 608, 613, 615, 617, 627, 629, 632, 641, 643, 646, 655, 657, 659, 665, 667, 669, 673, 675, 684, 686, 688, 689, 699, 701, 703, 704, 713, 715, 717, 718, 727, 729, 731, 732, 741, 743, 744, 746, 748, 755, 761, 784, 790, 799, 801, 803, 842, 854, 856, 857, 858, 859, 870], "unless": [7, 29, 58, 60, 152, 159, 162, 175, 180, 184, 262, 439, 440, 441, 534, 558, 582, 872, 877], "send_count": 7, "within": [7, 12, 31, 34, 35, 36, 37, 40, 41, 42, 45, 48, 60, 61, 149, 153, 159, 160, 179, 180, 182, 184, 202, 223, 226, 229, 259, 264, 375, 437, 518, 540, 566, 758, 763, 767, 772, 779, 853, 855, 856, 858, 871, 873], "place": [7, 36, 58, 141, 142, 149, 153, 154, 155, 156, 158, 159, 162, 172, 173, 177, 179, 193, 222, 223, 225, 226, 227, 228, 229, 257, 258, 259, 260, 264, 556, 588, 610, 619, 627, 641, 655, 684, 687, 691, 699, 702, 713, 716, 727, 730, 741, 745, 746, 755, 856], "wai": [7, 8, 12, 22, 36, 37, 40, 54, 60, 64, 130, 151, 152, 156, 157, 159, 160, 168, 173, 179, 184, 262, 366, 379, 407, 425, 563, 564, 581, 801, 811, 812, 815, 829], "found": [7, 54, 165, 181, 184, 220, 221, 261, 262, 377, 379, 609, 629, 635, 643, 649, 657, 686, 701, 708, 715, 722, 729, 743], "offset": [7, 13, 29, 37, 58, 60, 84, 86, 87, 117, 151, 184, 188, 195, 196, 202, 203, 206, 223, 226, 229, 247, 255, 259, 264, 362, 363, 364, 365, 366, 369, 376, 413, 443], "count": [7, 37, 42, 43, 61, 68, 69, 141, 142, 177, 181, 259, 347, 373, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 603, 616, 631, 645, 674, 687, 702, 716, 730, 744, 746, 763, 776, 782], "sendbuff": 7, "recvbuff": 7, "templat": [7, 13, 19, 20, 22, 25, 34, 35, 37, 38, 39, 41, 48, 51, 52, 60, 63, 159, 177, 178, 179, 180, 181, 182, 184, 259, 263, 264, 267, 270, 271, 273, 275, 278, 279, 282, 283, 286, 287, 289, 291, 293, 295, 298, 301, 302, 304, 306, 308, 310, 313, 314, 316, 319, 320, 322, 324, 326, 328, 330, 332, 335, 336, 338, 340, 342, 344, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 403, 404, 408, 409, 411, 413, 415, 416, 417, 419, 421, 426, 427, 428, 429, 433, 434, 435, 436, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 466, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 574, 576, 577, 578, 579, 581, 582, 583, 596, 597, 599, 600, 601, 604, 605, 606, 608, 609, 610, 611, 612, 617, 618, 621, 622, 623, 624, 627, 629, 630, 632, 633, 635, 636, 637, 638, 641, 643, 644, 646, 647, 649, 650, 651, 652, 655, 657, 659, 660, 661, 662, 663, 667, 668, 670, 671, 672, 675, 676, 678, 679, 680, 681, 684, 686, 689, 690, 694, 695, 696, 699, 701, 704, 705, 708, 709, 710, 713, 715, 718, 719, 722, 723, 724, 727, 729, 732, 733, 736, 737, 738, 741, 743, 745, 746, 747, 750, 751, 752, 758, 759, 760, 761, 763, 764, 767, 768, 771, 772, 773, 774, 775, 776, 777, 778, 779, 781, 782, 784, 785, 786, 787, 789, 790, 791, 792, 793, 796, 799, 800, 801, 803, 806, 807, 815, 817, 821, 824, 825, 827, 828, 829, 833, 834, 835, 836, 837, 838, 839, 840, 850, 853, 856, 858, 859, 862, 863, 864, 865, 866, 867, 871], "class": [7, 8, 9, 12, 13, 14, 16, 19, 20, 22, 23, 25, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 48, 51, 55, 58, 60, 61, 63, 151, 152, 160, 170, 174, 175, 180, 181, 182, 183, 184, 257, 258, 259, 263, 264, 368, 373, 396, 413, 421, 426, 427, 433, 434, 437, 438, 439, 440, 441, 562, 563, 564, 565, 567, 568, 572, 574, 575, 576, 581, 582, 583, 584, 585, 586, 597, 606, 618, 625, 633, 639, 647, 653, 660, 668, 676, 682, 690, 705, 719, 733, 747, 756, 758, 759, 760, 761, 762, 763, 765, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 778, 779, 781, 782, 784, 785, 786, 789, 790, 791, 792, 793, 797, 799, 800, 801, 803, 816, 818, 820, 829, 830, 834, 840, 841, 842, 844, 848, 849, 852, 854, 855, 856, 857, 859, 861, 862, 863, 864, 867, 871, 872], "const": [7, 8, 12, 13, 19, 20, 22, 25, 29, 34, 35, 37, 38, 39, 41, 42, 43, 48, 49, 51, 52, 60, 61, 63, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 182, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 266, 268, 269, 272, 274, 276, 277, 280, 281, 284, 285, 288, 290, 292, 294, 297, 299, 300, 303, 305, 307, 309, 311, 312, 315, 317, 318, 321, 323, 325, 327, 329, 331, 333, 334, 337, 339, 341, 343, 351, 352, 354, 355, 356, 357, 360, 361, 367, 370, 371, 379, 380, 381, 382, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 419, 420, 430, 431, 432, 439, 440, 441, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 574, 577, 578, 579, 585, 591, 593, 594, 595, 596, 598, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 648, 649, 650, 651, 653, 654, 655, 656, 657, 658, 659, 661, 663, 664, 666, 667, 669, 670, 672, 673, 674, 675, 677, 678, 679, 680, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 711, 712, 713, 714, 715, 716, 717, 718, 720, 721, 722, 723, 725, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 753, 754, 755, 758, 759, 760, 763, 765, 767, 768, 771, 772, 774, 776, 779, 780, 782, 784, 785, 790, 791, 792, 793, 799, 800, 801, 803, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 854, 855, 856, 857, 859, 861, 863, 864, 865, 866, 867, 869, 871, 874], "size_t": [7, 8, 10, 12, 13, 60, 61, 63, 159, 180, 202, 352, 354, 356, 372, 439, 440, 441, 463, 565, 573, 577, 585, 594, 603, 613, 758, 767, 771, 773, 776, 779, 781, 783, 790, 798, 799, 800, 801, 803, 816, 822, 832, 840, 852, 864, 867], "comm": [7, 10, 12], "allgather_attr": 7, "attr": [7, 8, 63, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "default_allgather_attr": 7, "vector_class": [7, 12, 41, 184, 229], "dep": 7, "dtype": [7, 8, 42, 63], "local": [7, 12, 36, 40, 58, 149, 159, 160, 468, 469, 470, 471, 473, 475, 479, 483, 484, 486, 490, 491, 492, 493, 495, 497, 498, 499, 500, 501, 502, 503, 504, 509, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 527, 528, 530, 531, 532, 533, 534, 535, 536, 541, 542, 543, 544, 545, 548, 549, 550, 551, 553, 554, 559, 784, 847, 848, 863, 864, 865, 866, 868, 869, 871], "gather": 7, "buffertuyp": 7, "larg": [7, 28, 261, 262, 376, 402, 471, 492, 494, 495, 500, 527, 531, 544, 549, 782], "enough": [7, 34, 35, 152, 494, 578, 876], "e": [7, 10, 19, 28, 31, 40, 42, 43, 46, 50, 56, 58, 88, 91, 100, 101, 104, 111, 112, 131, 133, 135, 149, 152, 154, 156, 158, 161, 162, 172, 177, 184, 259, 262, 263, 264, 265, 266, 292, 325, 346, 354, 356, 367, 373, 385, 388, 426, 427, 439, 440, 441, 443, 483, 496, 497, 498, 499, 503, 558, 765, 793, 855, 871], "size": [7, 8, 10, 12, 34, 35, 37, 43, 54, 55, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 180, 181, 182, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 362, 363, 364, 365, 366, 369, 386, 390, 394, 403, 409, 410, 414, 425, 426, 427, 428, 429, 433, 434, 435, 436, 439, 440, 441, 443, 448, 451, 463, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 562, 563, 564, 565, 569, 571, 577, 578, 582, 583, 584, 585, 595, 602, 603, 616, 631, 645, 658, 674, 687, 692, 702, 706, 716, 720, 730, 734, 744, 745, 748, 755, 798, 831, 852, 856, 864, 871], "equal": [7, 8, 13, 25, 29, 37, 41, 42, 43, 58, 60, 63, 68, 86, 87, 114, 115, 120, 121, 122, 123, 124, 125, 126, 127, 130, 141, 152, 154, 156, 159, 161, 162, 165, 166, 169, 174, 177, 179, 180, 181, 202, 203, 215, 259, 260, 262, 266, 268, 269, 272, 274, 276, 277, 280, 281, 284, 285, 288, 290, 292, 294, 297, 299, 300, 303, 305, 307, 309, 311, 312, 315, 317, 318, 321, 323, 325, 327, 329, 331, 333, 334, 337, 339, 341, 343, 377, 412, 425, 437, 448, 451, 507, 508, 524, 525, 536, 558, 569, 571, 577, 579, 584, 588, 589, 591, 594, 599, 605, 610, 611, 617, 622, 623, 627, 630, 631, 632, 636, 637, 644, 646, 650, 651, 661, 670, 675, 679, 680, 684, 687, 689, 695, 697, 699, 702, 704, 709, 711, 716, 718, 722, 723, 725, 730, 732, 737, 739, 741, 750, 751, 763, 776, 780, 795, 798, 802, 822, 829, 832, 856, 864, 869], "number": [7, 12, 19, 20, 22, 25, 29, 37, 40, 41, 42, 43, 45, 46, 48, 59, 60, 61, 63, 68, 69, 70, 71, 72, 78, 79, 80, 81, 82, 83, 84, 86, 87, 107, 108, 117, 147, 149, 152, 153, 154, 155, 157, 159, 162, 164, 165, 166, 167, 170, 171, 172, 175, 177, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 261, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 422, 425, 426, 427, 428, 429, 433, 434, 435, 436, 443, 448, 451, 463, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558, 560, 562, 569, 571, 573, 577, 579, 582, 584, 591, 599, 601, 605, 607, 611, 614, 621, 622, 628, 635, 636, 642, 643, 649, 650, 656, 657, 661, 664, 670, 678, 679, 685, 687, 689, 692, 694, 695, 700, 702, 704, 706, 708, 709, 714, 715, 716, 718, 720, 722, 723, 728, 729, 730, 732, 734, 736, 737, 742, 750, 754, 757, 758, 761, 763, 776, 783, 790, 801, 816, 822, 840, 852, 856, 858, 864, 869, 874], "skip": [7, 177, 362, 363, 364, 365, 366, 368, 374, 396, 422], "explicitli": [7, 27, 39, 51, 62, 152, 155, 157, 167, 170, 174, 179, 181, 184, 259, 260, 262, 266, 267, 268, 269, 271, 272, 273, 275, 279, 283, 287, 289, 291, 292, 293, 295, 298, 302, 303, 304, 306, 308, 310, 314, 316, 320, 322, 324, 325, 326, 328, 330, 332, 336, 337, 338, 340, 342, 344, 425, 466, 796, 798, 829, 854, 856, 859, 876], "return": [7, 8, 11, 12, 13, 14, 19, 20, 22, 25, 34, 35, 36, 37, 39, 40, 41, 42, 43, 48, 51, 60, 61, 62, 63, 130, 141, 142, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 351, 352, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 370, 371, 379, 380, 381, 382, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 403, 404, 407, 408, 409, 411, 415, 416, 419, 426, 427, 428, 429, 430, 431, 432, 437, 439, 440, 441, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 562, 563, 564, 565, 566, 570, 571, 572, 573, 574, 576, 577, 578, 579, 585, 591, 593, 594, 596, 598, 599, 601, 602, 604, 605, 607, 608, 609, 610, 611, 613, 614, 617, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 632, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 646, 648, 649, 650, 651, 653, 654, 655, 656, 657, 659, 661, 663, 664, 667, 669, 670, 672, 673, 675, 677, 678, 679, 680, 682, 683, 684, 685, 686, 688, 689, 691, 692, 693, 694, 695, 697, 698, 699, 700, 701, 703, 704, 706, 707, 708, 709, 711, 712, 713, 714, 715, 717, 718, 720, 721, 722, 723, 725, 726, 727, 728, 729, 731, 732, 734, 735, 736, 737, 739, 740, 741, 742, 743, 745, 746, 748, 749, 750, 751, 753, 754, 758, 759, 760, 761, 763, 764, 765, 767, 768, 769, 771, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 784, 785, 790, 791, 792, 793, 795, 798, 799, 800, 801, 802, 803, 805, 807, 810, 813, 814, 815, 816, 817, 818, 827, 828, 831, 832, 834, 835, 837, 838, 840, 841, 842, 852, 854, 855, 856, 857, 858, 859, 861, 863, 864, 865, 866, 867, 868, 869, 871, 874], "singl": [7, 8, 11, 12, 36, 40, 43, 54, 55, 56, 60, 62, 63, 116, 121, 122, 123, 124, 125, 126, 127, 149, 151, 152, 154, 157, 159, 160, 162, 168, 170, 184, 188, 195, 196, 202, 206, 223, 228, 229, 236, 247, 255, 259, 260, 261, 262, 263, 264, 265, 351, 360, 362, 363, 364, 365, 366, 380, 382, 392, 402, 420, 466, 487, 490, 491, 492, 493, 494, 500, 501, 502, 504, 512, 513, 518, 533, 534, 539, 541, 542, 543, 544, 545, 550, 551, 553, 558, 562, 578, 760, 765, 766, 772, 778, 779, 782, 783, 784, 785, 790, 791, 793, 795, 796, 850, 852, 856], "differ": [7, 40, 43, 45, 50, 54, 56, 57, 58, 60, 61, 62, 63, 67, 85, 106, 109, 110, 113, 128, 140, 141, 142, 143, 150, 151, 152, 153, 159, 160, 164, 168, 170, 181, 184, 188, 195, 196, 202, 206, 223, 226, 229, 247, 255, 259, 260, 265, 296, 346, 348, 362, 373, 375, 398, 420, 421, 424, 439, 440, 441, 466, 487, 494, 505, 512, 530, 539, 558, 562, 569, 578, 591, 613, 614, 626, 628, 640, 642, 654, 656, 664, 666, 683, 685, 687, 698, 700, 702, 712, 714, 716, 726, 728, 730, 740, 742, 753, 757, 797, 799, 815, 816, 831, 852, 855, 858, 864, 867, 872, 874], "contribut": [7, 183, 877], "segment": [7, 345], "rank_offset": 7, "where": [7, 9, 12, 19, 20, 22, 25, 27, 29, 30, 40, 43, 45, 48, 53, 56, 58, 60, 64, 68, 71, 77, 81, 82, 84, 86, 87, 100, 101, 112, 117, 120, 121, 122, 123, 124, 125, 126, 127, 135, 141, 152, 153, 154, 155, 156, 157, 161, 162, 163, 165, 167, 169, 170, 171, 172, 174, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 351, 352, 355, 356, 357, 360, 361, 366, 367, 368, 370, 371, 379, 380, 381, 382, 384, 387, 388, 389, 390, 392, 393, 394, 395, 397, 401, 403, 404, 407, 408, 409, 411, 412, 413, 415, 416, 419, 423, 426, 427, 439, 440, 441, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 562, 563, 564, 566, 569, 571, 574, 577, 578, 579, 582, 584, 589, 591, 595, 597, 603, 606, 616, 618, 619, 621, 627, 631, 633, 635, 641, 645, 647, 649, 655, 658, 660, 666, 668, 674, 676, 678, 684, 687, 690, 691, 694, 699, 702, 705, 708, 713, 716, 719, 722, 727, 730, 733, 736, 741, 744, 747, 763, 767, 771, 772, 774, 790, 796, 799, 801, 803, 815, 820, 826, 849, 856, 862, 866, 874, 876], "recv_count": 7, "allgatherv_attr": [7, 13], "default_allgatherv_attr": 7, "receiv": [7, 20, 149, 182, 566, 582, 757, 758, 759, 760, 761, 763, 765, 767, 771, 774, 776, 777, 779, 782, 784, 785, 787, 790, 791, 793, 818, 820, 854, 857, 860], "expect": [7, 60, 62, 149, 150, 151, 152, 154, 157, 159, 160, 161, 162, 163, 164, 165, 169, 182, 184, 262, 263, 571, 744, 771, 774, 806, 807, 876], "posit": [7, 19, 20, 29, 60, 68, 69, 70, 71, 72, 78, 79, 80, 81, 82, 83, 98, 99, 100, 101, 102, 107, 108, 177, 180, 181, 184, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 221, 222, 223, 225, 226, 227, 228, 229, 234, 241, 242, 243, 244, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 267, 270, 271, 273, 275, 277, 278, 279, 282, 283, 286, 287, 289, 290, 291, 293, 295, 296, 298, 301, 302, 304, 306, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 326, 328, 330, 332, 335, 336, 338, 340, 342, 344, 345, 390, 425, 489, 503, 531, 535, 545, 546, 565, 571, 622, 636, 650, 679, 748, 750, 761, 776, 831, 841, 842], "caller": 7, "global": [7, 10, 149, 152, 159, 179, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 784, 858], "distribut": [7, 10, 12, 40, 44, 45, 50, 150, 175, 182, 265, 346, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 367, 369, 370, 371, 372, 373, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 403, 404, 408, 409, 411, 415, 416, 417, 418, 419, 421, 423, 483, 484, 496, 497, 499, 558, 578, 584, 877], "rtype": 7, "allreduce_attr": [7, 13], "default_allreduce_attr": 7, "have": [7, 11, 31, 36, 40, 41, 42, 48, 50, 52, 54, 55, 56, 58, 60, 63, 81, 141, 142, 146, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 179, 181, 184, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 225, 226, 227, 228, 229, 234, 237, 238, 239, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 262, 264, 268, 294, 297, 318, 319, 327, 331, 405, 423, 437, 466, 494, 511, 562, 577, 578, 593, 599, 622, 636, 650, 661, 670, 679, 757, 765, 766, 768, 769, 772, 775, 777, 780, 784, 787, 799, 841, 842, 852, 854, 855, 856, 857, 858, 860, 864, 866, 869, 876], "dimens": [7, 58, 59, 60, 62, 63, 68, 69, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 98, 100, 101, 106, 107, 108, 114, 115, 117, 121, 122, 123, 124, 125, 126, 127, 130, 135, 141, 142, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 184, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 222, 223, 225, 226, 227, 228, 229, 234, 241, 242, 243, 244, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 259, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 377, 390, 405, 414, 428, 435, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 562], "appli": [7, 19, 22, 38, 43, 48, 50, 51, 56, 58, 63, 65, 67, 75, 84, 85, 86, 87, 88, 91, 92, 94, 96, 102, 103, 104, 106, 109, 110, 113, 114, 117, 118, 121, 122, 123, 124, 125, 126, 127, 131, 133, 135, 140, 142, 143, 144, 152, 154, 155, 157, 158, 159, 161, 164, 167, 170, 177, 178, 180, 181, 182, 184, 200, 201, 202, 203, 204, 205, 206, 215, 216, 222, 223, 225, 226, 227, 228, 229, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 262, 265, 305, 306, 307, 308, 309, 310, 339, 340, 341, 342, 343, 344, 346, 365, 368, 379, 391, 398, 399, 400, 401, 402, 405, 406, 407, 410, 412, 414, 420, 423, 569, 570, 577, 768, 775, 792, 819, 820, 821, 837, 852, 856, 858], "alltoal": 7, "separ": [7, 38, 43, 152, 154, 157, 162, 259, 260, 264, 799, 826, 849, 853, 856], "j": [7, 19, 22, 25, 28, 49, 58, 60, 104, 135, 163, 177, 188, 195, 196, 202, 206, 223, 226, 229, 247, 255, 259, 262, 263, 345, 346, 402, 420, 425, 444, 445, 446, 447, 453, 457, 458, 562, 563, 564, 565, 816, 822], "th": [7, 19, 22, 25, 46, 49, 121, 122, 123, 124, 125, 126, 127, 152, 266, 268, 269, 272, 274, 276, 277, 280, 281, 284, 285, 288, 290, 292, 294, 297, 299, 300, 303, 305, 307, 309, 311, 312, 315, 317, 318, 321, 323, 325, 327, 329, 331, 333, 334, 337, 339, 341, 343, 366, 379, 407, 412, 425, 791, 816, 822], "sent": [7, 771, 772, 776], "alltoallv_attr": [7, 13], "default_alltoallv_attr": 7, "onli": [7, 12, 19, 34, 35, 36, 37, 38, 40, 43, 48, 50, 54, 55, 56, 58, 60, 61, 62, 84, 86, 87, 101, 114, 115, 117, 149, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 177, 178, 180, 181, 182, 184, 188, 193, 195, 196, 202, 204, 206, 223, 226, 229, 247, 255, 257, 258, 259, 260, 262, 263, 264, 269, 277, 281, 285, 288, 289, 290, 291, 300, 312, 318, 321, 322, 323, 324, 329, 334, 373, 376, 421, 426, 427, 428, 429, 433, 434, 438, 439, 440, 441, 471, 494, 518, 527, 531, 549, 562, 565, 566, 567, 569, 574, 577, 582, 593, 595, 597, 598, 602, 603, 604, 606, 608, 609, 610, 613, 615, 616, 618, 621, 626, 627, 629, 631, 633, 635, 640, 641, 643, 645, 647, 649, 654, 657, 658, 660, 665, 666, 668, 669, 673, 674, 676, 678, 683, 686, 687, 688, 690, 694, 698, 699, 701, 702, 703, 705, 708, 712, 713, 715, 716, 717, 719, 722, 726, 729, 730, 731, 733, 736, 740, 743, 744, 745, 746, 747, 753, 755, 761, 763, 765, 772, 774, 778, 783, 793, 798, 799, 801, 803, 850, 854, 856, 858, 867, 870, 871, 874], "after": [7, 20, 29, 37, 40, 43, 48, 51, 52, 56, 140, 149, 152, 153, 157, 177, 179, 184, 262, 263, 264, 300, 303, 309, 334, 337, 343, 466, 494, 562, 563, 564, 571, 758, 763, 765, 767, 772, 779, 780, 788, 793, 805, 810, 815, 816, 822, 830, 853, 856, 857, 861, 869], "barrier_attr": [7, 13], "default_barrier_attr": 7, "denot": [7, 19, 20, 22, 25, 46, 56, 58, 59, 69, 80, 82, 83, 107, 108, 114, 115, 156, 158, 309, 310, 343, 344, 369, 402, 484, 498, 546, 558, 608, 609, 610, 621, 629, 635, 643, 649, 657, 678, 686, 687, 694, 701, 702, 708, 715, 716, 722, 729, 730, 736, 743, 777, 787, 816, 849], "root": [7, 27, 122, 137, 159, 167, 482, 513, 515, 516, 532, 533, 548, 558, 573, 854], "broadcast_attr": [7, 13], "default_broadcast_attr": 7, "reduce_attr": [7, 13], "default_reduce_attr": 7, "ignor": [7, 60, 68, 69, 72, 82, 83, 98, 99, 107, 108, 152, 157, 158, 366, 379, 407, 439, 440, 441, 572, 756, 815, 816, 852, 856], "get": [7, 11, 12, 13, 22, 43, 49, 63, 149, 170, 372, 418, 511, 512, 556, 559, 761, 771, 774, 776, 778, 782, 793, 864], "scatter": 7, "reduce_scatter_attr": [7, 13], "default_reduce_scatter_attr": 7, "comm_siz": 7, "two": [7, 27, 30, 39, 43, 46, 51, 58, 59, 60, 61, 62, 63, 67, 85, 106, 109, 110, 113, 128, 130, 140, 143, 151, 152, 164, 165, 168, 170, 177, 184, 186, 193, 196, 197, 198, 199, 206, 214, 219, 225, 228, 230, 232, 236, 239, 240, 244, 252, 254, 257, 258, 259, 260, 262, 263, 265, 349, 364, 366, 373, 375, 376, 377, 400, 407, 421, 423, 425, 426, 427, 466, 477, 478, 507, 508, 513, 524, 525, 531, 534, 536, 538, 558, 562, 563, 564, 565, 570, 573, 574, 577, 578, 611, 622, 636, 650, 679, 695, 709, 723, 737, 750, 761, 766, 780, 798, 799, 801, 803, 815, 820, 829, 830, 831, 832, 841, 849, 858, 864, 872, 874], "so": [7, 19, 51, 56, 60, 62, 149, 152, 153, 160, 164, 170, 184, 201, 203, 204, 215, 216, 223, 226, 229, 245, 246, 259, 260, 265, 269, 270, 274, 277, 278, 281, 282, 285, 286, 300, 301, 312, 313, 318, 319, 334, 335, 345, 413, 423, 466, 471, 492, 495, 500, 527, 531, 544, 549, 562, 565, 570, 571, 572, 577, 578, 765, 766, 790, 815, 826, 863, 876], "process": [7, 10, 12, 31, 38, 40, 43, 44, 45, 47, 62, 152, 170, 178, 179, 181, 346, 448, 451, 487, 494, 512, 539, 568, 570, 573, 575, 577, 578, 757, 758, 766, 767, 768, 778, 782, 790, 818, 820, 830, 852, 853, 856, 857, 858, 877], "peer": 7, "need": [7, 40, 43, 46, 50, 56, 58, 60, 61, 62, 63, 149, 151, 152, 153, 170, 181, 201, 202, 203, 204, 211, 217, 218, 219, 241, 252, 254, 255, 257, 258, 261, 262, 297, 331, 354, 369, 405, 414, 425, 437, 439, 440, 441, 466, 494, 565, 578, 692, 706, 720, 734, 757, 770, 778, 796, 798, 806, 807, 815, 829, 837, 849], "post": [7, 51, 55, 56, 152, 159], "doe": [7, 9, 12, 14, 22, 37, 39, 41, 47, 48, 50, 51, 52, 56, 58, 60, 62, 65, 66, 90, 91, 92, 93, 96, 97, 103, 111, 112, 118, 120, 128, 129, 131, 137, 139, 140, 144, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 179, 181, 184, 201, 202, 203, 204, 211, 241, 259, 261, 262, 263, 266, 268, 269, 272, 362, 398, 426, 427, 428, 429, 433, 434, 435, 436, 439, 440, 441, 467, 471, 472, 474, 476, 477, 478, 480, 485, 488, 489, 492, 495, 500, 505, 506, 507, 508, 510, 513, 517, 524, 525, 526, 527, 529, 531, 537, 538, 544, 547, 549, 552, 554, 555, 569, 570, 577, 578, 584, 601, 604, 606, 616, 618, 627, 631, 633, 641, 645, 647, 655, 660, 663, 672, 674, 676, 684, 687, 690, 699, 702, 705, 713, 716, 719, 727, 730, 733, 741, 744, 761, 763, 771, 776, 784, 793, 798, 806, 807, 815, 841, 842, 852, 855, 856, 857, 858, 863, 866], "proce": [7, 368, 374, 396, 413, 422, 811, 812], "concurr": [7, 152, 184, 566, 573, 577, 579, 593, 595, 596, 598, 603, 604, 605, 608, 609, 613, 614, 616, 617, 621, 628, 631, 632, 635, 642, 645, 646, 649, 656, 658, 659, 664, 666, 667, 669, 674, 675, 678, 685, 687, 688, 689, 694, 700, 702, 703, 704, 708, 714, 716, 717, 718, 722, 728, 730, 731, 732, 736, 742, 744, 746, 748, 757, 758, 765, 767, 768, 769, 772, 778, 779, 791, 795, 811, 812, 823, 830, 831, 854, 856, 858, 859, 863, 864, 866, 871, 872], "destin": [7, 30, 53, 54, 56, 58, 60, 78, 90, 149, 152, 153, 155, 156, 157, 158, 159, 161, 164, 167, 168, 169, 170, 171], "while": [7, 37, 38, 40, 43, 50, 53, 54, 63, 106, 152, 157, 168, 170, 179, 184, 197, 223, 225, 226, 229, 259, 263, 288, 290, 321, 323, 345, 383, 562, 577, 582, 613, 621, 627, 635, 641, 649, 655, 678, 684, 694, 699, 708, 713, 722, 727, 736, 741, 745, 748, 757, 776, 780, 784, 790, 796, 815, 841, 850, 856, 858, 859], "sourc": [7, 31, 43, 44, 45, 49, 53, 54, 56, 58, 60, 78, 149, 151, 152, 153, 155, 156, 157, 158, 159, 161, 164, 167, 168, 169, 170, 171, 178, 180, 228, 373, 406, 421, 616, 627, 631, 641, 645, 655, 674, 684, 687, 699, 702, 713, 716, 727, 730, 741, 815, 849, 876], "As": [7, 54, 56, 58, 149, 152, 153, 154, 168, 181, 182, 184, 259, 262, 264, 346, 560, 569, 775, 815, 856, 876], "For": [7, 19, 20, 22, 25, 28, 29, 31, 40, 43, 44, 50, 52, 53, 54, 55, 56, 58, 60, 62, 63, 84, 86, 87, 98, 99, 106, 117, 121, 122, 123, 124, 125, 126, 127, 149, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 174, 177, 179, 181, 182, 184, 188, 195, 196, 197, 202, 206, 223, 226, 228, 229, 247, 254, 255, 257, 258, 259, 260, 261, 263, 264, 265, 290, 323, 331, 345, 346, 349, 373, 375, 376, 377, 402, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 562, 569, 571, 577, 578, 589, 595, 603, 616, 631, 645, 658, 666, 674, 687, 702, 716, 730, 744, 757, 765, 768, 770, 780, 796, 797, 798, 799, 801, 803, 812, 815, 826, 829, 842, 849, 850, 856, 857, 872, 874], "inform": [7, 28, 37, 40, 42, 43, 44, 51, 52, 53, 60, 63, 149, 159, 164, 175, 179, 183, 262, 265, 346, 438, 448, 456, 481, 569, 578, 587, 590, 795, 798, 800, 822, 847, 848, 849, 856, 877], "ccl_api": [7, 11], "pt2pt_attr": 7, "default_pt2pt_attr": 7, "enum": [8, 13, 16, 32, 38, 42, 55, 58, 60, 61, 62, 152, 159, 170, 184, 264, 426, 427, 433, 434, 437, 438, 439, 440, 441, 575, 788, 798, 803, 852, 854, 856, 860, 864], "int8": [8, 29, 55, 57, 62, 84, 117, 152, 153, 157, 161, 164, 167, 168, 170], "unspecifi": [8, 9, 13, 16, 61, 178, 179, 180, 184, 352, 356, 518, 595, 596, 601, 603, 605, 610, 616, 617, 627, 631, 632, 635, 641, 643, 645, 646, 649, 655, 657, 658, 659, 663, 666, 667, 672, 674, 675, 684, 687, 689, 699, 702, 704, 708, 713, 715, 716, 718, 722, 727, 729, 730, 732, 741, 744, 745, 746, 758, 763, 767, 768, 779, 786, 789, 799, 801, 803, 851, 856, 863, 866, 874], "uint8": [8, 29], "int16": [8, 29, 56], "uint16": [8, 29], "int32": [8, 29, 56], "uint32": [8, 29], "int64": [8, 29], "uint64": [8, 29], "float16": [8, 48], "float32": [8, 29, 43], "float64": [8, 29, 43], "bfloat16": [8, 29, 48, 50, 55, 57, 63, 150, 187, 197, 201, 202, 224, 230, 235], "last_predefin": 8, "largest": [8, 13, 22, 220, 396, 784, 790, 799], "abov": [8, 13, 22, 58, 106, 130, 149, 152, 154, 158, 161, 179, 215, 245, 259, 262, 263, 266, 268, 269, 272, 292, 325, 439, 440, 441, 562, 568, 570, 778, 780, 815, 841, 842, 849, 856], "bit": [8, 29, 54, 55, 62, 63, 150, 152, 153, 182, 184, 346, 348, 350, 354, 362, 363, 364, 366, 369, 375, 377, 379, 398, 399, 400, 401, 405, 407, 410, 412, 414, 417, 443, 518], "sign": [8, 28, 29, 46, 55, 56, 62, 63, 152, 153, 180, 489, 494, 509, 510, 536, 546, 553, 558, 595, 603, 616, 631, 645, 658, 666, 674, 687, 702, 716, 730, 744], "integ": [8, 19, 20, 29, 41, 55, 56, 59, 62, 63, 129, 150, 152, 153, 178, 180, 184, 188, 193, 195, 196, 202, 203, 206, 247, 255, 260, 262, 263, 269, 270, 277, 278, 281, 282, 285, 286, 300, 301, 312, 313, 318, 319, 334, 335, 348, 349, 353, 366, 375, 379, 380, 382, 383, 392, 394, 401, 403, 404, 407, 408, 409, 410, 412, 416, 425, 443, 485, 493, 506, 509, 517, 526, 529, 531, 535, 536, 537, 538, 545, 553, 554, 555, 558, 595, 603, 616, 631, 645, 658, 666, 674, 687, 702, 716, 730, 744, 790, 829, 831, 858], "unsign": [8, 29, 55, 61, 62, 63, 152, 153, 159, 170, 182, 401, 562, 603, 616, 631, 645, 658, 666, 674, 687, 702, 716, 730, 744, 774, 780, 792, 831, 856], "half": [8, 54, 55, 62, 63, 187, 197, 201, 202, 224, 230, 235, 263, 562, 563, 564, 565, 596, 605, 610, 617, 627, 629, 632, 641, 643, 646, 655, 657, 659, 667, 675, 684, 686, 689, 699, 701, 704, 713, 715, 718, 727, 729, 732, 741, 743, 745, 746, 871], "precis": [8, 50, 54, 55, 56, 58, 60, 63, 146, 152, 157, 168, 184, 185, 186, 187, 188, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558], "non": [8, 12, 13, 14, 27, 30, 40, 42, 55, 56, 58, 62, 63, 68, 78, 79, 80, 81, 82, 83, 88, 89, 98, 102, 107, 108, 151, 157, 159, 160, 162, 168, 170, 176, 177, 225, 226, 227, 228, 248, 249, 250, 251, 253, 256, 259, 260, 262, 263, 264, 265, 266, 268, 269, 272, 274, 276, 277, 280, 281, 284, 285, 288, 290, 292, 294, 297, 299, 300, 303, 305, 307, 309, 311, 312, 315, 317, 318, 321, 323, 325, 327, 329, 331, 333, 334, 337, 339, 341, 343, 377, 396, 406, 425, 426, 427, 433, 434, 451, 487, 492, 494, 500, 512, 527, 531, 534, 539, 544, 558, 571, 593, 760, 763, 768, 780, 782, 793, 796, 805, 806, 807, 810, 811, 812, 813, 814, 850, 873], "7": [8, 54, 55, 62, 63, 401, 402, 413, 466, 562, 780], "mantissa": [8, 54, 55, 62, 63, 152], "regist": [8, 346, 377, 401, 405, 410, 414, 487, 512, 539, 757, 791], "deregist": 8, "datatype_attr": 8, "list": [8, 12, 13, 36, 37, 40, 42, 51, 55, 63, 68, 69, 78, 79, 80, 81, 82, 83, 84, 98, 99, 107, 108, 117, 121, 122, 123, 124, 125, 126, 127, 142, 149, 158, 159, 170, 177, 181, 184, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 262, 266, 268, 269, 272, 274, 276, 277, 280, 281, 284, 285, 288, 290, 292, 294, 296, 297, 299, 300, 303, 305, 307, 309, 311, 312, 315, 317, 318, 321, 323, 325, 327, 329, 331, 333, 334, 337, 339, 341, 343, 368, 375, 391, 413, 430, 431, 432, 439, 440, 441, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558, 559, 562, 759, 766, 771, 774, 776, 782, 790, 793, 796], "fill": [8, 13, 37, 130, 178, 181, 182, 418, 426, 427, 428, 429, 463, 466, 744], "datatype_attr_id": 8, "byte": [8, 37, 40, 43, 60, 63, 152, 439, 440, 441, 798, 799, 800, 801, 803], "create_datatype_attr": 8, "register_datatyp": 8, "deregister_datatyp": 8, "retriev": [8, 12, 14, 39, 150, 184], "get_datatype_s": 8, "reli": [9, 22, 29, 30, 38, 50, 53, 168, 181, 184, 571, 577], "propag": [9, 30, 53, 59, 60, 101, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 184], "caught": [9, 30, 184, 856, 857], "align": [9, 30, 130, 174, 176, 177, 183, 184, 259, 262, 423, 439, 440, 441, 798, 799, 800], "introduc": [9, 30, 36, 184, 348, 375, 558, 842, 849, 876], "hierarchi": [9, 30, 31, 184], "throw": [9, 12, 14, 30, 37, 51, 60, 63, 149, 151, 152, 154, 155, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 351, 352, 355, 356, 357, 360, 361, 367, 370, 371, 380, 381, 382, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 402, 403, 404, 408, 409, 411, 415, 416, 419, 420, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 557, 589, 619, 691, 744, 748, 755, 774, 784, 790, 841, 852, 855, 859], "inherit": [9, 58, 60, 61, 63, 184, 757, 771, 774, 849, 854], "std": [9, 10, 19, 20, 22, 25, 29, 30, 34, 35, 37, 38, 41, 42, 43, 49, 59, 60, 63, 150, 151, 152, 156, 159, 169, 173, 174, 177, 179, 180, 181, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 351, 352, 353, 354, 356, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 371, 379, 380, 382, 383, 385, 390, 391, 392, 394, 396, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 416, 417, 420, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 562, 566, 570, 579, 585, 593, 594, 595, 596, 597, 602, 603, 604, 605, 606, 608, 610, 613, 615, 616, 617, 618, 619, 621, 627, 629, 631, 632, 633, 635, 641, 643, 645, 646, 647, 649, 655, 657, 658, 659, 660, 665, 666, 667, 668, 673, 674, 675, 676, 678, 684, 686, 687, 689, 690, 691, 694, 699, 701, 702, 704, 705, 708, 713, 715, 716, 718, 719, 722, 727, 729, 730, 732, 733, 736, 741, 743, 744, 745, 746, 747, 748, 755, 758, 761, 763, 765, 767, 771, 772, 774, 778, 779, 780, 783, 784, 790, 791, 792, 795, 797, 799, 800, 801, 802, 803, 815, 817, 820, 832, 855, 856, 858, 861, 864], "deriv": [9, 30, 42, 51, 155, 156, 159, 160, 165, 167, 173, 180, 184, 857], "check": [9, 14, 34, 35, 37, 41, 60, 63, 128, 149, 152, 163, 348, 349, 588, 599, 661, 670, 861], "howev": [9, 54, 55, 56, 58, 60, 149, 152, 154, 156, 158, 162, 164, 165, 171, 172, 178, 180, 184, 262, 288, 321, 362, 373, 398, 426, 427, 490, 491, 493, 541, 542, 543, 545, 550, 551, 553, 565, 569, 571, 578, 744, 798, 799, 842, 852, 853, 855, 856, 859, 866], "condit": [9, 19, 25, 43, 51, 130, 170, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 358, 362, 363, 364, 365, 366, 379, 398, 399, 400, 401, 402, 407, 410, 412, 420, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 557, 583, 611, 687, 695, 701, 702, 709, 716, 723, 729, 730, 737, 811, 812, 841, 852, 855, 859], "fit": [9, 40, 43, 47, 184, 471, 495, 527, 531, 549, 815, 850], "ani": [9, 12, 13, 29, 31, 37, 43, 48, 54, 55, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 179, 180, 181, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 345, 386, 391, 425, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 457, 458, 461, 462, 463, 464, 465, 467, 471, 472, 474, 476, 477, 478, 480, 485, 488, 489, 493, 494, 505, 506, 507, 508, 510, 513, 524, 525, 526, 527, 529, 531, 534, 537, 538, 546, 547, 549, 552, 555, 557, 562, 571, 577, 578, 591, 593, 601, 604, 613, 687, 702, 716, 730, 744, 757, 759, 760, 761, 766, 768, 771, 774, 778, 784, 785, 790, 796, 798, 799, 800, 815, 816, 822, 829, 837, 839, 842, 850, 852, 853, 855, 856, 858, 861, 866, 877], "report": [9, 28, 30, 51, 152, 168, 184, 259, 558], "invalid_argu": [9, 30, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 351, 352, 355, 356, 357, 360, 361, 367, 370, 371, 380, 381, 382, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 402, 403, 404, 408, 409, 411, 415, 416, 419, 420, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 557], "were": [9, 61, 180, 184, 259, 263, 269, 277, 281, 285, 290, 300, 312, 318, 323, 334, 347, 352, 354, 356, 410, 570, 784, 798, 799, 855, 866], "reject": [9, 184, 349, 352, 354, 356, 376, 758, 766, 767, 772, 776, 779, 790], "host_bad_alloc": [9, 30, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 262, 266, 268, 272, 274, 276, 280, 284, 288, 290, 292, 294, 297, 299, 303, 305, 307, 309, 311, 315, 317, 321, 323, 325, 327, 329, 331, 333, 337, 339, 341, 343, 426, 427, 428, 429, 439, 440, 441, 557], "dure": [9, 12, 25, 30, 37, 38, 40, 43, 50, 56, 58, 60, 63, 141, 146, 149, 151, 152, 153, 154, 157, 158, 160, 162, 163, 164, 165, 184, 265, 266, 268, 269, 272, 274, 276, 280, 284, 285, 288, 290, 292, 294, 297, 299, 303, 305, 307, 309, 311, 315, 317, 318, 321, 323, 325, 327, 329, 331, 333, 334, 337, 339, 341, 343, 347, 352, 354, 356, 405, 414, 487, 494, 512, 539, 769, 788, 795, 798, 833, 834, 835, 837, 838, 839, 840, 850, 856, 863], "unimpl": [9, 30, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441], "request": [9, 34, 35, 149, 151, 159, 288, 321, 798, 800, 808, 809, 842, 853, 854, 859, 860, 864], "unsupport": [9, 30, 149], "built": [10, 12, 149, 178, 180], "Its": [10, 12, 36, 182, 575, 744, 788], "band": [10, 12, 191, 200, 210, 234, 248, 249, 250, 251, 253, 256, 345], "exampl": [10, 12, 29, 31, 36, 39, 42, 43, 44, 45, 48, 50, 54, 55, 58, 60, 62, 63, 84, 86, 87, 90, 106, 117, 121, 122, 123, 124, 125, 126, 127, 130, 141, 149, 150, 151, 154, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 174, 181, 184, 223, 226, 229, 261, 354, 373, 375, 396, 406, 413, 421, 466, 537, 562, 563, 564, 565, 580, 589, 593, 595, 597, 603, 606, 616, 618, 631, 633, 645, 647, 658, 660, 666, 668, 674, 676, 687, 690, 702, 705, 716, 719, 730, 733, 744, 747, 770, 796, 799, 801, 803, 815, 816, 822, 826, 829, 841, 848, 849, 850, 859, 872, 874, 877], "mpi": 10, "mpi_rank": 10, "mpi_siz": 10, "mpi_init": 10, "argc": 10, "argv": 10, "mpi_comm_rank": 10, "mpi_comm_world": 10, "mpi_comm_s": 10, "shared_ptr_class": [10, 12], "kv": [10, 12], "address_typ": [10, 12], "kvs_addr": 10, "create_main_kv": [10, 12], "get_address": [10, 12], "mpi_bcast": 10, "address_max_s": [10, 12], "mpi_byt": 10, "els": [10, 98, 99, 196, 255, 573], "create_kv": [10, 12], "create_commun": [10, 12], "per": [10, 12, 62, 78, 79, 80, 82, 84, 86, 87, 100, 101, 115, 117, 179, 182, 184, 692, 706, 720, 734, 862, 864, 866], "sycl_context": 10, "sycl_devic": 10, "sycl_queu": 10, "ccl_context": 10, "create_context": [10, 12], "ccl_devic": 10, "idx": [10, 37, 155, 156, 159, 173, 188, 195, 196, 202, 206, 223, 226, 229, 247, 255, 354, 372, 396, 402, 420], "push_back": [10, 744], "create_devic": [10, 12], "r2d_map": 10, "dev": [10, 150], "uniqu": [10, 13, 22, 41, 42, 43, 63, 121, 122, 123, 124, 125, 126, 127, 149, 152, 181, 259, 260, 262, 603, 616, 674, 687, 730, 856, 858, 864], "ccl_stream": 10, "create_stream": [10, 12], "choic": [10, 262, 386, 563, 564, 577, 849], "wait": [10, 14, 37, 60, 61, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 266, 268, 269, 272, 274, 276, 277, 280, 281, 284, 285, 288, 290, 292, 294, 297, 299, 300, 303, 305, 307, 309, 311, 312, 315, 317, 318, 321, 323, 325, 327, 329, 331, 333, 334, 337, 339, 341, 343, 391, 418, 430, 431, 432, 439, 440, 441, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 457, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 571, 601, 757, 763, 765, 805, 810, 850, 855, 856, 857, 859], "merg": [11, 47, 569, 577, 616, 627, 631, 645, 674, 687, 699, 702, 716, 730, 823, 826, 863], "final": [11, 22, 25, 45, 47, 54, 55, 56, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 184, 263, 418, 578, 778, 855, 863], "primari": 11, "start": [11, 29, 37, 40, 43, 100, 101, 114, 115, 159, 177, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 266, 268, 269, 272, 274, 276, 277, 280, 281, 284, 285, 288, 290, 292, 294, 297, 299, 300, 303, 305, 307, 309, 311, 312, 315, 317, 318, 321, 323, 325, 327, 329, 331, 333, 334, 337, 339, 341, 343, 345, 391, 430, 431, 432, 439, 440, 441, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 763, 765, 780, 797, 824, 828, 850, 856, 857], "indic": [11, 29, 37, 38, 41, 42, 43, 59, 60, 62, 63, 81, 82, 100, 101, 121, 122, 123, 124, 125, 126, 127, 149, 151, 152, 156, 157, 163, 165, 166, 170, 171, 177, 180, 184, 220, 221, 226, 259, 264, 276, 277, 284, 285, 286, 287, 288, 290, 294, 295, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 327, 328, 329, 330, 425, 426, 427, 433, 434, 437, 443, 448, 451, 534, 546, 562, 567, 576, 744, 762, 795, 849, 856], "success": [11, 63, 159, 163, 259, 263, 264, 351, 360, 380, 382, 392, 487, 494, 512, 539], "due": [11, 22, 60, 152, 259, 262, 362, 398, 767, 780, 790], "end": [11, 22, 29, 44, 45, 46, 50, 63, 65, 66, 88, 95, 102, 114, 118, 120, 148, 149, 151, 158, 166, 171, 174, 177, 178, 179, 180, 181, 188, 195, 196, 202, 206, 223, 226, 229, 230, 231, 232, 233, 240, 247, 255, 266, 345, 351, 352, 355, 356, 360, 361, 367, 370, 371, 380, 381, 382, 385, 387, 388, 392, 394, 395, 397, 401, 402, 404, 408, 409, 411, 415, 416, 419, 425, 439, 440, 441, 510, 526, 555, 565, 566, 570, 573, 576, 577, 578, 579, 596, 597, 603, 605, 606, 610, 616, 617, 618, 621, 627, 631, 632, 633, 635, 641, 645, 646, 647, 649, 655, 659, 660, 667, 668, 674, 675, 676, 678, 684, 687, 689, 690, 694, 699, 702, 704, 705, 708, 713, 716, 718, 719, 722, 727, 730, 732, 733, 736, 741, 744, 745, 746, 747, 755, 817, 818, 831, 852, 864, 867, 871], "between": [11, 12, 25, 37, 38, 43, 54, 56, 58, 60, 61, 62, 63, 68, 81, 107, 108, 128, 149, 151, 152, 155, 160, 168, 184, 186, 188, 195, 196, 197, 198, 199, 202, 206, 223, 226, 228, 229, 236, 247, 255, 259, 264, 269, 270, 277, 278, 281, 282, 285, 286, 300, 301, 312, 313, 318, 319, 334, 335, 348, 375, 524, 525, 537, 538, 558, 562, 578, 593, 757, 758, 765, 767, 777, 779, 787, 799, 801, 803, 804, 831, 858, 874], "been": [11, 14, 60, 63, 153, 179, 184, 262, 276, 277, 294, 315, 316, 317, 318, 319, 320, 327, 466, 511, 567, 766, 775, 776, 784, 799, 801, 803, 836, 855, 856], "enqueu": [11, 184, 257, 258, 262, 263, 852, 856, 858], "necessarili": [11, 54, 156, 169, 184, 274, 425, 560, 565, 577, 582, 723, 858, 864], "note": [11, 40, 56, 67, 69, 70, 72, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 98, 99, 100, 101, 109, 110, 113, 117, 121, 122, 123, 124, 125, 126, 127, 130, 141, 143, 146, 147, 152, 153, 154, 156, 157, 158, 162, 164, 170, 177, 179, 180, 181, 184, 197, 201, 202, 203, 204, 211, 241, 252, 254, 255, 259, 260, 262, 263, 264, 296, 297, 331, 353, 369, 396, 413, 425, 426, 427, 433, 434, 439, 440, 441, 468, 469, 472, 474, 479, 490, 491, 492, 494, 500, 541, 542, 543, 544, 548, 550, 551, 552, 569, 744, 872], "here": [12, 54, 56, 58, 60, 77, 81, 98, 99, 152, 154, 156, 157, 158, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 796, 815, 841, 849, 855, 877], "nativ": [12, 14, 152, 264, 864, 866], "native_context_typ": 12, "native_event_typ": [12, 14], "card": [12, 61, 149, 151], "entiti": [12, 19, 20, 22, 25, 31, 40, 43, 181, 569, 571, 577, 578], "instanc": [12, 19, 20, 22, 25, 37, 38, 39, 41, 42, 43, 44, 50, 53, 152, 157, 159, 168, 177, 179, 180, 182, 184, 228, 257, 258, 262, 263, 425, 562, 585, 593, 756, 757, 777, 784, 787, 790, 799, 801, 803, 806, 807, 829, 830, 833, 834, 835, 836, 837, 838, 839, 840, 855, 856, 857, 861, 863, 864, 865, 866], "native_devic": 12, "exist": [12, 37, 60, 150, 151, 153, 177, 180, 609, 610, 621, 627, 629, 635, 643, 649, 657, 678, 684, 686, 694, 699, 701, 708, 715, 722, 729, 736, 741, 743, 744, 756, 852, 855, 856, 861, 863, 864, 868, 876], "get_n": [12, 14], "wrap": [12, 14, 34, 35, 37, 40, 41, 42, 571, 856], "respons": [12, 37, 39, 41, 43, 46, 51, 56, 58, 60, 62, 149, 159, 160, 184, 261, 263, 577, 757, 758, 768], "manag": [12, 31, 37, 44, 45, 149, 184, 466, 692, 706, 720, 734, 757, 758, 760, 785, 802, 853, 856], "resourc": [12, 149, 184, 262, 430, 431, 432, 800, 802, 844], "native_context": 12, "kvs_interfac": 12, "establish": [12, 160, 876], "connect": [12, 40, 43, 147, 149, 161, 593, 756, 757, 776, 791, 793, 856], "creation": [12, 37, 39, 40, 43, 51, 56, 63, 151, 152, 153, 157, 159, 164, 179, 346, 463, 857], "record": [12, 38, 43, 149], "virtual": [12, 744, 761, 770, 857], "char": [12, 13, 38, 159, 563, 564, 591, 765], "string_class": 12, "given": [12, 19, 20, 22, 25, 27, 29, 38, 43, 46, 60, 65, 67, 85, 103, 109, 110, 111, 113, 114, 116, 121, 122, 123, 124, 125, 126, 127, 137, 139, 140, 143, 146, 149, 152, 153, 177, 179, 184, 188, 190, 195, 196, 202, 206, 223, 226, 229, 230, 231, 232, 233, 240, 247, 255, 257, 258, 261, 262, 263, 264, 265, 266, 317, 318, 351, 352, 355, 356, 357, 358, 359, 360, 361, 367, 370, 371, 373, 374, 375, 378, 379, 380, 381, 382, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 419, 420, 421, 422, 437, 438, 439, 440, 441, 483, 484, 487, 496, 498, 499, 511, 512, 539, 540, 559, 562, 563, 564, 565, 569, 577, 578, 773, 775, 781, 795, 798, 815, 829, 842, 850, 856, 857, 874], "empti": [12, 37, 40, 42, 55, 60, 61, 62, 63, 114, 121, 122, 123, 124, 125, 126, 127, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 184, 266, 268, 269, 272, 274, 276, 277, 280, 281, 284, 285, 288, 290, 292, 294, 297, 299, 300, 303, 305, 307, 309, 311, 312, 315, 317, 318, 321, 323, 325, 327, 329, 331, 333, 334, 337, 339, 341, 343, 439, 440, 441, 494, 546, 562, 563, 564, 565, 593, 595, 601, 602, 603, 609, 610, 616, 627, 629, 631, 641, 643, 645, 655, 657, 658, 663, 666, 672, 673, 674, 684, 686, 687, 699, 701, 702, 713, 715, 716, 727, 729, 730, 741, 743, 744, 760, 762, 772, 774, 784, 785, 788, 790, 829, 854, 855, 856, 858, 859, 861, 864, 869], "save": [12, 163, 165, 494, 578, 775, 788], "remov": [12, 60, 121, 122, 123, 124, 125, 126, 127, 181, 184, 602, 610, 615, 629, 643, 657, 665, 673, 686, 701, 715, 729, 743, 755, 760, 766, 775, 787, 788, 790, 815, 856, 863, 864], "static": [12, 37, 41, 56, 61, 62, 181, 354, 362, 363, 364, 365, 366, 379, 398, 399, 400, 401, 402, 405, 407, 410, 412, 414, 420, 448, 562, 578, 580, 584, 594, 780, 793, 803, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 841, 842, 852, 856, 874], "constexpr": [12, 34, 35, 37, 38, 179, 180, 182, 354, 362, 363, 364, 365, 366, 379, 398, 399, 400, 401, 402, 405, 407, 410, 412, 414, 420, 448, 463, 562, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 841, 842], "256": 12, "array_class": 12, "overrid": [12, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 800, 856, 857], "addr": 12, "homogen": [12, 31, 34, 35, 36, 37, 40, 42, 43, 44], "user": [12, 16, 19, 37, 39, 40, 41, 43, 50, 51, 54, 55, 56, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 184, 223, 226, 229, 257, 258, 259, 261, 262, 263, 264, 265, 373, 405, 414, 423, 437, 466, 494, 569, 577, 757, 758, 767, 772, 775, 776, 778, 779, 790, 797, 850, 853, 854, 855, 856, 876], "suppli": [12, 177, 181, 184, 217, 218, 219, 237, 238, 239, 250, 251, 267, 269, 270, 271, 273, 275, 277, 278, 279, 281, 282, 283, 285, 286, 287, 289, 291, 293, 295, 298, 300, 301, 302, 303, 304, 306, 308, 309, 310, 312, 313, 314, 316, 318, 319, 320, 322, 324, 326, 328, 330, 332, 334, 335, 336, 337, 338, 340, 342, 343, 344, 345, 797], "thei": [12, 13, 30, 37, 40, 56, 58, 60, 61, 98, 100, 101, 149, 151, 152, 153, 154, 157, 158, 161, 162, 165, 170, 178, 180, 181, 182, 184, 223, 226, 229, 262, 263, 264, 274, 425, 426, 427, 433, 434, 466, 491, 493, 543, 545, 551, 553, 556, 580, 599, 603, 611, 616, 622, 631, 636, 645, 650, 657, 658, 661, 670, 674, 679, 687, 695, 702, 709, 715, 716, 723, 730, 737, 744, 750, 757, 765, 771, 774, 775, 778, 796, 799, 801, 803, 808, 809, 815, 842, 850, 872, 874], "map_class": 12, "rank_device_map": 12, "total": [12, 62, 82, 152, 188, 195, 196, 202, 206, 223, 226, 229, 247, 255, 269, 270, 277, 278, 281, 282, 285, 286, 300, 301, 312, 313, 318, 319, 334, 335, 368, 413, 577, 578, 778, 815, 852, 856], "wire": 12, "well": [12, 23, 29, 37, 42, 48, 51, 52, 56, 58, 152, 160, 177, 189, 262, 296, 348, 375, 423, 546, 558, 578, 584, 603, 616, 631, 645, 674, 687, 702, 716, 730, 757, 765, 798, 815, 820, 857, 876], "wa": [12, 30, 149, 162, 165, 178, 184, 262, 264, 276, 277, 294, 327, 412, 430, 431, 432, 433, 434, 435, 436, 437, 591, 593, 601, 610, 629, 643, 657, 663, 672, 686, 701, 715, 729, 743, 758, 759, 761, 767, 769, 771, 772, 779, 790, 791, 798, 826, 842, 856, 857, 863, 868, 869], "construct": [12, 29, 37, 40, 43, 58, 60, 61, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 180, 182, 264, 354, 466, 562, 563, 564, 565, 566, 567, 570, 574, 585, 589, 593, 595, 601, 603, 610, 616, 619, 627, 630, 631, 641, 644, 645, 655, 658, 663, 666, 672, 674, 684, 687, 691, 699, 702, 713, 716, 727, 730, 741, 744, 745, 748, 755, 756, 758, 759, 760, 761, 763, 765, 767, 769, 771, 772, 774, 775, 776, 778, 779, 780, 782, 784, 785, 788, 790, 791, 792, 793, 800, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 829, 830, 833, 834, 835, 837, 838, 839, 840, 841, 842, 850, 851, 852, 854, 856, 857, 858, 859, 861, 863, 864, 868, 869, 871, 874, 876], "get_devic": [12, 61], "get_context": [12, 61], "sub": [12, 40, 42, 64, 159, 170, 200, 248, 249, 262, 266, 345, 439, 440, 441, 558], "color": [12, 40, 43], "newli": [12, 37, 426, 427, 428, 429, 439, 440, 441, 562, 563, 564, 565, 830, 864], "form": [12, 22, 37, 53, 58, 149, 172, 184, 188, 201, 202, 203, 206, 217, 218, 219, 223, 226, 229, 237, 238, 239, 247, 250, 251, 255, 266, 268, 269, 272, 274, 284, 285, 286, 287, 288, 290, 292, 294, 296, 297, 299, 300, 303, 305, 307, 309, 311, 312, 321, 323, 325, 327, 330, 331, 333, 334, 337, 339, 341, 343, 563, 564, 569, 570, 571, 591, 603, 616, 631, 645, 674, 687, 702, 716, 730, 763, 777, 787, 798, 842, 854], "reorder": [12, 54, 55, 56, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173], "ascend": [12, 288, 290, 321, 323, 437], "split_commun": 12, "belong": [12, 27, 149, 159, 168, 184, 259, 260, 263, 269, 270, 277, 278, 281, 282, 285, 286, 312, 313, 318, 319, 362, 363, 375, 398, 399, 490, 491, 493, 541, 542, 543, 545, 550, 551, 553, 759, 760, 761, 771, 774, 776, 782, 784, 785, 790, 793, 858], "part": [12, 25, 27, 33, 40, 43, 56, 60, 62, 160, 175, 184, 185, 193, 204, 213, 214, 216, 217, 218, 219, 238, 239, 243, 244, 257, 258, 259, 260, 263, 264, 274, 275, 288, 289, 290, 291, 292, 293, 294, 295, 297, 299, 300, 311, 312, 313, 314, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 331, 333, 334, 345, 366, 407, 426, 427, 438, 439, 440, 441, 471, 492, 495, 500, 510, 523, 526, 527, 531, 544, 546, 549, 558, 560, 566, 585, 590, 829, 831, 841, 847, 849], "sort": [12, 22, 58, 177, 274, 425, 579, 616, 631, 645, 658, 674, 784, 795, 815], "encapsul": [12, 43, 60, 61, 149, 150, 151, 160, 183, 184, 260, 262, 263, 761], "native_stream": 12, "design": [12, 31, 36, 43, 45, 77, 162, 171, 369, 377, 417, 423, 540, 560, 577, 578, 757, 798, 841, 856], "create_ev": 12, "native_ev": 12, "modifi": [13, 22, 152, 157, 159, 164, 177, 180, 190, 232, 233, 262, 373, 421, 593, 603, 609, 616, 621, 631, 635, 645, 649, 658, 674, 678, 687, 694, 702, 708, 716, 722, 730, 736, 815, 852, 864, 877], "operation_attr_id": 13, "prioriti": [13, 30, 658, 659, 661, 663, 757, 758, 763, 767, 779, 784, 798, 856], "to_cach": 13, "match_id": 13, "last_valu": 13, "conjunct": [13, 56, 180, 574, 577, 580], "asynchron": [13, 430, 431, 432, 439, 440, 441, 466], "cach": [13, 63, 149, 151, 160, 581, 799, 800], "extend": [13, 29, 40, 42, 150, 184, 193, 296, 364, 365, 366, 379, 400, 401, 402, 405, 407, 410, 412, 414, 420, 426, 427, 428, 429, 433, 434, 435, 436, 439, 440, 441, 768, 842], "allreduce_attr_id": 13, "reduction_fn": [13, 16], "reduce_attr_id": 13, "reduce_scatter_attr_id": 13, "signatur": [13, 180, 181, 466, 580, 816, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 832, 833, 834, 835, 836, 837, 838, 839, 840, 843, 846, 863, 865], "typedef": [13, 761, 780, 793, 798, 849], "in_buf": 13, "in_count": 13, "inout_buf": 13, "out_count": 13, "fn_context": 13, "struct": [13, 19, 20, 22, 25, 29, 48, 60, 61, 63, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 179, 180, 182, 424, 438, 439, 440, 441, 448, 570, 577, 580, 690, 705, 719, 733, 756, 765, 775, 778, 780, 790, 856], "opattrtyp": 13, "create_operation_attr": 13, "manner": [14, 60, 487, 512, 539], "statu": [14, 63, 149, 151, 184, 264, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558, 559, 856, 859, 860], "signal": [14, 546, 757, 853], "bool": [14, 22, 37, 42, 60, 63, 68, 69, 76, 89, 100, 101, 106, 114, 119, 121, 122, 123, 124, 125, 126, 127, 132, 138, 141, 145, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 179, 180, 181, 262, 437, 494, 562, 563, 564, 565, 578, 580, 593, 594, 595, 599, 601, 602, 603, 604, 609, 610, 611, 614, 616, 621, 622, 623, 627, 628, 630, 631, 635, 636, 637, 641, 642, 644, 645, 649, 650, 651, 655, 656, 658, 661, 663, 664, 666, 670, 672, 673, 674, 678, 679, 680, 684, 685, 687, 694, 695, 699, 700, 702, 708, 709, 713, 714, 716, 722, 723, 727, 728, 730, 736, 737, 741, 742, 744, 750, 751, 754, 758, 759, 760, 763, 767, 769, 771, 772, 774, 776, 779, 782, 784, 785, 790, 791, 792, 793, 799, 800, 801, 803, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 822, 828, 829, 832, 836, 841, 842, 854, 855, 856, 857, 859, 861, 863, 864, 868, 869], "test": [14, 60, 346], "true": [14, 19, 20, 22, 25, 37, 41, 42, 49, 60, 63, 68, 69, 76, 89, 100, 101, 106, 114, 119, 121, 122, 123, 124, 125, 126, 127, 132, 138, 141, 145, 154, 159, 168, 177, 180, 262, 494, 562, 563, 564, 565, 579, 580, 593, 594, 596, 599, 601, 602, 604, 605, 609, 610, 611, 614, 615, 617, 621, 622, 623, 627, 628, 629, 630, 632, 635, 636, 637, 641, 642, 643, 644, 646, 649, 650, 651, 655, 656, 657, 659, 661, 663, 664, 665, 667, 670, 672, 673, 675, 678, 679, 680, 684, 685, 686, 689, 694, 695, 699, 700, 701, 704, 708, 709, 713, 714, 715, 718, 722, 723, 727, 728, 729, 732, 736, 737, 741, 742, 743, 746, 750, 751, 754, 755, 758, 759, 760, 763, 767, 769, 772, 774, 776, 779, 782, 784, 785, 790, 791, 792, 793, 799, 801, 803, 805, 806, 807, 808, 809, 810, 812, 813, 814, 828, 829, 832, 841, 842, 854, 855, 856, 857, 859, 861, 863, 868, 869], "fals": [14, 37, 42, 60, 63, 68, 69, 76, 89, 100, 101, 106, 114, 119, 121, 122, 123, 124, 125, 126, 127, 132, 138, 141, 145, 149, 151, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 177, 180, 494, 562, 565, 571, 577, 580, 593, 594, 599, 601, 602, 604, 609, 610, 611, 614, 621, 622, 627, 628, 629, 630, 635, 636, 642, 643, 644, 649, 650, 656, 657, 661, 663, 664, 670, 672, 673, 678, 679, 684, 685, 686, 694, 695, 699, 700, 701, 708, 709, 714, 715, 722, 723, 728, 729, 736, 737, 741, 742, 743, 750, 751, 754, 758, 759, 760, 763, 767, 769, 771, 772, 774, 775, 776, 779, 782, 784, 785, 790, 792, 793, 799, 800, 801, 803, 805, 806, 808, 809, 810, 811, 812, 813, 814, 841, 842, 854, 855, 856, 857, 861, 863, 868, 869], "cover": [15, 45, 149, 150, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441], "prod": [16, 126, 152], "min": [16, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 181, 182, 266, 268, 269, 272, 274, 275, 276, 277, 297, 298, 331, 332, 345, 376, 394, 455, 459, 849], "max": [16, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 181, 182, 203, 222, 223, 266, 268, 272, 273, 274, 276, 277, 280, 284, 288, 290, 292, 294, 303, 305, 307, 309, 310, 311, 315, 317, 321, 323, 325, 327, 329, 330, 331, 337, 339, 341, 343, 344, 345, 371, 376, 394, 416, 455, 459], "avg": 16, "elementwis": [16, 53, 55, 56, 58, 150, 153, 155, 157, 159, 160, 161, 164, 167], "summat": [16, 159, 170, 173], "arithmeth": 16, "averag": [16, 19, 68, 159, 165, 361, 395, 579, 692, 706, 720, 734], "actual": [16, 41, 45, 56, 58, 60, 151, 152, 153, 157, 160, 161, 170, 262, 589, 593, 614, 628, 642, 656, 664, 685, 700, 714, 728, 742, 761, 806, 807, 815, 816, 849, 850, 856, 864], "solv": [19, 20, 22, 25, 28, 50, 192, 193, 249, 251, 254, 255, 256, 265, 269, 270, 276, 277, 278, 281, 282, 284, 285, 286, 287, 290, 291, 294, 296, 300, 301, 312, 313, 317, 318, 319, 323, 324, 327, 329, 330, 334, 335, 441, 442], "problem": [19, 20, 22, 25, 28, 43, 50, 152, 168, 184, 265, 266, 267, 268, 269, 270, 272, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 297, 298, 299, 300, 301, 303, 304, 305, 307, 309, 310, 311, 312, 313, 315, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 329, 331, 332, 333, 334, 335, 337, 338, 339, 341, 343, 344, 864, 876], "partit": [19, 20, 25, 27, 54, 55, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 184, 368, 561, 562, 563, 564, 565, 571, 584, 829, 830], "minim": [19, 221, 259, 577, 582, 745, 774, 876], "some": [19, 22, 40, 43, 45, 48, 50, 51, 54, 56, 58, 60, 152, 153, 155, 158, 163, 164, 165, 168, 257, 258, 259, 261, 263, 264, 265, 269, 277, 281, 285, 300, 312, 318, 334, 354, 375, 377, 425, 437, 439, 440, 441, 509, 571, 578, 588, 852, 855, 856, 872, 876], "criterion": 19, "character": 19, "repres": [19, 29, 30, 31, 37, 38, 39, 40, 42, 48, 51, 56, 59, 62, 63, 75, 81, 104, 105, 135, 136, 147, 149, 151, 153, 157, 160, 174, 177, 179, 180, 184, 223, 226, 229, 259, 262, 263, 264, 266, 268, 269, 270, 272, 292, 325, 345, 382, 390, 401, 403, 409, 413, 425, 439, 440, 441, 448, 456, 466, 546, 562, 563, 564, 565, 571, 573, 574, 575, 577, 578, 591, 593, 613, 616, 626, 631, 640, 645, 654, 674, 683, 687, 698, 702, 712, 716, 726, 730, 740, 744, 753, 762, 768, 788, 795, 815, 817, 829, 830, 831, 841, 842, 854, 856, 857, 859, 860, 862, 867, 871, 874], "centroid": [19, 20], "train_input": [19, 22, 25], "train_result": [19, 22, 25, 49], "infer_input": [19, 22, 25], "infer_result": [19, 22, 25], "x": [19, 20, 22, 25, 46, 48, 53, 54, 55, 56, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 284, 287, 290, 291, 317, 323, 324, 329, 330, 345, 351, 352, 355, 356, 357, 360, 361, 367, 370, 371, 376, 380, 381, 382, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 397, 404, 408, 409, 410, 411, 415, 416, 419, 440, 441, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 466, 468, 469, 471, 472, 474, 478, 479, 483, 484, 492, 495, 496, 497, 498, 499, 503, 519, 520, 527, 531, 546, 549, 551, 553, 562, 563, 564, 570, 573, 577, 579, 591, 778, 798, 815, 824, 825, 830, 849, 863, 865], "x_1": [19, 20, 22, 25, 46, 349, 376, 403], "ldot": [19, 20, 22, 25, 58, 155, 156, 158, 168, 259, 262, 263, 264, 345, 367, 371], "x_n": [19, 20, 22, 25, 155, 158, 168, 362, 363, 364, 365, 398, 399, 400, 405, 410, 414, 420], "dimension": [19, 20, 22, 25, 29, 43, 46, 49, 56, 58, 104, 151, 152, 184, 259, 260, 262, 263, 264, 265, 345, 346, 401, 405, 414, 448, 456, 463, 562, 563, 564], "find": [19, 20, 25, 43, 49, 121, 122, 123, 124, 125, 177, 178, 181, 220, 221, 603, 616, 631, 645, 674, 687, 702, 716, 730], "c_1": [19, 20, 77, 156], "c_k": [19, 20], "phi_": 19, "sum_": [19, 22, 58, 81, 104, 106, 135, 157, 161, 164, 185, 188, 195, 196, 197, 198, 199, 202, 206, 223, 226, 229, 236, 247, 255, 263, 367, 408, 409, 444, 445, 446, 447, 453, 457, 458], "d": [19, 26, 37, 38, 44, 46, 53, 58, 73, 106, 121, 122, 123, 124, 125, 126, 127, 152, 157, 158, 161, 163, 165, 182, 259, 262, 263, 264, 266, 292, 294, 325, 327, 346, 366, 376, 390, 407, 412, 423, 430, 431, 432, 439, 440, 441, 483, 496, 497, 498, 499, 503, 765, 778, 782, 790, 816, 822], "x_i": [19, 25, 46, 185, 198, 232, 285, 286, 318, 403, 409], "squar": [19, 28, 63, 122, 137, 140, 148, 159, 265, 284, 285, 296, 375, 376, 385, 437, 441, 513, 516, 532, 533, 547, 548, 558, 562, 573, 778, 849], "euclidean": [19, 25, 190, 224], "distanc": [19, 25, 107, 108, 177, 184, 223, 226, 228, 229, 259, 260, 264, 345], "closest": [19, 25], "min_": 19, "leq": [19, 22, 25, 58, 118, 158, 166, 171, 259, 263, 264, 351, 352, 355, 356, 357, 360, 361, 367, 370, 371, 376, 380, 381, 382, 384, 387, 388, 389, 390, 392, 393, 394, 395, 397, 403, 404, 408, 409, 411, 415, 416, 419, 448, 451], "c_j": [19, 402], "quad": [19, 22, 25, 345], "express": [19, 37, 58, 178, 181, 184, 259, 260, 357, 562, 573, 574, 603, 616, 631, 645, 674, 687, 702, 716, 730, 799, 801, 803, 815, 816, 817, 822, 863, 866, 874, 876], "cdot": [19, 22, 53, 56, 68, 71, 81, 84, 86, 87, 92, 95, 100, 106, 107, 117, 121, 122, 123, 124, 125, 126, 127, 153, 154, 157, 158, 159, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 259, 260, 263, 264, 268, 269, 280, 294, 312, 318, 327, 365, 366, 368, 379, 407, 413, 439, 440, 441, 469, 519], "l_2": [19, 46], "norm": [19, 46, 121, 122, 167, 190, 224], "case": [19, 22, 34, 35, 36, 37, 46, 48, 49, 54, 56, 60, 62, 63, 65, 66, 68, 88, 95, 102, 114, 115, 118, 120, 141, 149, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 181, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 348, 351, 355, 360, 361, 362, 363, 364, 365, 366, 367, 370, 371, 402, 405, 411, 414, 420, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 466, 471, 492, 494, 495, 500, 510, 518, 526, 527, 531, 544, 549, 555, 557, 566, 571, 573, 596, 598, 602, 605, 608, 613, 614, 615, 617, 627, 628, 629, 632, 642, 643, 646, 656, 657, 659, 664, 665, 667, 669, 673, 675, 684, 685, 686, 687, 688, 689, 699, 700, 701, 702, 703, 704, 714, 715, 716, 717, 718, 728, 729, 730, 731, 732, 741, 742, 743, 746, 748, 755, 772, 780, 788, 841, 842, 846, 849, 856, 870, 876], "arbitrari": [19, 22, 37, 51, 75, 76, 88, 89, 94, 95, 100, 101, 102, 104, 105, 116, 133, 134, 135, 136, 147, 155, 156, 158, 162, 166, 167, 168, 169, 171, 172, 173, 180, 228, 377, 423, 531, 535, 760], "spec": [19, 22, 174, 184, 847], "lloyd82": [19, 28], "consist": [19, 23, 45, 53, 58, 60, 149, 152, 170, 257, 258, 259, 262, 264, 266, 366, 379, 407, 439, 440, 441, 456, 849, 875], "iter": [19, 25, 28, 43, 50, 63, 149, 154, 159, 160, 170, 175, 176, 177, 178, 179, 181, 423, 565, 570, 571, 579, 581, 595, 596, 597, 603, 605, 606, 610, 616, 617, 618, 621, 627, 629, 631, 632, 633, 635, 641, 643, 645, 646, 647, 649, 655, 657, 659, 660, 666, 667, 668, 674, 675, 676, 678, 684, 686, 687, 688, 689, 690, 694, 699, 701, 702, 703, 704, 705, 708, 713, 715, 716, 717, 718, 719, 722, 727, 729, 730, 731, 732, 733, 736, 741, 743, 744, 745, 746, 747, 765, 816, 817, 820, 831, 864, 865, 871], "updat": [19, 25, 47, 53, 54, 58, 149, 157, 161, 170, 180, 184, 186, 187, 191, 192, 193, 194, 200, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 253, 426, 427, 428, 429, 439, 440, 441, 562, 563, 564, 565, 577, 578, 758, 763, 767, 772, 778, 779, 782, 793, 829, 856], "assign": [19, 30, 37, 42, 43, 48, 63, 149, 156, 159, 177, 178, 179, 180, 379, 398, 399, 400, 401, 402, 405, 406, 407, 410, 412, 414, 420, 448, 466, 578, 581, 584, 595, 601, 658, 663, 666, 672, 744, 760, 782, 785, 790, 793, 816, 822, 826, 858, 861, 864, 874], "step": [19, 22, 25, 40, 49, 130, 149, 160, 264, 379, 423, 571, 761], "g": [19, 31, 40, 42, 43, 46, 56, 58, 81, 100, 101, 149, 152, 154, 157, 161, 162, 171, 182, 184, 262, 263, 265, 269, 270, 277, 278, 281, 282, 285, 286, 300, 301, 312, 313, 318, 319, 334, 335, 354, 373, 423, 426, 427, 439, 440, 441, 565, 572, 573, 758, 759, 760, 761, 763, 765, 767, 768, 770, 771, 772, 774, 776, 778, 779, 780, 782, 784, 785, 790, 791, 793, 855], "begin": [19, 22, 46, 65, 66, 88, 95, 102, 114, 118, 120, 158, 166, 171, 178, 179, 180, 181, 184, 230, 231, 232, 233, 240, 266, 269, 270, 277, 278, 281, 282, 285, 286, 300, 301, 312, 313, 318, 319, 334, 335, 345, 351, 352, 355, 356, 360, 361, 367, 370, 371, 380, 381, 382, 385, 387, 388, 392, 394, 395, 397, 401, 402, 404, 408, 409, 411, 413, 415, 416, 419, 425, 439, 440, 441, 510, 526, 555, 565, 566, 570, 577, 578, 579, 596, 597, 603, 605, 606, 610, 616, 617, 618, 627, 631, 632, 633, 641, 645, 646, 647, 655, 659, 660, 667, 668, 674, 675, 676, 684, 687, 689, 690, 699, 702, 704, 705, 713, 716, 718, 719, 727, 730, 732, 733, 741, 744, 745, 746, 747, 763, 765, 817, 831, 864, 867, 871], "nearest": [19, 23, 44, 63, 98, 99, 129, 146, 159, 536, 537, 538, 558, 829], "y_i": [19, 25, 46, 198, 232, 485, 499, 506, 510, 526, 555], "label": [19, 22, 25, 43, 71, 81, 128, 257, 258, 262], "mathrm": [19, 22, 25, 46, 53, 158], "arg": [19, 25, 40, 51, 152, 159, 180, 558, 562, 566, 572, 581, 582, 583, 584, 595, 601, 603, 610, 616, 627, 631, 641, 645, 655, 658, 663, 666, 672, 674, 684, 687, 699, 702, 713, 716, 727, 730, 741, 744, 745, 793, 864, 866], "exactli": [19, 121, 122, 123, 124, 125, 126, 127, 184, 262, 276, 277, 294, 327, 394, 562, 566, 820, 854], "disjoint": 19, "s_j": 19, "big": [19, 25, 34, 35, 43, 44, 104, 531], "recalcul": 19, "frac": [19, 22, 25, 56, 68, 70, 71, 81, 96, 100, 104, 112, 124, 131, 135, 154, 157, 158, 162, 163, 165, 167, 169, 171, 172, 259, 263, 352, 355, 356, 357, 361, 367, 370, 371, 376, 381, 384, 385, 387, 388, 389, 390, 393, 394, 395, 397, 403, 408, 409, 411, 415, 416, 419, 444, 445, 449, 450, 453, 457, 461, 462, 464, 465, 469, 483, 496, 497, 498, 499, 503, 519, 520, 558], "until": [19, 60, 184, 262, 418, 426, 427, 428, 429, 433, 434, 435, 436, 439, 440, 441, 463, 569, 583, 601, 766, 769, 772, 829, 850, 855, 858, 859], "stop": [19, 573, 576, 588, 772, 782, 818, 837, 857], "varepsilon": [19, 71, 154, 162], "satisfi": [19, 37, 39, 48, 51, 177, 178, 180, 182, 226, 259, 263, 274, 581, 582, 583, 584, 585, 768, 805, 807, 810, 813, 814, 816, 817, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 859], "exce": [19, 565, 856], "maxim": [19, 29, 64, 220, 856], "x_m": [19, 22, 25], "produc": [19, 22, 25, 38, 45, 47, 50, 55, 60, 102, 149, 152, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 182, 260, 263, 349, 351, 352, 353, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 375, 377, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 403, 404, 408, 409, 411, 412, 415, 417, 419, 423, 487, 494, 512, 539, 569, 850], "stage": [19, 22, 25, 31, 40, 43, 44, 45, 48, 49, 50, 52, 141, 149, 157, 164, 265, 439, 440, 441, 761], "predict": [19, 23, 25, 28, 43, 45, 46], "y_j": [19, 25], "accord": [19, 22, 25, 43, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 152, 170, 177, 180, 181, 262, 349, 376, 405, 410, 423, 467, 471, 473, 476, 490, 495, 518, 527, 539, 540, 541, 549, 550, 556, 558, 767, 769, 829], "rule": [19, 23, 67, 85, 106, 109, 110, 113, 130, 140, 141, 143, 148, 180, 181, 768, 820, 852, 863, 865, 872], "x_j": [19, 25], "l": [19, 25, 28, 152, 163, 170, 184, 259, 276, 290, 294, 311, 317, 320, 323, 327, 346, 350, 362, 364, 377, 394, 398, 400, 562, 621, 635, 649, 678, 694, 708, 722, 736], "c_l": 19, "kmean": [19, 31], "run_train": [19, 22, 25], "tabl": [19, 20, 22, 25, 29, 31, 34, 35, 36, 38, 39, 43, 44, 49, 51, 52, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 182, 190, 191, 192, 193, 259, 262, 264, 296, 346, 348, 375, 376, 437, 472, 487, 494, 512, 518, 534, 539, 546, 557, 558, 559, 588, 766, 775, 798, 815, 841, 842], "initial_centroid": 19, "kmeans_desc": [19, 20], "set_cluster_count": [19, 20], "10": [19, 20, 25, 54, 182, 350, 366, 377, 379, 407, 501, 520, 558, 562, 563, 564, 591, 768, 778, 780], "set_max_iteration_count": 19, "50": 19, "set_accuracy_threshold": 19, "1e": [19, 100, 101], "print_tabl": [19, 20, 22, 25], "get_label": [19, 25], "get_model": [19, 22, 25, 49], "get_centroid": [19, 20], "print_valu": 19, "get_objective_function_valu": 19, "run_infer": [19, 22, 25], "new_data": [19, 22, 25], "get_cluster_count": [19, 20], "dal": [19, 20, 22, 25, 29, 30, 31, 34, 35, 37, 39, 40, 41, 42, 48, 49, 51, 52], "via": [19, 20, 22, 25, 29, 30, 34, 35, 37, 38, 39, 40, 41, 42, 51, 58, 60, 87, 141, 149, 151, 152, 153, 157, 159, 160, 164, 165, 179, 184, 259, 262, 264, 578, 595, 601, 603, 616, 631, 645, 658, 666, 674, 687, 702, 716, 730, 744, 796, 799, 801, 803, 815, 852, 874], "inclus": [19, 20, 22, 25, 29, 34, 35, 37, 38, 41, 42, 405, 414, 565], "algo": [19, 20, 22, 25, 31], "header": [19, 20, 22, 25, 29, 32, 34, 35, 37, 38, 41, 42, 44, 49, 177, 180, 182, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 589, 591, 594, 595, 603, 645, 666, 674, 687, 702, 716, 730, 744, 756, 758, 759, 760, 761, 762, 763, 764, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 779, 781, 782, 783, 784, 785, 787, 788, 790, 791, 792, 793, 795, 798, 799, 800, 801, 802, 803, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 852, 853, 854, 855, 856, 857, 858, 859, 863, 864, 871], "file": [19, 20, 22, 25, 29, 32, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 49, 177, 588, 788], "typenam": [19, 20, 22, 25, 34, 35, 37, 38, 39, 41, 48, 51, 52, 60, 63, 159, 177, 178, 179, 180, 181, 182, 257, 258, 262, 267, 270, 271, 273, 275, 278, 279, 282, 283, 286, 287, 289, 291, 293, 295, 298, 301, 302, 304, 306, 308, 310, 313, 314, 316, 319, 320, 322, 324, 326, 328, 330, 332, 335, 336, 338, 340, 342, 344, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 367, 368, 369, 370, 371, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 403, 404, 408, 409, 411, 413, 415, 416, 417, 419, 426, 427, 428, 429, 433, 434, 435, 436, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 574, 577, 578, 579, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 612, 616, 617, 618, 621, 622, 623, 624, 627, 629, 630, 631, 632, 633, 635, 636, 637, 638, 641, 643, 644, 645, 646, 647, 649, 650, 651, 652, 655, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 670, 671, 672, 674, 675, 676, 678, 679, 680, 681, 684, 686, 687, 689, 690, 694, 695, 696, 699, 701, 702, 704, 705, 708, 709, 710, 713, 715, 716, 718, 719, 722, 723, 724, 727, 729, 730, 732, 733, 736, 737, 738, 741, 743, 744, 745, 746, 747, 750, 751, 752, 758, 759, 760, 761, 763, 764, 767, 771, 772, 773, 774, 775, 776, 777, 779, 781, 782, 784, 785, 786, 787, 789, 790, 791, 792, 793, 799, 801, 803, 853, 856, 858, 859, 863, 864, 865, 866, 871], "by_default": [19, 20, 22, 25, 48, 51, 351, 355, 357, 360, 361, 367, 370, 371, 380, 381, 382, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 397, 403, 404, 408, 409, 411, 415, 416, 419], "cluster_count": [19, 20], "get_max_iteration_count": 19, "get_accuracy_threshold": 19, "intermedi": [19, 20, 22, 25, 43, 49, 53, 55, 56, 153, 158, 163, 168, 261, 266, 268, 269, 272, 274, 276, 277, 280, 281, 284, 285, 288, 290, 292, 294, 297, 299, 300, 303, 305, 307, 309, 311, 312, 315, 317, 318, 321, 323, 325, 327, 329, 331, 333, 334, 337, 339, 341, 343, 760, 784, 785], "constructor": [19, 20, 22, 25, 29, 34, 35, 36, 37, 38, 41, 42, 48, 51, 58, 60, 63, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 182, 184, 264, 351, 352, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 370, 371, 379, 380, 381, 382, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 419, 420, 438, 448, 466, 562, 563, 564, 565, 568, 569, 577, 585, 586, 597, 606, 618, 627, 629, 633, 641, 643, 647, 655, 657, 660, 668, 676, 684, 686, 690, 699, 701, 705, 713, 715, 719, 727, 729, 733, 741, 743, 744, 747, 756, 774, 780, 783, 788, 792, 815, 816, 819, 822, 823, 826, 829, 830, 832, 833, 834, 835, 837, 838, 839, 840, 843, 852, 854, 856, 864, 868], "properti": [19, 20, 22, 25, 37, 39, 40, 41, 42, 43, 44, 48, 51, 63, 149, 152, 178, 182, 265, 362, 365, 377, 398, 401, 405, 758, 759, 760, 763, 767, 771, 772, 774, 776, 779, 782, 784, 785, 791, 793, 815, 841, 854, 877], "max_iteration_count": 19, "maximum": [19, 56, 63, 123, 148, 151, 155, 165, 190, 220, 452, 455, 456, 518, 558, 601, 614, 628, 642, 656, 685, 688, 692, 700, 703, 706, 714, 717, 720, 728, 731, 734, 742, 754, 852, 856], "100": [19, 43, 174, 184, 346, 376, 589, 591, 747, 790, 793], "getter": [19, 20, 22, 25, 38, 39, 43, 48, 51, 354], "setter": [19, 20, 22, 25, 39, 43, 48, 51, 152], "invari": [19, 20, 22, 25, 30], "accuracy_threshold": 19, "threshold": [19, 492, 500, 501, 502, 504, 513, 517, 518, 533, 534, 544, 554, 558, 563, 573, 758, 763, 767, 776, 779, 798], "parameter": [19, 20, 22, 25, 262, 264], "get_data": [19, 20, 22, 25, 37, 40, 41, 42], "set_data": [19, 20, 22, 25], "get_initial_centroid": 19, "set_initial_centroid": 19, "get_iteration_count": 19, "sampl": [19, 39, 43, 48, 51, 154, 165, 362, 394, 398, 877], "phi_x": 19, "desc": [19, 20, 22, 25, 48, 51, 52, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 257, 258, 259, 260, 261, 263], "precondit": [19, 20, 22, 25, 30, 34, 35, 37, 42, 51, 184, 439, 440, 441], "has_data": [19, 20, 22, 25, 40, 42], "row_count": [19, 20, 22, 25, 34, 35, 41, 42, 43, 49], "column_count": [19, 20, 22, 25, 34, 35, 41, 42, 49], "postcondit": [19, 20, 22, 25, 30, 37, 51, 184], "iteration_count": 19, "set_model": [19, 22, 25], "choos": [20, 22, 37, 58, 152, 156, 164, 173, 184, 259, 780], "compute_input": 20, "compute_result": 20, "train": [20, 23, 27, 43, 45, 46, 48, 49, 50, 54, 55, 58, 70, 102, 159, 163], "first": [20, 22, 28, 29, 34, 38, 40, 43, 48, 58, 60, 62, 81, 130, 152, 157, 158, 161, 170, 177, 180, 181, 184, 198, 220, 221, 233, 259, 262, 265, 266, 274, 275, 277, 285, 292, 318, 325, 345, 404, 413, 425, 489, 505, 530, 553, 558, 570, 571, 573, 575, 576, 595, 596, 598, 603, 605, 608, 610, 616, 617, 620, 621, 627, 629, 630, 631, 632, 634, 635, 641, 643, 644, 645, 646, 648, 649, 655, 657, 658, 659, 666, 667, 669, 674, 675, 677, 678, 684, 686, 687, 688, 689, 693, 699, 701, 702, 703, 704, 707, 708, 713, 715, 716, 717, 718, 721, 722, 727, 729, 730, 731, 732, 735, 741, 743, 744, 745, 746, 749, 755, 761, 765, 768, 775, 780, 785, 793, 798, 820, 829, 854, 856, 857, 864, 866, 871], "run_comput": 20, "kmeans_init": 20, "init": [20, 180, 577, 595, 596, 603, 605, 610, 616, 617, 627, 631, 632, 641, 645, 646, 655, 658, 659, 666, 667, 674, 675, 684, 687, 689, 699, 702, 704, 713, 716, 718, 727, 730, 732, 741, 744, 745, 746], "obtain": [20, 34, 35, 36, 40, 49, 52, 160, 168, 184, 261, 266, 268, 269, 272, 274, 276, 277, 280, 281, 284, 285, 288, 290, 292, 294, 297, 299, 300, 303, 305, 307, 309, 311, 312, 315, 317, 318, 321, 323, 325, 327, 329, 331, 333, 334, 337, 339, 341, 343, 351, 352, 355, 356, 357, 358, 359, 360, 361, 366, 367, 370, 371, 372, 373, 375, 376, 378, 379, 380, 381, 382, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 419, 420, 421, 569, 589, 591, 596, 605, 617, 632, 646, 659, 667, 675, 689, 704, 718, 732, 746, 758, 763, 767, 772, 775, 776, 779, 798, 800, 831, 856], "princip": [21, 23, 44, 49], "compon": [21, 23, 44, 45, 49, 175, 180, 232, 233, 364, 400, 451, 630, 644, 757, 788, 796, 876], "analysi": [21, 23, 44, 45, 49, 149, 346, 588], "pca": [21, 23, 44, 49, 52], "exploratori": 22, "transform": [22, 38, 39, 40, 43, 44, 45, 51, 58, 60, 98, 99, 151, 152, 160, 179, 181, 184, 222, 223, 232, 233, 257, 258, 259, 260, 262, 264, 266, 292, 325, 351, 352, 355, 356, 357, 360, 361, 367, 370, 371, 373, 376, 380, 381, 382, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 403, 404, 408, 409, 411, 415, 416, 419, 421, 423, 439, 440, 441, 518, 558, 560, 815], "possibli": [22, 179, 193, 259, 260, 262, 572, 584, 775, 798, 811, 812, 817, 855, 856], "correl": [22, 410], "uncorrel": 22, "direct": [22, 34, 35, 43, 45, 60, 67, 85, 109, 110, 113, 140, 143, 150, 157, 159, 170, 174, 259, 263, 405, 414, 523, 530, 558, 782, 793, 829, 876], "varianc": [22, 40, 70, 71, 72, 100, 101, 154, 159, 390], "mostli": [22, 58, 181, 811, 812, 815], "spread": 22, "r": [22, 28, 46, 53, 77, 84, 86, 87, 100, 101, 117, 121, 122, 123, 124, 125, 126, 127, 159, 167, 170, 181, 184, 231, 268, 272, 309, 310, 343, 344, 351, 352, 354, 355, 356, 357, 360, 361, 367, 370, 371, 379, 380, 381, 382, 384, 387, 388, 389, 390, 391, 392, 393, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 419, 420, 457, 467, 472, 486, 562, 563, 564, 565, 566, 577, 578, 583, 792, 800, 826, 828, 829], "eigenvector": [22, 49, 288, 289, 290, 291, 296, 321, 322, 323, 324], "lang87": [22, 28], "eigenvalu": [22, 265, 266, 267, 274, 275, 288, 289, 290, 291, 292, 293, 297, 298, 303, 304, 309, 310, 321, 322, 323, 324, 325, 326, 331, 332, 337, 338, 343, 344], "decomposit": [22, 23, 28, 44, 268, 269, 272, 274, 292, 296, 325, 349, 376], "dataset": [22, 25, 38, 43, 46, 184, 265, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465], "format": [22, 36, 38, 40, 42, 43, 45, 56, 57, 59, 60, 78, 79, 80, 81, 82, 83, 98, 99, 114, 115, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 184, 262, 263, 264, 265, 345, 401, 402, 424, 426, 427, 433, 434, 437], "column": [22, 29, 36, 40, 41, 42, 44, 46, 58, 106, 184, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 225, 226, 227, 228, 229, 234, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 284, 285, 288, 290, 294, 296, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 309, 317, 318, 321, 323, 327, 329, 331, 332, 333, 334, 335, 336, 339, 340, 341, 342, 343, 344, 345, 425, 426, 427, 428, 433, 434, 435, 437, 546, 563, 564, 766], "s_i": [22, 423, 446, 447, 458], "x_": [22, 56, 345, 352, 364, 365, 381, 389, 400, 401, 402, 405, 410, 414, 420, 444, 445, 446, 447, 453, 457], "cross": [22, 45, 128], "product": [22, 43, 53, 58, 60, 106, 141, 150, 159, 160, 164, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 230, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 247, 248, 250, 252, 253, 256, 266, 268, 269, 272, 292, 294, 299, 300, 301, 302, 305, 306, 307, 308, 309, 325, 327, 333, 334, 335, 336, 339, 340, 341, 342, 343, 344, 346, 366, 407, 439, 440, 442, 562, 563, 564, 588, 876, 877], "tx": [22, 284, 287, 329, 330], "sigma": [22, 58, 70, 71, 72, 100, 101, 154, 162, 170, 274, 357, 361, 389, 395, 397], "lambda_i": [22, 288, 321, 409], "upsilon_i": 22, "ping14": [22, 28], "pair": [22, 25, 51, 61, 149, 159, 177, 263, 349, 376, 507, 508, 524, 525, 558, 563, 564, 571, 603, 606, 608, 616, 618, 621, 627, 631, 633, 635, 641, 645, 649, 655, 674, 678, 684, 687, 690, 694, 699, 702, 705, 708, 713, 716, 722, 727, 730, 736, 741, 815], "descend": [22, 274], "upsilon_": 22, "singular": [22, 28, 265, 266, 267, 274, 275, 276, 277, 288, 289, 290, 291, 292, 293, 294, 297, 298, 303, 304, 309, 310, 321, 322, 323, 324, 325, 326, 327, 331, 332, 337, 338, 343, 344, 487, 494, 512, 539], "its": [22, 31, 34, 35, 37, 40, 42, 43, 46, 48, 49, 50, 51, 58, 60, 61, 62, 115, 116, 149, 151, 152, 153, 155, 161, 163, 164, 175, 177, 179, 180, 181, 184, 204, 211, 215, 216, 241, 245, 246, 247, 257, 258, 259, 261, 262, 263, 264, 268, 269, 272, 348, 375, 425, 430, 431, 432, 437, 439, 440, 441, 448, 558, 561, 562, 563, 564, 565, 570, 571, 572, 573, 574, 576, 577, 582, 583, 744, 755, 757, 758, 759, 760, 763, 765, 767, 769, 771, 772, 774, 775, 776, 779, 782, 784, 785, 790, 791, 793, 796, 798, 802, 829, 852, 855, 856, 859, 863, 864, 877], "u_i": [22, 170, 277, 285, 312, 318, 319, 423], "v_i": [22, 405, 414], "demmel90": [22, 28], "v_": 22, "solver": [22, 45, 50, 184], "ambigu": [22, 28], "determinist": [22, 265, 377, 406, 569, 571, 579, 584, 780], "One": [22, 37, 43, 54, 157, 160, 262, 566], "propos": [22, 183], "bro07": [22, 28], "modif": [22, 401], "hat": [22, 154], "_i": [22, 46, 77, 277, 278, 281, 285, 449, 450, 461, 462, 464, 465], "t_i": 22, "sgn": [22, 46], "max_": [22, 25], "ij": [22, 444, 445, 446, 447, 453, 457, 458], "t_": 22, "signum": 22, "linear": [22, 28, 43, 50, 56, 58, 60, 63, 84, 86, 87, 98, 99, 117, 151, 159, 169, 183, 184, 189, 191, 249, 251, 255, 256, 268, 271, 272, 273, 276, 277, 279, 280, 283, 284, 285, 287, 294, 295, 299, 302, 305, 306, 307, 308, 311, 314, 315, 316, 317, 318, 320, 327, 328, 329, 330, 333, 336, 339, 340, 341, 342, 345, 346, 362, 363, 365, 398, 399, 441, 442, 466, 518, 558, 560, 569], "pca_desc": [22, 49], "set_component_count": [22, 49], "5": [22, 25, 34, 35, 54, 92, 98, 99, 100, 101, 130, 158, 169, 182, 232, 233, 261, 346, 364, 367, 376, 377, 379, 382, 385, 392, 400, 404, 408, 418, 425, 461, 462, 464, 465, 484, 493, 537, 553, 562, 565, 780], "set_determinist": [22, 49], "get_mean": 22, "get_vari": 22, "get_eigenvalu": 22, "get_eigenvector": [22, 49], "get_component_count": 22, "get_transformed_data": [22, 49], "component_count": 22, "get_determinist": 22, "cov": 22, "dim_reduct": 22, "whether": [22, 37, 40, 42, 43, 48, 52, 58, 60, 63, 68, 69, 100, 106, 114, 149, 152, 154, 155, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 179, 180, 184, 204, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 234, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 264, 294, 295, 311, 312, 313, 314, 318, 319, 327, 328, 329, 330, 425, 428, 435, 437, 466, 588, 589, 591, 842], "project": [22, 28, 58, 159, 181], "transformed_data": 22, "mine": [23, 28, 45], "regress": [23, 43, 45, 48, 50], "discoveri": [23, 856], "neighbor": [23, 44, 159], "knn": [23, 25, 31, 44], "nn": [23, 24, 44, 52, 345], "major": [25, 40, 42, 43, 45, 58, 149, 174, 183, 184, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 215, 216, 222, 223, 225, 226, 227, 228, 229, 241, 245, 246, 247, 252, 254, 255, 296, 345, 428, 435, 589, 591], "vote": 25, "observ": [25, 40, 43, 46, 184, 257, 258, 260, 448, 451, 616, 631, 645, 674, 687, 702, 716, 730, 768, 857], "let": [25, 58, 63, 81, 82, 152, 157, 161, 169, 180, 259, 263, 390, 403, 409, 565, 578, 744, 780], "y": [25, 46, 48, 62, 186, 187, 188, 194, 195, 197, 198, 199, 200, 205, 206, 207, 208, 209, 210, 212, 214, 217, 219, 230, 231, 232, 233, 234, 236, 237, 239, 240, 242, 244, 352, 356, 357, 381, 385, 388, 389, 440, 441, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 577, 578, 579, 591, 815, 825, 849], "y_1": 25, "y_n": [25, 364, 400, 420], "allow": [25, 39, 40, 45, 48, 51, 54, 56, 60, 63, 67, 85, 109, 110, 113, 130, 143, 149, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 184, 261, 262, 377, 405, 414, 560, 566, 593, 604, 692, 706, 720, 734, 758, 761, 765, 767, 768, 770, 776, 778, 779, 782, 783, 784, 793, 798, 811, 812, 830, 833, 841, 842, 852, 855, 856, 876], "subseteq": 25, "respect": [25, 27, 30, 53, 55, 58, 60, 62, 81, 99, 102, 142, 152, 157, 158, 159, 161, 167, 169, 170, 177, 181, 182, 184, 223, 226, 229, 232, 233, 259, 260, 262, 263, 264, 345, 366, 370, 371, 407, 415, 416, 483, 490, 496, 497, 499, 509, 536, 541, 542, 546, 550, 556, 558, 563, 564, 575, 595, 603, 616, 631, 645, 658, 666, 674, 687, 702, 716, 730, 744, 761, 775, 778, 799, 801, 803, 856, 874], "estim": [25, 184, 265, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 457, 458, 459, 461, 462, 463, 464, 465], "probabl": [25, 351, 352, 355, 356, 357, 360, 361, 367, 370, 371, 376, 380, 381, 382, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 397, 403, 404, 408, 409, 411, 415, 416, 419, 423], "fraction": [25, 157, 510, 518, 526, 558], "whose": [25, 29, 48, 174, 180, 249, 251, 256, 257, 258, 260, 262, 263, 274, 284, 285, 288, 299, 300, 301, 302, 305, 306, 307, 308, 317, 318, 321, 329, 333, 334, 335, 336, 339, 340, 341, 342, 343, 344, 591, 780, 792, 816], "p_": [25, 170, 266, 394], "jl": 25, "x_r": 25, "y_r": 25, "highest": [25, 177, 663, 780, 784], "equat": [25, 50, 170, 191, 192, 193, 249, 251, 254, 255, 256, 265, 268, 271, 272, 273, 276, 277, 279, 280, 283, 284, 285, 286, 287, 294, 295, 299, 302, 305, 306, 307, 308, 311, 314, 315, 316, 317, 318, 320, 327, 328, 329, 330, 333, 336, 339, 340, 341, 342, 441], "travers": [25, 613, 616, 621, 627, 631, 635, 641, 645, 649, 655, 674, 678, 684, 687, 688, 694, 699, 702, 703, 708, 713, 716, 717, 722, 727, 730, 731, 736, 741, 745, 748, 831, 871], "leaf": [25, 27], "tild": [25, 53, 170], "known": [25, 53, 60, 149, 157, 164, 175, 176, 405, 426, 427, 433, 434, 578, 763, 775, 776], "search": [25, 177], "limit": [25, 51, 55, 56, 58, 59, 63, 168, 178, 263, 373, 492, 500, 501, 502, 504, 513, 518, 531, 533, 534, 535, 544, 582, 757, 758, 767, 776, 779, 798, 852, 856, 864, 877], "explor": 25, "less": [25, 39, 51, 61, 106, 153, 159, 164, 169, 177, 181, 266, 268, 269, 272, 274, 276, 277, 280, 281, 284, 285, 288, 290, 292, 294, 297, 299, 300, 303, 305, 307, 309, 311, 312, 315, 317, 318, 321, 323, 325, 327, 329, 331, 333, 334, 337, 339, 341, 343, 490, 509, 518, 541, 542, 550, 582, 601, 607, 616, 618, 621, 623, 631, 633, 635, 637, 645, 647, 649, 651, 658, 660, 674, 676, 678, 680, 744, 751, 776, 784, 800, 864], "than": [25, 29, 30, 37, 61, 75, 76, 106, 141, 149, 153, 158, 159, 168, 169, 181, 184, 220, 221, 223, 226, 229, 262, 266, 268, 269, 272, 274, 276, 277, 280, 281, 284, 288, 290, 292, 294, 297, 299, 303, 305, 307, 309, 311, 315, 317, 321, 323, 325, 327, 329, 331, 333, 337, 339, 341, 343, 405, 414, 426, 427, 433, 434, 509, 562, 582, 584, 591, 601, 607, 621, 623, 635, 637, 649, 651, 678, 680, 744, 751, 757, 776, 780, 798, 799, 800, 811, 812, 829, 849, 855, 856, 864], "most": [25, 45, 48, 54, 56, 58, 60, 61, 106, 149, 151, 155, 156, 160, 163, 164, 167, 168, 173, 174, 180, 265, 297, 331, 376, 405, 414, 425, 466, 587, 758, 767, 779, 780, 795, 796, 869, 876], "distant": 25, "onc": [25, 40, 149, 151, 152, 153, 164, 180, 263, 265, 439, 440, 441, 566, 567, 744, 765, 772, 776, 793, 850, 854, 856], "equiv": [25, 263], "class_count": 25, "neighbor_count": 25, "knn_desc": 25, "get_class_count": 25, "set_class_count": 25, "get_neighbor_count": 25, "set_neighbor_count": 25, "bruteforc": 25, "kd_tree": 25, "set_label": 25, "classifi": 25, "tree": [26, 44, 854], "binari": [27, 43, 56, 58, 149, 150, 157, 158, 159, 160, 161, 164, 167, 177, 181, 410, 481, 577, 595, 603, 616, 631, 645, 658, 666, 674, 687, 702, 716, 730, 744, 799, 801, 803, 863, 865, 874], "bentley80": [27, 28], "induc": 27, "hyperplan": 27, "axi": [27, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 563, 564], "cut": [27, 815], "subset": [27, 50, 56, 148, 151, 174, 175, 182], "bucket": [27, 605, 607, 687, 689, 692, 702, 704, 706, 716, 718, 720, 730, 732, 734], "region": [27, 60, 349, 376, 437, 841, 853, 858], "path": [27, 174, 490, 491, 493, 541, 542, 543, 545, 550, 551, 553, 757, 780, 849], "orthogon": [27, 266, 268, 269, 272, 274, 292, 296, 297, 299, 300, 303, 305, 307, 309, 321, 325, 333, 334], "about": [28, 37, 40, 42, 43, 45, 51, 52, 60, 164, 262, 265, 346, 448, 466, 481, 795, 798, 800, 822, 873], "openclspec": [28, 43], "khrono": [28, 43], "opencl": [28, 43, 853], "work": [28, 40, 45, 47, 56, 60, 151, 152, 153, 155, 158, 162, 166, 167, 168, 171, 172, 173, 176, 177, 181, 182, 184, 223, 226, 229, 262, 266, 268, 269, 272, 288, 290, 292, 321, 323, 325, 354, 373, 377, 421, 561, 568, 569, 570, 578, 581, 582, 584, 744, 798, 829, 836, 850, 852, 853, 855, 856, 857], "document": [28, 44, 58, 60, 63, 175, 184, 259, 438, 439, 440, 441, 517, 554, 796, 798, 815, 849, 876, 877], "revis": [28, 184], "24": [28, 182, 345, 420, 491, 518, 543], "pdf": [28, 346], "syclspec": [28, 43], "subgroup": 28, "integr": [28, 29, 40, 150, 151, 152, 177, 180, 182, 503, 523, 556, 558, 591, 774, 776, 792, 795, 816, 822, 856], "modern": [28, 362, 364, 398, 400], "stuart": 28, "lloyd": 28, "quantiz": [28, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "pcm": 28, "ieee": [28, 54, 55, 62, 296, 481, 518, 546], "transact": [28, 346, 811, 812], "theori": 28, "1982": 28, "28": 28, "1982pp": 28, "129": 28, "137": 28, "bro": 28, "acar": 28, "kolda": 28, "resolv": [28, 179, 466, 591], "sandia": 28, "sand2007": 28, "6422": 28, "unlimit": [28, 758, 767, 768, 778, 779, 782, 783, 790, 791, 793], "releas": [28, 37, 184, 439, 440, 441, 588, 591, 609, 610, 775, 798, 805, 806, 807, 810, 813, 814, 841, 842, 855, 877], "octob": 28, "2007": 28, "bentlei": 28, "multidimension": [28, 58, 149, 346, 364, 400], "divid": [28, 30, 37, 43, 58, 63, 78, 79, 80, 81, 82, 83, 148, 177, 288, 290, 296, 321, 323, 470, 475, 478, 480, 487, 494, 512, 539, 558, 582, 583, 584], "conquer": [28, 288, 290, 296, 321, 323], "acm": [28, 346], "23": [28, 54, 182, 345, 364, 371, 400], "214": 28, "229": 28, "1980": 28, "friedman17": [28, 50], "friedman": 28, "hasti": 28, "tibshirani": 28, "statist": [28, 40, 58, 159, 162, 184, 346, 358, 359, 362, 365, 372, 373, 378, 391, 398, 418, 421, 423, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 460, 461, 462, 464, 465, 560], "springer": [28, 346], "2017": [28, 175, 797], "zhang04": [28, 50], "zhang": 28, "stochast": 28, "gradient": [28, 53, 54, 58, 66, 72, 74, 76, 89, 93, 95, 97, 99, 102, 105, 112, 115, 119, 132, 134, 136, 138, 145, 157, 159, 161], "descent": 28, "icml": 28, "2004": 28, "proceed": [28, 257, 258, 346], "Of": 28, "twenti": 28, "intern": [28, 37, 43, 50, 55, 60, 63, 149, 152, 257, 258, 262, 346, 348, 466, 557, 588, 595, 603, 616, 631, 645, 658, 666, 674, 687, 702, 716, 730, 744, 755, 756, 763, 776, 782, 788, 793, 794, 798, 799, 801, 803, 849, 856, 866, 874, 877], "confer": [28, 346], "On": [28, 47, 58, 60, 151, 159, 160, 164, 255, 274, 290, 292, 323, 325, 426, 427, 428, 429, 439, 440, 441, 765, 796], "machin": [28, 50, 52, 578], "919": 28, "926": 28, "lang": 28, "algebra": [28, 183, 184, 189, 296, 345, 442, 466, 560], "verlag": 28, "york": 28, "1987": 28, "ping": 28, "tak": 28, "peter": 28, "eric": 28, "polizzi": 28, "feast": 28, "subspac": 28, "eigensolv": 28, "approxim": [28, 362, 363, 376, 398, 399, 562, 563, 564, 565, 584, 780], "spectral": [28, 288, 321], "2014": [28, 346], "w": [28, 53, 58, 63, 70, 71, 73, 150, 152, 154, 157, 161, 163, 165, 166, 168, 170, 263, 288, 290, 321, 323, 412, 444, 445, 453, 457, 849], "demmel": 28, "kahan": [28, 288, 321], "accur": [28, 152, 172, 349, 370, 371, 375, 376, 415], "bidiagon": [28, 266, 274, 296], "siam": 28, "sci": [28, 346], "stat": [28, 184, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 458, 461, 462, 463, 464], "11": [28, 182, 232, 233, 345, 346, 364, 400, 401, 796], "1990": 28, "pp": 28, "873": 28, "912": 28, "cstdint": 29, "It": [29, 37, 40, 43, 48, 55, 58, 60, 62, 63, 84, 86, 87, 98, 100, 102, 116, 117, 128, 146, 147, 149, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 172, 178, 179, 180, 184, 196, 201, 202, 203, 204, 206, 211, 215, 216, 222, 223, 225, 226, 229, 241, 245, 246, 247, 252, 254, 255, 257, 258, 262, 290, 323, 369, 377, 390, 403, 405, 409, 414, 417, 491, 511, 543, 562, 566, 569, 571, 577, 578, 593, 616, 631, 645, 674, 687, 702, 716, 730, 758, 761, 763, 767, 768, 771, 772, 774, 779, 798, 805, 806, 807, 810, 815, 816, 822, 842, 851, 856, 863, 866, 872], "recommend": [29, 45, 58, 155, 156, 164, 167, 173, 179, 184, 259, 262, 562, 798, 822, 829], "enumer": [29, 42, 55, 58, 60, 61, 62, 63, 152, 170, 184, 259, 260, 261, 262, 263, 575, 757, 803, 852, 864], "data_typ": [29, 31, 32, 42, 54, 55, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 257, 258, 793], "them": [29, 40, 43, 50, 51, 58, 60, 62, 63, 121, 122, 123, 124, 125, 126, 127, 130, 149, 151, 152, 153, 159, 170, 186, 198, 214, 219, 239, 243, 244, 257, 258, 261, 262, 263, 266, 373, 377, 443, 483, 484, 496, 497, 498, 499, 503, 517, 554, 578, 757, 765, 779], "name": [29, 31, 38, 39, 40, 48, 51, 54, 58, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 179, 180, 181, 183, 184, 292, 386, 466, 558, 559, 562, 565, 577, 581, 583, 584, 593, 765, 821, 846, 847, 849], "int_xx_t": 29, "uint_xx_t": 29, "xx": 29, "bi": [29, 509, 536, 774], "start_index": 29, "end_index": 29, "get_element_count": [29, 32], "max_end_index": 29, "noexcept": [29, 37, 42, 181, 182, 687, 689, 696, 701, 702, 704, 710, 715, 716, 718, 724, 729, 730, 732, 738, 743, 744, 746, 754, 755, 768, 799, 800, 801, 803, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 841, 842, 855, 861], "start_idx": 29, "end_idx": 29, "greater": [29, 37, 75, 76, 159, 169, 262, 405, 414, 426, 427, 433, 434, 562, 571, 591, 621, 623, 635, 637, 649, 651, 660, 678, 680, 751, 856], "rel": [29, 177, 180, 579, 780, 841], "next": [29, 40, 149, 151, 152, 159, 177, 181, 182, 459, 530, 558, 573, 576, 578, 621, 678, 694, 736, 765, 766, 772, 784, 790, 818, 822, 837], "last": [29, 37, 41, 47, 100, 101, 106, 142, 159, 162, 177, 181, 232, 233, 259, 263, 352, 356, 425, 570, 571, 572, 573, 595, 596, 598, 601, 603, 605, 608, 610, 616, 617, 620, 627, 629, 631, 632, 634, 635, 641, 643, 645, 646, 648, 649, 655, 657, 658, 659, 666, 667, 669, 672, 674, 675, 677, 684, 686, 687, 688, 689, 693, 699, 701, 702, 703, 704, 707, 708, 713, 715, 716, 717, 718, 721, 722, 727, 729, 730, 731, 732, 735, 741, 743, 744, 745, 746, 749, 769, 780, 831, 855, 871], "neg": [29, 63, 68, 69, 78, 79, 80, 81, 82, 83, 88, 89, 100, 101, 102, 107, 108, 142, 153, 154, 157, 159, 170, 171, 172, 274, 375, 404, 451, 489, 503, 517, 531, 534, 535, 545, 546, 554, 558, 776, 841, 842], "3": [29, 34, 35, 37, 49, 60, 70, 71, 72, 96, 101, 112, 114, 115, 130, 149, 152, 158, 170, 184, 189, 201, 211, 215, 216, 241, 245, 246, 252, 254, 260, 261, 290, 291, 323, 324, 345, 346, 362, 363, 364, 365, 366, 379, 396, 400, 407, 412, 413, 420, 425, 444, 445, 446, 447, 449, 450, 457, 458, 461, 462, 463, 468, 469, 472, 477, 478, 519, 520, 533, 562, 563, 564, 565, 572, 647, 676, 765, 793], "sequenc": [29, 153, 157, 160, 177, 257, 258, 259, 260, 262, 263, 264, 346, 348, 353, 374, 375, 377, 390, 391, 396, 403, 405, 409, 412, 413, 414, 422, 558, 570, 573, 578, 579, 645, 674, 716, 730, 744, 745, 790, 815, 817, 848, 871], "ye": [30, 52, 766, 841, 842], "three": [30, 39, 40, 43, 48, 51, 170, 232, 233, 260, 265, 373, 376, 425, 494, 564, 744, 757, 761, 765, 775, 778], "logic": [30, 40, 42, 43, 58, 59, 60, 62, 87, 147, 151, 152, 153, 154, 156, 157, 158, 161, 162, 163, 164, 165, 166, 168, 171, 172, 173, 425, 577, 796, 798, 799, 805, 810, 852, 856], "logic_error": [30, 51], "runtime_error": [30, 51, 792], "bad_alloc": 30, "violat": [30, 51, 61, 152, 177, 353, 383], "happen": [30, 37, 56, 60, 61, 77, 152, 157, 168, 259, 487, 494, 512, 539], "failur": [30, 63, 183, 565, 588, 859], "storag": [30, 37, 40, 58, 59, 60, 150, 151, 152, 159, 160, 179, 183, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 261, 264, 265, 346, 448, 451, 596, 605, 617, 632, 646, 659, 667, 675, 689, 704, 718, 732, 746, 782, 798, 847, 848, 864], "invalid": [30, 257, 258, 259, 262, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 487, 494, 512, 513, 539, 629, 643, 657, 686, 701, 715, 729, 743, 744, 782, 793], "domain": [30, 43, 58, 184, 257, 258, 259, 260, 262, 373, 375, 421, 423, 443, 456, 490, 491, 493, 541, 542, 543, 545, 550, 551, 553, 560, 876], "domain_error": [30, 37], "out_of_rang": [30, 619, 691, 748], "unsupported_devic": [30, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441], "situat": [30, 164, 799], "No": [30, 37, 41, 52, 58, 63, 268, 269, 272, 346, 488, 627, 629, 641, 643, 655, 657, 684, 686, 699, 701, 713, 715, 727, 729, 741, 743, 841, 842, 855], "outsid": [30, 149, 151, 152, 184, 263, 593, 758, 761, 763, 767, 772, 779, 856], "higher": [30, 54, 56, 154, 157, 162, 165, 166, 169, 184, 780, 829, 856], "aris": 30, "becaus": [30, 55, 56, 58, 60, 153, 154, 162, 180, 184, 562, 569, 573, 578, 588, 768, 776, 799, 815, 829, 837, 841, 850, 876], "distinguish": [30, 40, 46, 50, 580, 585, 586, 830], "o": [30, 53, 58, 152, 170, 259, 346, 569, 571, 577, 579, 588, 798, 856, 864], "facil": 30, "interact": [30, 149, 184, 757, 815, 858], "internal_error": 30, "range_error": [30, 744, 748], "system_error": 30, "could": [30, 50, 54, 58, 60, 62, 157, 164, 177, 180, 183, 184, 257, 258, 262, 284, 285, 290, 311, 312, 315, 317, 318, 323, 562, 577, 578, 815, 853], "inheritor": 30, "device_bad_alloc": [30, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 262, 266, 268, 272, 274, 276, 280, 284, 288, 290, 292, 294, 297, 299, 303, 305, 307, 309, 311, 315, 317, 321, 323, 325, 327, 329, 331, 333, 337, 339, 341, 343, 439, 440, 441, 557], "layer": [31, 53, 58, 98, 100, 101, 150, 159, 160, 161, 170, 184], "particular": [31, 40, 43, 45, 48, 51, 60, 61, 149, 151, 152, 153, 157, 160, 164, 172, 184, 262, 263, 406, 571, 573, 575, 577, 585, 780, 802, 849, 859], "folder": 31, "itself": [31, 61, 165, 180, 184, 262, 311, 315, 437], "string": [31, 37, 38, 39, 48, 51, 63, 67, 68, 69, 70, 71, 72, 73, 74, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 98, 99, 107, 108, 109, 110, 113, 114, 115, 117, 130, 140, 141, 143, 591, 765], "substitut": [31, 39, 48, 51, 178, 562], "misc": 31, "func": [31, 566, 569, 571, 574, 577, 824, 838, 843, 853, 859], "miscellan": [31, 45, 558], "intend": [31, 45, 54, 259, 375, 402, 410, 563, 564, 792, 849, 850, 852], "pipelin": [31, 40, 45, 573, 575, 576, 768], "mt19937": [31, 377, 402], "cross_enthropy_loss": 31, "relat": [31, 39, 40, 42, 48, 153, 169, 171, 182, 184, 259, 260, 261, 263, 265, 274, 296, 424, 483, 484, 496, 497, 498, 499, 590, 591, 757, 797, 859], "table_metadata": [31, 40, 42], "data_layout": [31, 40, 41, 42], "_tabl": 31, "suffix": [31, 174], "homogen_t": [31, 34, 35, 40, 41, 42], "io": [31, 38, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 853], "csv": [31, 39, 40, 43, 44, 49], "util": [31, 45, 152, 159, 175, 179, 581, 582, 583, 584, 871], "auxiliari": [31, 45, 757, 847, 848], "trait": [31, 45, 841, 842, 854], "variou": [31, 40, 45, 57, 160, 175, 184, 362, 398, 401, 439, 440, 441], "usm_alloc": 31, "type_trait": 31, "content": [31, 37, 60, 180, 184, 274, 596, 602, 605, 615, 617, 629, 632, 643, 646, 657, 665, 667, 673, 675, 686, 689, 701, 704, 715, 718, 729, 732, 743, 746, 755, 861, 863, 866, 877], "extern": [31, 37, 40, 41, 42, 262, 263, 264, 265, 566, 572, 757, 758, 788, 798, 833, 836], "visibl": [31, 149, 152], "servic": [31, 368, 373, 377, 396, 413, 421, 451, 487, 494, 511, 512, 539, 540, 556, 850, 857, 877], "structur": [31, 37, 40, 43, 48, 51, 184, 223, 226, 229, 265, 294, 327, 346, 373, 421, 423, 456, 573, 595, 666, 849], "data_sourc": [31, 38, 39, 40, 49], "parent": [31, 58, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 854], "nor": [31, 577, 579, 841], "scalar": [32, 37, 40, 63, 182, 184, 185, 186, 187, 188, 190, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 225, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 252, 254, 255, 265, 266, 268, 269, 272, 292, 297, 325, 439, 440, 441, 518, 535], "column_accessor": [34, 36, 40], "contigu": [34, 35, 36, 37, 40, 41, 42, 43, 149, 177, 184, 262, 345, 556], "iostream": [34, 35, 37, 49, 780, 855], "default_selector": [34, 35, 37], "host_data": [34, 35], "0f": [34, 35, 37, 152, 360, 380, 381, 392], "5f": [34, 35, 152, 351, 360, 380], "1f": [34, 35], "2f": [34, 35, 618, 633], "7f": [34, 35], "9f": [34, 35], "6": [34, 35, 58, 96, 112, 158, 364, 376, 400, 562, 564], "shared_data": [34, 35], "malloc_shar": [34, 35, 184, 466], "memcpi": [34, 35], "sizeof": [34, 35, 150, 152, 260, 261, 562, 774, 799, 801, 803, 849], "whole": [34, 56, 152, 297, 299, 300, 331, 333, 334, 578, 780, 852, 855, 864], "acc": [34, 35, 49], "pull": [34, 35, 36, 40, 49], "get_count": [34, 35, 37, 40, 42, 49, 61, 354, 391, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 557], "cout": [34, 35, 37, 42, 49, 152, 780], "endl": [34, 35, 37, 42, 49, 152, 780, 855], "free": [34, 35, 41, 42, 59, 63, 149, 180, 261, 373, 421, 430, 431, 432, 439, 440, 441, 456, 792, 798, 801, 803, 804, 875, 877], "data_t": [34, 35, 37], "remove_const_t": [34, 35, 606, 618, 633, 690, 705], "obj": [34, 35], "column_index": 34, "usm": [34, 35, 37, 49, 60, 179, 180, 259, 260, 261, 262, 273, 430, 431, 432, 439, 440, 441, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557], "qualifi": [34, 35, 60, 179, 608, 609, 610, 621, 629, 635, 643, 649, 657, 678, 686, 687, 694, 701, 702, 708, 715, 716, 722, 729, 730, 736, 743, 777, 787, 815], "int32_t": [34, 35, 41, 43, 63, 159, 201, 202, 203, 351, 354, 360, 362, 363, 364, 365, 366, 367, 371, 380, 382, 385, 390, 392, 394, 403, 404, 408, 409, 416, 443], "kind": [34, 35, 37, 40, 41, 42, 54, 55, 56, 58, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 262, 263, 264, 439, 440, 877], "directli": [34, 35, 36, 40, 50, 54, 58, 60, 62, 157, 180, 184, 794, 876], "possibl": [34, 35, 36, 37, 43, 58, 60, 154, 157, 158, 161, 162, 163, 165, 166, 167, 169, 170, 171, 172, 179, 184, 262, 264, 403, 426, 427, 433, 434, 439, 440, 441, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 578, 597, 606, 618, 633, 647, 660, 668, 676, 690, 705, 719, 733, 747, 765, 766, 768, 780, 793, 798, 829, 856, 876], "immut": [34, 35, 37, 40, 42, 43, 149, 160, 179], "convert": [34, 35, 40, 54, 56, 62, 84, 86, 87, 117, 128, 149, 152, 158, 168, 184, 349, 376, 466, 585, 816, 822, 832, 874], "mutabl": [34, 35, 37, 149, 151, 160], "reus": [34, 35, 149, 151, 160, 164, 202, 574, 793], "reset": [34, 35, 37, 40, 53, 58, 159, 259, 426, 427, 428, 429, 433, 434, 435, 436, 439, 440, 441, 487, 769, 788, 854], "row_accessor": [35, 36, 40, 49], "second": [35, 48, 58, 60, 81, 115, 121, 122, 123, 124, 125, 126, 127, 130, 153, 180, 184, 228, 233, 262, 266, 272, 274, 276, 284, 288, 290, 292, 294, 303, 305, 307, 309, 311, 315, 317, 321, 323, 325, 327, 329, 337, 339, 341, 343, 404, 420, 489, 505, 530, 553, 558, 563, 564, 565, 570, 573, 619, 691, 768, 780, 798, 829, 874], "third": [35, 43, 48, 130, 768], "everi": [36, 40, 42, 65, 75, 88, 91, 92, 94, 96, 102, 103, 118, 131, 133, 135, 144, 152, 158, 188, 195, 196, 202, 203, 206, 247, 255, 259, 263, 757], "Be": [36, 40, 42], "lightweight": [36, 43, 758, 763, 767, 779], "computation": [36, 546, 850, 876], "intens": [36, 58, 60, 154, 163, 165, 171, 850], "convers": [36, 40, 45, 56, 62, 128, 152, 157, 179, 263, 577, 815], "move": [36, 42, 68, 69, 78, 79, 80, 81, 82, 83, 107, 108, 179, 181, 262, 354, 379, 398, 399, 400, 401, 402, 405, 406, 407, 410, 412, 414, 420, 562, 568, 593, 597, 601, 606, 610, 618, 619, 627, 629, 633, 641, 643, 647, 655, 657, 660, 663, 668, 672, 676, 684, 686, 690, 691, 699, 701, 705, 713, 715, 719, 727, 729, 733, 741, 743, 745, 747, 815, 861, 863, 864], "sinc": [36, 40, 49, 58, 62, 149, 152, 182, 259, 260, 569, 570, 574, 577, 578, 597, 606, 618, 633, 647, 660, 668, 676, 690, 705, 719, 733, 747, 758, 765, 767, 774, 779, 790, 858], "avoid": [36, 40, 56, 58, 70, 71, 72, 490, 491, 493, 541, 542, 543, 545, 550, 551, 553, 578, 793, 799, 800, 850, 856, 858, 864], "usag": [36, 39, 40, 45, 55, 58, 128, 149, 152, 157, 175, 257, 258, 259, 260, 262, 264, 373, 421, 439, 440, 441, 456, 571, 577, 784, 785, 793, 798, 799, 815, 866], "insid": [37, 40, 42, 43, 60, 63, 149, 180, 184, 269, 270, 277, 278, 281, 282, 285, 286, 300, 301, 312, 313, 318, 319, 334, 335, 354, 487, 512, 539, 776, 782, 790, 856], "organ": [37, 40, 184, 687, 702, 716, 730], "chang": [37, 43, 48, 55, 60, 62, 63, 141, 149, 151, 152, 153, 168, 179, 184, 262, 263, 265, 413, 438, 439, 440, 441, 489, 494, 540, 553, 558, 577, 578, 591, 593, 758, 767, 772, 779, 790, 811, 812, 842, 856, 858, 864, 877], "state": [37, 43, 48, 53, 58, 149, 159, 160, 170, 182, 262, 362, 363, 364, 365, 366, 368, 373, 374, 377, 379, 396, 398, 399, 400, 401, 402, 405, 406, 407, 410, 412, 413, 414, 420, 421, 422, 423, 439, 440, 441, 546, 567, 596, 601, 605, 610, 614, 617, 627, 628, 632, 641, 642, 646, 655, 656, 659, 663, 664, 667, 672, 675, 684, 685, 689, 699, 700, 704, 713, 714, 718, 727, 728, 732, 741, 742, 744, 745, 746, 758, 760, 763, 767, 772, 774, 776, 779, 784, 785, 788, 791, 805, 811, 812, 813, 849, 854, 856, 857, 863, 866, 872, 877], "anoth": [37, 40, 42, 43, 50, 58, 60, 62, 128, 149, 152, 153, 177, 179, 180, 184, 194, 195, 240, 262, 263, 377, 405, 414, 466, 530, 558, 581, 610, 758, 768, 800, 856, 874], "brief": [37, 558], "basic": [37, 40, 60, 63, 149, 152, 184, 189, 265, 348, 358, 362, 363, 364, 365, 366, 372, 373, 375, 379, 386, 391, 398, 399, 400, 401, 402, 405, 406, 407, 410, 412, 414, 418, 420, 421, 442, 466, 562, 563, 564, 565, 585, 780, 822, 829, 864, 871], "scenario": [37, 40, 45, 47, 63, 373, 421, 578, 784, 785, 793], "print_properti": 37, "data_count": 37, "arr_data": 37, "ones": [37, 60, 169, 184, 796, 815], "arr_on": 37, "full": [37, 40, 43, 64, 149, 345, 390, 588, 591], "has_mutable_data": [37, 40], "arr_mdata": 37, "still": [37, 56, 60, 63, 170, 182, 262, 362, 398, 589, 852, 854, 859], "origin": [37, 43, 98, 99, 151, 152, 153, 154, 158, 159, 162, 168, 169, 172, 177, 179, 264, 297, 298, 331, 332, 374, 396, 422, 562, 563, 564, 565, 758, 763, 767, 772, 779, 790, 830], "need_mutable_data": [37, 40], "cgh": [37, 372, 373], "mdata": 37, "get_mutable_data": [37, 40], "cone": 37, "array_addit": 37, "retain": [37, 43, 766], "nullptr": [37, 41, 152, 257, 258, 262, 391, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 557, 573], "lifetim": [37, 60, 426, 427, 428, 429, 433, 434, 435, 436, 439, 440, 441, 852], "own": [37, 40, 41, 48, 51, 60, 61, 149, 150, 151, 160, 261, 262, 405, 414, 563, 570, 571, 572, 573, 577, 593, 610, 627, 629, 641, 643, 655, 657, 684, 686, 699, 701, 713, 715, 727, 729, 741, 743, 757, 769, 856, 857, 858, 861, 863], "destroi": [37, 61, 152, 181, 274, 290, 323, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 571, 593, 596, 601, 603, 604, 605, 616, 617, 631, 632, 645, 646, 659, 663, 667, 672, 674, 675, 687, 689, 702, 704, 716, 718, 730, 732, 746, 769, 770, 782, 793, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 854, 855, 856, 857, 859, 861, 863, 864, 866, 870], "remain": [37, 41, 60, 81, 152, 157, 254, 265, 272, 426, 427, 433, 434, 526, 562, 563, 564, 629, 643, 657, 684, 686, 701, 715, 729, 743, 744, 775], "dealloc": [37, 593, 596, 605, 617, 632, 646, 659, 667, 675, 689, 704, 718, 732, 746, 798, 799, 800, 801, 802, 803], "delet": [37, 41, 567, 788, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 841, 842, 855], "like": [37, 58, 71, 106, 149, 151, 153, 154, 155, 157, 160, 161, 163, 165, 170, 178, 180, 184, 186, 188, 189, 195, 196, 202, 203, 204, 206, 222, 223, 225, 226, 227, 228, 229, 247, 255, 264, 269, 270, 277, 278, 281, 282, 285, 286, 300, 301, 312, 313, 318, 319, 334, 335, 439, 440, 441, 524, 525, 562, 565, 569, 771, 774, 802, 811, 812, 815, 831, 842, 849, 876], "member": [37, 43, 48, 61, 160, 183, 257, 258, 259, 261, 263, 264, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 419, 420, 438, 448, 451, 570, 572, 577, 578, 598, 608, 615, 627, 629, 641, 643, 655, 657, 663, 665, 669, 684, 686, 688, 690, 699, 701, 703, 705, 713, 715, 717, 719, 727, 729, 731, 733, 741, 743, 745, 748, 755, 831, 833, 839, 845, 849, 865, 868, 870, 873], "decrement": [37, 42, 430, 431, 432, 776], "reach": [37, 159, 573, 576, 763, 776], "increment": [37, 42, 47, 345, 426, 427, 428, 429, 433, 434, 435, 436, 558, 763], "re": [37, 185, 220, 221, 259, 260, 263, 372, 467, 468, 469, 471, 472, 474, 479, 492, 500, 519, 520, 527, 531, 544, 546, 549, 788, 797, 856, 876], "simplifi": [37, 81, 104, 157, 169, 175, 179, 771, 774, 804, 873, 876], "extdata": 37, "refdata": 37, "ref": [37, 71, 81, 94, 128, 285, 309, 425], "get_siz": [37, 40, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "sure": [37, 106, 259, 569, 578, 583], "valid": [37, 44, 45, 63, 68, 69, 75, 76, 78, 79, 80, 81, 82, 83, 107, 108, 149, 151, 178, 179, 184, 259, 262, 263, 264, 297, 331, 379, 398, 399, 400, 401, 402, 405, 406, 407, 410, 412, 414, 420, 438, 466, 593, 596, 601, 605, 608, 609, 610, 617, 621, 627, 629, 632, 635, 641, 643, 646, 649, 655, 657, 659, 663, 667, 672, 675, 678, 684, 686, 687, 689, 694, 699, 701, 702, 704, 708, 713, 715, 716, 718, 722, 727, 729, 730, 732, 736, 741, 743, 744, 745, 746, 772, 777, 782, 787, 793, 798, 815, 817, 837, 856, 866], "long": [37, 61, 152, 170, 184, 259, 364, 400, 595, 603, 616, 631, 645, 658, 666, 674, 687, 702, 716, 730, 744, 799, 801, 803, 850, 874], "transfer": [37, 40, 43, 45, 61, 151, 179, 262, 345, 593, 627, 629, 641, 643, 655, 657, 684, 686, 699, 701, 713, 715, 727, 729, 741, 743, 766, 799], "behaviour": 37, "becom": [37, 43, 58, 154, 162, 180, 184, 296, 518, 562, 574, 601, 604, 744, 798, 854, 861], "written": [37, 43, 56, 152, 262, 274, 494, 503, 577, 578, 794], "unmanag": 37, "othewis": 37, "noth": [37, 601, 627, 641, 655, 663, 672, 684, 699, 713, 727, 741, 806, 807, 855, 857], "extract": [38, 40, 43, 593], "text": [38, 39, 43, 58, 65, 66, 88, 95, 102, 114, 118, 120, 158, 164, 259, 268, 269, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 297, 299, 300, 301, 303, 304, 305, 307, 309, 310, 311, 312, 313, 315, 317, 318, 319, 321, 323, 324, 325, 327, 329, 330, 333, 334, 335, 337, 339, 341, 343, 344, 345, 365, 439, 440, 441, 546, 849], "delimit": [38, 39, 40, 43], "numer": [38, 40, 43, 45, 54, 62, 71, 100, 101, 154, 159, 162, 172, 177, 184, 262, 264, 346, 350, 363, 377, 399, 413, 420], "represent": [38, 40, 43, 45, 60, 62, 149, 264, 266, 268, 269, 272, 292, 325, 493, 530, 553, 558, 591, 755, 756, 790, 856], "chosen": [38, 56, 58, 154, 157, 159, 160, 163, 168, 262, 563, 564], "read_opt": 38, "uint64_t": [38, 184, 353, 360, 362, 363, 364, 365, 366, 368, 369, 371, 379, 396, 399, 407, 413, 417], "none": [38, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "parse_head": 38, "default_delimit": 38, "default_read_opt": 38, "file_nam": [38, 39, 40], "opt": 38, "get_file_nam": 38, "get_delimit": 38, "get_read_opt": 38, "flag": [38, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 232, 233, 264, 494, 566, 769, 788, 854, 857], "get_filenam": 38, "charact": [38, 43, 184, 849], "get_delimt": 38, "line": [38, 43, 591, 765, 799, 800, 849], "read_arg": [38, 39, 40], "datasourc": [38, 39], "code": [39, 43, 48, 51, 58, 60, 149, 150, 151, 152, 153, 157, 160, 168, 179, 181, 182, 184, 261, 266, 268, 269, 272, 274, 276, 277, 280, 281, 284, 285, 288, 290, 292, 294, 297, 299, 300, 303, 305, 307, 309, 311, 312, 315, 317, 318, 321, 323, 325, 327, 329, 331, 333, 334, 337, 339, 341, 343, 354, 373, 405, 414, 423, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 559, 570, 577, 578, 588, 594, 605, 778, 794, 796, 804, 815, 832, 849, 857, 876, 877], "show": [39, 40, 48, 51, 58, 154, 157, 161, 162, 164, 165, 166, 169, 180, 546, 566, 578, 768, 793, 815, 849], "read_args_t": 39, "read_result_t": 39, "side": [39, 41, 51, 60, 106, 184, 196, 211, 241, 251, 252, 254, 255, 256, 262, 284, 285, 286, 287, 296, 305, 306, 307, 308, 309, 310, 317, 318, 319, 320, 329, 330, 339, 340, 341, 342, 343, 344, 466, 571, 768, 797], "verbos": [39, 51], "overload": [39, 51, 179, 180, 262, 562, 570, 571, 577, 597, 606, 608, 609, 610, 618, 621, 627, 629, 633, 635, 641, 643, 647, 649, 657, 660, 668, 676, 678, 686, 690, 694, 699, 701, 705, 708, 713, 715, 719, 722, 729, 733, 736, 743, 745, 746, 747, 774, 777, 787, 866], "combin": [39, 43, 51, 59, 60, 61, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 154, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 177, 180, 297, 331, 346, 350, 364, 377, 386, 400, 420, 438, 486, 558, 578, 757, 768, 769, 825, 827, 848, 862, 864, 876], "previou": [39, 51, 58, 149, 152, 153, 170, 177, 184, 345, 487, 539, 540, 577, 578, 581, 849, 856], "property_nam": [39, 48, 51], "property_typ": [39, 48, 51, 63], "property_type_1": 39, "property_name_1": 39, "property_type_2": 39, "property_name_2": 39, "descriptor": [39, 40, 44, 49, 50, 51, 52, 55, 57, 58, 59, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 184, 257, 258, 259, 261, 263, 264, 265, 438, 439, 440, 441, 788], "set_": [39, 48, 51], "get_": [39, 48, 51], "perspect": [40, 50, 168], "acquisit": [40, 45, 841, 842], "prepar": [40, 56, 152, 372, 782], "pictur": [40, 43, 780], "raw": [40, 42, 456, 457, 458, 459, 466], "databas": [40, 853], "remot": 40, "compress": [40, 43, 425, 427], "decompress": 40, "recov": 40, "filter": [40, 63, 561, 575, 576, 818], "normal": [40, 45, 53, 58, 70, 71, 100, 101, 150, 160, 228, 290, 323, 348, 349, 357, 361, 373, 375, 376, 389, 390, 397, 405, 414, 421, 483, 484, 496, 497, 499, 546, 558, 856], "metric": 40, "covari": [40, 390], "flow": [40, 50, 152, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 833, 836, 846, 847, 848, 853, 855], "goe": [40, 42], "forth": [40, 562], "fulli": [40, 62, 149, 151, 152, 160, 161, 164, 174, 178, 184, 257, 258, 262, 263, 437, 591], "done": [40, 150, 157, 158, 165, 168, 184, 257, 258, 262, 264, 487, 512, 539, 562, 563, 564, 761, 829, 863], "tabular": 40, "view": [40, 141, 142, 170, 181, 390, 403, 409, 871], "download": 40, "load": [40, 49, 582, 584, 591], "especi": [40, 60, 354], "batch": [40, 43, 44, 45, 50, 53, 58, 70, 71, 81, 106, 150, 152, 157, 159, 160, 164, 172, 184, 188, 195, 202, 206, 223, 226, 229, 247, 255, 259, 263, 264, 269, 270, 277, 278, 281, 282, 285, 286, 296, 300, 301, 312, 313, 318, 319, 334, 335], "therefor": [40, 45, 53, 54, 180, 311, 312, 315, 518, 569, 582, 590, 765, 771, 778, 780, 799, 815, 820, 829, 864], "onlin": [40, 43, 44, 45, 50], "automat": [40, 43, 58, 156, 157, 159, 173, 174, 179, 184, 259, 264, 562, 569, 692, 706, 720, 734, 756, 768, 795, 829, 841, 856, 858], "categor": [40, 43], "continu": [40, 43, 265, 348, 354, 375, 566, 762, 766, 772, 853], "heterogen": [40, 43], "dens": [40, 41, 42, 58, 60, 184, 189, 222, 223, 225, 226, 227, 228, 229, 296, 345, 428, 429, 439, 440, 441, 442, 466, 560], "spars": [40, 43, 184, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 560], "chunk": [40, 348, 369, 375, 417], "unnecessari": [40, 58, 180], "ownership": [40, 426, 427, 428, 429, 433, 434, 435, 436, 593, 604, 627, 629, 643, 657, 684, 686, 699, 701, 715, 729, 741, 743, 757, 810, 814], "layout": [40, 41, 43, 57, 58, 60, 62, 63, 74, 128, 141, 142, 146, 149, 150, 151, 152, 153, 162, 170, 183, 184, 196, 200, 201, 202, 203, 205, 206, 207, 208, 209, 211, 222, 223, 225, 226, 227, 228, 229, 241, 252, 254, 255, 260, 262, 264, 296, 345, 390, 428, 435, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 463, 464, 465, 778], "safeti": [40, 577, 846, 847, 871], "reason": [40, 53, 56, 58, 150, 152, 261, 487, 512, 539, 768], "better": [40, 55, 60, 149, 179, 223, 226, 229, 811, 812], "thu": [40, 58, 149, 288, 321, 578, 582, 780, 805, 810, 859], "physic": [40, 43, 60, 62, 346], "nomin": [40, 42, 43], "ordin": [40, 41, 42, 43], "interv": [40, 42, 43, 182, 348, 370, 371, 375, 415, 416, 423, 562, 563, 564, 565, 596, 605, 610, 617, 627, 629, 632, 641, 643, 646, 655, 657, 659, 667, 675, 684, 686, 689, 699, 701, 704, 713, 715, 718, 727, 729, 732, 741, 743, 745, 746, 776, 871, 874], "ratio": [40, 42, 43, 478, 558, 562, 563, 564, 565, 585], "affect": [40, 152, 153, 184, 537, 758, 763, 767, 768, 772, 779, 790, 798, 852], "contract": 40, "flat": [40, 43], "acquir": [40, 775, 776, 805, 806, 807, 808, 809, 810, 813, 814, 841, 842], "desir": [40, 49, 61, 257, 258, 259, 262, 263, 264, 348, 466], "demonstr": [40, 418, 463, 578, 580, 780, 782, 790, 856], "diagram": [40, 149], "highlight": [40, 152], "dark": 40, "blue": 40, "orang": 40, "light": 40, "shown": [40, 48, 154, 162, 170, 171, 259, 261, 438, 578, 765, 778, 798], "tm": [40, 43], "shortcut": [40, 50], "get_column_count": [40, 42, 49], "get_row_count": [40, 42, 43], "get_metadata": [40, 42], "get_kind": [40, 41, 42, 61, 159], "get_data_layout": [40, 42], "get_feature_count": [40, 42], "get_feature_typ": [40, 42], "get_data_typ": [40, 42, 63], "feature_typ": [40, 42], "data_point": 41, "row_major": [41, 42, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 448, 451, 463], "constdelet": 41, "data_delet": 41, "reinterpret_cast": 41, "metadata": [41, 43, 149], "column_major": [41, 42, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 466], "cast": [41, 128, 146], "onto": [42, 796, 850], "restrict": [42, 73, 155, 157, 158, 161, 164, 167, 168, 262, 263, 852, 858, 877], "weaken": 42, "illustr": [42, 260, 261, 483, 484, 496, 497, 498, 499, 767], "table1": 42, "data_ptr": 42, "table2": 42, "table3": 42, "subtyp": 42, "how": [42, 49, 58, 68, 69, 70, 71, 72, 73, 74, 78, 79, 80, 81, 82, 83, 98, 99, 107, 108, 141, 149, 150, 152, 157, 159, 160, 165, 169, 177, 180, 182, 184, 220, 221, 260, 265, 274, 294, 295, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 327, 328, 347, 354, 426, 427, 433, 434, 438, 463, 466, 561, 569, 578, 580, 584, 767, 815, 849, 855], "mani": [42, 50, 149, 151, 184, 193, 262, 274, 296, 347, 354, 556, 569, 578, 766, 793, 799, 855, 876], "special": [42, 43, 60, 73, 149, 151, 155, 156, 158, 159, 164, 166, 167, 168, 171, 172, 173, 176, 179, 183, 184, 257, 258, 259, 262, 263, 264, 265, 296, 411, 467, 471, 472, 473, 476, 488, 490, 495, 511, 518, 527, 534, 535, 541, 549, 550, 556, 558, 567, 573, 761, 774, 775, 780, 848, 856, 866], "swap": [42, 60, 78, 157, 190, 595, 603, 616, 631, 645, 658, 666, 674, 687, 702, 716, 730, 744, 815], "ftype": 42, "feature_index": 42, "feature_count": 42, "unknown": [42, 62, 149, 159, 259, 589], "moment": [42, 47, 444, 445, 456, 457, 459, 784], "discret": [43, 184, 257, 258, 262, 264, 348, 375, 560, 877], "synonym": 43, "qualit": 43, "supervis": 43, "what": [43, 50, 56, 58, 60, 63, 152, 159, 180, 262, 375, 815, 849], "dog": 43, "cat": 43, "email": 43, "spam": 43, "unsupervis": 43, "bunch": [43, 294, 296, 327], "usual": [43, 63, 102, 151, 299, 300, 333, 334, 423, 578, 820], "encod": 43, "star": 43, "imag": [43, 58, 68, 152, 165], "real": [43, 46, 168, 177, 184, 185, 197, 215, 216, 220, 221, 257, 258, 259, 262, 264, 265, 266, 274, 288, 290, 296, 297, 299, 303, 305, 307, 309, 311, 312, 317, 318, 319, 320, 321, 323, 325, 327, 366, 379, 381, 384, 385, 387, 388, 389, 390, 393, 395, 397, 407, 411, 415, 419, 443, 471, 486, 492, 495, 500, 503, 527, 531, 535, 544, 546, 549, 558, 815, 873], "quantit": 43, "person": 43, "height": [43, 58, 81, 82, 107, 108, 157, 165], "price": [43, 799], "hous": [43, 439, 440, 441], "comma": [43, 849], "field": [43, 63, 401, 439, 440, 441, 566], "By": [43, 60, 152, 362, 363, 364, 365, 366, 438, 570, 571, 572, 573, 577, 769, 772, 780, 856, 872, 876, 877], "low": [43, 152, 157, 165, 346, 366, 407, 490, 491, 493, 511, 540, 541, 542, 543, 545, 550, 551, 553, 798, 856], "meaning": 43, "qualiti": [43, 386], "independ": [43, 106, 152, 164, 170, 172, 193, 202, 296, 373, 377, 382, 403, 421, 423, 523, 530], "rectangl": 43, "width": [43, 58, 81, 82, 107, 108, 157, 165, 184], "subtract": [43, 63, 140, 148, 549, 558, 874], "frame": 43, "temperatur": 43, "celsiu": 43, "fahrenheit": 43, "detect": [43, 149, 152, 165, 179, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 588, 589], "weight": [43, 53, 54, 56, 58, 60, 63, 78, 79, 80, 81, 82, 83, 106, 149, 153, 154, 157, 159, 161, 162, 164, 166, 168, 170, 448, 451], "bia": [43, 53, 56, 58, 73, 74, 78, 81, 100, 101, 106, 157, 159, 161, 164, 170, 193, 203], "gender": 43, "car": 43, "student": 43, "grade": 43, "outlier": 43, "significantli": [43, 54, 262, 588], "comparison": [43, 60, 177, 180, 579, 595, 603, 616, 617, 625, 630, 631, 632, 639, 644, 645, 646, 653, 658, 659, 666, 674, 675, 682, 687, 702, 716, 730, 744, 799, 801, 803], "divis": [43, 70, 71, 72, 78, 79, 80, 81, 82, 83, 85, 260, 276, 277, 294, 327, 495, 562, 563, 564, 565, 569, 829], "absenc": [43, 60, 151], "tower": 43, "weather": 43, "made": [43, 60, 265, 423, 511, 563, 564, 758, 767, 772, 779, 790], "goal": [43, 151], "select": [43, 58, 63, 148, 157, 180, 184, 220, 221, 262, 296, 386, 562, 582, 774, 780, 849, 852, 864], "criteria": 43, "hidden": [43, 53, 159, 170, 180, 799, 876], "patter": 43, "uniform": [43, 182, 346, 348, 349, 364, 372, 373, 375, 376, 400, 421, 423], "builder": 43, "characterist": [43, 179, 180, 351, 352, 355, 356, 357, 360, 361, 367, 370, 371, 380, 381, 382, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 397, 403, 404, 408, 409, 411, 415, 416, 419], "principl": 43, "languag": [43, 175, 796, 875, 876], "privat": [43, 152, 257, 258, 262, 800, 849], "present": [43, 58, 106, 184, 610, 619, 691, 863, 868], "csr": [43, 425, 427, 434, 437], "increas": [43, 54, 170, 521, 558, 591, 692, 706, 720, 734, 763, 776, 798, 799, 829, 874], "freed": [43, 149, 798, 801], "set_row_count": 43, "hide": [43, 578], "workload": [43, 50, 58, 584], "jit": 43, "just": [43, 56, 149, 157, 780], "spir": 43, "v": [43, 171, 177, 274, 275, 346, 353, 369, 449, 450, 461, 462, 464, 465, 534, 574, 606, 618, 633, 647, 676, 690, 705, 719, 733, 758, 759, 760, 763, 767, 768, 771, 772, 774, 776, 778, 779, 782, 784, 785, 790, 791, 792, 793, 833, 834, 835, 836, 838, 839, 840], "portabl": [43, 60, 150, 151, 362, 398, 875, 876], "style": [43, 184, 794], "github": 44, "page": [44, 62, 260, 262, 263, 264, 346, 564, 798], "help": [44, 45, 90, 147, 149, 184, 354, 394, 780], "speed": [44, 362, 398, 873], "highli": [44, 56, 150, 179, 375, 757, 876], "preprocess": [44, 45], "decis": [44, 45, 149, 184], "tradit": [44, 58, 184, 345], "visit": [44, 871], "glossari": 44, "mathemat": [44, 50, 56, 111, 114, 116, 168, 170, 184, 265, 346, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 560, 578], "notat": [44, 58, 152, 259, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 472, 556, 815, 846, 847], "appendix": [44, 184, 560], "bibliographi": [44, 518], "edg": [45, 761, 763, 765, 769, 777, 787, 788, 848], "close": [45, 54, 182, 420, 536, 565], "consum": [45, 55, 60, 149, 152, 260, 354, 775, 850, 864], "agnost": [45, 58, 59, 60], "technologi": 45, "entir": [45, 47, 121, 122, 123, 124, 125, 126, 127, 263, 490, 491, 493, 541, 542, 543, 545, 550, 551, 553, 854, 865], "varieti": [45, 50, 425, 560, 876], "appropri": [45, 56, 60, 152, 155, 156, 164, 165, 167, 173, 180, 263, 372, 418, 463, 569, 577, 582, 583], "random": [45, 175, 179, 180, 181, 184, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 463, 560, 569, 579, 744, 749, 816, 867], "import": [45, 49, 50, 58, 151, 152, 160, 581, 582, 584, 815], "seamless": 45, "orient": [45, 346, 377, 412], "redefin": 45, "sometim": [46, 149, 151, 160, 161, 578, 799], "interpret": [46, 58, 62, 68, 69, 70, 71, 72, 73, 74, 78, 79, 80, 81, 82, 83, 98, 99, 106, 107, 108, 141, 184, 259, 260, 366, 407, 410, 438, 562, 798], "cardin": 46, "absolut": [46, 65, 121, 190, 220, 221, 259, 467, 517, 558, 874], "mathbb": [46, 263, 357, 361], "sqrt": [46, 63, 71, 100, 122, 138, 148, 154, 158, 162, 233, 349, 357, 361, 376, 389, 390, 395, 397, 483, 484, 496, 497, 498, 499, 513, 558, 573], "x_2": [46, 349, 376], "dot": [46, 190, 198, 199, 236, 259, 260, 263, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465], "x_d": 46, "partial": [47, 152, 162, 177, 276, 277, 437, 569, 578, 765], "later": [47, 100, 151, 179, 770, 843, 853, 856], "meta": [48, 50, 149], "dispatch": [48, 160], "aggreg": [48, 51, 856], "dedic": [48, 152, 260, 261, 262, 263, 264, 853, 854], "turn": [48, 588, 798, 855], "default_float_t": 48, "tag": [48, 59, 60, 152, 157, 164, 165, 167, 169, 178, 578, 591, 756, 768, 771, 774, 792, 848, 850, 853], "never": [48, 58, 60, 245, 246, 247, 262, 577, 744, 772, 794, 856], "preset": 48, "chain": [48, 157], "set_property_name_1": 48, "value_1": 48, "set_property_name_2": 48, "value_2": 48, "set_property_name_3": 48, "value_3": 48, "top": [48, 68, 69, 78, 79, 80, 81, 82, 83, 107, 108, 157, 160, 165, 345, 588, 590], "assum": [48, 56, 58, 81, 86, 87, 149, 151, 154, 157, 158, 160, 166, 169, 180, 184, 217, 218, 219, 232, 233, 252, 254, 255, 259, 260, 262, 264, 290, 296, 323, 329, 330, 362, 363, 364, 366, 370, 371, 379, 398, 399, 400, 405, 407, 410, 414, 415, 416, 420, 425, 540, 582, 780], "depict": [49, 170], "cassert": 49, "selector": [49, 179], "instead": [49, 50, 58, 151, 153, 155, 157, 158, 161, 164, 168, 170, 179, 182, 184, 202, 259, 260, 262, 268, 269, 272, 466, 855, 856, 858], "breviti": 49, "configur": [49, 61, 101, 152, 153, 154, 157, 162, 164, 166, 182, 184, 257, 258, 260, 261, 262, 263, 264, 265, 588, 589, 590, 591, 795, 798, 847, 848, 856, 858], "train_r": 49, "print": [49, 152, 588, 591, 765], "assert": [49, 60, 152, 153, 565, 588], "data_transform": 49, "primarili": [50, 852], "knob": 50, "those": [50, 56, 64, 106, 158, 174, 176, 179, 184, 260, 263, 466, 562, 601, 627, 684, 699, 741, 780, 796, 858], "often": [50, 55, 157, 261, 466, 582], "dozen": 50, "logist": [50, 53, 159], "procedur": [50, 52], "besid": [50, 62, 149, 177, 815], "moreov": [50, 55, 58, 153, 157], "empir": 50, "risk": [50, 184], "techniqu": 50, "Such": [50, 60, 151, 259, 362, 398, 426, 427], "few": [50, 152, 157, 161, 170, 466], "aspect": [50, 184, 563, 564, 852], "task": [50, 51, 56, 152, 184, 257, 258, 265, 296, 430, 431, 432, 439, 440, 441, 569, 570, 571, 572, 573, 577, 581, 584, 756, 757, 765, 768, 769, 780, 843, 846, 847, 848, 852, 854, 855, 856, 857, 858, 859, 860, 861, 864], "vari": [50, 184, 202, 348, 375, 405, 409, 414], "best": [50, 56, 149, 157, 162, 168, 263, 405, 490, 491, 493, 541, 542, 543, 545, 550, 551, 553, 829], "tackl": 50, "mention": [50, 130, 152, 154, 348, 560], "challeng": 50, "decompos": 50, "verifi": 51, "befor": [51, 56, 58, 60, 62, 78, 79, 80, 81, 82, 83, 102, 106, 130, 140, 149, 152, 157, 159, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 266, 268, 269, 272, 274, 276, 277, 280, 281, 284, 285, 288, 290, 292, 294, 297, 299, 300, 303, 305, 307, 309, 311, 312, 315, 317, 318, 321, 323, 325, 327, 329, 331, 333, 334, 337, 339, 341, 343, 345, 391, 430, 431, 432, 439, 440, 441, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 487, 494, 546, 573, 579, 593, 763, 765, 771, 772, 776, 784, 805, 810, 857, 859, 861], "_input_t": 51, "_result_t": 51, "incompat": [51, 63, 744], "exact": [51, 62, 170, 492, 495, 500, 523, 536, 544, 595, 603, 616, 631, 645, 658, 666, 674, 687, 702, 716, 730, 744, 790, 850], "compat": [51, 177, 179, 184, 362, 398, 591, 593, 796, 876], "pre": [51, 56, 60, 151, 160, 578], "similar": [51, 60, 61, 179, 292, 296, 325, 562, 569, 577, 578, 784, 785, 793, 815, 863, 868], "operation_input": 51, "_input": 51, "assumpt": [51, 149, 184, 391, 396, 413, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 560], "operation_result": 51, "_result": 51, "bellow": 52, "train_input_t": 52, "train_result_t": 52, "infer_input_t": 52, "infer_result_t": 52, "compute_input_t": 52, "compute_result_t": 52, "dst": [53, 56, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 96, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173], "f": [53, 58, 150, 153, 167, 169, 170, 181, 184, 259, 366, 379, 407, 423, 537, 571, 572, 574, 577, 621, 635, 649, 678, 694, 708, 722, 736, 769, 821, 856, 858, 859, 863, 864, 865], "src": [53, 56, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 758, 759, 760, 763, 767, 771, 772, 774, 776, 779, 782, 784, 785, 790, 793, 861], "activ": [53, 56, 58, 75, 91, 102, 111, 149, 152, 153, 154, 159, 161, 170, 758, 772, 782, 833, 836, 852, 853, 855, 856, 857], "learnabl": [53, 100, 101, 154, 162], "backward": [53, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 159, 160, 164, 167, 168, 170, 173, 179, 180, 192, 254, 257, 258, 259, 260, 262, 264], "diffsrc": [53, 69, 79, 82, 95, 101, 108, 154, 157, 158, 161, 162, 163, 165, 166, 169, 171, 172], "f_": [53, 352, 355, 356, 357, 361, 367, 370, 371, 380, 381, 382, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 397, 404, 408, 409, 411, 415, 416, 419], "diffdst": [53, 66, 69, 74, 79, 80, 82, 83, 95, 101, 108, 112, 154, 157, 158, 161, 162, 163, 165, 166, 169, 171, 172], "diffweight": [53, 80, 83, 157, 161, 166], "might": [53, 56, 149, 152, 153, 154, 157, 158, 161, 162, 163, 168, 170, 177, 377, 487, 512, 539, 569, 578, 780, 782, 799, 815, 849, 850, 855, 859], "commonli": [53, 175, 265], "wide": [53, 560, 841], "convolut": [53, 58, 60, 62, 63, 78, 79, 80, 82, 83, 148, 150, 151, 153, 159, 160, 165, 168, 170], "usabl": [53, 798], "inner": [53, 58, 150, 159, 160, 215, 245, 871], "scale_shift": 53, "shift": [53, 71, 100, 152, 154, 159, 346, 377, 401, 410, 412, 518], "workspac": [53, 154, 157, 159, 162, 163, 165, 170, 262, 263, 264, 265, 325, 439, 440, 441], "carri": [53, 264, 265, 854], "forward": [53, 58, 60, 69, 151, 159, 160, 167, 170, 173, 180, 192, 254, 257, 258, 259, 260, 262, 263, 264, 570, 598, 608, 620, 627, 634, 641, 648, 669, 677, 688, 693, 699, 703, 707, 713, 717, 721, 731, 735, 757, 759, 760, 765, 775, 776, 778, 784, 785, 790, 820, 856, 858, 871], "scratchpad": [53, 151, 159, 160, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344], "temporari": [53, 151, 152, 159, 160, 179, 261, 439, 440, 441], "diff_src": [53, 66, 69, 72, 76, 79, 82, 89, 93, 95, 97, 99, 101, 105, 108, 112, 115, 119, 132, 134, 136, 138, 145, 154, 165, 169], "diff_dst": [53, 66, 69, 72, 74, 76, 79, 80, 82, 83, 89, 93, 95, 97, 99, 101, 105, 108, 112, 115, 119, 132, 134, 136, 138, 145, 154, 172], "diff_weight": [53, 80, 83, 152], "diff_bia": [53, 74], "diff_scal": 53, "diff_shift": 53, "_layer": 53, "_iter": 53, "recurr": [53, 159, 170, 366, 375, 379, 383, 407, 410], "box": 53, "transposit": [53, 193, 200, 201, 202, 203, 204, 205, 206, 216, 222, 223, 225, 226, 227, 228, 229, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256], "box_t": 53, "timestamp": [53, 170, 874], "box_l": 53, "tanh": [53, 63, 111, 145, 148, 150, 157, 158, 159, 170, 550, 558], "relu": [53, 63, 102, 114, 119, 148, 150, 151, 154, 157, 159, 160, 166, 170], "cell": [53, 58, 159, 546], "candid": [53, 58, 64], "gate": [53, 58, 159, 170], "forget": [53, 58], "f16": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "bf16": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "f32": [54, 55, 56, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "s32": [54, 55, 56, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "s8": [54, 55, 56, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "u8": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl": [54, 55, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "abcdef": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "abcd": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "abdc": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "abc": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "ab": [54, 55, 58, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 205, 206, 207, 208, 209, 210, 212, 213, 214, 217, 218, 219, 220, 221, 224, 230, 232, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 248, 249, 250, 251, 253, 256, 345, 490, 491, 493, 513, 541, 542, 543, 545, 550, 551, 553, 558], "acb": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "acdb": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "acdeb": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "bac": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "ba": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "cba": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "cdba": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "cdeba": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dcab": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "decab": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "defcab": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dhwigo": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dhwio": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "goidhw": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "goihw": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "goiw": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "hwigo": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "hwio": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "ldgoi": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "ldgo": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "ldigo": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "ldio": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "ldoi": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "ldnc": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "ncdhw": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "nchw": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "ncw": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "nc": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "ndhwc": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "nhwc": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "ntc": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "nwc": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "oidhw": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "oihw": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "oiw": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "oi": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "tnc": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "tn": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 771, 792], "wigo": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "wio": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "format_tag": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "use_global_stat": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "use_scal": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "use_shift": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "fuse_norm_relu": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "normalization_flag": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "use_scaleshift": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "backward_data": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "forward_infer": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "forward_train": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "prop_kind": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "binary_add": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "binary_max": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "binary_min": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "binary_mul": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "convolution_auto": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "convolution_direct": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "convolution_winograd": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "deconvolution_direct": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "deconvolution_winograd": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_ab": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_bounded_relu": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_clip": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_clip_use_dst_for_bwd": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_elu_use_dst_for_bwd": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_elu": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_exp_use_dst_for_bwd": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_exp": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_gelu_erf": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_gelu_tanh": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_gelu": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_hardsigmoid": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_hardswish": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_linear": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_logistic_use_dst_for_bwd": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_logist": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_log": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_mish": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_pow": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_relu_use_dst_for_bwd": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_relu": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_round": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_soft_relu": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_sqrt_use_dst_for_bwd": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_sqrt": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_squar": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_swish": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_tanh_use_dst_for_bwd": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_tanh": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "lbr_gru": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "lrn_across_channel": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "lrn_within_channel": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "pooling_avg_exclude_pad": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "pooling_avg_include_pad": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "pooling_avg": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "pooling_max": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "resampling_linear": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "resampling_nearest": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "undef": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "vanilla_gru": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "vanilla_lstm": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "vanilla_rnn": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_attr_multiple_post_op": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_attr_scal": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_attr_zero_point": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_src_0": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_src": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_src_lay": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_from": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_src_1": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_src_it": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_src_2": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_src_iter_c": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_dst_0": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_dst": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_to": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_dst_lay": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_dst_1": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_dst_it": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_dst_2": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_dst_iter_c": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_weights_0": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_weight": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_scal": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_shift": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_weights_lay": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_weights_1": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_weights_it": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_weights_peephol": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_weights_project": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_bia": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_mean": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_vari": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_workspac": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_scratchpad": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_src_0": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_src": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_src_lay": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_src_1": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_src_it": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_src_2": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_src_iter_c": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_dst_0": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_dst": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_dst_lay": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_dst_1": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_dst_it": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_dst_2": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_dst_iter_c": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_weights_0": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_weight": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_scal": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_shift": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_weights_lay": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_weights_1": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_weights_it": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_weights_peephol": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_weights_project": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_bia": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_multiple_src": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_multiple_dst": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_runtime_dim_v": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_runtime_size_v": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_runtime_f32_v": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_runtime_s32_v": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "augru_backward": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "primitive_desc": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "augru_forward": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "batch_normalization_forward": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "concat": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "convolution_forward": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_backward": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_forward": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "gru_backward": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "gru_forward": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "layer_normalization_forward": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "primtive_desc": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "lbr_augru_backward": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "lbr_augru_forward": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "lbr_gru_backward": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "lbr_gru_forward": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "lstm_backward": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "lstm_forward": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "permute_ax": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "submemory_desc": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "get_data_handl": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "get_desc": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "get_engin": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "set_data_handl": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "pooling_forward": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "workspace_desc": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "post_op": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "append_eltwis": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "append_binari": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "append_sum": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "len": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 196, 200, 205], "primimit": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwis": [54, 55, 56, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "primitive_attr": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "set_fpmath_mod": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "set_scales_mask": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "set_zero_points_mask": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "set_post_op": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "set_scratchpad_mod": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "next_impl": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "primitive_desc_bas": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "rnn_primitive_desc_bas": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "scratchpad_mod": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "shuffle_forward": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "vanilla_rnn_backward": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "vanilla_rnn_forward": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "sycl_interop": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "get_buff": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178], "set_buff": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "auto_broadcast": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "epsilon": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "momentum": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "begin_norm_axi": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "ax": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 284, 287, 290, 291, 317, 323, 324, 329, 330, 563, 564], "dilat": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dst_shape": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "output_pad": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "pads_begin": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "pads_end": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "shape": [54, 55, 58, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 352, 356, 376, 381, 388, 411, 419, 562, 876], "src_shape": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "stride": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 199, 200, 202, 205, 206, 207, 208, 209, 210, 212, 213, 214, 217, 218, 219, 220, 221, 223, 224, 226, 228, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 247, 248, 249, 250, 251, 253, 255, 256, 259, 260, 262, 264, 269, 270, 277, 278, 281, 282, 285, 286, 300, 301, 312, 313, 318, 319, 334, 335, 396], "weights_shap": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "zp": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "exclude_pad": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "keep_dim": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "keep_stat": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "per_channel_broadcast": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "special_zero": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "transpose_a": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "transpose_b": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "use_affin": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "use_dst": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "auto_pad": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "coordinate_transformation_mod": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "data_format": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "qtype": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "rounding_typ": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "weights_format": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "layout_typ": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "opaqu": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 424, 439, 440, 441], "dequant": [54, 55, 56, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "typecast": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "graph": [54, 55, 58, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 184, 590, 758, 759, 760, 761, 763, 766, 767, 768, 770, 771, 772, 774, 776, 779, 780, 782, 784, 785, 788, 790, 791, 792, 793, 833, 836, 846, 847, 848, 853, 855], "op": [54, 55, 56, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 159, 160, 162, 177, 200, 201, 202, 203, 204, 205, 206, 216, 222, 223, 225, 226, 227, 228, 229, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 439, 440, 441, 577], "staticreshap": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dynamicreshap": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "compiled_partit": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "add_op": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "get_partit": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "is_support": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_graph_unknown_ndim": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_graph_unknown_dim": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "abbrevi": [54, 58, 154, 157, 158, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172], "readabl": [54, 58, 154, 157, 158, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 183], "expon": [54, 116, 120, 152, 159, 486, 518, 523, 558], "keep": [54, 58, 63, 141, 627, 684, 699, 741, 782, 866], "signific": [54, 262, 518], "veri": [54, 152, 346, 569], "occupi": [54, 799], "spot": 54, "trade": 54, "advantag": [54, 202, 265], "versu": 54, "footprint": [54, 149, 798], "henc": [54, 58, 60, 152, 154, 157, 158, 162, 165, 171, 172, 184, 345], "throughput": [54, 56, 811, 812], "treat": [54, 161, 168, 172, 179, 353, 383], "themselv": [54, 312], "flexibl": [54, 64, 151, 223, 226, 229, 796], "maintain": [54, 56, 60, 177, 180, 761, 763], "master": 54, "afterward": [54, 565], "tensor": [54, 56, 58, 59, 60, 62, 65, 67, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 96, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 137, 139, 140, 141, 143, 144, 146, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "latter": [54, 154, 162, 262, 263, 562], "fed": [54, 62, 568], "fundament": [55, 560, 744, 822], "discuss": [55, 58, 184, 377, 560], "mix": [55, 62, 146, 197, 259, 466], "accuraci": [55, 56, 152, 157, 375, 401, 471, 487, 490, 491, 493, 494, 511, 512, 518, 527, 531, 539, 540, 541, 542, 543, 545, 549, 550, 551, 553, 556, 559], "implicit": [55, 60, 155, 156, 157, 164, 168, 173, 179, 426, 427, 433, 434, 562, 815, 849, 856], "downconvers": 55, "speedup": [55, 152], "fpmath": [55, 152], "lower": [55, 56, 75, 76, 149, 152, 154, 157, 165, 166, 169, 184, 193, 204, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 234, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 266, 276, 277, 288, 289, 290, 291, 292, 293, 294, 295, 303, 304, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 337, 338, 343, 344, 345, 437, 438, 491, 493, 543, 545, 546, 551, 553, 565, 780, 798, 856], "arithmet": [55, 124, 140, 177, 180, 263, 264, 265, 481, 558, 874], "individu": [55, 151, 184, 223, 226, 229, 560, 593, 771], "guid": [55, 595, 603, 616, 631, 645, 658, 666, 674, 687, 702, 716, 730, 744, 780, 841, 849], "push": [56, 595, 658, 664, 666, 758, 759, 760, 763, 766, 767, 771, 772, 774, 776, 779, 782, 784, 785, 790, 791, 793], "recent": [56, 785, 869], "focus": 56, "achiev": [56, 58, 168, 170, 569, 582, 761], "offer": [56, 265, 744], "improv": [56, 71, 100, 101, 150, 153, 154, 158, 162, 265, 365, 425, 556, 579, 780, 799], "pack": [56, 60, 180, 191, 217, 218, 219, 237, 238, 239, 250, 251, 345, 354, 390, 562, 572, 771, 792], "instruct": [56, 58, 60, 157, 377], "cost": [56, 149, 151], "symmetr": [56, 62, 86, 87, 184, 191, 192, 234, 237, 238, 239, 241, 242, 243, 244, 245, 246, 290, 292, 296, 303, 309, 311, 312, 315, 317, 318, 321, 323, 325, 327, 390, 438, 494], "asymmetr": [56, 62, 84, 86, 87, 117], "factor": [56, 88, 89, 152, 153, 159, 169, 188, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 225, 226, 227, 228, 229, 230, 233, 234, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 252, 254, 255, 262, 263, 265, 266, 268, 269, 272, 276, 277, 280, 281, 284, 285, 288, 290, 294, 295, 296, 297, 299, 300, 305, 307, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 327, 328, 333, 334, 339, 341, 376, 386, 780], "relationship": [56, 149, 483, 484, 496, 497, 498, 499, 765, 850], "scale_": 56, "zp_": 56, "formula": [56, 65, 68, 70, 71, 75, 81, 82, 86, 87, 88, 91, 92, 94, 95, 96, 100, 102, 103, 106, 107, 111, 114, 116, 118, 131, 133, 135, 144, 152, 154, 157, 158, 161, 162, 163, 165, 166, 169, 170, 171, 172, 349, 376, 379, 467, 471, 473, 476, 490, 495, 527, 541, 546, 549, 550], "ahead": [56, 368, 374, 413, 422, 578], "calibr": 56, "tool": [56, 150, 402, 588], "minimum": [56, 63, 125, 148, 155, 190, 221, 264, 454, 455, 456, 518, 852], "dynam": [56, 157, 159, 164, 346, 793, 852, 859], "behav": [56, 149, 170, 180, 262, 466, 524, 525, 565, 574, 788, 791, 798, 802], "mask": [56, 152, 153, 412, 857], "rnn": [56, 58, 150, 152, 159, 160, 162], "requant": 56, "wider": 56, "impact": [56, 152, 744, 798, 852], "overflow": [56, 177, 471, 487, 492, 494, 495, 500, 501, 502, 504, 512, 517, 527, 530, 531, 539, 544, 549, 554, 558], "accumul": [56, 74, 149, 153, 165, 577, 757, 823, 824, 826], "underflow": [56, 483, 487, 494, 497, 500, 501, 502, 512, 530, 539], "encourag": 56, "satur": [56, 152, 168], "fuse": [56, 62, 64, 151, 154, 159, 160], "mecan": 56, "_op": [56, 167], "src_": [56, 84, 86, 87, 117, 121, 122, 123, 124, 125, 126, 127], "weights_": [56, 448], "dst_": [56, 84, 86, 87, 117, 121, 122, 123, 124, 125, 126, 127], "zero_point": [56, 152], "zero_point_": 56, "operatornam": [56, 58, 111, 133, 153, 483, 484, 496, 497, 498, 499, 503], "_to": [56, 368, 413], "_int8": 56, "_f32": 56, "conv_": 56, "comp_": 56, "regular": [56, 148, 163, 584, 798, 856], "take": [56, 62, 79, 80, 84, 86, 87, 106, 117, 121, 122, 123, 124, 125, 126, 127, 130, 149, 151, 152, 153, 157, 158, 159, 160, 176, 184, 265, 366, 379, 407, 425, 426, 427, 428, 429, 433, 434, 435, 436, 466, 556, 562, 569, 571, 577, 578, 583, 593, 758, 768, 774, 779, 780, 798, 820, 830, 852, 873, 876], "compens": 56, "term": [56, 157, 169, 170, 180, 357, 815, 849], "account": [56, 157, 263, 876], "_s8": 56, "potenti": [56, 60, 63, 150, 151, 799, 815, 850], "round": [56, 63, 68, 84, 86, 87, 107, 117, 146, 148, 152, 158, 159, 177, 265, 485, 506, 523, 529, 530, 537, 555, 558, 578, 829], "popular": [56, 425], "deconvolut": [56, 159, 160, 165], "would": [56, 60, 152, 153, 154, 157, 162, 164, 165, 168, 170, 180, 259, 265, 368, 396, 402, 413, 420, 439, 440, 441, 562, 605, 617, 627, 632, 646, 675, 684, 689, 699, 704, 732, 741, 780, 815, 852], "ic": [56, 81, 84, 87, 117, 152, 157, 161, 169, 172], "ih": [56, 81, 152, 157, 161, 169], "iw": [56, 81, 152, 157, 161, 169], "oc": [56, 81, 152, 157, 161], "kh": [56, 68, 81, 82, 107, 152, 157, 161, 165], "kw": [56, 68, 81, 107, 152, 157, 161, 165], "oh": [56, 68, 81, 107, 157, 165, 169], "ow": [56, 68, 81, 107, 157, 165, 169], "now": [56, 170, 261, 780, 798, 874], "accordingli": [56, 60, 63, 86, 87, 153, 259, 262], "dim": [57, 58, 59, 60, 62, 63, 152, 157, 159, 163, 164, 165, 168, 171, 178, 562], "offset_0": 58, "laid": [58, 151, 152, 168], "length": [58, 59, 63, 114, 115, 200, 205, 207, 208, 209, 210, 212, 213, 214, 217, 218, 219, 223, 229, 234, 237, 238, 239, 242, 243, 244, 248, 249, 250, 251, 253, 256, 262, 263, 264, 362, 363, 377, 398, 399, 401, 405, 412, 425, 426, 427, 428, 429, 433, 434, 435, 436, 494], "fix": [58, 184, 203, 466, 494, 535, 856], "certain": [58, 61, 149, 153, 157, 426, 427, 531, 535, 588, 592, 688, 703, 717, 731, 757, 805, 810, 852, 856, 857], "canon": 58, "cnn": [58, 150, 152, 153, 154, 157, 161, 162, 165, 171], "stand": [58, 157, 376, 792], "minibatch": [58, 60, 161], "channel": [58, 62, 71, 73, 74, 78, 79, 80, 81, 82, 83, 84, 86, 87, 100, 101, 114, 115, 117, 121, 122, 123, 124, 125, 126, 127, 154, 159, 162, 170, 171, 172], "spatial": [58, 68, 69, 78, 79, 80, 81, 82, 83, 98, 99, 107, 108, 149, 152, 154, 157, 161, 163, 165, 166, 169, 171], "depth": [58, 81, 82, 157, 165], "outermost": [58, 156, 171, 172, 853], "innermost": [58, 156, 171, 172, 854, 859], "plai": [58, 149], "role": [58, 149], "agre": [58, 877], "permut": [58, 60, 142, 177, 181, 264, 276, 277, 294, 327, 350, 365], "geq": [58, 157, 158, 169, 349, 351, 355, 367, 370, 371, 510, 526, 555], "Then": [58, 130, 141, 161, 349, 410, 744], "i_0": 58, "i_": 58, "i_j": 58, "submemori": 58, "Their": 58, "purpos": [58, 60, 149, 179, 181, 262, 264, 349, 373, 558, 800], "regardless": [58, 184, 220, 221, 263, 538], "_a": 58, "densli": 58, "stai": [58, 60, 152], "strides_non_transpos": 58, "a_non_transpos": 58, "strides_transpos": 58, "a_transpos": 58, "letter": [58, 849], "english": 58, "alphabet": 58, "arbitrarili": [58, 177], "word": [58, 152, 259, 263, 288, 321, 345, 849], "nomenclatur": 58, "conveni": [58, 59, 149, 159, 565], "alias": [58, 59, 174, 179, 606, 618, 633, 690, 705, 761], "That": [58, 141, 157, 164, 177, 184, 259, 262, 345, 562, 578, 761, 780], "queri": [58, 60, 149, 151, 152, 157, 159, 160, 161, 163, 170, 184, 202, 261, 262, 263, 264, 265, 354, 795], "expens": [58, 60, 151, 157, 588], "pad": [58, 60, 68, 69, 78, 79, 80, 81, 82, 83, 107, 108, 157, 159, 165, 170, 259, 799, 800], "architectur": [58, 560, 876], "fail": [58, 60, 63, 149, 151, 154, 155, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 262, 269, 277, 281, 285, 288, 290, 300, 312, 318, 321, 323, 334, 557, 562, 589, 591, 627, 684, 699, 741, 744, 801, 855], "incorrect": [58, 267, 270, 271, 273, 275, 278, 279, 282, 283, 286, 287, 289, 291, 293, 295, 298, 301, 302, 304, 306, 308, 310, 313, 314, 316, 319, 320, 322, 324, 326, 328, 330, 332, 335, 336, 338, 340, 342, 344], "calcul": [58, 68, 69, 70, 72, 76, 78, 79, 80, 81, 82, 83, 89, 98, 99, 104, 105, 107, 108, 119, 121, 122, 123, 124, 125, 126, 127, 132, 135, 136, 138, 141, 145, 149, 159, 165, 166, 202, 206, 247, 257, 258, 260, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 364, 365, 366, 375, 379, 405, 407, 414, 426, 427, 459, 463, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 594, 605, 778, 793, 832], "amount": [58, 60, 78, 79, 80, 81, 82, 83, 152, 352, 354, 356, 402, 798, 829, 856], "central": [58, 444, 445, 446, 447, 456, 459], "notion": [58, 155, 156, 167, 173, 842], "understood": [58, 184], "correctli": [58, 154, 157, 744], "matmul": [58, 63, 148, 159, 164], "placehold": [58, 157, 160, 161, 164, 170, 849], "circumst": [58, 63], "hardwar": [58, 149, 152, 184, 406, 578, 799, 811, 812, 856, 857, 858, 875, 876], "practic": [58, 168, 175, 744, 815], "topologi": [58, 153, 165, 171, 768, 795], "lrn": [58, 150, 159, 163], "preced": [58, 69, 80, 82, 83, 149, 154, 163, 165, 171, 174, 177, 178, 578, 780, 784, 816, 822, 849, 856], "short": [58, 170, 184, 348, 375, 558, 559], "summari": [58, 154, 162, 184, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 460, 461, 462, 464, 465, 560, 578, 826, 827, 828], "de": [58, 84, 86, 87, 117], "bandwidth": 58, "pool": [58, 68, 69, 107, 108, 150, 159, 160, 850], "shuffl": [58, 150, 159, 160], "softmax": [58, 63, 104, 136, 148, 150, 159, 160], "hint_pd": 58, "further": [58, 81, 157, 159, 169, 181, 260, 261, 263, 264, 413, 456, 582, 583, 584, 766, 793, 829], "categori": [58, 558, 817], "hand": [58, 164, 251, 256, 284, 285, 286, 287, 296, 317, 318, 319, 320, 329, 330], "sens": [58, 571, 577, 829], "come": [58, 158, 165, 171, 184, 799], "mini": 58, "3d": [58, 100, 101, 154, 157, 161, 162, 163, 164, 165, 169, 171, 562], "bca": 58, "4d": [58, 100, 101, 152, 161], "bacd": 58, "bcda": 58, "5d": [58, 152, 157, 162], "abdec": 58, "acbd": 58, "bcdea": 58, "6d": 58, "acbdef": 58, "cn": 58, "chwn": 58, "owi": 58, "iwo": 58, "ohwi": 58, "ihwo": 58, "iohw": 58, "odhwi": 58, "iodhw": 58, "idhwo": 58, "giohw": 58, "giodhw": 58, "seq_length": 58, "num_lay": 58, "num_direct": 58, "input_channel": 58, "num_gat": 58, "output_channel": 58, "lstm": [58, 150, 151, 159, 160], "gru": [58, 150, 159], "num_channels_in_hidden_st": 58, "num_channels_in_recurrent_project": 58, "forc": [59, 63, 854], "plain": [59, 151, 152, 157, 161, 164, 168], "yet": [60, 170, 175, 578, 756, 784, 796, 855, 856, 858], "chose": [60, 152], "proper": [60, 160, 358, 359, 373, 378, 391, 421, 589], "match": [60, 67, 77, 85, 98, 106, 109, 110, 113, 130, 143, 149, 155, 156, 159, 168, 174, 177, 178, 180, 181, 182, 184, 259, 262, 439, 440, 441, 489, 494, 553, 558, 562, 573, 775, 791], "inequ": 60, "along": [60, 77, 86, 87, 121, 122, 123, 124, 125, 126, 127, 135, 149, 152, 171, 172, 259, 262, 562, 593, 793], "ordinari": [60, 829], "being": [60, 149, 168, 170, 171, 177, 183, 259, 262, 264, 312, 494, 577, 790, 842], "volum": [60, 141], "numpi": [60, 63, 67, 85, 109, 110, 113, 130, 140, 141, 143], "concaten": [60, 77, 156, 159, 170, 573, 578], "ill": [60, 687, 702, 716, 730], "clear": [60, 559, 574, 595, 603, 616, 631, 645, 658, 666, 674, 687, 702, 716, 730, 744, 782, 793, 863, 864, 869], "implicitli": [60, 62, 170, 259, 260, 264, 425, 426, 427, 433, 434, 466, 571, 575, 597, 606, 618, 633, 647, 660, 668, 676, 690, 705, 719, 733, 747, 799, 816, 832, 854, 855], "adim": [60, 63], "adata_typ": 60, "aformat_tag": 60, "allow_empti": [60, 151, 154, 155, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "signifi": [60, 154, 155, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555], "area": 60, "encompass": 60, "reshap": 60, "imposs": 60, "constant": [60, 63, 71, 100, 101, 102, 141, 152, 154, 162, 181, 420, 518, 558, 595, 603, 616, 631, 645, 666, 674, 687, 702, 716, 730, 744, 780, 783, 815, 831, 845], "join": [60, 566, 569, 577, 578, 766, 778, 823, 856, 857, 858], "consecut": [60, 182, 186, 196, 206, 537, 538, 571, 577, 578, 858], "counterpart": [60, 159], "And": [60, 170], "adjust": [60, 776, 798, 822, 850], "ndim": [60, 63, 162], "new_desc": 60, "in_md": 60, "expect_out_md": 60, "involv": [60, 261], "is_zero": 60, "etc": [60, 61, 63, 150, 151, 159, 169, 174, 182, 184, 262, 373, 421, 546, 853], "md": 60, "aengin": [60, 61, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173], "dnnl_memory_non": 60, "doesn": [60, 152, 170], "dnnl_memory_alloc": 60, "memory_kind": 60, "astream": [60, 61, 159, 168], "hint": [60, 154, 157, 158, 161, 162, 163, 165, 166, 169, 170, 171, 172, 178, 437, 581, 584, 616, 627, 631, 641, 645, 655, 674, 684, 687, 699, 702, 713, 716, 727, 730, 741, 768], "even": [60, 146, 154, 170, 184, 245, 246, 247, 262, 263, 264, 466, 530, 531, 536, 553, 562, 566, 578, 744, 759, 799, 853, 856, 858], "map_data": 60, "exclus": [60, 403, 412, 565, 806, 807, 810, 814, 841, 844, 847], "unmap": 60, "unmap_data": 60, "mainli": [60, 184, 362, 398], "debug": [60, 565, 587, 848], "suboptim": [60, 157, 162], "mapped_ptr": 60, "previous": [60, 152, 153, 184, 257, 258, 259, 300, 334, 775, 861], "make_memori": 60, "adesc": 60, "akind": [60, 61, 63], "ahandl": 60, "thrown": [60, 149, 181, 257, 258, 259, 262, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 351, 352, 355, 356, 357, 360, 361, 367, 370, 371, 380, 381, 382, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 402, 403, 404, 408, 409, 411, 415, 416, 419, 420, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 557, 566, 744, 769, 792, 841, 854, 856, 857], "attach": [60, 153, 845, 847, 850, 855, 856, 858], "withing": 60, "abuff": 60, "impli": [60, 141, 177, 570], "get_memory_kind": 60, "amemori": 60, "said": 60, "make_engin": [61, 150], "adevic": 61, "acontext": 61, "ti": [61, 149, 151], "ephemer": 61, "relev": [61, 184, 257, 258, 259, 260, 262, 263, 264, 375, 439, 440, 441], "portion": [61, 829, 856], "explan": [61, 348, 375, 849], "bitwis": [61, 154, 162, 439, 440, 441, 487, 494, 512, 539, 769], "OR": [61, 154, 162, 181, 487, 494, 512, 539], "in_ord": 61, "out_of_ord": 61, "default_flag": 61, "aflag": 61, "make_stream": [61, 150], "aqueu": 61, "get_queu": 61, "suggest": [62, 585, 627, 641, 655, 684, 699, 713, 727, 741], "logical_tensor": [62, 63], "boolean": [62, 63, 130, 151, 578, 627, 641, 655, 684, 699, 713, 727, 741, 815, 842], "z": [62, 231, 260, 263, 288, 290, 321, 323, 371, 473, 490, 500, 526, 541, 542, 546, 548, 550, 557, 563, 564, 578, 591], "s0": 62, "s1": [62, 719, 733], "s2": [62, 719, 733], "suppos": [62, 181, 815, 856], "strictli": [62, 311, 314, 345, 426, 427, 433, 434], "scheme": 62, "insert": [62, 106, 177, 593, 603, 605, 614, 616, 617, 619, 628, 631, 632, 642, 645, 646, 656, 674, 675, 685, 687, 689, 691, 700, 702, 704, 714, 716, 728, 730, 732, 742], "honor": 62, "faithfulli": [62, 578], "elimin": [62, 778], "don": [62, 149, 153, 769], "recogn": 62, "subgraph": [62, 149], "fewer": 62, "vice": [62, 106, 153, 259], "versa": [62, 106, 153, 259], "clearli": [62, 184], "underneath": [62, 63], "decid": [63, 149, 154, 157, 158, 161, 162, 163, 165, 166, 169, 170, 171, 172, 578], "unchang": [63, 182, 213, 214, 218, 219, 866], "dnnl_dim_t": 63, "tid": 63, "ltype": 63, "ptype": 63, "inlin": [63, 159, 179, 180, 777, 787], "deleg": 63, "deduc": [63, 169, 262, 562, 597, 606, 618, 633, 647, 660, 668, 676, 690, 705, 719, 733, 747], "lid": 63, "get_dim": 63, "get_id": [63, 864], "get_property_typ": 63, "get_layout_typ": 63, "get_layout_id": 63, "rais": [63, 534, 554, 558, 565, 601, 856], "get_strid": [63, 157, 159, 165], "get_mem_s": 63, "is_equ": 63, "lt": 63, "tenor": 63, "regard": [63, 151, 569, 853], "eg": 63, "absbackward": [63, 148], "avgpool": [63, 148], "avgpoolbackward": [63, 108, 148], "batchnormforwardtrain": [63, 148], "batchnorminfer": [63, 70, 148], "batchnormtrainingbackward": [63, 148], "biasadd": [63, 74, 148], "biasaddbackward": [63, 148], "clamp": [63, 76, 148], "clampbackward": [63, 148], "convolutionbackwarddata": [63, 78, 148], "convolutionbackwardweight": [63, 148], "convtranspos": [63, 148], "convtransposebackwarddata": [63, 148], "convtransposebackwardweight": [63, 148], "dynamicdequant": [63, 148], "dynamicquant": [63, 148], "elu": [63, 89, 148, 150, 159], "elubackward": [63, 148], "exp": [63, 148, 263, 355, 357, 361, 387, 389, 390, 393, 395, 397, 411, 419, 496, 497, 499, 504, 558], "gelu": [63, 93, 148, 159], "gelubackward": [63, 148], "hardsigmoid": [63, 95, 148, 158, 159], "hardsigmoidbackward": [63, 148], "hardswish": [63, 97, 148, 159], "hardswishbackward": [63, 148], "interpol": [63, 99, 148, 169], "interpolatebackward": [63, 148], "layernorm": [63, 101, 148], "layernormbackward": [63, 148], "leakyrelu": [63, 148], "log": [63, 104, 148, 492, 500, 501, 502, 504, 521, 523, 544, 569, 571, 577, 579], "logsoftmax": [63, 105, 148, 159, 172], "logsoftmaxbackward": [63, 148], "maxpool": [63, 148], "maxpoolbackward": [63, 148], "mish": [63, 112, 148, 159], "mishbackward": [63, 148], "pow": [63, 148, 159, 534, 535, 558], "prelu": [63, 102, 115, 148, 159, 160], "prelubackward": [63, 148], "reciproc": [63, 148], "reducel1": [63, 148], "reducel2": [63, 148], "reducemax": [63, 148], "reducemean": [63, 148], "reducemin": [63, 148], "reduceprod": [63, 148], "reducesum": [63, 148], "relubackward": [63, 148], "sigmoid": [63, 132, 148, 159, 170], "sigmoidbackward": [63, 148], "softmaxbackward": [63, 148], "softplu": [63, 111, 134, 148], "softplusbackward": [63, 148], "sqrtbackward": [63, 148], "squareddiffer": [63, 148], "statictranspos": [63, 148], "tanhbackward": [63, 148], "wildcard": [63, 148, 149, 159, 164], "lastsymbol": 63, "illeg": [63, 266, 268, 269, 272, 274, 276, 277, 280, 281, 284, 285, 288, 290, 292, 294, 297, 299, 300, 303, 305, 307, 309, 311, 312, 315, 317, 318, 321, 323, 325, 327, 329, 331, 333, 334, 337, 339, 341, 343], "lead": [63, 153, 157, 168, 184, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 222, 223, 225, 226, 227, 228, 229, 234, 241, 242, 243, 244, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 259, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 428, 435, 859], "weight_shap": 63, "same_upp": [63, 68, 69, 78, 79, 80, 81, 82, 83, 107, 108], "same_low": [63, 68, 69, 78, 79, 80, 81, 82, 83, 107, 108], "half_pixel": [63, 98, 99], "align_corn": [63, 98, 99], "ncx": [63, 68, 69, 70, 71, 72, 73, 74, 78, 79, 80, 81, 82, 83, 98, 99, 107, 108, 114, 115], "nxc": [63, 68, 69, 70, 71, 72, 73, 74, 78, 79, 80, 81, 82, 83, 98, 99, 107, 108, 114, 115], "bilinear": [63, 98, 99, 159], "trilinear": [63, 98, 99, 159, 169], "per_channel": [63, 84, 86, 87, 114, 117], "per_tensor": [63, 84, 86, 87, 117], "ceil": [63, 68, 107, 558], "floor": [63, 68, 82, 107, 558, 780], "oix": [63, 81, 82, 83], "xio": [63, 81, 82, 83], "iox": [63, 78, 79, 80], "xoi": [63, 78, 79, 80], "add_input": 63, "add_output": 63, "set_attr": 63, "self": 63, "engine_kind": 63, "fpmath_mod": [63, 152], "allow_except": [63, 149], "dag": 63, "alreadi": [63, 263, 433, 434, 435, 436, 610, 756, 793, 799, 801, 803, 814, 842, 854, 856, 857, 863, 864, 868], "schema": [63, 149], "similarli": [63, 149, 165, 170, 180, 181, 182, 259, 263, 761], "un": [63, 494], "is_fin": [63, 828], "polici": [63, 152, 174, 175, 176, 177, 178, 181, 603, 687, 702, 716, 730, 757, 758, 763, 766, 767, 774, 779], "fusion": [63, 64, 149, 151, 154], "claim": 63, "scalabl": [64, 149, 151, 757, 796, 797, 801, 802, 803], "awar": [64, 149, 151, 571], "wise": [65, 67, 85, 91, 103, 109, 110, 111, 113, 114, 116, 120, 129, 137, 139, 140, 143, 146, 159, 274, 556], "ge": [65, 88, 102, 114, 266, 268, 269, 272, 274, 299, 300, 309, 310, 329, 330, 331, 332, 333, 334, 343, 344, 352, 356, 360, 370, 371, 376, 380, 381, 382, 385, 387, 388, 392, 394, 395, 404, 408, 409, 411, 415, 416, 419], "overlin": [67, 77, 85, 109, 110, 113, 143, 155, 156, 157, 158, 168, 171, 172, 173, 198, 366, 407], "_0": [67, 85, 109, 110, 113, 130, 143, 259], "mathbin": [67, 85, 155], "_1": [67, 85, 109, 110, 113, 130, 143, 153, 259, 452, 454, 455], "src_0": [67, 85, 109, 110, 113, 130, 140, 143, 155], "src_1": [67, 85, 109, 110, 113, 130, 140, 143, 155], "denom": [68, 165], "limits_": [68, 70, 100, 107, 121, 122, 124, 126, 127, 152, 154, 162, 163, 165, 167, 172, 173], "sh": [68, 81, 82, 107, 157, 165], "ph_l": [68, 81, 82, 107, 157, 165], "sw": [68, 81, 82, 107, 157, 165], "pw_l": [68, 81, 82, 107, 157, 165], "overlap": [68, 165, 225, 226, 260, 296, 852], "window": [68, 69, 107, 108, 165, 588, 589], "s64": [68, 69, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 98, 99, 100, 101, 104, 105, 107, 108, 117, 121, 122, 123, 124, 125, 126, 127, 133, 134, 135, 136, 142], "front": [68, 69, 78, 79, 80, 81, 82, 83, 107, 108, 157, 165, 744, 748], "left": [68, 69, 78, 79, 80, 81, 82, 83, 100, 101, 106, 107, 108, 130, 156, 157, 158, 159, 163, 164, 165, 169, 170, 171, 172, 184, 196, 211, 230, 240, 241, 252, 254, 255, 259, 260, 262, 263, 264, 274, 275, 305, 306, 307, 308, 309, 310, 339, 340, 341, 342, 343, 344, 345, 349, 352, 356, 357, 361, 365, 370, 371, 376, 380, 381, 382, 385, 387, 388, 392, 394, 395, 397, 401, 402, 404, 408, 409, 411, 412, 415, 416, 419, 425, 426, 427, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 483, 496, 497, 499, 565, 571, 573, 574, 577, 578, 585, 593, 596, 601, 605, 610, 617, 627, 632, 641, 646, 655, 659, 663, 667, 672, 675, 684, 689, 699, 704, 713, 718, 727, 732, 741, 745, 746, 827, 863, 866], "bottom": [68, 69, 78, 79, 80, 81, 82, 83, 107, 108, 157, 165, 345, 765], "right": [68, 69, 78, 79, 80, 81, 82, 83, 100, 101, 106, 107, 108, 130, 152, 156, 157, 158, 159, 163, 164, 165, 169, 170, 171, 172, 184, 196, 211, 230, 240, 241, 251, 252, 254, 255, 256, 259, 260, 262, 263, 264, 274, 284, 285, 286, 287, 296, 305, 306, 307, 308, 309, 310, 317, 318, 319, 320, 329, 330, 339, 340, 341, 342, 343, 344, 345, 349, 352, 356, 357, 361, 365, 370, 371, 376, 380, 381, 382, 385, 387, 388, 392, 394, 395, 397, 401, 402, 404, 405, 408, 409, 411, 412, 414, 415, 416, 419, 425, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 483, 496, 497, 499, 565, 571, 574, 577, 578, 585, 768, 827, 877], "srcshape": 69, "mu": [70, 71, 100, 101, 154, 162, 423], "nhw": [70, 154], "gamma": [70, 71, 72, 100, 101, 154, 157, 162, 348, 354, 375, 376, 385, 461, 462, 517, 554, 558], "neither": [70, 72, 577, 579, 841], "running_mean": 70, "running_vari": 70, "batch_mean": 70, "batch_vari": 70, "batch_norm": [71, 159], "stabil": [71, 100, 101, 154, 162], "diff_gamma": [72, 101], "diff_beta": [72, 101], "clip": [75, 159], "src_i": [75, 77, 104, 116, 135, 156, 173], "_valu": 75, "smaller": [75, 76, 106, 152, 168, 263, 426, 427, 428, 429, 433, 434, 435, 436, 508, 525, 558, 784, 796], "upper": [75, 76, 152, 184, 193, 204, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 234, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 266, 268, 269, 272, 274, 276, 277, 288, 289, 290, 291, 292, 293, 294, 295, 303, 304, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 337, 338, 343, 344, 345, 437, 565, 582, 798], "ou": [77, 156, 171, 172], "c_": [77, 156, 170, 366, 379, 407], "stretch": [78, 79, 80, 81, 82, 83], "_channel": [78, 79, 80, 81, 82, 83], "_shape": [78, 79, 80, 81, 82, 83], "furthermor": [81, 151, 152, 153, 157], "comment": [81, 82, 157], "pd_l": [81, 82, 157], "pd_r": [81, 82, 157], "ph_r": [81, 82, 157], "pw_r": [81, 82, 157], "sd": [81, 82, 157], "dd": [81, 82, 157, 158], "dh": [81, 82, 107, 157], "dw": [81, 82, 107, 157], "fist": 81, "rest": [81, 423, 765, 854], "lfloor": [81, 157, 169, 259, 263, 360, 367, 382, 392, 394, 404, 408, 409, 416, 506, 510, 526, 555], "rfloor": [81, 157, 169, 259, 263, 360, 367, 382, 392, 394, 404, 408, 409, 416, 506, 510, 526, 555], "oc_g": [81, 157], "ic_g": [81, 157], "dkh": [81, 157], "dkw": [81, 157], "firstli": [82, 106], "_pad": 82, "_h": 82, "_padding_h": 82, "src_h": 82, "dst_h": 82, "zps_i": [84, 86], "scale_i": [84, 87, 117], "unlik": [86, 102, 128, 162, 184, 437, 562, 569, 581, 756, 771, 856], "scales_i": 86, "channelnum": [86, 121, 122, 123, 124, 125, 126, 127], "zp_i": [87, 117], "exponenti": [91, 159, 184, 265, 348, 349, 375, 376, 500, 501, 502, 503, 504, 556, 558], "erf": [92, 158, 159, 483, 497, 498, 499, 558], "sqrt2": 92, "dev_guide_convent": 94, "terpol": [98, 99], "resiz": [98, 99, 744, 798], "x_resiz": [98, 99], "differenti": [98, 578], "modul": [100, 101], "affin": [100, 101, 581, 584, 857], "span": [100, 101, 202, 299, 300, 333, 334, 390, 403, 409], "diffgamma": [101, 154, 162], "diffbeta": [101, 154, 162], "mark": [101, 149, 154, 162, 181, 346, 394, 558, 775, 849], "asterisk": [101, 154, 162], "small": [102, 362, 398, 583, 584, 768, 799, 864], "slope": [102, 114, 115, 153, 154, 157, 170], "coeffici": [102, 249, 251, 256, 284, 285, 296, 317, 329, 402, 441, 456, 459, 464, 465, 585], "leakag": 102, "natur": [103, 159, 262, 402, 517, 519, 521, 558, 872], "logarithm": [103, 159, 517, 519, 520, 521, 522, 556, 558], "formul": [104, 133, 134, 157], "dst_i": [104, 116, 135, 140], "src_j": [104, 135], "unsqueez": 106, "effect": [106, 153, 180, 182, 262, 540, 562, 563, 564, 565, 571, 574, 756, 766, 768, 798, 842, 855, 856, 857, 863, 865], "ln": [111, 133, 172, 349, 361, 397, 520, 558], "omega": [112, 158], "delta": [112, 158, 263, 264, 744, 745], "parametr": 114, "uni": [114, 115], "direction": [114, 115], "met": [114, 115, 565, 597, 606, 618, 633, 647, 660, 668, 676, 687, 690, 701, 702, 705, 716, 719, 729, 730, 733, 747, 811, 812, 815, 855], "rightmost": 114, "nd": [114, 115], "shape_i": 114, "pytorch": 115, "tensorflow": 115, "slope_shap": 115, "input_forward_shap": 115, "diff_slop": 115, "power": [116, 120, 167, 184, 265, 376, 531, 534, 535, 558], "infin": [120, 485, 506, 537, 546, 558], "neq": 120, "infti": [120, 355, 357, 370, 389, 469, 483, 497, 503, 519, 520], "l1": 121, "ident": [121, 122, 123, 124, 125, 126, 127, 149, 156, 173, 181, 182, 226, 259, 260, 263, 373, 396, 413, 421, 423, 562, 569, 577, 578], "shapeof": [121, 122, 123, 124, 125, 126, 127], "l2": 122, "backend": [128, 149, 261, 424, 437, 439, 440, 441], "pleas": [128, 259, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555], "op_typecast": 128, "op_dequant": 128, "cond": 130, "invalid_shap": 130, "_0_i": 140, "_1_i": 140, "overal": [141, 780], "rearrang": 142, "substract": 143, "bind": [149, 768], "benefit": [149, 151, 584, 799], "offload": [149, 175], "dnn": 149, "know": [149, 466, 578, 849, 855], "anymor": 149, "wild": 149, "conduct": 149, "aliv": 149, "analyz": 149, "topolog": 149, "port": [149, 584, 761, 771, 773, 774, 775, 776, 777, 778, 779, 781, 787, 791, 839, 848, 876], "cycl": 149, "put": [149, 157, 366, 379, 407, 775, 778], "among": [149, 151, 483, 484, 496, 497, 498, 499, 561, 784], "down": [149, 152, 157, 588], "isa": 149, "incomplet": [149, 424, 439, 440, 441], "succe": [149, 799, 855], "predecessor": [149, 758, 759, 760, 763, 765, 767, 768, 771, 772, 774, 775, 776, 777, 779, 782, 784, 785, 787, 790, 791], "amort": [149, 151, 160], "fall": [149, 151, 152, 153, 263, 537, 556, 801], "summar": [149, 170, 263, 557, 588, 841, 842, 849], "arrow": 149, "critic": [149, 157, 161, 780, 811, 812, 876], "exchang": [149, 593], "toward": [149, 485, 506, 537, 555, 558, 571], "against": [149, 184, 591, 804], "appear": [149, 171, 578, 579], "twice": [149, 369, 578], "prevent": [149, 157, 180, 259, 798, 855], "cyclic": 149, "safe": [149, 151, 152, 158, 160, 184, 595, 598, 602, 603, 608, 609, 613, 615, 616, 621, 629, 631, 635, 643, 645, 649, 657, 658, 665, 666, 669, 673, 674, 678, 686, 687, 688, 694, 701, 702, 703, 708, 715, 716, 717, 722, 729, 730, 731, 736, 743, 755, 804, 854, 855, 856, 863, 864, 866, 870], "unit": [149, 159, 170, 184, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 276, 277, 294, 327, 329, 330, 396, 405, 414, 440, 441, 546, 558, 780, 867], "captur": [149, 151, 263, 853, 854, 856], "under": [149, 174, 259, 263, 410, 418, 748, 757, 855, 877], "abl": [149, 153, 164, 168, 262, 267, 270, 271, 273, 275, 278, 279, 282, 283, 286, 287, 289, 291, 293, 295, 298, 301, 302, 304, 306, 308, 310, 313, 314, 316, 319, 320, 322, 324, 326, 328, 330, 332, 335, 336, 338, 340, 342, 344, 758, 765, 775, 823], "lifecycl": 149, "invok": [149, 178, 180, 262, 263, 569, 571, 573, 576, 577, 578, 592, 758, 763, 765, 767, 772, 779, 820, 854, 856, 857, 866, 871, 872], "prepack": 149, "late": [149, 571], "trivial": [149, 180, 259], "shallow": 149, "vanilla": 150, "ctx": 150, "buf_src": 150, "static_cast": [150, 260, 262, 384, 387, 388, 389, 393, 395, 397, 411, 419], "malloc_devic": [150, 184, 260, 261, 466], "buf_dst": 150, "mem_src": 150, "mem_dst": 150, "publish": 150, "apach": 150, "licens": [150, 877], "profil": 150, "intention": [150, 151], "extent": 150, "futur": [150, 177, 179, 184, 426, 427, 560, 766], "cooper": 150, "co": [150, 184, 203, 346, 349, 376, 491, 492, 493, 544, 546, 558], "comprehens": 150, "suit": [150, 223, 226, 229, 876], "consult": 150, "readm": 150, "although": 151, "open": [151, 562, 563, 564, 565, 596, 605, 610, 617, 627, 629, 632, 641, 643, 646, 655, 657, 659, 667, 675, 684, 686, 689, 699, 701, 704, 713, 715, 718, 727, 729, 732, 741, 743, 745, 746, 871, 875, 877], "tile": 151, "functor": [151, 160, 180, 573, 574, 576, 578, 625, 639, 653, 682, 772, 856, 858, 863, 865], "thing": 151, "pure": [151, 160, 774], "approach": [151, 160, 563, 564, 805, 810, 815], "tailor": [151, 160], "inspect": [151, 153, 160, 265, 758, 763, 767, 772, 779], "instanti": [151, 160, 182, 259, 262, 761, 765, 774, 791, 792, 802, 806, 807, 815], "transpar": [151, 466, 798, 876], "effort": [151, 577, 578], "resid": [151, 177, 181], "extra": [152, 154, 373, 577, 799, 800], "equival": [152, 180, 182, 184, 259, 437, 562, 569, 570, 577, 579, 593, 594, 596, 599, 600, 605, 608, 609, 610, 611, 612, 617, 619, 621, 624, 627, 629, 632, 635, 638, 641, 643, 645, 646, 649, 652, 655, 657, 659, 661, 662, 667, 670, 671, 675, 678, 681, 684, 686, 689, 691, 694, 695, 696, 699, 701, 704, 708, 709, 710, 713, 715, 716, 718, 722, 723, 724, 727, 729, 732, 736, 737, 738, 741, 743, 745, 746, 752, 768, 792, 856, 858, 859], "im2col": 152, "longer": [152, 184, 569, 780], "too": [152, 531, 573, 583], "proport": [152, 561, 562, 563, 564, 565, 581, 582, 584, 829, 830], "contrast": [152, 801], "littl": [152, 768], "summand": 152, "though": [152, 170, 180, 425, 530, 578, 799], "op_pd": [152, 153], "param": [152, 153, 232, 233, 262, 354, 798, 852], "much": [152, 369, 583, 799], "query_s64": [152, 159], "memory_consumption_s64": 152, "zero_md": 152, "get_scratchpad_mod": 152, "op_d": 152, "scratchpad_md": 152, "scratchpad_desc": [152, 159], "prim": 152, "fine": [152, 582], "scratchpad_ptr": 152, "user_memory_manag": 152, "explain": [152, 264], "d_0": 152, "d_": [152, 294, 327], "d_i": 152, "le": [152, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344], "mathtt": 152, "wei_plain_f32_md": 152, "wei_scal": 152, "conv_pd": 152, "wei_conv_s8_md": 152, "weights_desc": [152, 154, 157, 159, 161, 162, 164], "quantization_mask": 152, "wei_s8": 152, "wei_f32": 152, "wei_reorder_pd": 152, "wei_reord": 152, "complementari": [152, 483, 484, 496, 497, 498, 499, 558], "ideal": [152, 565, 744, 829], "sai": [152, 184], "src_scale": 152, "src_f32": 152, "src_s8": 152, "dst_scale": 152, "dst_f32": 152, "dst_s8": 152, "src_conv_s8_any_md": 152, "wei_conv_s8_any_md": 152, "dst_conv_s8_any_md": 152, "ditto": 152, "data_mask": 152, "wei_mask": 152, "padding_l": [152, 157, 165], "padding_r": [152, 157, 165], "padding_kind": 152, "fp32": [152, 260, 262, 263, 264], "notic": 152, "narrow": 152, "tf32": 152, "strict": [152, 518], "disabl": [152, 157, 468, 469, 470, 471, 473, 475, 479, 483, 484, 486, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 509, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 527, 528, 530, 531, 532, 533, 534, 535, 536, 541, 542, 543, 544, 545, 548, 549, 550, 551, 553, 554, 588, 798, 857], "environ": [152, 184, 795, 798], "delai": 152, "successfulli": [152, 184, 257, 258, 259, 262, 263, 264, 362, 398, 487, 494, 512, 539, 744, 759, 766, 774], "whatev": 152, "try": [152, 589, 855], "get_fpmath_mod": 152, "get_scales_mask": 152, "set_output_scal": [152, 157], "get_post_op": 152, "set_rnn_data_qparam": 152, "mb": [152, 164], "sic": 152, "slc": 152, "dic": 152, "dlc": 152, "op_desc": 152, "rnn_d": 152, "src_layer": 152, "src_iter": 152, "dst_iter": 152, "dst_layer": 152, "set_rnn_weights_qparam": 152, "five": [152, 376, 765], "weights_lay": 152, "weights_iter": 152, "append": [153, 184, 744, 745, 755], "po": [153, 178, 531, 616, 629, 631, 643, 645, 657, 674, 686, 687, 701, 702, 715, 716, 729, 730, 743], "preserv": [153, 264, 579, 788, 858], "suitabl": [153, 182, 262, 494, 815], "sketch": [153, 570, 857], "append_someth": 153, "append_something_els": 153, "other_param": 153, "matter": [153, 569], "pd": [153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173], "robust": 153, "magnitud": [153, 185, 190, 509, 524, 525, 558], "reinterpret": [153, 184], "as_data_typ": 153, "p_op": 153, "summand_md": 153, "pretti": 153, "resnet": 153, "famili": [153, 346, 365, 366, 379, 407, 483, 484, 496, 497, 498, 499, 798], "unus": [153, 158, 755, 798], "conv_d": 153, "conv": [153, 157], "entri": [153, 184, 196, 202, 206, 223, 226, 229, 232, 233, 247, 252, 254, 255, 259, 260, 263, 264, 345, 358, 378, 391, 425, 426, 427, 433, 434, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 857], "residu": 153, "simplest": [153, 425], "get_params_sum": 153, "aalgorithm": [153, 155, 157, 158, 163, 165, 167, 169, 172], "eltwise_op": 153, "get_params_eltwis": 153, "src1_desc": [153, 155], "binary_op": [153, 177, 181], "another_input": 153, "operand": [153, 573], "get_params_binari": 153, "straightforward": [154, 157, 162, 165, 166, 169], "flavor": [154, 162, 315], "popul": 154, "unbias": 154, "mu_i": 154, "2_i": [154, 449, 450], "mu_": 154, "2_": 154, "clariti": [154, 162], "Not": [154, 162, 439, 440, 441, 856, 860], "data_desc": [154, 158], "diff_data_desc": 154, "overwritten": [154, 155, 158, 162, 172, 188, 195, 196, 201, 202, 203, 204, 206, 211, 215, 216, 222, 223, 225, 226, 227, 228, 229, 241, 245, 246, 247, 252, 254, 255, 266, 268, 272, 274, 275, 276, 280, 284, 288, 290, 292, 294, 297, 299, 303, 305, 307, 309, 311, 315, 317, 321, 323, 325, 327, 329, 331, 333, 334, 337, 339, 341, 343, 494, 782, 793], "sp_n": 154, "sp_0": 154, "0d": [154, 161, 163], "aprop_kind": [154, 157, 158, 161, 162, 163, 165, 166, 169, 170, 171, 172], "src_desc": [154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173], "dst_desc": [154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173], "default_attr": [154, 155, 157, 158, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172], "mean_desc": [154, 162], "variance_desc": [154, 162], "get_prop_kind": [154, 157, 158, 159, 161, 162, 163, 165, 166, 170, 171, 172], "get_epsilon": [154, 159, 162, 167], "get_flag": [154, 159, 162], "batch_normalization_backward": [154, 159], "diff_src_desc": [154, 157, 158, 159, 161, 162, 163, 165, 166, 169, 171, 172], "diff_dst_desc": [154, 157, 158, 159, 161, 162, 163, 165, 166, 169, 171, 172], "hint_fwd_pd": [154, 157, 158, 161, 162, 163, 165, 166, 169, 170, 171, 172], "diff": [154, 157, 158, 159, 161, 162, 163, 165, 166, 169, 170, 171, 172], "diff_weights_desc": [154, 157, 159, 161, 162, 166], "x_0": [155, 158, 168, 362, 363, 398, 399, 420], "overwrit": [155, 157, 161, 164, 168, 264, 305, 307, 309, 339, 341, 343, 782, 793], "src0": 155, "src1": 155, "pdx": [155, 156, 159, 173], "src0_desc": 155, "get_algorithm": [155, 157, 158, 159, 163, 165, 167, 172], "concat_dimens": 156, "sum_i": 156, "c_i": [156, 444, 445], "_l": 157, "_r": 157, "broken": [157, 744, 748], "exposit": [157, 181, 349, 593], "realiti": 157, "depthwis": 157, "diffbia": [157, 161, 170], "kd": [157, 161], "feasibl": 157, "pseudo": [157, 168, 182, 346, 423, 816, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 832, 833, 834, 835, 836, 837, 838, 839, 840, 843, 846], "eta": 157, "simd": [157, 346, 377, 412], "notabl": 157, "winograd": [157, 159, 168], "loss": 157, "fast": [157, 346, 375, 377, 412, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 490, 491, 493, 541, 542, 543, 545, 550, 551, 553], "lavin": 157, "grai": [157, 405, 414], "heurist": 157, "bias_desc": [157, 159, 161, 164, 170], "get_dil": [157, 159, 165], "get_padding_l": [157, 159, 165], "get_padding_r": [157, 159, 165], "convolution_backward_data": [157, 159], "convolution_backward_weight": [157, 159], "diff_bias_desc": [157, 159, 161, 170], "deconvolution_forward": [157, 159], "deconvolution_backward_data": [157, 159], "deconvolution_backward_weight": [157, 159], "pi": [158, 263, 349, 357, 361, 376, 384, 389, 390, 397, 403, 469, 483, 496, 497, 498, 499, 519, 520], "044715": 158, "log_": 158, "rl": 158, "134145": 158, "dnnl_forward_train": 158, "dnnl_forward_infer": 158, "benefici": 158, "rather": [158, 181, 829], "tip": 158, "unari": [158, 177, 180, 181, 863, 865], "get_alpha": [158, 159, 163, 170], "get_beta": [158, 159, 163, 170], "use_dst_for_bwd": 158, "subclass": 159, "inner_product_backward_data": [159, 161], "inner_product_backward_weight": [159, 161], "inner_product_forward": [159, 161], "layer_normalization_backward": [159, 162], "lrn_backward": [159, 163], "lrn_forward": [159, 163], "pooling_backward": [159, 165], "prelu_backward": [159, 166], "prelu_forward": [159, 166], "resampling_backward": [159, 169], "resampling_forward": [159, 169], "shuffle_backward": [159, 171], "softmax_backward": [159, 172], "softmax_forward": [159, 172], "layer_norm": 159, "inner_product": 159, "resampl": [159, 160], "unordered_map": 159, "dnnl_arg_": 159, "query_md": 159, "exec_arg_md": 159, "rh": [159, 574, 577, 595, 599, 600, 603, 611, 612, 616, 622, 623, 624, 630, 631, 636, 637, 638, 644, 645, 650, 651, 652, 658, 661, 662, 666, 670, 671, 674, 679, 680, 681, 687, 695, 696, 702, 709, 710, 716, 723, 724, 730, 737, 738, 744, 750, 751, 752, 823], "aprimit": 159, "impl_info_str": 159, "get_axi": [159, 171, 172], "get_local_s": [159, 163], "get_k": [159, 163], "get_p": [159, 167], "get_factor": 159, "get_cell_kind": [159, 170], "rnn_direct": [159, 170], "get_direct": [159, 170], "get_activation_kind": [159, 170], "get_kernel": [159, 165], "get_group_s": [159, 171], "src_md": [159, 168], "dst_md": [159, 168], "weights_md": 159, "scratchpad_engin": 159, "get_primitive_attr": 159, "frequent": [159, 798], "src_layer_desc": [159, 170], "src_iter_desc": [159, 170], "src_iter_c_desc": [159, 170], "weights_layer_desc": [159, 170], "weights_iter_desc": [159, 170], "weights_peephole_desc": [159, 170], "peephol": 159, "weights_projection_desc": [159, 170], "augru_attention_desc": 159, "augru": 159, "attent": [159, 170], "dst_layer_desc": [159, 170], "dst_iter_desc": [159, 170], "dst_iter_c_desc": [159, 170], "diff_src_layer_desc": [159, 170], "diff_src_iter_desc": [159, 170], "diff_src_iter_c_desc": [159, 170], "diff_weights_layer_desc": [159, 170], "diff_weights_iter_desc": [159, 170], "diff_weights_peephole_desc": [159, 170], "diff_weights_projection_desc": [159, 170], "diff_augru_attention_desc": 159, "diff_dst_layer_desc": [159, 170], "diff_dst_iter_desc": [159, 170], "diff_dst_iter_c_desc": [159, 170], "subsequ": [159, 177, 259, 396, 413, 422, 565, 744, 766, 775, 798], "forward_scor": 159, "backward_weight": 159, "backward_bia": 159, "bounded_relu": 159, "rectifi": 159, "soft_relu": 159, "swish": 159, "hyperbol": [159, 265, 469, 474, 479, 492, 544, 552, 558], "tangent": [159, 476, 477, 478, 479, 480, 550, 551, 552, 553, 558], "exclud": [159, 562, 842], "c_t": [159, 170], "w_c": 159, "x_t": 159, "b_": [159, 170, 266], "c_x": 159, "r_t": [159, 170], "u_c": 159, "h_": [159, 170, 232, 233], "c_h": 159, "lrb": 159, "mul": [159, 167, 558], "binary_div": 159, "div": [159, 558], "binary_sub": 159, "binary_g": 159, "binary_gt": 159, "binary_l": 159, "binary_lt": 159, "binary_eq": 159, "binary_n": 159, "reduction_max": [159, 167], "reduction_min": [159, 167], "reduction_sum": [159, 167], "reduction_mul": [159, 167], "reduction_mean": [159, 167], "reduction_norm_lp_max": [159, 167], "norm_lp_max": 159, "reduction_norm_lp_sum": [159, 167], "norm_lp_sum": 159, "reduction_norm_lp_power_p_max": [159, 167], "norm_lp_power_p_max": 159, "reduction_norm_lp_power_p_sum": [159, 167], "norm_lp_power_p_sum": 159, "softmax_accur": [159, 172], "stabl": [159, 172, 177, 579], "softmax_log": [159, 172], "mnemon": 159, "conceptu": 160, "concret": 160, "prefer": [160, 261, 780, 810, 814, 856], "embodi": 160, "nest": [160, 174, 593, 796, 850, 852, 858], "something_forward": 160, "action": [160, 788, 798, 841], "flatten": [161, 871], "stat_desc": 162, "_ndim": 162, "_dim": [162, 451], "advis": 162, "n_": [163, 259, 263], "local_s": 163, "restor": [165, 856, 858], "leaki": 166, "trainabl": 166, "mbox": 166, "weight_desc": 166, "mathop": 167, "lp": 167, "idl": [167, 582], "ep": [167, 490, 491, 493, 511, 518, 531, 540, 541, 542, 543, 545, 550, 551, 553], "kept": [168, 768, 858], "simultan": [168, 177, 184, 592, 757, 758, 778, 796, 799, 842, 855, 856, 864], "encount": [168, 220, 221, 546], "bug": 168, "team": 168, "dnnl_s8": 168, "dnnl_f32": 168, "allevi": 168, "fact": 168, "1024": 168, "127": [168, 420, 518], "124": 168, "dt_src": 168, "memory_format": 168, "fmt_src": 168, "dt_dst": 168, "fmt_dst": 168, "output_scal": 168, "src_engin": 168, "dst_engin": 168, "get_src_engin": 168, "get_dst_engin": 168, "upsampl": 169, "downsampl": 169, "f_h": 169, "f_w": 169, "ih_0": 169, "iw_0": 169, "w_": [169, 170, 412, 420], "ih_1": 169, "iw_1": 169, "lceil": [169, 485, 510, 526, 555], "rceil": [169, 485, 510, 526, 555], "_spatial": 169, "_size": [169, 188, 195, 196, 202, 206, 223, 226, 229, 247, 255, 269, 277, 281, 285, 312, 318], "stack": [170, 852, 876], "unrol": 170, "srciter": 170, "dstiter": 170, "four": [170, 230, 257, 258, 260, 349, 366, 376, 407, 477, 478, 558, 562], "evalu": [170, 177, 178, 184, 572, 798, 863, 865, 866], "left2right": 170, "right2left": 170, "decreas": [170, 504, 558, 588, 744, 763, 776, 874], "bidirectional_concat": 170, "dstlayer": 170, "bidirectional_sum": 170, "srclayer": 170, "six": 170, "vanilla_rnn_pd": 170, "aprop": 170, "a_t": 170, "h_t": 170, "lstm_pd": 170, "src_iter_h_desc": 170, "dst_iter_h_desc": 170, "give": [170, 425], "i_t": 170, "w_i": 170, "b_i": [170, 285, 286, 318, 319, 449, 450], "f_t": 170, "w_f": 170, "u_f": 170, "b_f": 170, "u_": [170, 276, 401], "o_t": 170, "w_o": 170, "u_o": 170, "b_o": 170, "weightslay": 170, "weightsit": 170, "srciterc": 170, "dstiterc": 170, "p_i": [170, 277, 403], "p_f": 170, "p_o": 170, "weights_peephol": 170, "simplic": [170, 362, 398], "weights_project": 170, "gru_pd": 170, "u_t": 170, "w_u": 170, "u_u": 170, "b_u": 170, "w_r": 170, "u_r": 170, "b_r": 170, "lbr_gru_pd": 170, "augru_pd": 170, "attention_desc": 170, "lbr_augru_pd": 170, "weightspeephol": 170, "weightsproject": 170, "diffsrclay": 170, "diffsrcit": 170, "diffsrciterc": 170, "diffweightslay": 170, "diffweightsit": 170, "diffweightspeephol": 170, "diffweightsproject": 170, "diffdstlay": 170, "diffdstit": 170, "diffdstiterc": 170, "diff_": 170, "shorten": 170, "variant": [170, 174, 220, 221, 288, 321, 578], "rnn_flag": 170, "unidirectional_left2right": 170, "unidirect": 170, "unidirectional_right2left": 170, "bidirect": 170, "info": [170, 184, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 844, 847, 856], "lbr": 170, "thought": 171, "formal": [171, 182], "group_siz": [171, 188, 195, 196, 202, 206, 223, 226, 229, 247, 255, 269, 270, 277, 278, 281, 282, 285, 286, 300, 301, 312, 313, 318, 319, 334, 335], "essenti": 171, "nu": [172, 376], "dpl": [174, 177, 178, 179, 180, 181, 182], "shorter": 174, "analogu": [174, 181, 182], "prefix": [174, 177, 578, 846], "preprocessor": [174, 184], "macro": [174, 184, 587, 794, 848], "compliant": [174, 184, 262], "onedpl_spec_vers": 174, "decim": [174, 591], "liter": [174, 466, 591, 849], "minor": [174, 184, 290, 311, 312, 323, 589, 591], "latest": [174, 262, 591], "104": 174, "iso": [175, 566, 568, 570, 572, 577, 578, 579, 581, 582, 583, 584, 595, 596, 597, 598, 601, 603, 605, 606, 608, 610, 616, 617, 618, 619, 620, 627, 631, 632, 633, 634, 641, 645, 646, 647, 648, 655, 658, 659, 660, 663, 666, 667, 668, 669, 672, 674, 675, 676, 677, 684, 687, 688, 689, 690, 691, 693, 699, 702, 703, 704, 705, 707, 713, 716, 717, 718, 719, 721, 727, 730, 731, 732, 733, 735, 741, 744, 745, 746, 747, 749, 758, 760, 761, 763, 767, 768, 771, 772, 774, 776, 779, 782, 784, 785, 790, 792, 793, 794, 796, 797, 799, 801, 803, 805, 807, 810, 813, 814, 815, 820, 822, 856, 858, 859, 863, 865, 871], "iec": [175, 797], "14882": [175, 797], "17": [175, 177, 376, 570, 574, 577, 578, 597, 606, 618, 633, 647, 660, 668, 676, 690, 705, 719, 733, 747, 758, 767, 774, 779, 790, 797], "complement": 175, "wrapper": [175, 176, 179, 180, 373, 466, 800], "6th": [176, 177, 179, 181], "edit": [176, 177, 179, 181, 182], "20": [176, 177, 179, 181, 782, 856], "variat": [176, 181, 382, 390, 423, 456, 459], "analog": [177, 562, 578, 798], "5th": 177, "draft": [177, 181, 182], "26": [177, 181, 182], "deprec": [177, 179, 259, 262, 264, 756, 847], "inputkeyit": 177, "inputvalueit": 177, "outputvalueit": 177, "iterator_trait": [177, 180, 570, 597, 606, 618, 633, 647, 660, 668, 676, 690, 705, 719, 733, 747, 820], "value_typ": [177, 180, 562, 570, 593, 595, 596, 597, 601, 603, 604, 605, 606, 610, 616, 617, 618, 619, 625, 627, 629, 630, 631, 632, 633, 639, 641, 643, 644, 645, 646, 647, 653, 655, 657, 658, 659, 660, 663, 666, 667, 668, 672, 674, 675, 676, 682, 684, 686, 687, 689, 690, 691, 699, 701, 702, 704, 705, 713, 715, 716, 718, 719, 727, 729, 730, 732, 733, 741, 743, 744, 745, 746, 747, 748, 755, 799, 801, 803, 820, 831, 864, 871], "binarypr": 177, "equal_to": [177, 181, 687, 690, 702, 705, 716, 719, 730, 733], "binaryop": 177, "plu": [177, 276, 485, 537, 558, 566], "exclusive_scan_by_seg": 177, "keys_first": 177, "keys_last": 177, "values_first": 177, "values_result": 177, "initial_valu": 177, "binary_pr": 177, "scan": [177, 578, 826, 828], "predic": [177, 659, 689, 697, 704, 711, 718, 725, 732, 739], "binarypredc": 177, "inclusive_scan_by_seg": 177, "outputkeyit": 177, "reduce_by_seg": 177, "keys_result": 177, "inputit1": 177, "inputit2": 177, "outputit": 177, "inputit": 177, "binary_search": 177, "value_first": 177, "value_last": 177, "outputiter": 177, "comp": [177, 181, 579, 616, 617, 630, 631, 632, 644, 645, 646, 674, 675], "lower_bound": [177, 616, 631, 645, 674], "lowest": 177, "upper_bound": [177, 616, 631, 645, 674], "unaryop": 177, "unarypred": 177, "transform_if": 177, "pred": [177, 181], "binarypred": [177, 687, 702, 716, 730], "start1": 177, "end1": 177, "start2": 177, "past": [177, 181, 815, 817], "keyit": 177, "valueit": 177, "sort_by_kei": 177, "unstabl": [177, 296], "valueswapp": [177, 579], "stable_sort_by_kei": 177, "valuetyp": 177, "histogram": 177, "exec": 177, "num_interv": 177, "first_interval_begin": 177, "last_interval_end": 177, "histogram_first": 177, "boundary_start": 177, "boundary_end": 177, "bin": 177, "silent": 177, "suffici": [177, 257, 258, 261, 262, 582], "evenli": [177, 829], "bin_siz": 177, "truncat": [177, 526, 776], "compos": [178, 180, 574, 792], "derefer": [178, 180], "allocatort": 178, "tagt": 178, "read_writ": 178, "no_init": 178, "helper": [178, 463, 757, 848], "dpcpp_default": [178, 179], "value_index": 178, "deduct": [178, 595, 603, 616, 631, 645, 658, 666, 674, 687, 702, 716, 730, 744], "overridden": [178, 857], "buf_begin": 178, "write_onli": 178, "buf_end_1": 178, "42": [178, 345], "ok": 178, "buf_end_2": 178, "sequenced_polici": 179, "parallel_polici": 179, "parallel_unsequenced_polici": 179, "unsequenced_polici": 179, "seq": 179, "par": 179, "par_unseq": 179, "unseq": 179, "is_execution_polici": 179, "false_typ": [179, 180], "kernelnam": 179, "newkernelnam": 179, "oldkernelnam": 179, "kernel_nam": 179, "othernam": 179, "movement": [179, 180, 184], "resolut": [179, 562, 597, 606, 608, 609, 610, 618, 621, 627, 629, 633, 635, 641, 643, 647, 649, 657, 660, 668, 676, 678, 686, 690, 694, 699, 701, 705, 708, 713, 715, 719, 722, 729, 733, 736, 743, 745, 746, 747, 774, 866, 874], "is_execution_policy_v": [179, 181], "true_typ": [179, 180, 799, 801, 803], "strip": 179, "cv": 179, "decay_t": [179, 767, 772, 774, 790], "indirectli": 180, "dereferenc": [180, 466, 579, 629, 643, 657, 686, 701, 715, 729, 743], "inher": [180, 578], "device_polici": 180, "copyabl": [180, 841], "caus": [180, 259, 296, 487, 494, 512, 539, 563, 564, 565, 591, 744, 829, 852, 854], "beyond": [180, 517, 554], "excess": [180, 456], "is_indirectly_device_access": 180, "is_indirectly_device_accessible_v": 180, "adaptingiteratorsourc": 180, "permutation_iter": 180, "transform_iter": 180, "counting_iter": 180, "discard_iter": 180, "zip_iter": 180, "upon": [180, 260, 430, 431, 432, 439, 440, 441, 593, 856], "difference_typ": [180, 595, 603, 616, 631, 645, 658, 674, 687, 702, 716, 730, 744, 831, 864, 871], "counter": [180, 350, 366, 377, 379, 407, 776, 815], "rvalu": [180, 815], "ptrdiff_t": 180, "lvalu": [180, 815], "discard": [180, 758, 759, 763, 766, 767, 771, 776, 779, 791, 837], "sourceiter": 180, "indexmap": 180, "input1": 180, "input2": 180, "make_permutation_iter": 180, "unaryfunc": [180, 863, 864, 865], "invoke_result": 180, "remove_refer": 180, "unary_func": 180, "make_transform_iter": 180, "make_sign": 180, "tupl": [180, 259, 562, 619, 691, 761, 771, 774, 775, 778, 779, 791, 793], "make_zip_iter": 180, "is_onedpl_indirectly_device_access": 180, "discover": 180, "lookup": [180, 181, 376, 595, 603, 610, 616, 627, 631, 641, 645, 655, 658, 666, 674, 684, 687, 699, 702, 713, 716, 727, 730, 741, 744, 799, 801, 803, 874], "adl": 180, "bodi": [180, 568, 569, 570, 571, 574, 577, 578, 582, 758, 763, 764, 765, 767, 768, 772, 774, 779, 780, 783, 788, 790, 793, 818, 819, 820, 823, 826, 830, 833, 834, 835, 837, 839, 843, 849], "examin": 180, "_v": 180, "complic": 180, "friend": [180, 257, 258, 262], "usr": 180, "accessible_it": 180, "inaccessible_it": 180, "static_assert": 180, "it1": 180, "it2": 180, "it_pair": 180, "newer": [181, 796], "earlier": [181, 362, 398, 578, 780, 826], "predefin": [181, 182, 757, 758, 767, 779], "serial": [181, 566, 571, 573, 577, 578, 598, 602, 608, 615, 629, 643, 657, 665, 669, 673, 686, 688, 701, 703, 715, 717, 729, 731, 743, 755, 772, 778, 783, 790, 793, 829, 852, 870], "mismatch": 181, "infinit": [181, 530], "repeat": [181, 562, 563, 564, 579, 849], "go": 181, "for_each": 181, "reverse_copi": 181, "rotate_copi": 181, "in_in_out_result": 181, "reverse_copy_result": 181, "rotate_copy_result": 181, "p3709r2": 181, "aid": [181, 184], "projected_value_t": 181, "proj": 181, "remove_cvref_t": 181, "invoke_result_t": [181, 763], "iter_value_t": 181, "nothrow": 181, "random_access_rang": 181, "is_lvalue_reference_v": 181, "iter_reference_t": 181, "iterator_t": 181, "same_a": 181, "random_access_iter": 181, "all_of": 181, "executionpolici": 181, "indirect_unary_pred": 181, "sized_rang": 181, "pol": 181, "any_of": 181, "none_of": 181, "indirectly_unary_invoc": 181, "fn": 181, "borrowed_iterator_t": 181, "indirect_binary_pred": 181, "range_difference_t": 181, "count_if": 181, "find_if": 181, "find_if_not": 181, "find_first_of": 181, "r1": 181, "r2": 181, "proj1": 181, "proj2": 181, "indirectly_compar": 181, "adjacent_find": 181, "find_last": 181, "borrowed_subrange_t": 181, "find_last_if": 181, "find_last_if_not": 181, "indirect_strict_weak_ord": 181, "indirectly_copyable_stor": 181, "range_value_t": 181, "minmax": 181, "minmax_result": 181, "min_el": 181, "max_el": 181, "minmax_el": 181, "minmax_element_result": 181, "mismatch_result": 181, "find_end": 181, "search_n": 181, "lexicographical_compar": 181, "contains_subrang": 181, "starts_with": 181, "ends_with": 181, "sortabl": [181, 815], "stable_sort": 181, "partial_sort": 181, "middl": 181, "partial_sort_copi": 181, "outr": 181, "indirectly_copy": 181, "partial_sort_copy_result": 181, "is_sort": 181, "is_sorted_until": 181, "mergeabl": 181, "merge_result": 181, "inplace_merg": 181, "is_heap": 181, "is_heap_until": 181, "set_union": 181, "set_union_result": 181, "set_intersect": 181, "set_intersection_result": 181, "set_differ": 181, "set_difference_result": 181, "set_symmetric_differ": 181, "set_symmetric_difference_result": 181, "is_partit": 181, "stable_partit": 181, "partition_copi": 181, "outr1": 181, "outr2": 181, "partition_copy_result": 181, "out_true_r": 181, "out_false_r": 181, "nth_element": 181, "nth": [181, 761], "copy_result": 181, "copy_if": 181, "copy_if_result": 181, "indirectly_mov": 181, "move_result": 181, "remove_copi": 181, "remove_copy_result": 181, "remove_copy_if": 181, "remove_copy_if_result": 181, "replace_copi": 181, "t1": 181, "t2": 181, "indirectly_writ": 181, "replace_copy_result": 181, "old_valu": 181, "new_valu": 181, "replace_copy_if": 181, "replace_copy_if_result": 181, "copy_construct": 181, "indirect_result_t": 181, "unary_transform_result": 181, "unary_op": 181, "binary_transform_result": 181, "unique_copi": 181, "indirect_equivalence_rel": 181, "unique_copy_result": 181, "replace_if": 181, "remove_if": 181, "revers": [181, 259, 578, 749], "swap_rang": 181, "indirectly_swapp": 181, "swap_ranges_result": 181, "shift_left": 181, "shift_right": 181, "rotat": [181, 190, 230, 231, 232, 233], "uninitialized_default_construct": 181, "default_initializ": 181, "uninitialized_value_construct": 181, "uninitialized_copi": 181, "ir": 181, "constructible_from": 181, "range_reference_t": 181, "uninitialized_copy_result": 181, "in_rang": 181, "out_rang": 181, "uninitialized_mov": 181, "range_rvalue_reference_t": 181, "uninitialized_move_result": 181, "uninitialized_fil": 181, "linear_congruential_engin": 182, "subtract_with_carry_engin": 182, "philox_engin": 182, "adaptor": [182, 373, 871], "discard_block_engin": 182, "minstd_rand0": 182, "minstd_rand": 182, "ranlux24_bas": 182, "ranlux48_bas": 182, "ranlux24": 182, "ranlux48": 182, "philox4x32": [182, 350, 366, 377], "philox4x64": 182, "uniform_int_distribut": 182, "uniform_real_distribut": 182, "normal_distribut": 182, "exponential_distribut": 182, "bernoulli_distribut": 182, "geometric_distribut": 182, "weibull_distribuion": 182, "lognormal_distribut": 182, "cauchy_distribut": 182, "extreme_value_distribut": 182, "deviat": [182, 357, 361, 389, 395, 397], "random_devic": 182, "seed_seq": 182, "vec": [182, 288, 289, 290, 291, 321, 322, 323, 324, 358, 362, 363, 364, 365, 366, 372, 597, 660, 668], "result_typ": [182, 351, 352, 353, 355, 356, 357, 358, 360, 361, 367, 369, 370, 371, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 403, 404, 408, 409, 411, 415, 416, 417, 419], "scalar_typ": 182, "element_typ": 182, "seed": [182, 354, 362, 363, 364, 365, 366, 372, 379, 396, 398, 399, 400, 401, 402, 407, 410, 412, 413, 418, 420, 423], "meet": [182, 362, 364, 398, 400, 492, 500, 517, 544, 554, 561, 562, 563, 564, 565, 566, 568, 570, 571, 572, 574, 577, 578, 579, 594, 595, 596, 597, 598, 601, 603, 605, 606, 608, 610, 613, 616, 617, 618, 619, 620, 626, 627, 631, 632, 633, 634, 640, 641, 645, 646, 647, 648, 654, 655, 658, 659, 660, 663, 666, 667, 668, 669, 672, 674, 675, 676, 677, 683, 684, 687, 688, 689, 690, 691, 693, 698, 699, 702, 703, 704, 705, 707, 712, 713, 716, 717, 718, 719, 721, 726, 727, 730, 731, 732, 733, 735, 740, 741, 744, 745, 746, 747, 749, 753, 758, 760, 761, 763, 767, 771, 772, 774, 776, 779, 782, 784, 785, 790, 792, 793, 797, 815, 816, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 853, 856, 858, 859, 863, 865, 871], "minstd_rand0_vec": 182, "uint_fast32_t": 182, "16807": 182, "2147483647": 182, "minstd_rand_vec": 182, "48271": 182, "ranlux24_base_vec": 182, "ranlux48_base_vec": 182, "uint_fast64_t": 182, "48": [182, 365], "12": [182, 232, 233, 345, 364, 400, 402], "ranlux24_vec": 182, "223": 182, "ranlux48_vec": 182, "389": 182, "philox4x32_vec": 182, "0xcd9e8d57": [182, 366, 407], "0x9e3779b9": [182, 366, 407], "0xd2511f53": [182, 366, 407], "0xbb67ae85": [182, 366, 407], "philox4x64_vec": 182, "0xca5a826395121157": 182, "0x9e3779b97f4a7c15": [182, 379], "0xd2e7470ee14c6c93": 182, "0xbb67ae8584caa73b": [182, 379], "invoc": [182, 758, 768, 783, 856, 857], "10000th": 182, "1043618065": 182, "399268537": 182, "7937952": 182, "61839128582725": 182, "9901578": 182, "1112339016": 182, "1955073260": 182, "3409172418970261260": 182, "item": [183, 568, 570, 573, 575, 595, 601, 604, 610, 619, 627, 641, 655, 658, 666, 684, 691, 699, 713, 727, 741, 760, 772, 776, 782, 784, 785, 790, 793, 799, 815, 818, 820, 831, 837, 849], "human": 183, "p1673": 183, "broader": 183, "interest": [183, 857], "valuabl": 183, "feedback": [183, 377, 401, 410, 877], "thank": 183, "therein": 184, "great": 184, "nonessenti": 184, "standalon": 184, "rng": [184, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 377, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421], "dft": [184, 257, 258, 259, 260, 261, 262, 265], "setup": 184, "subdevic": 184, "facilit": [184, 804], "likewis": [184, 262, 761, 798], "manual": [184, 261, 396], "launch": [184, 466, 765], "antidepend": 184, "reserv": [184, 687, 692, 702, 706, 716, 720, 730, 734, 744, 760, 766, 775, 782, 784, 785, 790, 793, 798, 846, 856], "deadlock": [184, 571], "link": [184, 760, 784, 785], "in_ev": 184, "consumpt": [184, 261], "paradigm": 184, "elegantli": 184, "burden": 184, "correspondingli": 184, "prerequisit": 184, "secondari": 184, "fourier": [184, 257, 258, 262, 264, 560], "vm": [184, 265, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557], "trigonometr": [184, 265, 490, 491, 541, 542, 543, 550, 551, 558], "act": [184, 800, 853, 864], "constitut": [184, 780], "breadth": 184, "permit": [184, 582, 592, 595, 658, 666, 768, 815, 857, 872], "live": 184, "easili": [184, 876], "intn_t": 184, "uintn_t": 184, "basi": [184, 299, 300, 333, 334, 386], "2020": 184, "fortran": [184, 345, 559], "interchang": [184, 276, 277, 294, 327], "conjug": [184, 190, 191, 198, 208, 228, 245, 246, 247, 263, 488, 528, 558], "tran": [184, 200, 205, 206, 215, 216, 222, 223, 225, 226, 227, 228, 229, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 284, 285, 286, 287, 305, 306, 307, 308, 309, 310, 329, 330, 339, 340, 341, 342, 343, 344, 439, 440, 441, 466], "conjtran": [184, 215, 216, 222, 225, 226, 227, 228, 245, 246, 247, 284, 285, 286, 287, 329, 330, 339, 340, 341, 342, 343, 344, 439, 440, 441], "hermitian": [184, 191, 192, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 288, 290, 292, 294, 296, 311, 312, 315, 317, 318, 337, 343, 438], "uplo": [184, 204, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 234, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 288, 289, 290, 291, 292, 293, 294, 295, 303, 304, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 337, 338, 343, 344, 345, 438], "triangl": [184, 204, 211, 215, 216, 241, 245, 246, 247, 272, 290, 292, 315, 316, 317, 318, 319, 320, 323, 325, 345, 349, 376], "triangular": [184, 191, 192, 193, 204, 210, 212, 213, 214, 217, 218, 219, 234, 237, 238, 239, 242, 243, 244, 248, 249, 250, 251, 252, 253, 254, 255, 256, 268, 269, 272, 276, 277, 288, 289, 290, 291, 292, 293, 294, 295, 296, 311, 312, 313, 314, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 345, 437, 438, 440, 441, 442], "diag": [184, 196, 248, 249, 250, 251, 252, 253, 254, 255, 256, 329, 330, 438, 440, 441], "diagon": [184, 196, 200, 210, 213, 214, 216, 217, 218, 219, 233, 234, 248, 249, 252, 254, 255, 266, 268, 269, 274, 276, 277, 284, 285, 288, 290, 292, 294, 315, 317, 318, 321, 323, 325, 327, 329, 330, 345, 390, 410, 438, 440], "nonunit": [184, 329, 330, 438, 441], "c_offset": [184, 203], "index_bas": [184, 220, 221, 426, 427, 433, 434], "nonzero": [184, 509], "tradition": 184, "col_major": [184, 448], "uniniti": [184, 262, 426, 427, 428, 429, 433, 434, 435, 436, 437, 439, 440, 441], "computation_error": [184, 266, 268, 272, 274, 276, 280, 284, 288, 290, 292, 294, 297, 299, 303, 305, 307, 309, 311, 315, 317, 321, 323, 325, 327, 329, 331, 333, 337, 339, 341, 343, 439, 440, 441], "batch_error": [184, 269, 277, 281, 285, 300, 312, 318, 334], "familiar": 184, "catch": [184, 589, 855], "subroutin": 184, "inconsist": [184, 257, 258, 262], "issu": [184, 571, 877], "experienc": 184, "onemath_blas_spec_vers": 184, "onemath_lapack_spec_vers": 184, "onemath_spblas_spec_vers": 184, "onemath_dft_spec_vers": 184, "onemath_rng_spec_vers": 184, "onemath_stats_spec_vers": 184, "onemath_vm_spec_vers": 184, "digit": [184, 591], "reflect": 184, "001": 184, "onemkl": 184, "000": 184, "101": 184, "102": 184, "103": [184, 377, 410], "uxlfound": 184, "verif": 184, "imaginari": [185, 213, 214, 216, 217, 218, 219, 257, 258, 259, 260, 263, 264, 471, 492, 495, 500, 527, 531, 544, 546, 549], "im": [185, 220, 221, 467, 468, 469, 471, 472, 474, 479, 492, 500, 519, 520, 527, 531, 544, 546, 549], "tre": [185, 197, 224], "incx": [185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 205, 206, 207, 208, 209, 210, 212, 213, 214, 217, 218, 219, 220, 221, 224, 230, 232, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 248, 249, 250, 251, 253, 256, 345, 466], "topic": [185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559], "leftarrow": [186, 187, 194, 200, 201, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 225, 227, 228, 230, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 252, 253, 254, 439, 440, 441], "inci": [186, 187, 188, 194, 195, 197, 198, 199, 200, 205, 206, 207, 208, 209, 210, 212, 214, 217, 219, 230, 232, 234, 236, 237, 239, 240, 242, 244, 466], "value_or_point": [186, 187, 188, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 225, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 252, 254, 255, 466], "axpi": [188, 190], "batch_siz": [188, 195, 196, 202, 206, 223, 226, 229, 247, 255, 269, 270, 277, 278, 281, 282, 285, 286, 300, 301, 312, 313, 318, 319, 334, 335], "stridex": [188, 195, 196, 206], "stridei": [188, 195, 206], "group_count": [188, 195, 196, 202, 206, 223, 226, 229, 247, 255, 269, 270, 277, 278, 281, 282, 285, 286, 300, 301, 312, 313, 318, 319, 334, 335], "_batch": [188, 195, 196, 202, 206, 223, 226, 229, 247, 255], "_count": [188, 195, 196, 202, 206, 223, 226, 229, 247, 255], "total_batch_count": [188, 195, 196, 202, 206, 223, 226, 229, 247, 255], "subprogram": 189, "level1": 189, "level2": 189, "level3": 189, "asum": 190, "sdsdot": 190, "dotc": 190, "dotu": 190, "unconjug": [190, 191, 209], "nrm2": 190, "rot": 190, "plane": [190, 230, 232], "rotg": 190, "rotm": 190, "rotmg": 190, "scal": 190, "iamax": 190, "iamin": 190, "gbmv": 191, "gemv": [191, 206, 466], "ger": 191, "gerc": 191, "geru": 191, "hbmv": 191, "hemv": 191, "her": 191, "her2": 191, "hpmv": 191, "hpr": 191, "hpr2": 191, "sbmv": 191, "spmv": [191, 442], "spr": [191, 239], "spr2": 191, "symv": 191, "syr": 191, "syr2": 191, "tbmv": 191, "tbsv": 191, "solut": [191, 249, 251, 254, 255, 256, 284, 285, 296, 317, 318, 329, 876], "tpmv": 191, "tpsv": 191, "trmv": 191, "trsv": 191, "hemm": 192, "herk": 192, "her2k": 192, "2k": [192, 215, 245], "symm": 192, "syrk": [192, 247], "syr2k": 192, "trmm": 192, "trsm": [192, 255], "axpy_batch": 193, "gemm_batch": 193, "trsm_batch": 193, "gemmt": 193, "gemm_bia": 193, "imatcopi": [193, 223], "omatcopi": [193, 229], "omatcopy2": 193, "omatadd": [193, 226], "imatcopy_batch": 193, "omatcopy_batch": [193, 226], "omatadd_batch": [193, 229], "dgmm": 196, "stridea": [196, 202, 206, 226, 228, 229, 247, 255], "stridec": [196, 202, 226, 247], "left_right": [196, 211, 241, 252, 254, 255], "mxn": 196, "a_arrai": [196, 226, 229], "c_arrai": [196, 226], "x_arrai": 196, "x_iy_i": [197, 199, 236], "kl": [200, 345], "ku": [200, 345], "super": [200, 210, 234, 248, 249, 266, 345], "ta": [201, 202, 203], "tb": [201, 202, 203], "tc": [201, 202, 230, 231, 305, 307, 309], "int8_t": [201, 202, 203, 351, 371], "value_or_poitn": 201, "strideb": [202, 226, 228, 229, 255], "bias": 203, "scriptstyl": [203, 345], "_offset": 203, "a_offset": 203, "ao": 203, "b_offset": 203, "bo": 203, "uint8_t": [203, 351, 371, 439, 440, 441], "offset_typ": 203, "upper_low": [204, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 234, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 288, 289, 290, 291, 292, 293, 294, 295, 303, 304, 309, 310, 311, 314, 315, 316, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 337, 338, 343, 344, 345], "treal": [213, 215, 216, 218], "conjg": [214, 215, 219], "nan": [220, 221, 296, 468, 469, 472, 474, 479, 492, 500, 503, 507, 508, 509, 519, 520, 524, 525, 534, 536, 544, 546, 548, 552], "smallest": [221, 259], "matrix_in_out": 222, "ld_in": [222, 223], "ld_out": [222, 223], "seri": [223, 226, 229, 573], "awai": [223, 226, 228, 229, 538, 768], "matrix_array_in_out": 223, "trans_arrai": [223, 229], "m_arrai": [223, 226, 229], "n_arrai": [223, 226, 229], "alpha_arrai": [223, 226, 229], "ld_in_arrai": 223, "ld_out_arrai": 223, "groupsiz": [223, 226, 229], "stride_a": [226, 229, 247, 269, 270, 277, 278, 281, 282, 285, 286, 300, 301, 312, 313, 318, 319, 334, 335], "stride_b": [226, 229, 285, 286, 318, 319], "stride_c": [226, 247], "b_arrai": [226, 229], "transa_arrai": 226, "transb_arrai": 226, "lda_arrai": [226, 229], "beta_arrai": 226, "ldb_arrai": [226, 229], "ldc_arrai": 226, "lapack": [228, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345], "adjac": 228, "phantom": 230, "conj": [230, 260, 468, 469, 474, 479, 492, 544, 546, 548, 552, 558], "cartesian": [231, 233, 562, 563, 564], "unitari": [231, 266, 272, 274, 288, 292, 296, 300, 305, 307, 325, 331, 333, 334, 337, 339, 341, 343], "bmatrix": [231, 232, 233, 345], "switch": [232, 233, 376, 780, 853], "21": [232, 233, 345, 364, 400, 518], "22": [232, 233, 345, 364, 400, 493, 545], "yparam": 232, "x1": [233, 349, 471, 495, 527, 546, 549], "y1": [233, 471, 495, 527, 546, 549], "d1": 233, "d2": 233, "sb": 236, "incxi": 236, "unit_nonunit": [248, 249, 250, 251, 253, 256], "unit_diag": [252, 254, 255, 329, 330], "specific": [252, 254], "untouch": 254, "commit": [257, 258, 259, 260, 261, 263, 264], "prepend": [257, 258, 259, 260, 261, 262, 264], "concis": [257, 258, 259, 260, 261, 262, 263, 264, 815], "protect": [257, 258, 630, 644, 804, 811, 812, 841, 849], "config_valu": [257, 258, 259, 260, 261, 262, 263], "real_real": [257, 258, 259, 260, 264], "config_param": [257, 258, 259, 260, 261, 262, 263], "complex_storag": [257, 258, 259, 260, 262, 264], "descriptor_typ": [257, 258], "inout": [257, 258], "inout_r": [257, 258], "inout_im": [257, 258], "input_typ": [257, 258, 758, 759, 763, 779], "output_typ": [257, 258, 758, 759, 763, 771, 774, 790], "in_r": [257, 258], "in_im": [257, 258], "out_r": [257, 258], "out_im": [257, 258], "capac": [257, 258, 562, 563, 564, 565, 595, 596, 603, 616, 631, 645, 658, 659, 674, 687, 702, 716, 730, 744, 755, 864], "commit_statu": [257, 258, 262, 264], "fwd_stride": [259, 260, 262, 264], "resp": [259, 260, 262, 263, 264], "bwd_stride": [259, 260, 262, 264], "number_of_transform": [259, 260, 262, 264], "fwd_distanc": [259, 260, 262, 264], "bwd_distanc": [259, 260, 262, 264], "superscript": 259, "fwd": 259, "bwd": 259, "k_1": [259, 260, 263, 264, 366, 407, 444, 445, 446, 447, 457, 458], "k_2": [259, 260, 263, 264], "k_d": [259, 260, 263, 264], "k_": [259, 263, 379, 382, 403, 404, 458], "thereof": [259, 263, 297, 331], "xwd": 259, "_2": 259, "_d": 259, "_j": 259, "foral": [259, 262, 263], "lbrace": [259, 262, 263, 264], "rbrace": [259, 262, 263, 264], "elementari": [259, 260, 266, 268, 269, 272, 292, 297, 299, 300, 301, 302, 305, 306, 307, 308, 325, 333, 334, 335, 336, 339, 340, 341, 342, 343, 344], "consequ": [259, 262], "complex_complex": [259, 260, 264], "unbatch": 259, "break": 259, "displac": [259, 352, 355, 356, 361, 381, 384, 387, 388, 393, 397, 411, 419], "_k": 259, "consider": [259, 263, 560], "inplac": [259, 260, 264], "placement": [259, 260, 262, 264], "abid": 259, "input_strid": [259, 262, 264], "output_strid": [259, 262, 264], "trigger": [259, 262, 763, 853], "attempt": [259, 582, 610, 627, 684, 699, 741, 766, 772, 774, 775, 799, 807, 813, 814, 815, 841, 842], "set_valu": [259, 260, 261, 263], "fwd_domain_strid": 259, "bwd_domain_strid": 259, "compute_forward": [259, 260, 262, 263], "compute_backward": [259, 262, 263], "warn": [259, 262, 296, 487, 494, 512, 539], "messag": [259, 588, 758, 759, 760, 762, 765, 766, 767, 768, 771, 772, 774, 775, 776, 777, 779, 784, 785, 786, 787, 789, 790, 791, 792, 793, 838, 840, 848], "IN": 259, "put_strid": 259, "wd_stride": 259, "eq": 260, "not_inplac": [260, 264], "snippet": 260, "n_1": [260, 262, 263, 264, 405, 414], "n_2": [260, 263], "n_3": 260, "n1": [260, 345], "n2": [260, 345], "n3": [260, 345], "dist": 260, "k1": [260, 594, 832], "k2": [260, 594, 832], "k3": 260, "ev": 260, "zr": 260, "zi": 260, "decltyp": [260, 856, 858], "fwd_dist": 260, "bwd_dist": 260, "complex_data": 260, "whilst": [261, 262], "workspace_automat": [261, 264], "workspace_plac": [261, 262, 264], "workspace_extern": [261, 262, 264], "malloc": [261, 466, 801, 803], "set_workspac": [261, 263, 264], "uncommit": [261, 264], "dom": [261, 262, 263, 264], "myqueu": 261, "workspacebyt": 261, "get_valu": [261, 263], "workspace_external_byt": [261, 262, 264], "workspaceusm": [261, 262], "prec": [262, 263, 264], "real_scalar_t": 262, "conditional_t": 262, "enable_if_t": 262, "is_integral_v": 262, "is_floating_point_v": 262, "value_ptr": 262, "workspacebuf": 262, "fp64": [262, 263, 264], "n_d": [262, 263, 264], "equip": [262, 263], "thereaft": 262, "n_j": [262, 263], "insuffici": [262, 266, 268, 269, 272, 274, 276, 277, 280, 281, 284, 285, 288, 290, 292, 294, 297, 299, 300, 303, 305, 307, 309, 311, 312, 315, 317, 318, 321, 323, 325, 327, 329, 331, 333, 334, 337, 339, 341, 343], "larger": [262, 505, 507, 524, 558, 582, 584, 780, 796], "forward_scal": [262, 264], "backward_scal": [262, 264], "redirect": 262, "variad": [262, 562], "writabl": [262, 263, 264], "promot": 262, "emit": 262, "forward_domain": [262, 264], "config": 262, "queryabl": 262, "aforement": 262, "tune": [262, 876], "twiddl": 262, "again": [262, 566, 579], "lack": 262, "finit": [263, 423, 471, 492, 495, 500, 509, 527, 530, 531, 536, 544, 546, 549, 863, 864, 866], "ell": 263, "wherein": 263, "sigma_": [263, 264], "displaystyl": 263, "j_d": 263, "j_2": 263, "j_1": 263, "imath": 263, "j_": 263, "unambigu": 263, "inde": 263, "pmod": 263, "symmetri": 263, "roughli": 263, "redund": 263, "k_j": [263, 379], "lbrace1": 263, "constrain": [263, 562], "deliv": [263, 264], "hotpath": 263, "pertain": 263, "meant": 264, "fft": 264, "scratch": 264, "sparsiti": 265, "unmodifi": 265, "pseudorandom": [265, 346, 350, 353, 362, 363, 364, 365, 366, 377, 379, 383, 398, 399, 400, 401, 402, 407, 410, 412, 420], "quasi": [265, 346, 377, 405, 414], "qbp": 266, "pmatrix": 266, "b_1": [266, 449, 450], "q_1b_1p_h": 266, "q_": 266, "q_1b_1p_1": 266, "reflector": [266, 268, 269, 272, 292, 297, 299, 300, 301, 302, 305, 306, 307, 308, 325, 333, 334, 335, 336, 339, 340, 341, 342, 343, 344], "orgbr": [266, 296, 298], "ungbr": [266, 296, 332], "realt": [266, 274, 288, 290, 292], "tauq": [266, 297, 331], "taup": [266, 297, 331], "scratchpad_s": [266, 268, 269, 272, 274, 276, 277, 280, 281, 284, 285, 288, 290, 292, 294, 297, 298, 299, 300, 303, 305, 306, 307, 309, 311, 312, 315, 317, 318, 321, 323, 325, 327, 329, 331, 332, 333, 334, 337, 339, 340, 341, 343], "gebrd_scratchpad_s": [266, 296], "superdiagon": [266, 274, 292, 325], "subdiagon": [266, 272, 292, 325], "off": [266, 288, 290, 292, 321, 323, 325, 558, 588, 780, 798], "had": [266, 268, 269, 272, 274, 276, 277, 280, 281, 284, 285, 288, 290, 292, 294, 297, 299, 300, 303, 305, 307, 309, 311, 312, 315, 317, 318, 321, 323, 325, 327, 329, 331, 333, 334, 337, 339, 341, 343, 758, 763, 767, 772, 774, 776, 779, 791], "gebrd": [267, 296, 297, 298, 331, 332], "wrong": [267, 270, 271, 273, 275, 278, 279, 282, 283, 286, 287, 289, 291, 293, 295, 298, 301, 302, 304, 306, 308, 310, 313, 314, 316, 319, 320, 322, 324, 326, 328, 330, 332, 335, 336, 338, 340, 342, 344], "qr": [268, 269, 288, 296, 299, 300, 305, 321, 333, 334, 339], "pivot": [268, 269, 272, 276, 277, 294, 327], "tau": [268, 269, 270, 272, 292, 297, 299, 300, 301, 303, 305, 307, 309, 325, 331, 333, 334, 335, 337, 339, 341, 343], "geqrf_scratchpad_s": [268, 296], "trapezoid": [268, 269, 272, 276, 277, 376], "stride_tau": [269, 270, 300, 301, 334, 335], "a_i": [269, 270, 277, 278, 281, 282, 285, 286, 300, 301, 312, 313, 318, 319, 334, 335, 485, 506, 510, 526, 555], "tau_i": [269, 270, 300, 301, 334, 335], "geqrf_batch_scratchpad_s": [269, 296], "r_i": [269, 379], "q_i": [269, 296, 300, 301, 334, 335], "q_ir_i": 269, "m_g": [269, 270, 277, 278, 300, 301, 334, 335], "n_g": [269, 270, 277, 278, 281, 282, 285, 286, 300, 301, 312, 313, 318, 319, 334, 335], "_g": [269, 278, 281, 282, 285, 286, 312, 313, 318, 319], "geqrf_batch": [270, 296, 300, 334], "lda_g": [270, 277], "geqrf": [271, 296, 299, 305, 333, 339], "rq": [272, 296, 305, 307, 339, 341], "gerqf_scratchpad_s": [272, 296], "subarrai": 272, "gerqf": [273, 296, 305, 307, 339, 341], "rectangular": [274, 296, 305, 307, 339, 341, 376], "svd": 274, "job": [274, 275, 288, 289, 290, 291, 321, 322, 323, 324], "jobu": [274, 275], "jobvt": [274, 275], "ldu": [274, 275], "vt": [274, 275], "ldvt": [274, 275], "allvec": [274, 275], "somevec": [274, 275], "overwritevec": [274, 275], "novec": [274, 275, 288, 289, 290, 291, 321, 322, 323, 324], "gesvd_scratchpad_s": [274, 296], "columnwis": 274, "rowwis": 274, "ne": 274, "referenc": [274, 291, 293, 311, 314, 322, 329, 330, 345, 761, 794, 853, 855], "bdsqr": 274, "did": [274, 288, 290, 321, 323], "converg": [274, 288, 290, 321, 323], "unconverg": 274, "ubv": 274, "gesvd": [275, 296], "lu": [276, 277, 280, 281, 284, 285, 296, 312, 318], "ipiv": [276, 277, 278, 280, 281, 282, 284, 285, 286, 294, 327], "getrf_scratchpad_s": [276, 296], "ii": [276, 294, 327], "p_il_iu_i": 277, "l_i": [277, 312, 318, 319], "stride_ipiv": [277, 278, 281, 282, 285, 286], "ipiv_i": [277, 282, 286], "getrf_batch_scratchpad_s": [277, 296], "getrf_batch": [278, 281, 285, 296], "getrf": [279, 280, 284, 296], "invers": [280, 281, 296, 315, 349, 376, 468, 469, 470, 473, 474, 475, 476, 477, 478, 479, 480, 484, 496, 497, 498, 499, 514, 515, 516, 558], "getri_scratchpad_s": [280, 296], "getri_batch_scratchpad_s": [281, 296], "getri_batch": [282, 296], "getri": [283, 296], "hx": [284, 287, 329, 330], "nrh": [284, 285, 286, 287, 317, 318, 319, 320, 329, 330], "getrs_scratchpad_s": [284, 296], "a_ix_i": [285, 286, 318], "tx_i": [285, 286], "hx_i": [285, 286], "xi": 285, "getrs_batch_scratchpad_s": [285, 296], "trans_g": 285, "onemath_lapack_getrf_batch_usm": 285, "getrs_batch": [286, 296], "a_ihx_i": 286, "nrhsg": 286, "getr": [287, 296], "z_": [288, 321, 420, 578], "az_i": 288, "z_i": [288, 321, 526], "pal": [288, 321], "walker": [288, 321], "ql": [288, 321], "jobz": [288, 289, 290, 291, 321, 322, 323, 324], "butter": 288, "heevd_scratchpad_s": [288, 296], "tridiagon": [288, 290, 292, 296, 303, 309, 321, 323, 325, 337, 343], "submatrix": [288, 290, 321, 323], "ly": [288, 290, 321, 323, 375], "mod": [288, 290, 321, 323, 346, 362, 363, 364, 379, 398, 399, 400, 410, 420], "heevd": [289, 296], "eigenproblem": [290, 296, 323], "bx": [290, 291, 323, 324], "abx": [290, 291, 323, 324], "bax": [290, 291, 323, 324], "ityp": [290, 291, 323, 324], "hegvd_scratchpad_s": [290, 296], "bz": [290, 323], "choleski": [290, 296, 311, 312, 315, 317, 318, 323], "ll": [290, 311, 317, 320, 323], "hegvd": [291, 296], "chetrd": 292, "zhetrd": 292, "qtq": [292, 303, 309, 325, 337, 343], "hetrd_scratchpad_s": [292, 296], "hetrd": [293, 296, 337, 338, 343, 344], "kaufman": [294, 296, 327], "udu": [294, 295, 327, 328], "ldl": [294, 295, 327, 328], "int_64": [294, 327], "hetrf_scratchpad_s": [294, 296], "hetrf": [295, 296], "packag": [296, 761, 876], "invert": [296, 558], "orgqr": [296, 302], "orgqr_scratchpad_s": [296, 299], "ormqr": [296, 306], "ormqr_scratchpad_s": [296, 305], "ormrq": [296, 308], "ormrq_scratchpad_s": [296, 307], "potrf": [296, 314, 315, 317], "potrf_scratchpad_s": [296, 311], "potri": [296, 316], "potri_scratchpad_s": [296, 315], "potr": [296, 320], "potrs_scratchpad_s": [296, 317], "sytrf": [296, 328], "sytrf_scratchpad_s": [296, 327], "trtr": [296, 330], "trtrs_scratchpad_s": [296, 329], "ungqr": [296, 336], "ungqr_scratchpad_s": [296, 333], "unmqr": [296, 340], "unmqr_scratchpad_s": [296, 339], "unmrq": [296, 342], "unmrq_scratchpad_s": [296, 341], "orgbr_scratchpad_s": [296, 297], "orgtr": [296, 304], "orgtr_scratchpad_s": [296, 303], "sytrd": [296, 303, 304, 309, 310, 326], "ormtr": [296, 310], "ormtr_scratchpad_s": [296, 309], "syevd": [296, 322], "syevd_scratchpad_s": [296, 321], "sygvd": [296, 324], "sygvd_scratchpad_s": [296, 323], "sytrd_scratchpad_s": [296, 325], "ungbr_scratchpad_s": [296, 331], "ungtr": [296, 338], "ungtr_scratchpad_s": [296, 337], "unmtr": [296, 344], "unmtr_scratchpad_s": [296, 343], "orgqr_batch": [296, 301], "orgqr_batch_scratchpad_s": [296, 300], "potrf_batch": [296, 313, 318], "potrf_batch_scratchpad_s": [296, 312], "potrs_batch": [296, 319], "potrs_batch_scratchpad_s": [296, 318], "ungqr_batch": [296, 335], "ungqr_batch_scratchpad_s": [296, 334], "754": [296, 481, 518, 546], "inf": [296, 487, 494, 512, 539], "unexpect": 296, "gen": [297, 298, 331, 332], "constraint": [297, 298, 331, 332, 562, 774, 795, 799, 856, 876], "orthonorm": [299, 300, 333, 334], "k_g": [300, 301, 334, 335], "kg": 301, "ai": [301, 509, 536], "qc": [305, 307, 309, 339, 341, 343], "cq": [305, 307, 309, 339, 341, 343], "onemath_lapack_sytrd": 309, "tu_i": [312, 318, 319], "hu_i": [312, 318, 319], "l_il_i": [312, 318, 319], "ng": 313, "ldag": 313, "tu": 317, "hu": 317, "rhs_g": 319, "hh": [339, 341], "hc": [339, 341], "visual": [345, 876], "a_": [345, 364, 400, 401, 402, 420], "13": [345, 350, 363, 364, 377, 399, 400, 553, 565], "1n": 345, "2n": 345, "31": [345, 350, 362, 377, 398, 401, 402, 410], "33": 345, "3n": 345, "vdot": 345, "ddot": 345, "m1": [345, 690, 705], "m2": [345, 690, 705], "m3": 345, "mn": 345, "underbrac": 345, "smallmatrix": 345, "34": [345, 402], "35": 345, "43": 345, "53": [345, 518], "scriptscriptstyl": 345, "ldm": 345, "sequenti": [345, 377, 569, 577, 578, 757, 829, 863, 865], "bratley88": [346, 377, 414], "bratlei": [346, 405, 414], "fox": [346, 405, 414], "sobol": [346, 377], "quasirandom": 346, "vol": 346, "14": [346, 413, 565], "88": 346, "march": 346, "1988": 346, "bratley92": [346, 377, 405], "niederreit": [346, 377], "discrep": 346, "simul": [346, 377, 401, 402], "195": 346, "213": [346, 490, 541, 542, 550], "juli": 346, "1992": 346, "coddington94": [346, 377], "coddington": 346, "mont": [346, 377, 402], "carlo": [346, 377, 402], "phy": 346, "547": 346, "1994": 346, "ecuyer99": [346, 350, 362, 377, 398], "ecuy": 346, "pierr": 346, "congruenti": [346, 350, 362, 363, 365, 377, 398, 399, 420], "good": [346, 362, 364, 398, 400], "lattic": 346, "68": 346, "225": 346, "249": [346, 410], "260": 346, "1999": 346, "ecuyer99a": [346, 350, 362, 364, 377, 400], "recurs": [346, 350, 364, 377, 400, 562, 563, 564, 565, 569, 571, 577, 583, 805, 808, 809, 811, 812, 813, 829, 841, 842], "research": 346, "47": 346, "159": 346, "164": 346, "kirkpatrick81": [346, 377, 410], "kirkpatrick": 346, "stoll": 346, "journal": 346, "40": [346, 414], "517": 346, "526": 346, "1981": 346, "matsumoto98": [346, 377, 401, 402], "matsumoto": 346, "nishimura": 346, "mersenn": [346, 377, 401, 402, 412], "twister": [346, 377, 401, 402, 412], "623": [346, 401], "equidistribut": [346, 401], "30": [346, 376, 401, 402], "januari": 346, "1998": 346, "matsumoto00": [346, 377, 402], "56": 346, "69": [346, 402], "ed": 346, "spanier": 346, "2000": 346, "http": 346, "www": 346, "hiroshima": 346, "ac": 346, "jp": 346, "7em": 346, "mat": 346, "mt": 346, "dc": 346, "html": 346, "nag": [346, 350, 363, 377, 399, 420], "uk": 346, "numerical_librari": 346, "asp": 346, "saito08": [346, 377, 412], "saito": 346, "128": [346, 350, 364, 365, 366, 377, 379, 407, 412], "2006": 346, "607": 346, "622": 346, "2008": [346, 481, 518], "articl": 346, "earticl": 346, "salmon11": [346, 350, 366, 377, 379, 407], "salmon": 346, "john": 346, "moral": 346, "dror": 346, "ron": 346, "shaw": 346, "david": 346, "easi": [346, 577], "sc": 346, "2011": 346, "sobol76": [346, 377], "levitan": 346, "yu": 346, "uniformli": [346, 348, 349, 369, 370, 371, 375, 376, 415, 416, 417, 584], "cube": [346, 376, 482, 515, 532, 533, 558, 768, 778], "preprint": 346, "institut": 346, "ussr": 346, "academi": 346, "1976": 346, "russian": 346, "mt2203": [346, 377, 401], "mt2002": 346, "emt19937ar": 346, "fip": [346, 379], "197": [346, 379], "feder": 346, "encrypt": [346, 379], "ae": [346, 377, 379], "pcg2014": [346, 350, 365], "melissa": 346, "neill": 346, "pcg": [346, 365], "effici": [346, 571, 583, 796, 829, 876], "hmc": 346, "edu": 346, "tr": 346, "0905": 346, "taken": [347, 354, 785, 813, 814, 849], "brng": [348, 349, 353, 366, 375, 379, 407], "gaussian": [348, 349, 373, 375, 376, 418, 421], "lognorm": [348, 349, 375, 376], "uniform_bit": [348, 375], "poisson": [348, 349, 375, 376, 409], "bernoulli": [348, 349, 375, 376, 382], "geometr": [348, 375, 376], "uniform_method": [349, 370, 371, 376, 415, 416], "gaussian_method": [349, 357, 376, 389], "box_muller2": [349, 357, 361, 376, 389, 390, 397], "x2": [349, 471, 495, 527, 546, 549], "u1": 349, "u2": 349, "u_1": [349, 376], "sin": [349, 376, 492, 543, 544, 545, 546, 558], "u_2": [349, 376], "exponential_method": [349, 355, 375, 376, 387], "icdf": [349, 351, 355, 360, 376, 380, 384, 387, 389, 390, 392, 393, 395, 397, 411, 419], "icdf_accur": [349, 355, 375, 376, 387, 397, 411, 419], "cumul": [349, 351, 352, 355, 356, 357, 360, 361, 367, 370, 371, 376, 380, 381, 382, 384, 385, 387, 388, 389, 392, 393, 394, 395, 397, 404, 408, 409, 411, 415, 416, 419, 483, 484, 496, 497, 499, 558], "lognormal_method": [349, 361, 375, 376, 397], "bernoulli_method": [349, 351, 376, 380], "poisson_method": [349, 367, 376, 408], "devroy": [349, 367], "27": [349, 376], "parallelogram": [349, 376], "tail": [349, 376, 765], "mrg32k3a": [350, 353, 377, 413], "philox4x32x10": [350, 353, 369, 372, 377, 418], "period": [350, 362, 363, 364, 365, 377, 398, 399, 400, 401, 412, 798, 850], "mcg31m1": [350, 353, 377, 396, 413], "mcg": [350, 362, 363, 377, 398], "1132489760": [350, 362, 377, 398], "mcg59": [350, 353, 354, 369, 377], "59": [350, 363, 377, 399], "pcg64_dxsm": 350, "pcg64": [350, 365], "dxsm": [350, 365], "trial": [351, 360, 380, 382, 392, 394, 403], "f_p": [351, 360], "inttyp": [351, 360, 367, 380, 382, 392, 394, 403, 404, 408, 409], "method_typ": [351, 352, 355, 356, 357, 360, 361, 367, 370, 371, 380, 381, 382, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 397, 403, 404, 408, 409, 411, 415, 416, 419], "int16_t": [351, 371], "uint16_t": [351, 371], "uint32_t": [351, 353, 360, 362, 363, 364, 366, 367, 369, 371, 380, 383, 390, 392, 394, 398, 400, 401, 402, 403, 404, 405, 410, 412, 414, 417, 420], "rcl": [352, 356, 380, 381, 382, 385, 387, 388, 392, 394, 395, 397, 404, 408, 409, 411, 415, 416, 419], "dy": [352, 356, 357, 381, 385, 388, 389], "realtyp": [352, 355, 356, 357, 361, 370, 381, 384, 385, 387, 388, 389, 390, 393, 395, 397, 411, 415, 419], "count_rejected_numb": [352, 356], "uinttyp": [353, 369, 383, 417], "vec_siz": [354, 358, 362, 363, 364, 365, 366, 372], "ctor": 354, "rng_devic": 354, "my_ev": 354, "vecsiz": [354, 362, 363, 364, 365, 366], "distr": [354, 358, 372, 391, 418], "scalefactor": [355, 361, 381, 384, 387, 393, 395, 397, 411, 419], "densiti": [355, 357, 361, 370, 390], "x_a": [356, 388], "stddev": [357, 389], "int_": [357, 483], "phi": [357, 361, 397, 496, 497, 499], "geometric_method": [360, 376, 392], "subject": [361, 397, 877], "displ": [361, 397], "possess": [362, 398, 410], "ax_": [362, 363, 398, 399], "u_n": [362, 363, 364, 365, 366, 379, 398, 399, 400, 405, 407, 410, 412, 414, 420], "default_se": [362, 363, 364, 365, 366, 379, 398, 399, 400, 401, 402, 407, 410, 412, 420], "0x7fffffff": [362, 398, 401], "57": [363, 399], "approx": [364, 400], "191": [364, 400], "m_": [364, 400, 420], "y_": [364, 400, 401, 402, 420, 578], "m_2": [364, 400, 420], "z_n": [364, 400, 420], "m_1": [364, 400, 420, 453], "1403580": [364, 400], "810728": [364, 400], "209": [364, 400], "527612": [364, 400], "1370589": [364, 400], "22853": [364, 400], "initializer_list": [364, 365, 366, 368, 379, 400, 401, 402, 407, 412, 413, 420, 562, 595, 596, 603, 605, 606, 610, 616, 617, 618, 627, 631, 632, 633, 641, 645, 646, 647, 655, 658, 659, 660, 666, 667, 674, 675, 676, 684, 687, 689, 690, 699, 702, 704, 705, 713, 716, 718, 719, 727, 730, 732, 733, 741, 744, 745, 746, 747], "geqslant": [364, 400, 410, 420], "prove": [364, 400], "num_to_skip": [364, 365, 366, 368, 413], "lcg": 365, "xorshift": 365, "hi_n": 365, "gg": 365, "lo_n": 365, "land": 365, "lor": 365, "oplu": [365, 366, 379, 401, 402, 405, 407, 410, 412, 414], "0xda942042e4dd58b5": 365, "0x5851f42d4c957f2d14057b7ef767814f": 365, "k_0": [366, 379, 407], "c_n": [366, 379, 407], "omega_n": [366, 407], "l_1": [366, 407], "r_1": [366, 407], "l_0": [366, 407], "r_0": [366, 407], "96": [366, 407], "mullo": [366, 407], "mulhi": [366, 407], "r_": [366, 407, 412], "4n": [366, 407, 412], "quadrupl": [366, 407, 412], "r_n": [366, 379, 407, 412], "num": [368, 413], "_skip": [368, 413], "notin": [370, 415], "numeric_limit": [371, 416], "callabl": [373, 423, 853], "your": [373, 405, 414, 590, 794, 798, 857, 876, 877], "binomi": [373, 375, 376, 404, 421], "skip_ahead": [374, 418, 422], "laplac": 375, "weibul": [375, 376, 411], "cauchi": [375, 376], "rayleigh": [375, 376], "gumbel": [375, 376], "extrem": 375, "chi_squar": [375, 376], "chi": [375, 376, 385], "gaussian_mv": [375, 376], "multivari": [375, 390], "hypergeometr": [375, 376], "poisson_v": [375, 376], "negative_binomi": [375, 376], "pascal": 375, "multinomi": [375, 376], "demand": [375, 862, 876], "irrespect": 375, "unform_method": 375, "weibull_method": [375, 376, 419], "rayleigh_method": [375, 376, 411], "box_muller2_accur": [375, 376, 397], "gamma_method": [375, 376, 388], "marsaglia_accur": [375, 376, 388], "beta_method": [375, 376, 381], "cja_accur": [375, 376, 381], "standard_accur": 376, "box_mul": [376, 389, 390], "thru": 376, "2lnu_1": 376, "cauchy_method": [376, 384], "gumbel_method": [376, 393], "marsaglia": [376, 388], "properli": 376, "cja": [376, 381], "cheng": 376, "jonhnk": 376, "atkinson": 376, "johnk": 376, "p2": 376, "852": 376, "956": 376, "chi_square_method": [376, 385], "gamma_bas": [376, 385], "odd": [376, 531, 553], "15": [376, 401, 402], "binomial_method": [376, 382], "btpe": [376, 382], "ntrial": [376, 382, 403], "ptpe": [376, 408], "gaussian_icdf_bas": [376, 408, 409], "cdf": 376, "poisson_v_method": [376, 409], "hypergeometric_method": [376, 394], "h2pe": [376, 394], "negative_binomial_method": [376, 404], "nbar": [376, 404], "multinomial_method": [376, 403], "poisson_icdf_bas": [376, 403], "gaussian_mv_method": [376, 390], "boxmul": 376, "boxmuller2": 376, "default_engin": 377, "231": [377, 398], "r250": 377, "gfsr": [377, 410], "250": [377, 410], "wichmann_hil": 377, "wichmann": [377, 420], "hill": [377, 420], "273": [377, 420], "19937": [377, 401, 412], "2203": 377, "mutual": [377, 403, 806, 807, 841, 844, 847], "sfmt19937": 377, "ars5": 377, "ni": 377, "nondeterminist": [377, 577], "leapfrog": [377, 418, 422], "1313": 377, "259": 377, "c_0": 379, "subbyt": 379, "shiftrow": 379, "mixcolumn": 379, "addroundkei": 379, "lo": 379, "hi": 379, "truli": 383, "arctan": 384, "degre": [385, 491, 543, 829], "freedom": 385, "dxd": 390, "det": 390, "sequencecontainerorview": [390, 403, 409], "mdspan": [390, 403, 409], "dimen": [390, 405, 414], "distrtyp": 391, "enginetyp": [391, 396, 413], "lot": 394, "bigcup": 394, "unmark": [394, 775], "k_mc": 394, "s_l": 394, "laplace_method": 395, "particularli": 396, "engine_1": [396, 413], "engine_2": [396, 413], "engine_3": [396, 413], "twist": 401, "624": 401, "397": 401, "0x80000000": 401, "0x9d2c5680": 401, "0xefc60000": 401, "18": [401, 402], "a_j": [401, 402], "32x32": [401, 402], "ccccc": [401, 402], "0x9908b0df": 401, "n_engin": 402, "0xffffffe0": 402, "0x1f": 402, "b_j": 402, "engine_idx": [402, 420], "outcom": 403, "x_k": 403, "theoret": [405, 410], "asymptot": 405, "318": 405, "irreduc": 405, "polynomi": 405, "v_c": [405, 414], "hypercub": [405, 414, 562], "default_dimensions_numb": [405, 414], "irred_polynomi": 405, "ke": [408, 409], "ampl": [410, 582], "foundat": [410, 877], "cryptograph": 410, "69069x_": 410, "7k": 410, "247": 410, "156": 412, "w_n": [412, 420], "w_0": [412, 420], "w_m": 412, "wb": 412, "wc": 412, "wd": 412, "0xbffffff6": 412, "0xdffaffff": 412, "0xddfecb7f": 412, "0xdfffffef": 412, "2nd": [413, 444, 445, 446, 447, 457, 458, 471, 477, 478, 489, 495, 505, 507, 508, 509, 513, 518, 524, 525, 527, 528, 530, 531, 534, 536, 549], "3rd": [413, 444, 445, 446, 447, 457, 458], "1st": [413, 471, 477, 478, 489, 495, 505, 507, 508, 509, 513, 516, 518, 523, 524, 525, 527, 528, 530, 531, 534, 535, 536, 548, 549], "direction_numb": 414, "sycl_buff": 418, "usm_ptr": 418, "372": 420, "112": 420, "prime": 420, "16718909": 420, "16776917": 420, "y_0": 420, "z_0": 420, "m_3": 420, "m_4": 420, "s_0": 423, "rightarrow": 423, "transit": 423, "symbol": [423, 591], "u_0": 423, "s_": 423, "prng": 423, "imit": 423, "dense_vector_handl": 424, "dense_vector_handle_t": [424, 429, 431, 436, 440, 441], "init_dense_vector": [424, 431, 436], "set_dense_vector_data": [424, 429], "release_dense_vector": [424, 429, 436], "dense_matrix_handl": 424, "dense_matrix_handle_t": [424, 428, 430, 435, 439], "init_dense_matrix": [424, 430, 435], "set_dense_matrix_data": [424, 428], "release_dense_matrix": [424, 428, 435], "matrix_handl": 424, "matrix_handle_t": [424, 426, 427, 432, 433, 434, 437, 439, 440, 441], "init_coo_matrix": [424, 432, 433], "init_csr_matrix": [424, 432, 434], "set_coo_matrix_data": [424, 426], "set_csr_matrix_data": [424, 427], "set_matrix_properti": 424, "release_sparse_matrix": [424, 426, 427, 433, 434], "coo": [425, 426, 433, 437], "onemath_sparse_supported_typ": 425, "row_ind": [425, 426, 433], "col_ind": [425, 426, 427, 433, 434], "val": [425, 426, 427, 428, 429, 433, 434, 435, 436, 566, 603, 616, 631, 645, 674, 687, 702, 716, 730, 792], "subordin": [425, 854], "num_row": [425, 426, 427, 428, 433, 434, 435], "num_col": [425, 426, 427, 428, 433, 434, 435], "nnz": [425, 426, 427, 433, 434], "row_ptr": [425, 427, 434], "clarifi": [426, 427], "indextyp": [426, 427, 433, 434, 443], "p_smhandl": [426, 427], "null": [426, 427, 433, 434, 841], "p_dmhandl": 428, "ld": [428, 435], "dense_layout": [428, 435], "p_dvhandl": 429, "dmhandl": [430, 435], "dvhandl": [431, 436], "smhandl": [432, 433, 434, 437], "matrix_properti": 437, "strong": 437, "matrix_view": [437, 439, 440, 441], "type_view": [438, 439, 440, 441], "uplo_view": [438, 439], "diag_view": [438, 439, 440, 441], "mathsf": [439, 440, 441], "spmm_descr_t": 439, "p_spmm_descr": 439, "default_alg": [439, 440, 441], "no_optimize_alg": [439, 440, 441], "coo_alg1": [439, 440], "coo_alg2": [439, 440], "coo_alg3": 439, "coo_alg4": 439, "csr_alg1": [439, 440], "csr_alg2": [439, 440], "csr_alg3": [439, 440], "reproduc": [439, 440, 441, 877], "atom": [439, 440, 441, 487, 512, 539], "sorted": [439, 440, 441], "spmm_buffer_s": 439, "opa": [439, 440, 441], "opb": 439, "a_view": [439, 440, 441], "a_handl": [439, 440, 441], "b_handl": 439, "c_handl": 439, "alg": [439, 440, 441, 579, 616, 631, 645, 658, 674, 784], "temp_buffer_s": [439, 440, 441], "spmm_optim": 439, "matrix_descr": [439, 440, 441], "spmv_descr_t": 440, "p_spmv_descr": 440, "spmv_buffer_s": 440, "x_handl": [440, 441], "y_handl": [440, 441], "spmv_optim": 440, "spsv_descr_t": 441, "p_spsv_descr": 441, "spsv_buffer_s": 441, "spsv_optim": 441, "spmm": 442, "spsv": 442, "4th": [444, 445, 446, 447, 457, 458], "k_p": [444, 445, 446, 447, 457, 458], "omega_j": [444, 445, 446, 447, 453, 457, 458], "m_i": [444, 445, 453, 464, 465], "observationslayout": [444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465], "central_moment_2": [444, 445], "central_moment_3": [444, 445], "central_moment_4": [444, 445], "one_pass": [444, 446, 449, 453, 457, 458, 461, 464], "k_i": [446, 447, 457], "central_sum_2": [446, 447], "central_sum_3": [446, 447], "central_sum_4": [446, 447], "consolid": [448, 456], "n_dims_": 448, "n_observations_": 448, "observations_": 448, "indices_": 448, "n_dim": [448, 451, 463], "n_observ": [448, 451, 463], "b_p": [449, 450], "nt64_t": 451, "_observ": 451, "_p": [452, 454, 455], "m_p": 453, "fourth": [456, 459], "skew": [456, 459], "kurtosi": [456, 459], "raw_moment_2": 457, "raw_moment_3": 457, "raw_moment_4": 457, "raw_sum_2": 458, "raw_sum_3": 458, "raw_sum_4": 458, "raw_sum": 459, "central_sum": 459, "raw_moment": 459, "central_mo": 459, "min_max": 459, "make_dataset": [460, 463], "gamma_1": [461, 462], "gamma_p": [461, 462], "gamma_i": [461, 462], "1000": [463, 566, 578, 591], "dataset_ptr": 463, "mean_ptr": 463, "vc": [464, 465], "vc_1": [464, 465], "vc_p": [464, 465], "vc_i": [464, 465], "alpha_ptr": 466, "beta_ptr": 466, "malloc_host": 466, "anyth": [466, 765], "slightli": 466, "not_defin": [467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555], "qnan": [467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 510, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 526, 527, 529, 531, 532, 533, 534, 537, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555], "snan": [467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 510, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 526, 527, 529, 531, 532, 533, 534, 537, 538, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555], "hypot": [467, 558], "set_mod": [467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 559], "cosin": [468, 469, 470, 486, 490, 491, 492, 493, 542, 556, 558], "error_handl": [468, 469, 470, 471, 473, 475, 479, 483, 484, 486, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 509, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 527, 528, 530, 531, 533, 534, 535, 536, 541, 542, 543, 544, 545, 548, 549, 550, 551, 553, 554], "errhandl": [468, 469, 470, 471, 473, 475, 479, 483, 484, 486, 490, 491, 492, 493, 495, 497, 498, 499, 500, 501, 502, 503, 504, 509, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 527, 528, 530, 531, 532, 533, 534, 535, 536, 541, 542, 543, 544, 545, 548, 549, 550, 551, 553, 554], "\u03c0": [468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 491, 493, 519, 543, 545, 551, 553, 558], "errdom": [468, 469, 470, 473, 475, 479, 484, 486, 487, 490, 491, 493, 494, 498, 499, 503, 512, 516, 519, 520, 521, 522, 523, 531, 533, 534, 536, 539, 541, 542, 543, 545, 548, 550, 551, 553, 554], "create_error_handl": [468, 469, 470, 471, 473, 475, 479, 483, 484, 486, 490, 491, 492, 493, 495, 497, 498, 499, 500, 501, 502, 503, 504, 509, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 527, 528, 530, 531, 532, 533, 534, 535, 536, 541, 542, 543, 544, 545, 548, 549, 550, 551, 553, 554, 559], "nonneg": [469, 534], "aco": [470, 558], "y2": [471, 495, 527, 546, 549], "la": [471, 490, 491, 493, 511, 518, 527, 531, 540, 541, 542, 543, 545, 549, 550, 551, 553], "accuracy_warn": [471, 487, 494, 512, 518, 527, 531, 539, 549], "atan2": [472, 558], "sine": [473, 474, 475, 486, 541, 542, 543, 544, 545, 556, 558], "asinh": [473, 558], "atanh": [476, 558], "quadrant": [477, 478, 558], "ad2d": 477, "arctang": [477, 478], "sing": [479, 484, 487, 494, 495, 498, 499, 503, 509, 512, 514, 515, 516, 517, 519, 520, 521, 522, 539, 554], "atan": [480, 558], "ieee754": 481, "ansi": [481, 518], "erfc": [483, 496, 499, 558], "cdfnorm": [484, 496, 497, 558], "erfcinv": [484, 499, 558], "erfinv": [484, 498, 558], "2x": [484, 496, 497, 498, 499], "old_statu": [487, 539], "216": [490, 541, 542, 550], "enhanc": [490, 491, 493, 511, 540, 541, 542, 543, 545, 550, 551, 553], "cosh": [490, 558], "180": [491, 543, 551, 558], "52": [491, 543], "flt_max": [492, 500, 501, 502, 504, 513, 533, 534, 544, 558], "log2": [492, 558], "dbl_max": [492, 500, 501, 502, 504, 513, 534, 544, 558], "ci": [492, 544, 546, 558], "51": [493, 545], "status_arrai": 494, "fixup": 494, "copysign": [494, 553, 558], "errarrai": 494, "status_cod": 494, "int_0": [496, 497, 498, 499], "int_x": [497, 503], "complimentari": 498, "cdfnorminv": [498, 499, 558], "e_1": 503, "int_1": 503, "xt": 503, "minu": [506, 537, 558], "modulu": [509, 558], "trunc": [509, 558], "provis": 511, "scalea": 518, "shifta": 518, "scaleb": 518, "shiftb": 518, "addend": 518, "correct": [518, 571], "2emin": 518, "emax": 518, "2emax": 518, "\u03b41": 518, "\u03b42": 518, "emin": 518, "126": 518, "1022": 518, "1023": 518, "ifscalea": 518, "ifscaleb": 518, "fmax": [524, 558], "fmin": [525, 558], "subnorm": 530, "treatment": [534, 535], "halfwai": 538, "new_statu": 539, "former": [539, 540], "new_mod": 540, "old_mod": 540, "sinh": [541, 558], "z1": 546, "z2": 546, "i2": [546, 573], "quiet": 546, "intersect": 546, "cpp": 549, "tan": [551, 552, 553, 558], "38": 551, "67": [551, 553], "erro": 552, "nonlinear": 556, "graphic": 556, "sinco": [557, 558], "sqr": 558, "mulbyconj": 558, "linearfrac": 558, "fmod": 558, "remaind": [558, 562, 563, 564, 565], "inv": 558, "invsqrt": 558, "cbrt": 558, "invcbrt": 558, "pow2o3": 558, "pow3o2": 558, "powx": 558, "powr": 558, "exp2": 558, "exp10": 558, "expm1": 558, "log10": 558, "log1p": 558, "logb": 558, "asin": 558, "cospi": 558, "sinpi": 558, "tanpi": 558, "acospi": 558, "asinpi": 558, "atanpi": 558, "atan2pi": 558, "cosd": 558, "sind": 558, "tand": 558, "acosh": 558, "lgamma": 558, "tgamma": 558, "expint1": 558, "nearbyint": 558, "rint": 558, "inexact": 558, "modf": 558, "nextaft": 558, "fdim": 558, "maxmag": 558, "minmag": 558, "get_mod": 559, "set_statu": 559, "get_statu": 559, "clear_statu": 559, "subdivid": [560, 582, 583, 829], "worth": 560, "acknowledg": 560, "collaborative_call_onc": [561, 567], "collaborative_once_flag": 561, "parallel_reduc": [561, 565, 566, 569, 578, 585, 586, 816, 823, 824, 825, 829], "parallel_deterministic_reduc": [561, 823, 824, 825], "parallel_scan": [561, 565, 580, 585, 586, 826, 827, 828, 829], "pre_scan_tag": [561, 578, 826], "final_scan_tag": [561, 578, 826], "parallel_for_each": [561, 568, 817, 820], "feeder": [561, 820], "parallel_invok": 561, "parallel_pipelin": [561, 574, 575, 576], "filter_mod": [561, 573], "flow_control": [561, 574, 782, 818, 837], "parallel_sort": [561, 817], "blocked_rang": [561, 562, 563, 564, 566, 577, 578, 582, 583, 585, 586, 816, 829, 849], "blocked_range2d": [561, 562, 564, 585, 586, 816, 829], "blocked_range3d": [561, 562, 585, 586, 816, 829], "blocked_nd_rang": [561, 585, 586, 816, 829], "loop": [561, 565, 571, 581, 582, 583, 584, 757, 765, 829], "auto_partition": [561, 571, 577, 578], "affinity_partition": [561, 571, 577], "static_partition": [561, 569, 571, 577], "simple_partition": [561, 569, 571, 577, 578, 582], "distinct": [562, 771, 774, 799, 864, 869], "tbb": [562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 591, 594, 595, 597, 601, 603, 604, 606, 616, 618, 622, 630, 631, 633, 636, 644, 645, 647, 650, 658, 660, 666, 668, 674, 676, 679, 687, 690, 702, 705, 716, 719, 730, 733, 744, 747, 756, 758, 759, 760, 761, 762, 763, 764, 765, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 795, 798, 799, 800, 801, 802, 803, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 818, 820, 837, 843, 849, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 863, 864, 871, 874], "dim_range_typ": 562, "size_typ": [562, 563, 564, 565, 595, 601, 602, 603, 605, 607, 609, 614, 616, 621, 628, 629, 631, 635, 642, 643, 645, 649, 656, 657, 658, 659, 664, 666, 673, 674, 678, 685, 686, 687, 688, 689, 690, 692, 694, 700, 701, 702, 703, 704, 705, 706, 708, 714, 715, 716, 717, 718, 719, 720, 722, 728, 729, 730, 731, 732, 733, 734, 736, 742, 743, 744, 745, 746, 748, 753, 754, 755, 799, 801, 803, 831, 864, 869, 871], "dim0": 562, "dim_siz": 562, "grainsiz": [562, 565, 603, 613, 744, 753, 829, 831, 864, 867], "proportional_split": [562, 563, 564, 565, 585, 829, 830], "dim_count": 562, "is_divis": [562, 563, 564, 565, 571, 577, 582, 583, 829], "brace": [562, 849], "blockedrangevalu": [562, 565, 815], "measur": [562, 565, 874], "grain": [562, 563, 564, 565, 569, 578, 582, 583, 584, 831], "statement": [562, 563, 564, 565, 629, 643, 657, 686, 715, 743, 841, 842], "subrang": [562, 563, 564, 565, 569, 571, 577, 578, 582, 583, 584, 629, 643, 657, 686, 701, 715, 729, 743, 823, 829, 830], "biggest": [562, 829], "cubic": 562, "i0": 563, "j0": 563, "i1": [563, 573], "j1": 563, "rowvalu": [563, 564], "colvalu": [563, 564], "row_range_typ": [563, 564], "col_range_typ": [563, 564], "row_begin": [563, 564], "row_end": [563, 564], "row_grains": [563, 564], "col_begin": [563, 564], "col_end": [563, 564], "col_grains": [563, 564], "9": [563, 564, 589], "pagevalu": 564, "page_range_typ": 564, "page_begin": 564, "page_end": 564, "page_grains": 564, "splittabl": [565, 815, 829], "const_iter": [565, 595, 598, 603, 608, 613, 616, 620, 621, 626, 627, 629, 631, 634, 635, 640, 641, 643, 645, 648, 649, 654, 655, 657, 666, 669, 674, 677, 678, 683, 684, 686, 687, 693, 694, 698, 699, 701, 702, 707, 708, 712, 713, 715, 716, 721, 722, 726, 727, 729, 730, 735, 736, 740, 741, 743, 744, 749, 753, 864, 867, 871], "despit": 565, "mere": 565, "lazi": 566, "cachedproperti": 566, "foo": [566, 849, 866], "lazydata": 566, "getproperti": 566, "collabor": 566, "inlet": 568, "copyconstruct": [568, 577, 578, 758, 760, 761, 763, 767, 768, 771, 772, 774, 779, 784, 785, 790, 792], "moveconstruct": [568, 579], "termin": [568, 570, 852, 855, 856, 857], "partition": [569, 571, 577, 578, 581, 582, 583, 584, 585, 586, 848, 862], "task_group_context": [569, 570, 571, 572, 573, 577, 769, 850, 859], "imper": 569, "react": 569, "steal": [569, 582], "coarsen": 569, "nearli": [569, 571, 577, 829], "piec": [569, 570, 571, 577, 830], "inputiter": [570, 595, 596, 597, 603, 605, 606, 610, 616, 617, 618, 627, 631, 632, 633, 641, 645, 646, 647, 655, 658, 659, 660, 666, 667, 668, 674, 675, 676, 684, 687, 689, 690, 699, 702, 704, 705, 713, 716, 718, 719, 727, 730, 732, 733, 741, 744, 745, 746, 747], "parallelforeachbodi": [570, 815], "containerbasedsequ": [570, 579, 815], "mybodi": 570, "item_t": 570, "parallel_do_feed": 570, "new_item": 570, "parallelforbodi": [571, 815], "parallelforindex": [571, 815, 821], "parallelforfunc": [571, 815], "around": [571, 765, 778], "lesser": 571, "someth": [571, 577], "look": [571, 578, 780, 815, 849], "trace": 571, "tend": 571, "algortihm": 572, "bar": [572, 849], "myfunctor": 572, "runfunctionsinparallel": 572, "strongli": [573, 574], "max_number_of_live_token": 573, "filter_chain": 573, "make_filt": [573, 574], "mode0": 573, "g0": 573, "mode1": 573, "g1": 573, "i3": 573, "mode2": 573, "g2": 573, "moden": 573, "gn": 573, "notifi": [573, 836], "fc": [573, 576, 772, 782, 818, 837], "dummi": [573, 576, 580, 830], "rootmeansquar": 573, "serial_in_ord": [573, 575], "inputtyp": [574, 761, 779, 818], "outputtyp": [574, 761, 818], "firstfilterbodi": [574, 818], "lastfilterbodi": [574, 818], "middlefilterbodi": [574, 818], "singlefilterbodi": [574, 818], "composit": [574, 576], "filter_input": 574, "filter_output": 574, "serial_out_of_ord": 575, "filterbodi": [576, 815], "requiremnt": 576, "parallelreducebodi": [577, 815], "copyassign": [577, 578, 663, 760, 772, 774, 782, 784, 785, 790, 793], "parallelreducefunc": [577, 815], "parallelreducereduct": [577, 815], "commut": 577, "noncommut": 577, "temp": [577, 578], "parallelsum": 577, "occurr": 577, "parallelscanbodi": [578, 815], "parallelscanfunc": [578, 815], "parallelscancombin": [578, 815], "reassoci": 578, "outperform": 578, "prescan": 578, "why": 578, "get_sum": 578, "is_final_scan": [578, 580], "reverse_join": [578, 826], "doparallelscan": 578, "crucial": 578, "somewhat": 578, "understand": 578, "randomaccessiter": [579, 744, 749], "swappabl": 579, "moveassign": [579, 601, 663, 672], "scan_tag": 580, "phase": 580, "copyconstructib": [581, 582, 583, 584], "subdivis": [582, 829], "opportun": [582, 584, 856], "global_contol": [582, 584], "task_arena": [582, 584, 795, 845, 847, 850, 851, 852, 853, 855, 857, 858], "stolen": [582, 857], "balanc": [582, 584], "bring": 584, "overhead": [584, 768], "openmp": 584, "_left": 585, "_right": 585, "debug_featur": 588, "tbb_use_debug": 588, "_debug": 588, "slow": 588, "stderr": [588, 591], "abort": [588, 595], "breakpoint": 588, "assertion_failur": 588, "inspector": 588, "xe": 588, "vtune": 588, "amplifi": 588, "advisor": 588, "feature_macro": 589, "microsoft": [589, 798], "linux": [589, 798], "maco": 589, "gnu": 589, "libstdc": 589, "10000": [589, 855], "patch": 589, "gcc": 589, "dumpvers": 589, "40902": 589, "incl": 590, "version_inform": 591, "reveal": 591, "onetbb_spec_vers": 591, "tbb_version_major": 591, "tbb_version_minor": 591, "tbb_version_str": 591, "tbb_interface_version_major": 591, "tbb_interface_version_minor": 591, "tbb_interface_vers": 591, "concurrent_vector": [592, 746, 747, 749, 750, 751, 752, 753, 755], "concurrent_queu": [592, 595, 597, 667, 668, 669, 670, 671, 673], "concurrent_bounded_queu": [592, 596, 597, 598, 599, 600, 602], "concurrent_priority_queu": [592, 659, 660, 661, 662, 665], "concurrent_hash_map": [592, 594, 604, 605, 606, 608, 611, 612, 613, 615], "concurrent_unordered_map": [592, 593, 688, 689, 690, 692, 693, 695, 696, 698, 699, 701, 702, 705, 713], "concurrent_unordered_multimap": [592, 593, 687, 699, 703, 704, 705, 706, 707, 709, 710, 712, 713, 715], "concurrent_unordered_set": [592, 593, 716, 719, 727, 731, 732, 733, 734, 735, 737, 738, 740, 741, 743], "concurrent_unordered_multiset": [592, 593, 717, 718, 719, 720, 721, 723, 724, 726, 727, 729, 730, 741], "concurrent_map": [592, 593, 617, 618, 620, 622, 623, 624, 626, 627, 629, 630, 631, 633, 641], "concurrent_multimap": [592, 593, 616, 627, 632, 633, 634, 636, 637, 638, 640, 641, 643, 644], "concurrent_set": [592, 593, 645, 647, 655, 675, 676, 677, 679, 680, 681, 683, 684, 686], "concurrent_multiset": [592, 593, 646, 647, 648, 650, 651, 652, 654, 655, 657, 674, 684], "tbb_hash_compar": [592, 603, 606, 774, 775], "node_handl": 593, "key_typ": [593, 603, 605, 608, 609, 610, 616, 617, 619, 621, 629, 631, 632, 635, 643, 645, 646, 649, 657, 674, 675, 678, 686, 687, 688, 689, 691, 694, 701, 702, 703, 704, 708, 715, 716, 717, 718, 722, 729, 730, 731, 732, 736, 743], "mapped_typ": [593, 603, 610, 616, 631, 687, 702], "allocator_typ": [593, 595, 596, 597, 601, 602, 603, 605, 606, 615, 616, 617, 618, 625, 629, 631, 632, 633, 639, 643, 645, 646, 647, 653, 657, 658, 659, 660, 665, 666, 667, 668, 672, 673, 674, 675, 676, 682, 686, 687, 689, 690, 697, 701, 702, 704, 705, 711, 715, 716, 718, 719, 725, 729, 730, 732, 733, 739, 743, 744, 746, 747, 755, 803, 864, 871], "nh": [593, 616, 627, 631, 641, 645, 655, 674, 684, 687, 699, 702, 713, 716, 727, 730, 741], "node_typ": [593, 616, 627, 629, 631, 641, 643, 645, 655, 657, 674, 684, 686, 687, 699, 701, 702, 713, 715, 716, 727, 729, 730, 741, 743], "unsafe_extract": [593, 616, 629, 631, 643, 645, 657, 674, 686, 687, 701, 702, 715, 716, 729, 730, 743], "allocator_trait": [593, 595, 596, 602, 603, 605, 615, 616, 617, 629, 631, 632, 643, 645, 646, 657, 659, 665, 666, 667, 673, 674, 675, 686, 687, 689, 701, 702, 704, 715, 716, 718, 729, 730, 732, 743, 744, 746, 755], "propagate_on_container_move_assign": [593, 596, 605, 617, 632, 646, 659, 667, 675, 689, 704, 718, 732, 746, 799, 801, 803], "propagate_on_container_swap": [593, 602, 615, 629, 643, 657, 665, 673, 686, 701, 715, 729, 743, 755], "hash": [594, 603, 605, 687, 689, 690, 695, 696, 697, 702, 704, 705, 709, 710, 711, 716, 718, 719, 723, 724, 725, 730, 732, 733, 737, 738, 739, 775, 832, 838], "hashcompar": [594, 603, 604, 606, 611, 612, 774, 815], "pop": [595, 658, 666], "cache_aligned_alloc": [595, 597, 658, 660, 666, 668, 744, 747, 797, 800, 864], "const_refer": [595, 603, 616, 631, 645, 658, 666, 674, 687, 702, 716, 730, 744, 831, 864, 871], "const_point": [595, 603, 616, 631, 645, 666, 674, 687, 702, 716, 730, 744, 871], "forwarditer": [595, 598, 603, 608, 616, 620, 631, 634, 645, 648, 666, 669, 674, 677, 687, 688, 693, 702, 703, 707, 716, 717, 721, 730, 731, 735], "get_alloc": [595, 596, 602, 603, 615, 616, 617, 627, 629, 631, 632, 641, 643, 645, 646, 655, 657, 658, 659, 665, 666, 667, 673, 674, 675, 684, 686, 687, 689, 699, 701, 702, 704, 713, 715, 716, 718, 727, 729, 730, 732, 741, 743, 744, 755], "try_push": [595, 601], "emplac": [595, 601, 603, 616, 631, 645, 658, 663, 666, 672, 674, 687, 702, 716, 730], "try_emplac": [595, 601], "try_pop": [595, 601, 658, 663, 664, 666, 672], "set_capac": [595, 601], "new_capac": [595, 601], "unsafe_begin": [595, 666, 687, 688, 702, 703, 716, 717, 730, 731], "unsafe_cbegin": [595, 666, 687, 688, 702, 703, 716, 717, 730, 731], "unsafe_end": [595, 666, 687, 688, 702, 703, 716, 717, 730, 731], "unsafe_cend": [595, 666, 687, 688, 702, 703, 716, 717, 730, 731], "eras": [595, 603, 658, 666, 744], "impos": [595, 603, 616, 631, 645, 658, 666, 674, 687, 702, 716, 730, 744], "stricter": [595, 603, 616, 631, 645, 658, 666, 674, 687, 702, 716, 730, 744], "unsaf": [595, 603, 616, 631, 645, 658, 666, 674, 687, 702, 716, 730, 744, 769, 850, 864, 872], "reachabl": [595, 603, 616, 631, 645, 658, 666, 674, 687, 702, 716, 730, 744, 799, 801, 803, 874], "lh": [595, 599, 600, 603, 611, 612, 616, 622, 623, 624, 630, 631, 636, 637, 638, 644, 645, 650, 651, 652, 658, 661, 662, 666, 670, 671, 674, 679, 680, 681, 687, 695, 696, 702, 709, 710, 716, 723, 724, 730, 737, 738, 744, 750, 751, 752], "unbound": [596, 658, 666, 760, 775], "select_on_container_copy_construct": [596, 605, 617, 632, 646, 659, 667, 675, 689, 704, 718, 732, 746], "propagate_on_container_copy_assign": [596, 605, 617, 632, 646, 659, 667, 675, 689, 704, 718, 732, 746], "iterator_value_t": [597, 647, 660, 668, 676, 719, 733, 747], "cq1": [597, 668], "cq2": [597, 668], "copyinsert": [601, 610, 627, 641, 655, 663, 672, 684, 699, 741, 745], "moveinsert": [601, 610, 627, 641, 655, 663, 672, 684, 699, 741, 745], "emplaceconstruct": [601, 610, 619, 627, 641, 655, 663, 672, 684, 691, 699, 741, 745], "wake": 601, "user_abort": 601, "unord": [603, 687, 702, 716, 730, 848], "erasur": [603, 614, 616, 631, 645, 674, 687, 702, 716, 730], "tbb_alloc": [603, 606, 616, 618, 631, 633, 645, 647, 674, 676, 687, 690, 702, 705, 716, 719, 730, 733, 797, 801], "hash_compare_typ": [603, 605, 608, 609, 610], "range_typ": [603, 613, 616, 626, 631, 640, 645, 654, 674, 683, 687, 698, 702, 712, 716, 726, 730, 740, 744, 753, 864, 867], "containerrang": [603, 613, 626, 640, 654, 683, 687, 698, 702, 712, 716, 726, 730, 740, 744, 753, 815, 867], "const_range_typ": [603, 613, 616, 626, 631, 640, 645, 654, 674, 683, 687, 698, 702, 712, 716, 726, 730, 740, 744, 753, 864, 867], "const_accessor": [603, 609, 610], "rehash": [603, 687, 702, 716, 730], "sz": 603, "bucket_count": [603, 687, 689, 702, 704, 716, 718, 730, 732], "max_siz": [603, 616, 631, 645, 674, 687, 702, 716, 730, 744, 755, 799], "item_accessor": [603, 610], "cbegin": [603, 616, 631, 645, 674, 687, 702, 716, 730, 744], "cend": [603, 616, 631, 645, 674, 687, 702, 716, 730, 744], "equal_rang": [603, 616, 631, 645, 674, 687, 702, 716, 730], "prealloc": 605, "iterator_key_t": [606, 618, 633, 690, 705], "iterator_alloc_value_t": [606, 618, 633, 690, 705], "iterator_mapped_t": [606, 618, 633, 690, 705], "first_typ": [606, 618, 633, 690, 705], "second_typ": [606, 618, 633, 690, 705], "add_const_t": [606, 618, 633, 690, 705], "chmap1": 606, "chmap2": 606, "is_transpar": [608, 609, 610, 621, 629, 635, 643, 649, 657, 678, 686, 687, 702, 716, 730], "defaultconstruct": [610, 745, 758, 767, 772, 774, 776, 779, 782, 793], "is_construct": [610, 627, 641, 699, 713], "wherea": [613, 626, 640, 654, 683, 698, 712, 726, 740, 753, 867], "pend": [614, 628, 642, 656, 664, 685, 700, 714, 728, 742], "key_compar": [616, 617, 621, 625, 629, 630, 631, 632, 635, 639, 643, 644, 645, 646, 649, 653, 657, 674, 675, 678, 682, 686], "value_compar": [616, 625, 631, 639, 645, 653, 674, 682], "emplace_hint": [616, 627, 631, 641, 645, 655, 674, 684, 687, 699, 702, 713, 716, 727, 730, 741], "srccompar": [616, 627, 631, 641, 645, 655, 674, 684], "unsafe_eras": [616, 629, 631, 643, 645, 657, 674, 686, 687, 701, 702, 715, 716, 729, 730, 743], "key_comp": [616, 631, 645, 674], "value_comp": [616, 631, 645, 674], "lexicograph": [616, 631, 645, 674, 744], "cm1": [618, 633], "cm2": [618, 633], "3f": [618, 633], "piecewise_construct": [619, 691], "forward_as_tupl": [619, 691], "took": [627, 684, 699, 741], "is_convert": [629, 643, 657, 686, 701, 715, 729, 743], "concurrent_mutlimap": 631, "cs1": [647, 676], "cs2": [647, 676], "init_capac": [658, 659], "cpq1": 660, "cpq2": 660, "unsafe_s": [666, 673], "keyequ": [687, 690, 695, 696, 702, 705, 709, 710, 716, 719, 723, 724, 730, 733, 737, 738], "hasher": [687, 689, 694, 697, 701, 702, 704, 708, 711, 715, 716, 718, 722, 725, 729, 730, 732, 736, 739, 743], "key_equ": [687, 689, 697, 701, 702, 704, 711, 715, 716, 718, 725, 729, 730, 732, 739, 743], "local_iter": [687, 688, 702, 703, 716, 717, 730, 731], "const_local_iter": [687, 688, 702, 703, 716, 717, 730, 731], "srchash": [687, 699, 702, 713, 716, 727, 730, 741], "srckeyequ": [687, 699, 702, 713, 716, 727, 730, 741], "unsafe_bucket_count": [687, 688, 692, 702, 703, 706, 716, 717, 720, 730, 731, 734], "unsafe_max_bucket_bount": [687, 702, 716, 730], "unsafe_bucket_s": [687, 688, 702, 703, 716, 717, 730, 731], "unsafe_bucket": [687, 688, 702, 703, 716, 717, 730, 731], "load_factor": [687, 692, 702, 706, 716, 720, 730, 734], "max_load_factor": [687, 692, 702, 706, 716, 720, 730, 734], "ml": [687, 692, 702, 706, 716, 720, 730, 734], "hash_funct": [687, 702, 716, 730], "key_eq": [687, 702, 716, 730], "transparent_key_equ": [687, 694, 701, 702, 708, 715, 716, 722, 729, 730, 736, 743], "unsafe_max_bucket_count": [688, 703, 717, 731], "is_always_equ": [689, 701, 704, 715, 718, 729, 732, 743, 746, 755, 799, 801, 803], "is_nothrow_move_assign": [689, 704, 718, 732], "map_size_typ": [690, 705], "customhash": [690, 705, 719, 733], "exceed": [692, 706, 720, 734, 798], "is_nothrow_swapp": [701, 715, 729, 743], "set_size_typ": [719, 733], "grown": 744, "reverse_iter": [744, 749], "const_reverse_iter": [744, 749], "growth": [744, 748], "grow_bi": 744, "grow_to_at_least": 744, "emplace_back": 744, "rbegin": 744, "crbegin": 744, "rend": 744, "crend": 744, "shrink_to_fit": 744, "grow": 744, "nonetheless": 744, "unalloc": [744, 748], "unbroken": 744, "arr": 747, "cv1": 747, "cv2": 747, "length_error": 755, "reorgan": 755, "task_arena_attach_tag": 756, "arena": [756, 848, 856, 857, 858], "flow_graph": [757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793], "behalf": 757, "reset_flag": 757, "graph_nod": [757, 758, 759, 760, 761, 763, 767, 771, 772, 774, 776, 779, 782, 784, 785, 790, 791, 793], "sender": [757, 758, 759, 760, 761, 762, 763, 767, 771, 772, 774, 776, 777, 779, 782, 784, 785, 787, 790, 791, 793], "successor": [757, 758, 759, 760, 765, 766, 767, 771, 772, 774, 775, 776, 777, 779, 782, 784, 785, 787, 790, 791, 793, 836], "continue_nod": [757, 764, 765, 766, 768, 776, 780, 834], "function_nod": [757, 764, 766, 768, 778, 780, 782, 783, 790, 793, 835], "input_nod": [757, 764, 766, 782, 790, 837], "multifunction_nod": [757, 764, 766, 768, 780, 781, 783, 839], "async_nod": [757, 764, 768, 780, 783, 833, 836], "copy_bodi": [757, 758, 763, 767, 772, 779], "overwrite_nod": [757, 766, 793], "write_once_nod": [757, 766, 782], "buffer_nod": [757, 766, 785, 793], "queue_nod": [757, 766], "priority_queue_nod": [757, 766], "sequencer_nod": [757, 766, 784, 840], "reusabl": 757, "limiter_nod": [757, 766], "broadcast_nod": [757, 765, 766, 778, 780, 791], "join_nod": [757, 766, 771, 773, 778, 782, 793, 838], "split_nod": [757, 766, 781], "indexer_nod": [757, 766, 773, 781, 792], "composite_nod": [757, 773, 781], "input_port": [757, 761, 771, 774, 778, 793], "output_port": [757, 761, 779, 791], "make_edg": [757, 763, 765, 768, 778, 780, 782, 790, 793], "remove_edg": [757, 763], "continue_msg": [757, 763, 765, 767, 776, 780, 834], "tagged_msg": [757, 771], "implemet": 758, "node_priority_t": [758, 763, 767, 779, 780], "no_prior": [758, 763, 767, 779, 780], "gateway_typ": [758, 833, 836], "gatewai": [758, 833], "try_put": [758, 759, 760, 763, 765, 767, 768, 776, 778, 779, 780, 782, 784, 785, 790, 791, 793, 836, 839], "try_get": [758, 759, 760, 763, 766, 767, 771, 772, 774, 775, 776, 782, 784, 785, 790, 793], "asyncnodebodi": [758, 815], "incom": [758, 759, 763, 767, 775, 778, 779, 791, 793], "settabl": [758, 767, 779], "held": [758, 763, 767, 772, 779, 782, 792, 793, 805, 807, 810, 813, 814, 842], "gatewaytyp": [758, 815, 833], "immedi": [759, 767, 837, 856, 858, 859], "unabl": [759, 775, 815], "tri": [760, 766, 775, 776, 784, 785, 790, 805, 806, 810], "inputtupl": 761, "outputtupl": [761, 774, 838], "input_ports_typ": [761, 771, 774, 777, 787], "output_ports_typ": [761, 777, 779, 787, 791, 839], "set_external_port": 761, "input_ports_tupl": 761, "output_ports_tupl": 761, "border": 761, "mandatori": 761, "number_of_predecessor": 763, "continuenodebodi": [763, 815], "continue_output_t": 763, "head": [765, 775], "cstdio": [765, 778], "my_nam": 765, "printf": [765, 778, 782, 790, 849], "c_str": 765, "wait_for_al": [765, 768, 769, 778, 780, 782, 790, 793, 853], "forwarding_and_buff": 766, "fate": 766, "resend": 766, "tag_match": [766, 774, 775], "fuction_nod": 767, "functionnodebodi": [767, 815], "input_t": [767, 772, 774, 790], "output_t": [767, 774], "function_node_polici": 768, "queueing_lightweight": 768, "rejecting_lightweight": 768, "rf_reset_protocol": [769, 788], "cancel": [769, 854, 856, 859, 860], "is_cancel": 769, "exception_thrown": 769, "t0": 771, "implementation_defin": 771, "arriv": 771, "inputnodebodi": [772, 815], "toggl": 772, "inact": [772, 857], "nodetyp": [773, 781], "tag_valu": [774, 775], "joinpolici": 774, "khash": [774, 775], "key_match": [774, 775], "b0": 774, "bn": 774, "joinnodefunctionobject": [774, 815], "tuple_s": 774, "join_node_polici": 775, "decrementtyp": 776, "embed": 776, "multioutputnod": [777, 787], "multiinputnod": [777, 787], "enter": [778, 856, 857], "squarer": 778, "cuber": 778, "summer": 778, "lock": [778, 805, 806, 807, 808, 809, 810, 811, 813, 814, 841, 842], "my_sum": 778, "multifunctionnodebodi": [779, 815], "node_prior": 780, "f1": 780, "f3": 780, "f2": 780, "fe": 780, "cmath": 780, "tick_count": [780, 873], "global_control": [780, 850, 855], "spin_for": 780, "delta_second": 780, "unit_of_tim": 780, "max_thread": 780, "max_allowed_parallel": [780, 852], "heavi": 780, "elaps": 780, "is_valid": [782, 793], "data_limit": 782, "data_set_prepar": 782, "overwrite_storag": 782, "data_gener": 782, "data_from_storag": 782, "concurrency_limit": 783, "enforc": [784, 841, 852], "fifo": 785, "rf_reset_bodi": 788, "rf_clear_edg": 788, "reiniti": [788, 854], "duplic": 790, "msg": [790, 793], "writer": [790, 810, 812, 814, 841, 842], "reciev": 790, "tupletyp": 791, "tagtyp": 792, "cast_to": 792, "is_a": 792, "static_result_computer_n": 793, "write_once_n": 793, "buffer_n": 793, "join_n": 793, "consumer_n": 793, "precomput": 793, "precomputed_result": 793, "dynamic_data": 793, "underscore_styl": 794, "pascalcas": 794, "__tbb": 794, "info_namespac": 795, "numa_node_id": [795, 856], "core_type_id": [795, 856], "numa_nod": [795, 856], "core_typ": [795, 856], "default_concurr": 795, "numa": [795, 856], "pars": 795, "intro": 796, "multithread": 796, "memory_alloc": [797, 798, 799, 800, 801, 802, 803], "scalable_alloc": [797, 798, 802], "pmr": [797, 800, 802], "polymorphic_alloc": [797, 802], "mem": 797, "poli": 797, "memory_resourc": [797, 800, 802], "cache_aligned_resourc": 797, "scalable_memory_resourc": 797, "scalable_alloc_c_interfac": 798, "scalable_malloc": 798, "scalable_fre": [798, 802], "ptr": 798, "scalable_calloc": 798, "nobj": 798, "scalable_realloc": 798, "_msize": 798, "malloc_s": 798, "malloc_usable_s": 798, "scalable_ms": 798, "posix_memalign": 798, "scalable_posix_memalign": 798, "memptr": 798, "scalable_aligned_malloc": [798, 802], "scalable_aligned_fre": 798, "scalable_aligned_realloc": 798, "scalable_allocation_": 798, "tbbmalloc_ok": 798, "tbbmalloc_invalid_param": 798, "tbbmalloc_unsupport": 798, "tbbmalloc_no_memori": 798, "tbbmalloc_no_effect": 798, "scalableallocationresult": 798, "huge": 798, "tbbmalloc_use_huge_pag": 798, "forcefulli": 798, "clean": [798, 857], "tbbmalloc_set_soft_heap_limit": 798, "cleanup": 798, "tbbmalloc_set_huge_size_threshold": 798, "allocationmodeparam": 798, "scalable_allocation_mod": 798, "intptr_t": 798, "tbbmalloc_clean_all_buff": 798, "tbbmalloc_clean_thread_buff": 798, "scalableallocationcmd": 798, "scalable_allocation_command": 798, "cmd": 798, "scalable_x": 798, "posix": 798, "influenc": 798, "succeed": [798, 805, 810], "tell": 798, "tbb_malloc_use_huge_pag": 798, "ask": 798, "administr": 798, "urg": 798, "bigger": 798, "tbb_malloc_set_huge_size_threshold": 798, "long_max": 798, "care": 798, "boundari": [799, 800], "hurt": 799, "net": 799, "traffic": 799, "inappropri": 799, "upstream_resourc": 800, "do_alloc": 800, "do_dealloc": 800, "do_is_equ": 800, "get_default_resourc": 800, "beforehand": 800, "upstream": 800, "revert": 803, "malloc_typ": 803, "race": 804, "rw_mutex": [804, 842], "spin_mutex": [804, 811, 841], "spin_rw_mutex": [804, 812, 842], "speculative_spin_mutex": [804, 841], "speculative_spin_rw_mutex": [804, 842], "queuing_mutex": [804, 841], "queuing_rw_mutex": [804, 842], "null_mutex": [804, 841], "null_rw_mutex": [804, 842], "adapt": [805, 810], "spin": [805, 810, 811, 813, 814], "fair": [805, 808, 809, 811, 812, 813, 841, 842], "scoped_lock": [805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 841, 842], "try_lock": [805, 806, 807, 810, 813, 814], "unlock": [805, 806, 807, 808, 809, 810, 811, 812, 813, 814], "is_rw_mutex": [805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 841, 842], "is_recursive_mutex": [805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 841, 842], "is_fair_mutex": [805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 841, 842], "busi": [805, 810], "mutex": [806, 807, 808, 809, 810, 811, 812, 813, 814, 844, 846], "syntact": [806, 807, 815, 849], "readerwritermutex": [807, 809, 810, 812, 814, 815], "sharedmutex": [807, 810, 814], "lock_shar": [807, 810, 814], "try_lock_shar": [807, 810, 814], "unlock_shar": [807, 810, 814], "unfair": [810, 814], "reader": [810, 812, 814, 841, 842], "tsx": [811, 812], "contend": [811, 812], "specul": [811, 812], "conflict": [811, 812], "wors": [811, 812], "backoff": 814, "named_requir": 815, "chapter": 815, "cpprefer": 815, "com": 815, "site": 815, "drawback": 815, "releg": 815, "deal": 815, "drop": 815, "guidanc": 815, "suspendfunc": [815, 853], "req": [816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843], "blocked_range_valu": 816, "container_based_sequ": 817, "filter_bodi": 818, "parallel_for_bodi": 819, "parallel_for_each_bodi": 820, "referencetyp": 820, "itemtyp": 820, "spawn": [820, 856, 857], "parallel_for_func": 821, "parallel_for_index": 822, "quotient": 822, "_note": 822, "parallel_reduce_bodi": 823, "parallel_reduce_func": 824, "parallel_reduce_reduct": 825, "parallel_scan_combin": 827, "parallel_scan_func": 828, "yield": 829, "indivis": 829, "fork": 830, "container_rang": 831, "cr": 831, "hash_compar": 832, "keytyp": 832, "returntyp": 832, "async_node_bodi": 833, "enclos": [833, 849], "continue_node_bodi": 834, "function_node_bodi": 835, "reserve_wait": 836, "release_wait": 836, "input_node_bodi": 837, "join_node_function_object": 838, "multifunction_node_bodi": 839, "outputportstyp": 839, "spartan": 841, "rememb": [841, 857], "mylock": 841, "mymutex": 841, "try_acquir": [841, 842], "movabl": 841, "reentrant": [841, 842], "opposit": [841, 842], "rational": 841, "rwm": 842, "upgrade_to_writ": 842, "downgrade_to_read": 842, "superset": 842, "reacquir": 842, "suspend_func": 843, "suspend_point": [843, 853], "resum": [843, 850], "enumerable_thread_specif": [848, 862, 863, 865, 866, 867, 871], "flattened2d": [848, 862], "notational_convent": 849, "ital": 849, "titl": 849, "filenam": 849, "basenam": 849, "monospac": 849, "directori": 849, "alt": 849, "okcreateobj": 849, "hello": 849, "world": 849, "bold": 849, "emphas": 849, "0xf": 849, "bracket": 849, "fa": 849, "fac": 849, "vertic": 849, "xk": 849, "xw": 849, "xp": 849, "metacharact": 849, "quotat": 849, "negat": 849, "ellipsi": 849, "seem": 849, "client": [849, 857], "foobas": 849, "foo_v3": 849, "internal_stuff": 849, "depart": 849, "distract": 849, "clutter": 849, "drive": 850, "quanta": 850, "worker": [850, 852, 855, 856, 857, 858], "preemptiv": 850, "unrel": 850, "task_scheduler_handl": [850, 851], "task_group": [850, 854, 856, 858, 860], "task_group_statu": [850, 856, 859], "task_handl": [850, 856, 858, 859], "this_task_arena": [850, 857], "task_scheduler_observ": [850, 856], "thread_stack_s": 852, "terminate_on_except": 852, "active_valu": 852, "parameter_valu": 852, "disjunct": 852, "rethrow": 852, "resumable_task": 853, "suspend": [853, 864], "async": 853, "async_act": 853, "forest": 854, "isol": [854, 858], "subtre": 854, "kind_t": 854, "traits_typ": 854, "fp_set": 854, "default_trait": 854, "relation_with_par": 854, "uintptr_t": 854, "cancel_group_execut": 854, "is_group_execution_cancel": 854, "capture_fp_set": 854, "child": 854, "relation_to_par": 854, "extant": [854, 857], "uncancel": 854, "nothrow_t": 855, "prematur": 855, "deactiv": 855, "unsafe_wait": 855, "cerr": 855, "not_initi": [856, 858], "numa_node_": 856, "max_concurrency_": 856, "set_numa_id": 856, "set_max_concurr": 856, "maximal_concurr": 856, "set_core_typ": 856, "set_max_threads_per_cor": 856, "threads_numb": 856, "numa_id": 856, "max_concurr": [856, 858], "max_threads_per_cor": 856, "reserved_slot": 856, "a_prior": 856, "constraints_": 856, "is_act": 856, "tg": [856, 858], "wait_for": 856, "create_numa_task_arena": 856, "lazili": [856, 862, 864], "pin": [856, 857], "eventu": 856, "ever": 856, "defer": [856, 858, 859, 861], "slot": 856, "is_observ": 857, "on_scheduler_entri": 857, "is_work": 857, "on_scheduler_exit": 857, "notif": 857, "whenev": 857, "owner": 857, "pinning_observ": 857, "affinity_mask_t": 857, "m_mask": 857, "hw": 857, "set_thread_affin": 857, "current_thread_index": [857, 858], "restore_thread_affin": 857, "outer": [858, 871], "reference_wrapp": 858, "run_and_wait": 859, "is_current_task_group_cancel": 859, "not_complet": 860, "nullptr_t": 861, "thread_local_storag": 862, "tl": [862, 863, 864, 866, 871], "flatten2d": [862, 871], "assist": 862, "idiom": 862, "binaryfunc": [863, 864, 865], "combine_each": [863, 864, 865], "intact": [863, 866], "ets_key_usage_typ": [864, 866], "ets_key_per_inst": 864, "ets_no_kei": 864, "ets_suspend_awar": 864, "ets_key_typ": 864, "exemplar": [864, 866, 868], "cachetyp": [864, 866], "freshli": 864, "this_thread": 864, "life": 864, "fairli": 864, "viewabl": 871, "thread_safeti": 872, "departur": 872, "liber": 872, "wall": [873, 874], "clock": [873, 874], "interval_t": 873, "durat": 874, "nonmemb": 874, "behind": 876, "matur": 876, "attain": 876, "divers": 876, "scientif": 876, "artifici": 876, "intellig": 876, "systol": 876, "middlewar": 876, "contributor": 876, "ecosystem": 876, "inter": 876, "seek": 876, "conform": 876, "recompil": 876, "rfc": 876, "2119": 876, "creativ": 877, "mit": 877, "uxl": 877, "disclos": 877, "sole": 877, "oblig": 877, "intellectu": 877}, "objects": {"": [[159, 0, 1, "c.DNNL_ARG_ATTR_SCALES", "DNNL_ARG_ATTR_SCALES"], [159, 0, 1, "c.DNNL_ARG_ATTR_ZERO_POINTS", "DNNL_ARG_ATTR_ZERO_POINTS"], [159, 0, 1, "c.DNNL_ARG_BIAS", "DNNL_ARG_BIAS"], [159, 0, 1, "c.DNNL_ARG_DIFF_BIAS", "DNNL_ARG_DIFF_BIAS"], [159, 0, 1, "c.DNNL_ARG_DIFF_DST", "DNNL_ARG_DIFF_DST"], [159, 0, 1, "c.DNNL_ARG_DIFF_DST_0", "DNNL_ARG_DIFF_DST_0"], [159, 0, 1, "c.DNNL_ARG_DIFF_DST_1", "DNNL_ARG_DIFF_DST_1"], [159, 0, 1, "c.DNNL_ARG_DIFF_DST_2", "DNNL_ARG_DIFF_DST_2"], [159, 0, 1, "c.DNNL_ARG_DIFF_DST_ITER", "DNNL_ARG_DIFF_DST_ITER"], [159, 0, 1, "c.DNNL_ARG_DIFF_DST_ITER_C", "DNNL_ARG_DIFF_DST_ITER_C"], [159, 0, 1, "c.DNNL_ARG_DIFF_DST_LAYER", "DNNL_ARG_DIFF_DST_LAYER"], [159, 0, 1, "c.DNNL_ARG_DIFF_SCALE", "DNNL_ARG_DIFF_SCALE"], [159, 0, 1, "c.DNNL_ARG_DIFF_SHIFT", "DNNL_ARG_DIFF_SHIFT"], [159, 0, 1, "c.DNNL_ARG_DIFF_SRC", "DNNL_ARG_DIFF_SRC"], [159, 0, 1, "c.DNNL_ARG_DIFF_SRC_0", "DNNL_ARG_DIFF_SRC_0"], [159, 0, 1, "c.DNNL_ARG_DIFF_SRC_1", "DNNL_ARG_DIFF_SRC_1"], [159, 0, 1, "c.DNNL_ARG_DIFF_SRC_2", "DNNL_ARG_DIFF_SRC_2"], [159, 0, 1, "c.DNNL_ARG_DIFF_SRC_ITER", "DNNL_ARG_DIFF_SRC_ITER"], [159, 0, 1, "c.DNNL_ARG_DIFF_SRC_ITER_C", "DNNL_ARG_DIFF_SRC_ITER_C"], [159, 0, 1, "c.DNNL_ARG_DIFF_SRC_LAYER", "DNNL_ARG_DIFF_SRC_LAYER"], [159, 0, 1, "c.DNNL_ARG_DIFF_WEIGHTS", "DNNL_ARG_DIFF_WEIGHTS"], [159, 0, 1, "c.DNNL_ARG_DIFF_WEIGHTS_0", "DNNL_ARG_DIFF_WEIGHTS_0"], [159, 0, 1, "c.DNNL_ARG_DIFF_WEIGHTS_1", "DNNL_ARG_DIFF_WEIGHTS_1"], [159, 0, 1, "c.DNNL_ARG_DIFF_WEIGHTS_ITER", "DNNL_ARG_DIFF_WEIGHTS_ITER"], [159, 0, 1, "c.DNNL_ARG_DIFF_WEIGHTS_LAYER", "DNNL_ARG_DIFF_WEIGHTS_LAYER"], [159, 0, 1, "c.DNNL_ARG_DST", "DNNL_ARG_DST"], [159, 0, 1, "c.DNNL_ARG_DST_0", "DNNL_ARG_DST_0"], [159, 0, 1, "c.DNNL_ARG_DST_1", "DNNL_ARG_DST_1"], [159, 0, 1, "c.DNNL_ARG_DST_2", "DNNL_ARG_DST_2"], [159, 0, 1, "c.DNNL_ARG_DST_ITER", "DNNL_ARG_DST_ITER"], [159, 0, 1, "c.DNNL_ARG_DST_ITER_C", "DNNL_ARG_DST_ITER_C"], [159, 0, 1, "c.DNNL_ARG_DST_LAYER", "DNNL_ARG_DST_LAYER"], [159, 0, 1, "c.DNNL_ARG_FROM", "DNNL_ARG_FROM"], [159, 0, 1, "c.DNNL_ARG_MEAN", "DNNL_ARG_MEAN"], [159, 0, 1, "c.DNNL_ARG_MULTIPLE_DST", "DNNL_ARG_MULTIPLE_DST"], [159, 0, 1, "c.DNNL_ARG_MULTIPLE_SRC", "DNNL_ARG_MULTIPLE_SRC"], [159, 0, 1, "c.DNNL_ARG_SCALE", "DNNL_ARG_SCALE"], [159, 0, 1, "c.DNNL_ARG_SCRATCHPAD", "DNNL_ARG_SCRATCHPAD"], [159, 0, 1, "c.DNNL_ARG_SHIFT", "DNNL_ARG_SHIFT"], [159, 0, 1, "c.DNNL_ARG_SRC", "DNNL_ARG_SRC"], [159, 0, 1, "c.DNNL_ARG_SRC_0", "DNNL_ARG_SRC_0"], [159, 0, 1, "c.DNNL_ARG_SRC_1", "DNNL_ARG_SRC_1"], [159, 0, 1, "c.DNNL_ARG_SRC_2", "DNNL_ARG_SRC_2"], [159, 0, 1, "c.DNNL_ARG_SRC_ITER", "DNNL_ARG_SRC_ITER"], [159, 0, 1, "c.DNNL_ARG_SRC_ITER_C", "DNNL_ARG_SRC_ITER_C"], [159, 0, 1, "c.DNNL_ARG_SRC_LAYER", "DNNL_ARG_SRC_LAYER"], [159, 0, 1, "c.DNNL_ARG_TO", "DNNL_ARG_TO"], [159, 0, 1, "c.DNNL_ARG_VARIANCE", "DNNL_ARG_VARIANCE"], [159, 0, 1, "c.DNNL_ARG_WEIGHTS", "DNNL_ARG_WEIGHTS"], [159, 0, 1, "c.DNNL_ARG_WEIGHTS_0", "DNNL_ARG_WEIGHTS_0"], [159, 0, 1, "c.DNNL_ARG_WEIGHTS_1", "DNNL_ARG_WEIGHTS_1"], [159, 0, 1, "c.DNNL_ARG_WEIGHTS_ITER", "DNNL_ARG_WEIGHTS_ITER"], [159, 0, 1, "c.DNNL_ARG_WEIGHTS_LAYER", "DNNL_ARG_WEIGHTS_LAYER"], [159, 0, 1, "c.DNNL_ARG_WORKSPACE", "DNNL_ARG_WORKSPACE"], [63, 0, 1, "c.DNNL_GRAPH_UNKNOWN_DIM", "DNNL_GRAPH_UNKNOWN_DIM"], [63, 0, 1, "c.DNNL_GRAPH_UNKNOWN_NDIMS", "DNNL_GRAPH_UNKNOWN_NDIMS"], [60, 0, 1, "c.DNNL_MEMORY_ALLOCATE", "DNNL_MEMORY_ALLOCATE"], [60, 0, 1, "c.DNNL_MEMORY_NONE", "DNNL_MEMORY_NONE"], [159, 0, 1, "c.DNNL_RUNTIME_DIM_VAL", "DNNL_RUNTIME_DIM_VAL"], [159, 0, 1, "c.DNNL_RUNTIME_F32_VAL", "DNNL_RUNTIME_F32_VAL"], [159, 0, 1, "c.DNNL_RUNTIME_S32_VAL", "DNNL_RUNTIME_S32_VAL"], [159, 0, 1, "c.DNNL_RUNTIME_SIZE_VAL", "DNNL_RUNTIME_SIZE_VAL"], [798, 0, 1, "c.TBBMALLOC_CLEAN_ALL_BUFFERS", "TBBMALLOC_CLEAN_ALL_BUFFERS"], [798, 0, 1, "c.TBBMALLOC_CLEAN_THREAD_BUFFERS", "TBBMALLOC_CLEAN_THREAD_BUFFERS"], [798, 0, 1, "c.TBBMALLOC_SET_HUGE_SIZE_THRESHOLD", "TBBMALLOC_SET_HUGE_SIZE_THRESHOLD"], [798, 0, 1, "c.TBBMALLOC_SET_SOFT_HEAP_LIMIT", "TBBMALLOC_SET_SOFT_HEAP_LIMIT"], [798, 0, 1, "c.TBBMALLOC_USE_HUGE_PAGES", "TBBMALLOC_USE_HUGE_PAGES"], [860, 0, 1, "c.canceled", "canceled"], [860, 0, 1, "c.complete", "complete"], [860, 0, 1, "c.not_complete", "not_complete"], [798, 1, 1, "c.scalable_allocation_command", "scalable_allocation_command"], [833, 3, 1, "_CPPv4N13AsyncNodeBody4Body4BodyERK4Body", "AsyncNodeBody::Body::Body"], [833, 3, 1, "_CPPv4N13AsyncNodeBody4BodyclERK5InputR11GatewayType", "AsyncNodeBody::Body::operator()"], [833, 4, 1, "_CPPv4N13AsyncNodeBody4BodyclERK5InputR11GatewayType", "AsyncNodeBody::Body::operator()::gateway"], [833, 4, 1, "_CPPv4N13AsyncNodeBody4BodyclERK5InputR11GatewayType", "AsyncNodeBody::Body::operator()::v"], [833, 3, 1, "_CPPv4N13AsyncNodeBody4BodyD0Ev", "AsyncNodeBody::Body::~Body"], [819, 3, 1, "_CPPv4N4Body4BodyERK4Body", "Body::Body"], [826, 3, 1, "_CPPv4N4Body4BodyER4Body5split", "Body::Body"], [826, 4, 1, "_CPPv4N4Body4BodyER4Body5split", "Body::Body::b"], [826, 3, 1, "_CPPv4N4Body6assignER4Body", "Body::assign"], [826, 4, 1, "_CPPv4N4Body6assignER4Body", "Body::assign::b"], [819, 3, 1, "_CPPv4NK4BodyclER5Range", "Body::operator()"], [820, 3, 1, "_CPPv4NK4BodyclE13ReferenceType", "Body::operator()"], [820, 3, 1, "_CPPv4NK4BodyclE13ReferenceTypeRN6oneapi3tbb6feederI8ItemTypeEE", "Body::operator()"], [820, 3, 1, "_CPPv4NK4BodyclERR8ItemTypeRN6oneapi3tbb6feederI8ItemTypeEE", "Body::operator()"], [826, 3, 1, "_CPPv4N4BodyclERK5Range12pre_scan_tag", "Body::operator()"], [826, 3, 1, "_CPPv4N4BodyclERK5Range14final_scan_tag", "Body::operator()"], [820, 4, 1, "_CPPv4NK4BodyclE13ReferenceTypeRN6oneapi3tbb6feederI8ItemTypeEE", "Body::operator()::feeder"], [820, 4, 1, "_CPPv4NK4BodyclERR8ItemTypeRN6oneapi3tbb6feederI8ItemTypeEE", "Body::operator()::feeder"], [820, 4, 1, "_CPPv4NK4BodyclE13ReferenceType", "Body::operator()::item"], [820, 4, 1, "_CPPv4NK4BodyclE13ReferenceTypeRN6oneapi3tbb6feederI8ItemTypeEE", "Body::operator()::item"], [820, 4, 1, "_CPPv4NK4BodyclERR8ItemTypeRN6oneapi3tbb6feederI8ItemTypeEE", "Body::operator()::item"], [826, 4, 1, "_CPPv4N4BodyclERK5Range12pre_scan_tag", "Body::operator()::r"], [826, 4, 1, "_CPPv4N4BodyclERK5Range14final_scan_tag", "Body::operator()::r"], [819, 4, 1, "_CPPv4NK4BodyclER5Range", "Body::operator()::range"], [826, 3, 1, "_CPPv4N4Body12reverse_joinER4Body", "Body::reverse_join"], [826, 4, 1, "_CPPv4N4Body12reverse_joinER4Body", "Body::reverse_join::b"], [819, 3, 1, "_CPPv4N4BodyD0Ev", "Body::~Body"], [831, 3, 1, "_CPPv4N2CR5beginEv", "CR::begin"], [831, 5, 1, "_CPPv4N2CR15const_referenceE", "CR::const_reference"], [831, 5, 1, "_CPPv4N2CR15difference_typeE", "CR::difference_type"], [831, 3, 1, "_CPPv4N2CR3endEv", "CR::end"], [831, 3, 1, "_CPPv4NK2CR9grainsizeEv", "CR::grainsize"], [831, 5, 1, "_CPPv4N2CR8iteratorE", "CR::iterator"], [831, 5, 1, "_CPPv4N2CR9referenceE", "CR::reference"], [831, 5, 1, "_CPPv4N2CR9size_typeE", "CR::size_type"], [831, 5, 1, "_CPPv4N2CR10value_typeE", "CR::value_type"], [827, 3, 1, "_CPPv4NK7CombineclERK5ValueRK5Value", "Combine::operator()"], [827, 4, 1, "_CPPv4NK7CombineclERK5ValueRK5Value", "Combine::operator()::left"], [827, 4, 1, "_CPPv4NK7CombineclERK5ValueRK5Value", "Combine::operator()::right"], [834, 3, 1, "_CPPv4N16ContinueNodeBody4Body4BodyERK4Body", "ContinueNodeBody::Body::Body"], [834, 3, 1, "_CPPv4N16ContinueNodeBody4BodyclERK12continue_msg", "ContinueNodeBody::Body::operator()"], [834, 4, 1, "_CPPv4N16ContinueNodeBody4BodyclERK12continue_msg", "ContinueNodeBody::Body::operator()::v"], [834, 3, 1, "_CPPv4N16ContinueNodeBody4BodyD0Ev", "ContinueNodeBody::Body::~Body"], [821, 3, 1, "_CPPv4NK1FclE5Index", "F::operator()"], [821, 4, 1, "_CPPv4NK1FclE5Index", "F::operator()::index"], [818, 3, 1, "_CPPv4NK15FirstFilterBody4BodyclERN6oneapi3tbb12flow_controlE", "FirstFilterBody::Body::operator()"], [818, 4, 1, "_CPPv4NK15FirstFilterBody4BodyclERN6oneapi3tbb12flow_controlE", "FirstFilterBody::Body::operator()::fc"], [838, 3, 1, "_CPPv4N4Func4FuncERK4Func", "Func::Func"], [824, 3, 1, "_CPPv4NK4FuncclERK5RangeRR5Value", "Func::operator()"], [838, 3, 1, "_CPPv4N4FuncclERK5Input", "Func::operator()"], [824, 4, 1, "_CPPv4NK4FuncclERK5RangeRR5Value", "Func::operator()::range"], [838, 4, 1, "_CPPv4N4FuncclERK5Input", "Func::operator()::v"], [824, 4, 1, "_CPPv4NK4FuncclERK5RangeRR5Value", "Func::operator()::x"], [838, 3, 1, "_CPPv4N4FuncD0Ev", "Func::~Func"], [835, 3, 1, "_CPPv4N16FunctionNodeBody4Body4BodyERK4Body", "FunctionNodeBody::Body::Body"], [835, 3, 1, "_CPPv4N16FunctionNodeBody4BodyclERK5Input", "FunctionNodeBody::Body::operator()"], [835, 4, 1, "_CPPv4N16FunctionNodeBody4BodyclERK5Input", "FunctionNodeBody::Body::operator()::v"], [835, 3, 1, "_CPPv4N16FunctionNodeBody4BodyD0Ev", "FunctionNodeBody::Body::~Body"], [832, 3, 1, "_CPPv4N1H1HERK1H", "H::H"], [832, 3, 1, "_CPPv4NK1H5equalERK7KeyTypeRK7KeyType", "H::equal"], [832, 4, 1, "_CPPv4NK1H5equalERK7KeyTypeRK7KeyType", "H::equal::k1"], [832, 4, 1, "_CPPv4NK1H5equalERK7KeyTypeRK7KeyType", "H::equal::k2"], [832, 3, 1, "_CPPv4NK1H4hashERK7KeyType", "H::hash"], [832, 4, 1, "_CPPv4NK1H4hashERK7KeyType", "H::hash::k"], [832, 3, 1, "_CPPv4N1HD0Ev", "H::~H"], [822, 3, 1, "_CPPv4N5Index5IndexERK5Index", "Index::Index"], [822, 3, 1, "_CPPv4N5Index5IndexEi", "Index::Index"], [822, 3, 1, "_CPPv4N5IndexD0Ev", "Index::~Index"], [837, 3, 1, "_CPPv4N13InputNodeBody4Body4BodyERK4Body", "InputNodeBody::Body::Body"], [837, 3, 1, "_CPPv4N13InputNodeBody4BodyclERN6oneapi3tbb12flow_controlE", "InputNodeBody::Body::operator()"], [837, 4, 1, "_CPPv4N13InputNodeBody4BodyclERN6oneapi3tbb12flow_controlE", "InputNodeBody::Body::operator()::fc"], [837, 3, 1, "_CPPv4N13InputNodeBody4BodyD0Ev", "InputNodeBody::Body::~Body"], [818, 3, 1, "_CPPv4NK14LastFilterBody4BodyclE9InputType", "LastFilterBody::Body::operator()"], [818, 4, 1, "_CPPv4NK14LastFilterBody4BodyclE9InputType", "LastFilterBody::Body::operator()::item"], [818, 3, 1, "_CPPv4NK16MiddleFilterBody4BodyclE9InputType", "MiddleFilterBody::Body::operator()"], [818, 4, 1, "_CPPv4NK16MiddleFilterBody4BodyclE9InputType", "MiddleFilterBody::Body::operator()::item"], [839, 3, 1, "_CPPv4N21MultifunctionNodeBody4Body4BodyERK4Body", "MultifunctionNodeBody::Body::Body"], [839, 3, 1, "_CPPv4N21MultifunctionNodeBody4BodyclERK5InputR15OutputPortsType", "MultifunctionNodeBody::Body::operator()"], [839, 4, 1, "_CPPv4N21MultifunctionNodeBody4BodyclERK5InputR15OutputPortsType", "MultifunctionNodeBody::Body::operator()::p"], [839, 4, 1, "_CPPv4N21MultifunctionNodeBody4BodyclERK5InputR15OutputPortsType", "MultifunctionNodeBody::Body::operator()::v"], [839, 3, 1, "_CPPv4N21MultifunctionNodeBody4BodyD0Ev", "MultifunctionNodeBody::Body::~Body"], [823, 3, 1, "_CPPv4N18ParallelReduceBody4Body4BodyER4Body5split", "ParallelReduceBody::Body::Body"], [823, 3, 1, "_CPPv4N18ParallelReduceBody4Body4joinER4Body", "ParallelReduceBody::Body::join"], [823, 4, 1, "_CPPv4N18ParallelReduceBody4Body4joinER4Body", "ParallelReduceBody::Body::join::rhs"], [823, 3, 1, "_CPPv4N18ParallelReduceBody4BodyclERK5Range", "ParallelReduceBody::Body::operator()"], [823, 4, 1, "_CPPv4N18ParallelReduceBody4BodyclERK5Range", "ParallelReduceBody::Body::operator()::range"], [823, 3, 1, "_CPPv4N18ParallelReduceBody4BodyD0Ev", "ParallelReduceBody::Body::~Body"], [829, 3, 1, "_CPPv4N1R1RER1R18proportional_split", "R::R"], [829, 3, 1, "_CPPv4N1R1RER1R5split", "R::R"], [829, 3, 1, "_CPPv4N1R1RERK1R", "R::R"], [829, 4, 1, "_CPPv4N1R1RER1R18proportional_split", "R::R::proportion"], [829, 4, 1, "_CPPv4N1R1RER1R18proportional_split", "R::R::r"], [829, 4, 1, "_CPPv4N1R1RER1R5split", "R::R::r"], [829, 3, 1, "_CPPv4NK1R5emptyEv", "R::empty"], [829, 3, 1, "_CPPv4NK1R12is_divisibleEv", "R::is_divisible"], [829, 3, 1, "_CPPv4N1RD0Ev", "R::~R"], [842, 5, 1, "_CPPv4N3RWM11scoped_lockE", "RWM::scoped_lock"], [842, 6, 1, "_CPPv4N3RWM11scoped_lock1M13is_fair_mutexE", "RWM::scoped_lock::M::is_fair_mutex"], [842, 6, 1, "_CPPv4N3RWM11scoped_lock1M18is_recursive_mutexE", "RWM::scoped_lock::M::is_recursive_mutex"], [842, 6, 1, "_CPPv4N3RWM11scoped_lock1M11is_rw_mutexE", "RWM::scoped_lock::M::is_rw_mutex"], [842, 3, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lockER3RWMb", "RWM::scoped_lock::RWM::scoped_lock"], [842, 3, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lockEv", "RWM::scoped_lock::RWM::scoped_lock"], [842, 3, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock7acquireER3RWMb", "RWM::scoped_lock::RWM::scoped_lock::acquire"], [842, 4, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock7acquireER3RWMb", "RWM::scoped_lock::RWM::scoped_lock::acquire::write"], [842, 3, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock19downgrade_to_readerEv", "RWM::scoped_lock::RWM::scoped_lock::downgrade_to_reader"], [842, 3, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock7releaseEv", "RWM::scoped_lock::RWM::scoped_lock::release"], [842, 3, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock11try_acquireER3RWMb", "RWM::scoped_lock::RWM::scoped_lock::try_acquire"], [842, 4, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock11try_acquireER3RWMb", "RWM::scoped_lock::RWM::scoped_lock::try_acquire::write"], [842, 3, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock17upgrade_to_writerEv", "RWM::scoped_lock::RWM::scoped_lock::upgrade_to_writer"], [842, 4, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lockER3RWMb", "RWM::scoped_lock::RWM::scoped_lock::write"], [842, 3, 1, "_CPPv4N3RWM11scoped_lock3RWMD0Ev", "RWM::scoped_lock::RWM::~scoped_lock"], [825, 3, 1, "_CPPv4NK9ReductionclERR5ValueRR5Value", "Reduction::operator()"], [825, 4, 1, "_CPPv4NK9ReductionclERR5ValueRR5Value", "Reduction::operator()::x"], [825, 4, 1, "_CPPv4NK9ReductionclERR5ValueRR5Value", "Reduction::operator()::y"], [840, 3, 1, "_CPPv4N1S1SERK1S", "S::S"], [840, 3, 1, "_CPPv4N1SclERK1T", "S::operator()"], [840, 4, 1, "_CPPv4N1SclERK1T", "S::operator()::v"], [840, 3, 1, "_CPPv4N1SD0Ev", "S::~S"], [828, 3, 1, "_CPPv4NK4ScanclERK5RangeRK5Valueb", "Scan::operator()"], [828, 4, 1, "_CPPv4NK4ScanclERK5RangeRK5Valueb", "Scan::operator()::is_final"], [828, 4, 1, "_CPPv4NK4ScanclERK5RangeRK5Valueb", "Scan::operator()::r"], [828, 4, 1, "_CPPv4NK4ScanclERK5RangeRK5Valueb", "Scan::operator()::sum"], [818, 3, 1, "_CPPv4NK16SingleFilterBody4BodyclERN6oneapi3tbb12flow_controlE", "SingleFilterBody::Body::operator()"], [818, 4, 1, "_CPPv4NK16SingleFilterBody4BodyclERN6oneapi3tbb12flow_controlE", "SingleFilterBody::Body::operator()::fc"], [843, 3, 1, "_CPPv4N11SuspendFunc4Func4FuncERK4Func", "SuspendFunc::Func::Func"], [843, 3, 1, "_CPPv4N11SuspendFunc4FuncclEN6oneapi3tbb4task13suspend_pointE", "SuspendFunc::Func::operator()"], [836, 3, 1, "_CPPv4N1T12release_waitEv", "T::release_wait"], [836, 3, 1, "_CPPv4N1T12reserve_waitEv", "T::reserve_wait"], [836, 3, 1, "_CPPv4N1T7try_putERK6Output", "T::try_put"], [836, 4, 1, "_CPPv4N1T7try_putERK6Output", "T::try_put::v"], [816, 3, 1, "_CPPv4N5Value5ValueERK5Value", "Value::Value"], [816, 3, 1, "_CPPv4N5ValueD0Ev", "Value::~Value"], [830, 3, 1, "_CPPv4N1X1XER1X5split", "X::X"], [830, 4, 1, "_CPPv4N1X1XER1X5split", "X::X::x"], [772, 3, 1, "_CPPv48activatev", "activate"], [852, 3, 1, "_CPPv412active_value9parameter", "active_value"], [852, 4, 1, "_CPPv412active_value9parameter", "active_value::param"], [568, 3, 1, "_CPPv43addRK4Item", "add"], [568, 3, 1, "_CPPv43addRR4Item", "add"], [568, 4, 1, "_CPPv43addRK4Item", "add::item"], [568, 4, 1, "_CPPv43addRR4Item", "add::item"], [799, 3, 1, "_CPPv48allocate9size_type", "allocate"], [799, 4, 1, "_CPPv48allocate9size_type", "allocate::n"], [756, 7, 1, "_CPPv46attach", "attach"], [856, 6, 1, "_CPPv49automatic", "automatic"], [565, 3, 1, "_CPPv4NK5beginEv", "begin"], [565, 3, 1, "_CPPv413blocked_range5Value5Value9size_type", "blocked_range"], [565, 3, 1, "_CPPv413blocked_rangeR13blocked_range18proportional_split", "blocked_range"], [565, 3, 1, "_CPPv413blocked_rangeR13blocked_range5split", "blocked_range"], [565, 4, 1, "_CPPv413blocked_range5Value5Value9size_type", "blocked_range::begin"], [565, 4, 1, "_CPPv413blocked_range5Value5Value9size_type", "blocked_range::end"], [565, 4, 1, "_CPPv413blocked_range5Value5Value9size_type", "blocked_range::grainsize"], [565, 4, 1, "_CPPv413blocked_rangeR13blocked_range18proportional_split", "blocked_range::proportion"], [565, 4, 1, "_CPPv413blocked_rangeR13blocked_range18proportional_split", "blocked_range::range"], [565, 4, 1, "_CPPv413blocked_rangeR13blocked_range5split", "blocked_range::range"], [759, 3, 1, "_CPPv414broadcast_nodeR5graph", "broadcast_node"], [759, 3, 1, "_CPPv414broadcast_nodeRK14broadcast_node", "broadcast_node"], [759, 4, 1, "_CPPv414broadcast_nodeR5graph", "broadcast_node::g"], [759, 4, 1, "_CPPv414broadcast_nodeRK14broadcast_node", "broadcast_node::src"], [760, 3, 1, "_CPPv411buffer_nodeR5graph", "buffer_node"], [760, 3, 1, "_CPPv411buffer_nodeRK11buffer_node", "buffer_node"], [760, 4, 1, "_CPPv411buffer_nodeR5graph", "buffer_node::g"], [760, 4, 1, "_CPPv411buffer_nodeRK11buffer_node", "buffer_node::src"], [800, 3, 1, "_CPPv422cache_aligned_resourcePNSt3pmr15memory_resourceE", "cache_aligned_resource"], [800, 3, 1, "_CPPv422cache_aligned_resourcev", "cache_aligned_resource"], [800, 4, 1, "_CPPv422cache_aligned_resourcePNSt3pmr15memory_resourceE", "cache_aligned_resource::r"], [769, 3, 1, "_CPPv46cancelv", "cancel"], [854, 3, 1, "_CPPv422cancel_group_executionv", "cancel_group_execution"], [854, 3, 1, "_CPPv419capture_fp_settingsv", "capture_fp_settings"], [792, 3, 1, "_CPPv4I0ENK7cast_toERK1Vv", "cast_to"], [792, 8, 1, "_CPPv4I0ENK7cast_toERK1Vv", "cast_to::V"], [574, 3, 1, "_CPPv45clearv", "clear"], [567, 3, 1, "_CPPv423collaborative_once_flagv", "collaborative_once_flag"], [761, 3, 1, "_CPPv414composite_nodeR5graph", "composite_node"], [761, 4, 1, "_CPPv414composite_nodeR5graph", "composite_node::g"], [565, 5, 1, "_CPPv414const_iterator", "const_iterator"], [856, 7, 1, "_CPPv411constraints", "constraints"], [856, 3, 1, "_CPPv4N11constraints11constraintsE12numa_node_idi", "constraints::constraints"], [856, 4, 1, "_CPPv4N11constraints11constraintsE12numa_node_idi", "constraints::constraints::max_concurrency_"], [856, 4, 1, "_CPPv4N11constraints11constraintsE12numa_node_idi", "constraints::constraints::numa_node_"], [856, 6, 1, "_CPPv4N11constraints9core_typeE", "constraints::core_type"], [856, 6, 1, "_CPPv4N11constraints15max_concurrencyE", "constraints::max_concurrency"], [856, 6, 1, "_CPPv4N11constraints20max_threads_per_coreE", "constraints::max_threads_per_core"], [856, 6, 1, "_CPPv4N11constraints7numa_idE", "constraints::numa_id"], [856, 3, 1, "_CPPv4N11constraints13set_core_typeE12core_type_id", "constraints::set_core_type"], [856, 4, 1, "_CPPv4N11constraints13set_core_typeE12core_type_id", "constraints::set_core_type::id"], [856, 3, 1, "_CPPv4N11constraints19set_max_concurrencyEi", "constraints::set_max_concurrency"], [856, 4, 1, "_CPPv4N11constraints19set_max_concurrencyEi", "constraints::set_max_concurrency::maximal_concurrency"], [856, 3, 1, "_CPPv4N11constraints24set_max_threads_per_coreEi", "constraints::set_max_threads_per_core"], [856, 4, 1, "_CPPv4N11constraints24set_max_threads_per_coreEi", "constraints::set_max_threads_per_core::threads_number"], [856, 3, 1, "_CPPv4N11constraints11set_numa_idE12numa_node_id", "constraints::set_numa_id"], [856, 4, 1, "_CPPv4N11constraints11set_numa_idE12numa_node_id", "constraints::set_numa_id::id"], [795, 3, 1, "_CPPv410core_typesv", "core_types"], [856, 3, 1, "_CPPv423create_numa_task_arenasN10task_arena11constraintsEj", "create_numa_task_arenas"], [856, 4, 1, "_CPPv423create_numa_task_arenasN10task_arena11constraintsEj", "create_numa_task_arenas::constraints_"], [856, 4, 1, "_CPPv423create_numa_task_arenasN10task_arena11constraintsEj", "create_numa_task_arenas::reserved_slots"], [799, 3, 1, "_CPPv410deallocateP1T9size_type", "deallocate"], [799, 4, 1, "_CPPv410deallocateP1T9size_type", "deallocate::n"], [799, 4, 1, "_CPPv410deallocateP1T9size_type", "deallocate::p"], [795, 3, 1, "_CPPv419default_concurrency12numa_node_id", "default_concurrency"], [795, 3, 1, "_CPPv419default_concurrencyN10task_arena11constraintsE", "default_concurrency"], [795, 4, 1, "_CPPv419default_concurrencyN10task_arena11constraintsE", "default_concurrency::c"], [795, 4, 1, "_CPPv419default_concurrency12numa_node_id", "default_concurrency::id"], [159, 9, 1, "_CPPv4N4dnnl9algorithmE", "dnnl::algorithm"], [159, 10, 1, "_CPPv4N4dnnl9algorithm10binary_addE", "dnnl::algorithm::binary_add"], [159, 10, 1, "_CPPv4N4dnnl9algorithm10binary_divE", "dnnl::algorithm::binary_div"], [159, 10, 1, "_CPPv4N4dnnl9algorithm9binary_eqE", "dnnl::algorithm::binary_eq"], [159, 10, 1, "_CPPv4N4dnnl9algorithm9binary_geE", "dnnl::algorithm::binary_ge"], [159, 10, 1, "_CPPv4N4dnnl9algorithm9binary_gtE", "dnnl::algorithm::binary_gt"], [159, 10, 1, "_CPPv4N4dnnl9algorithm9binary_leE", "dnnl::algorithm::binary_le"], [159, 10, 1, "_CPPv4N4dnnl9algorithm9binary_ltE", "dnnl::algorithm::binary_lt"], [159, 10, 1, "_CPPv4N4dnnl9algorithm10binary_maxE", "dnnl::algorithm::binary_max"], [159, 10, 1, "_CPPv4N4dnnl9algorithm10binary_minE", "dnnl::algorithm::binary_min"], [159, 10, 1, "_CPPv4N4dnnl9algorithm10binary_mulE", "dnnl::algorithm::binary_mul"], [159, 10, 1, "_CPPv4N4dnnl9algorithm9binary_neE", "dnnl::algorithm::binary_ne"], [159, 10, 1, "_CPPv4N4dnnl9algorithm10binary_subE", "dnnl::algorithm::binary_sub"], [159, 10, 1, "_CPPv4N4dnnl9algorithm16convolution_autoE", "dnnl::algorithm::convolution_auto"], [159, 10, 1, "_CPPv4N4dnnl9algorithm18convolution_directE", "dnnl::algorithm::convolution_direct"], [159, 10, 1, "_CPPv4N4dnnl9algorithm20convolution_winogradE", "dnnl::algorithm::convolution_winograd"], [159, 10, 1, "_CPPv4N4dnnl9algorithm20deconvolution_directE", "dnnl::algorithm::deconvolution_direct"], [159, 10, 1, "_CPPv4N4dnnl9algorithm22deconvolution_winogradE", "dnnl::algorithm::deconvolution_winograd"], [159, 10, 1, "_CPPv4N4dnnl9algorithm11eltwise_absE", "dnnl::algorithm::eltwise_abs"], [159, 10, 1, "_CPPv4N4dnnl9algorithm20eltwise_bounded_reluE", "dnnl::algorithm::eltwise_bounded_relu"], [159, 10, 1, "_CPPv4N4dnnl9algorithm12eltwise_clipE", "dnnl::algorithm::eltwise_clip"], [159, 10, 1, "_CPPv4N4dnnl9algorithm28eltwise_clip_use_dst_for_bwdE", "dnnl::algorithm::eltwise_clip_use_dst_for_bwd"], [159, 10, 1, "_CPPv4N4dnnl9algorithm11eltwise_eluE", "dnnl::algorithm::eltwise_elu"], [159, 10, 1, "_CPPv4N4dnnl9algorithm27eltwise_elu_use_dst_for_bwdE", "dnnl::algorithm::eltwise_elu_use_dst_for_bwd"], [159, 10, 1, "_CPPv4N4dnnl9algorithm11eltwise_expE", "dnnl::algorithm::eltwise_exp"], [159, 10, 1, "_CPPv4N4dnnl9algorithm27eltwise_exp_use_dst_for_bwdE", "dnnl::algorithm::eltwise_exp_use_dst_for_bwd"], [159, 10, 1, "_CPPv4N4dnnl9algorithm12eltwise_geluE", "dnnl::algorithm::eltwise_gelu"], [159, 10, 1, "_CPPv4N4dnnl9algorithm16eltwise_gelu_erfE", "dnnl::algorithm::eltwise_gelu_erf"], [159, 10, 1, "_CPPv4N4dnnl9algorithm17eltwise_gelu_tanhE", "dnnl::algorithm::eltwise_gelu_tanh"], [159, 10, 1, "_CPPv4N4dnnl9algorithm19eltwise_hardsigmoidE", "dnnl::algorithm::eltwise_hardsigmoid"], [159, 10, 1, "_CPPv4N4dnnl9algorithm17eltwise_hardswishE", "dnnl::algorithm::eltwise_hardswish"], [159, 10, 1, "_CPPv4N4dnnl9algorithm14eltwise_linearE", "dnnl::algorithm::eltwise_linear"], [159, 10, 1, "_CPPv4N4dnnl9algorithm11eltwise_logE", "dnnl::algorithm::eltwise_log"], [159, 10, 1, "_CPPv4N4dnnl9algorithm16eltwise_logisticE", "dnnl::algorithm::eltwise_logistic"], [159, 10, 1, "_CPPv4N4dnnl9algorithm32eltwise_logistic_use_dst_for_bwdE", "dnnl::algorithm::eltwise_logistic_use_dst_for_bwd"], [159, 10, 1, "_CPPv4N4dnnl9algorithm12eltwise_mishE", "dnnl::algorithm::eltwise_mish"], [159, 10, 1, "_CPPv4N4dnnl9algorithm11eltwise_powE", "dnnl::algorithm::eltwise_pow"], [159, 10, 1, "_CPPv4N4dnnl9algorithm12eltwise_reluE", "dnnl::algorithm::eltwise_relu"], [159, 10, 1, "_CPPv4N4dnnl9algorithm28eltwise_relu_use_dst_for_bwdE", "dnnl::algorithm::eltwise_relu_use_dst_for_bwd"], [159, 10, 1, "_CPPv4N4dnnl9algorithm13eltwise_roundE", "dnnl::algorithm::eltwise_round"], [159, 10, 1, "_CPPv4N4dnnl9algorithm17eltwise_soft_reluE", "dnnl::algorithm::eltwise_soft_relu"], [159, 10, 1, "_CPPv4N4dnnl9algorithm12eltwise_sqrtE", "dnnl::algorithm::eltwise_sqrt"], [159, 10, 1, "_CPPv4N4dnnl9algorithm28eltwise_sqrt_use_dst_for_bwdE", "dnnl::algorithm::eltwise_sqrt_use_dst_for_bwd"], [159, 10, 1, "_CPPv4N4dnnl9algorithm14eltwise_squareE", "dnnl::algorithm::eltwise_square"], [159, 10, 1, "_CPPv4N4dnnl9algorithm13eltwise_swishE", "dnnl::algorithm::eltwise_swish"], [159, 10, 1, "_CPPv4N4dnnl9algorithm12eltwise_tanhE", "dnnl::algorithm::eltwise_tanh"], [159, 10, 1, "_CPPv4N4dnnl9algorithm28eltwise_tanh_use_dst_for_bwdE", "dnnl::algorithm::eltwise_tanh_use_dst_for_bwd"], [159, 10, 1, "_CPPv4N4dnnl9algorithm7lbr_gruE", "dnnl::algorithm::lbr_gru"], [159, 10, 1, "_CPPv4N4dnnl9algorithm19lrn_across_channelsE", "dnnl::algorithm::lrn_across_channels"], [159, 10, 1, "_CPPv4N4dnnl9algorithm18lrn_within_channelE", "dnnl::algorithm::lrn_within_channel"], [159, 10, 1, "_CPPv4N4dnnl9algorithm11pooling_avgE", "dnnl::algorithm::pooling_avg"], [159, 10, 1, "_CPPv4N4dnnl9algorithm27pooling_avg_exclude_paddingE", "dnnl::algorithm::pooling_avg_exclude_padding"], [159, 10, 1, "_CPPv4N4dnnl9algorithm27pooling_avg_include_paddingE", "dnnl::algorithm::pooling_avg_include_padding"], [159, 10, 1, "_CPPv4N4dnnl9algorithm11pooling_maxE", "dnnl::algorithm::pooling_max"], [159, 10, 1, "_CPPv4N4dnnl9algorithm13reduction_maxE", "dnnl::algorithm::reduction_max"], [159, 10, 1, "_CPPv4N4dnnl9algorithm14reduction_meanE", "dnnl::algorithm::reduction_mean"], [159, 10, 1, "_CPPv4N4dnnl9algorithm13reduction_minE", "dnnl::algorithm::reduction_min"], [159, 10, 1, "_CPPv4N4dnnl9algorithm13reduction_mulE", "dnnl::algorithm::reduction_mul"], [159, 10, 1, "_CPPv4N4dnnl9algorithm21reduction_norm_lp_maxE", "dnnl::algorithm::reduction_norm_lp_max"], [159, 10, 1, "_CPPv4N4dnnl9algorithm29reduction_norm_lp_power_p_maxE", "dnnl::algorithm::reduction_norm_lp_power_p_max"], [159, 10, 1, "_CPPv4N4dnnl9algorithm29reduction_norm_lp_power_p_sumE", "dnnl::algorithm::reduction_norm_lp_power_p_sum"], [159, 10, 1, "_CPPv4N4dnnl9algorithm21reduction_norm_lp_sumE", "dnnl::algorithm::reduction_norm_lp_sum"], [159, 10, 1, "_CPPv4N4dnnl9algorithm13reduction_sumE", "dnnl::algorithm::reduction_sum"], [159, 10, 1, "_CPPv4N4dnnl9algorithm17resampling_linearE", "dnnl::algorithm::resampling_linear"], [159, 10, 1, "_CPPv4N4dnnl9algorithm18resampling_nearestE", "dnnl::algorithm::resampling_nearest"], [159, 10, 1, "_CPPv4N4dnnl9algorithm16softmax_accurateE", "dnnl::algorithm::softmax_accurate"], [159, 10, 1, "_CPPv4N4dnnl9algorithm11softmax_logE", "dnnl::algorithm::softmax_log"], [159, 10, 1, "_CPPv4N4dnnl9algorithm5undefE", "dnnl::algorithm::undef"], [159, 10, 1, "_CPPv4N4dnnl9algorithm11vanilla_gruE", "dnnl::algorithm::vanilla_gru"], [159, 10, 1, "_CPPv4N4dnnl9algorithm12vanilla_lstmE", "dnnl::algorithm::vanilla_lstm"], [159, 10, 1, "_CPPv4N4dnnl9algorithm11vanilla_rnnE", "dnnl::algorithm::vanilla_rnn"], [154, 7, 1, "_CPPv4N4dnnl28batch_normalization_backwardE", "dnnl::batch_normalization_backward"], [154, 3, 1, "_CPPv4N4dnnl28batch_normalization_backward28batch_normalization_backwardERK14primitive_desc", "dnnl::batch_normalization_backward::batch_normalization_backward"], [154, 3, 1, "_CPPv4N4dnnl28batch_normalization_backward28batch_normalization_backwardEv", "dnnl::batch_normalization_backward::batch_normalization_backward"], [154, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward28batch_normalization_backwardERK14primitive_desc", "dnnl::batch_normalization_backward::batch_normalization_backward::pd"], [154, 7, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_descE", "dnnl::batch_normalization_backward::primitive_desc"], [154, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc13diff_dst_descEv", "dnnl::batch_normalization_backward::primitive_desc::diff_dst_desc"], [154, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc13diff_src_descEv", "dnnl::batch_normalization_backward::primitive_desc::diff_src_desc"], [154, 3, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc17diff_weights_descEv", "dnnl::batch_normalization_backward::primitive_desc::diff_weights_desc"], [154, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc8dst_descEv", "dnnl::batch_normalization_backward::primitive_desc::dst_desc"], [154, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc11get_epsilonEv", "dnnl::batch_normalization_backward::primitive_desc::get_epsilon"], [154, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc9get_flagsEv", "dnnl::batch_normalization_backward::primitive_desc::get_flags"], [154, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc13get_prop_kindEv", "dnnl::batch_normalization_backward::primitive_desc::get_prop_kind"], [154, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc9mean_descEv", "dnnl::batch_normalization_backward::primitive_desc::mean_desc"], [154, 3, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc"], [154, 3, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descEv", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc"], [154, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::aengine"], [154, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::allow_empty"], [154, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::aprop_kind"], [154, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::attr"], [154, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::diff_dst_desc"], [154, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::diff_src_desc"], [154, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::epsilon"], [154, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::flags"], [154, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [154, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::src_desc"], [154, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc8src_descEv", "dnnl::batch_normalization_backward::primitive_desc::src_desc"], [154, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc13variance_descEv", "dnnl::batch_normalization_backward::primitive_desc::variance_desc"], [154, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc12weights_descEv", "dnnl::batch_normalization_backward::primitive_desc::weights_desc"], [154, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc14workspace_descEv", "dnnl::batch_normalization_backward::primitive_desc::workspace_desc"], [154, 7, 1, "_CPPv4N4dnnl27batch_normalization_forwardE", "dnnl::batch_normalization_forward"], [154, 3, 1, "_CPPv4N4dnnl27batch_normalization_forward27batch_normalization_forwardERK14primitive_desc", "dnnl::batch_normalization_forward::batch_normalization_forward"], [154, 3, 1, "_CPPv4N4dnnl27batch_normalization_forward27batch_normalization_forwardEv", "dnnl::batch_normalization_forward::batch_normalization_forward"], [154, 4, 1, "_CPPv4N4dnnl27batch_normalization_forward27batch_normalization_forwardERK14primitive_desc", "dnnl::batch_normalization_forward::batch_normalization_forward::pd"], [154, 7, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_descE", "dnnl::batch_normalization_forward::primitive_desc"], [154, 3, 1, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc8dst_descEv", "dnnl::batch_normalization_forward::primitive_desc::dst_desc"], [154, 3, 1, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc11get_epsilonEv", "dnnl::batch_normalization_forward::primitive_desc::get_epsilon"], [154, 3, 1, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc9get_flagsEv", "dnnl::batch_normalization_forward::primitive_desc::get_flags"], [154, 3, 1, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc13get_prop_kindEv", "dnnl::batch_normalization_forward::primitive_desc::get_prop_kind"], [154, 3, 1, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc9mean_descEv", "dnnl::batch_normalization_forward::primitive_desc::mean_desc"], [154, 3, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc"], [154, 3, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descEv", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc"], [154, 4, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc::aengine"], [154, 4, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc::allow_empty"], [154, 4, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc::aprop_kind"], [154, 4, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc::attr"], [154, 4, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc::dst_desc"], [154, 4, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc::epsilon"], [154, 4, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc::flags"], [154, 4, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc::src_desc"], [154, 3, 1, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc8src_descEv", "dnnl::batch_normalization_forward::primitive_desc::src_desc"], [154, 3, 1, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc13variance_descEv", "dnnl::batch_normalization_forward::primitive_desc::variance_desc"], [154, 3, 1, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc12weights_descEv", "dnnl::batch_normalization_forward::primitive_desc::weights_desc"], [154, 3, 1, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc14workspace_descEv", "dnnl::batch_normalization_forward::primitive_desc::workspace_desc"], [155, 7, 1, "_CPPv4N4dnnl6binaryE", "dnnl::binary"], [155, 3, 1, "_CPPv4N4dnnl6binary6binaryERK14primitive_desc", "dnnl::binary::binary"], [155, 3, 1, "_CPPv4N4dnnl6binary6binaryEv", "dnnl::binary::binary"], [155, 4, 1, "_CPPv4N4dnnl6binary6binaryERK14primitive_desc", "dnnl::binary::binary::pd"], [155, 7, 1, "_CPPv4N4dnnl6binary14primitive_descE", "dnnl::binary::primitive_desc"], [155, 3, 1, "_CPPv4NK4dnnl6binary14primitive_desc8dst_descEv", "dnnl::binary::primitive_desc::dst_desc"], [155, 3, 1, "_CPPv4NK4dnnl6binary14primitive_desc13get_algorithmEv", "dnnl::binary::primitive_desc::get_algorithm"], [155, 3, 1, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::binary::primitive_desc::primitive_desc"], [155, 3, 1, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descEv", "dnnl::binary::primitive_desc::primitive_desc"], [155, 4, 1, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::binary::primitive_desc::primitive_desc::aalgorithm"], [155, 4, 1, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::binary::primitive_desc::primitive_desc::aengine"], [155, 4, 1, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::binary::primitive_desc::primitive_desc::allow_empty"], [155, 4, 1, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::binary::primitive_desc::primitive_desc::attr"], [155, 4, 1, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::binary::primitive_desc::primitive_desc::dst"], [155, 4, 1, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::binary::primitive_desc::primitive_desc::src0"], [155, 4, 1, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::binary::primitive_desc::primitive_desc::src1"], [155, 3, 1, "_CPPv4NK4dnnl6binary14primitive_desc9src0_descEv", "dnnl::binary::primitive_desc::src0_desc"], [155, 3, 1, "_CPPv4NK4dnnl6binary14primitive_desc9src1_descEv", "dnnl::binary::primitive_desc::src1_desc"], [155, 3, 1, "_CPPv4NK4dnnl6binary14primitive_desc8src_descEi", "dnnl::binary::primitive_desc::src_desc"], [155, 4, 1, "_CPPv4NK4dnnl6binary14primitive_desc8src_descEi", "dnnl::binary::primitive_desc::src_desc::idx"], [156, 7, 1, "_CPPv4N4dnnl6concatE", "dnnl::concat"], [156, 3, 1, "_CPPv4N4dnnl6concat6concatERK14primitive_desc", "dnnl::concat::concat"], [156, 3, 1, "_CPPv4N4dnnl6concat6concatEv", "dnnl::concat::concat"], [156, 4, 1, "_CPPv4N4dnnl6concat6concatERK14primitive_desc", "dnnl::concat::concat::pd"], [156, 7, 1, "_CPPv4N4dnnl6concat14primitive_descE", "dnnl::concat::primitive_desc"], [156, 3, 1, "_CPPv4NK4dnnl6concat14primitive_desc8dst_descEv", "dnnl::concat::primitive_desc::dst_desc"], [156, 3, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descERKN6memory4descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc"], [156, 3, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc"], [156, 3, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descEv", "dnnl::concat::primitive_desc::primitive_desc"], [156, 4, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descERKN6memory4descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc::aengine"], [156, 4, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc::aengine"], [156, 4, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descERKN6memory4descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc::attr"], [156, 4, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc::attr"], [156, 4, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descERKN6memory4descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc::concat_dimension"], [156, 4, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc::concat_dimension"], [156, 4, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descERKN6memory4descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc::dst"], [156, 4, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descERKN6memory4descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc::srcs"], [156, 4, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc::srcs"], [156, 3, 1, "_CPPv4NK4dnnl6concat14primitive_desc8src_descEi", "dnnl::concat::primitive_desc::src_desc"], [156, 4, 1, "_CPPv4NK4dnnl6concat14primitive_desc8src_descEi", "dnnl::concat::primitive_desc::src_desc::idx"], [157, 7, 1, "_CPPv4N4dnnl25convolution_backward_dataE", "dnnl::convolution_backward_data"], [157, 3, 1, "_CPPv4N4dnnl25convolution_backward_data25convolution_backward_dataERK14primitive_desc", "dnnl::convolution_backward_data::convolution_backward_data"], [157, 3, 1, "_CPPv4N4dnnl25convolution_backward_data25convolution_backward_dataEv", "dnnl::convolution_backward_data::convolution_backward_data"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data25convolution_backward_dataERK14primitive_desc", "dnnl::convolution_backward_data::convolution_backward_data::pd"], [157, 7, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_descE", "dnnl::convolution_backward_data::primitive_desc"], [157, 3, 1, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13diff_dst_descEv", "dnnl::convolution_backward_data::primitive_desc::diff_dst_desc"], [157, 3, 1, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13diff_src_descEv", "dnnl::convolution_backward_data::primitive_desc::diff_src_desc"], [157, 3, 1, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_algorithmEv", "dnnl::convolution_backward_data::primitive_desc::get_algorithm"], [157, 3, 1, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_dilationsEv", "dnnl::convolution_backward_data::primitive_desc::get_dilations"], [157, 3, 1, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_padding_lEv", "dnnl::convolution_backward_data::primitive_desc::get_padding_l"], [157, 3, 1, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_padding_rEv", "dnnl::convolution_backward_data::primitive_desc::get_padding_r"], [157, 3, 1, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_prop_kindEv", "dnnl::convolution_backward_data::primitive_desc::get_prop_kind"], [157, 3, 1, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc11get_stridesEv", "dnnl::convolution_backward_data::primitive_desc::get_strides"], [157, 3, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descEv", "dnnl::convolution_backward_data::primitive_desc::primitive_desc"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::diff_dst_desc"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::diff_dst_desc"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::diff_src_desc"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::diff_src_desc"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::dilates"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::hint_fwd_pd"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::hint_fwd_pd"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::strides"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::strides"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::weights_desc"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::weights_desc"], [157, 3, 1, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc12weights_descEv", "dnnl::convolution_backward_data::primitive_desc::weights_desc"], [157, 7, 1, "_CPPv4N4dnnl28convolution_backward_weightsE", "dnnl::convolution_backward_weights"], [157, 3, 1, "_CPPv4N4dnnl28convolution_backward_weights28convolution_backward_weightsERK14primitive_desc", "dnnl::convolution_backward_weights::convolution_backward_weights"], [157, 3, 1, "_CPPv4N4dnnl28convolution_backward_weights28convolution_backward_weightsEv", "dnnl::convolution_backward_weights::convolution_backward_weights"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights28convolution_backward_weightsERK14primitive_desc", "dnnl::convolution_backward_weights::convolution_backward_weights::pd"], [157, 7, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_descE", "dnnl::convolution_backward_weights::primitive_desc"], [157, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc14diff_bias_descEv", "dnnl::convolution_backward_weights::primitive_desc::diff_bias_desc"], [157, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13diff_dst_descEv", "dnnl::convolution_backward_weights::primitive_desc::diff_dst_desc"], [157, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc17diff_weights_descEv", "dnnl::convolution_backward_weights::primitive_desc::diff_weights_desc"], [157, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_algorithmEv", "dnnl::convolution_backward_weights::primitive_desc::get_algorithm"], [157, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_dilationsEv", "dnnl::convolution_backward_weights::primitive_desc::get_dilations"], [157, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_padding_lEv", "dnnl::convolution_backward_weights::primitive_desc::get_padding_l"], [157, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_padding_rEv", "dnnl::convolution_backward_weights::primitive_desc::get_padding_r"], [157, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_prop_kindEv", "dnnl::convolution_backward_weights::primitive_desc::get_prop_kind"], [157, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc11get_stridesEv", "dnnl::convolution_backward_weights::primitive_desc::get_strides"], [157, 3, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descEv", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_bias_desc"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_bias_desc"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::dilates"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::dilates"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::src_desc"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::src_desc"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::src_desc"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::src_desc"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::strides"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::strides"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::strides"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::strides"], [157, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc8src_descEv", "dnnl::convolution_backward_weights::primitive_desc::src_desc"], [157, 7, 1, "_CPPv4N4dnnl19convolution_forwardE", "dnnl::convolution_forward"], [157, 3, 1, "_CPPv4N4dnnl19convolution_forward19convolution_forwardERK14primitive_desc", "dnnl::convolution_forward::convolution_forward"], [157, 3, 1, "_CPPv4N4dnnl19convolution_forward19convolution_forwardEv", "dnnl::convolution_forward::convolution_forward"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward19convolution_forwardERK14primitive_desc", "dnnl::convolution_forward::convolution_forward::pd"], [157, 7, 1, "_CPPv4N4dnnl19convolution_forward14primitive_descE", "dnnl::convolution_forward::primitive_desc"], [157, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc9bias_descEv", "dnnl::convolution_forward::primitive_desc::bias_desc"], [157, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc8dst_descEv", "dnnl::convolution_forward::primitive_desc::dst_desc"], [157, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_algorithmEv", "dnnl::convolution_forward::primitive_desc::get_algorithm"], [157, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_dilationsEv", "dnnl::convolution_forward::primitive_desc::get_dilations"], [157, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_padding_lEv", "dnnl::convolution_forward::primitive_desc::get_padding_l"], [157, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_padding_rEv", "dnnl::convolution_forward::primitive_desc::get_padding_r"], [157, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_prop_kindEv", "dnnl::convolution_forward::primitive_desc::get_prop_kind"], [157, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc11get_stridesEv", "dnnl::convolution_forward::primitive_desc::get_strides"], [157, 3, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descEv", "dnnl::convolution_forward::primitive_desc::primitive_desc"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aprop_kind"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aprop_kind"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aprop_kind"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aprop_kind"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::bias_desc"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::bias_desc"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::dilates"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::dilates"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::dst_desc"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::dst_desc"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::dst_desc"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::dst_desc"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::src_desc"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::src_desc"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::src_desc"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::src_desc"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::strides"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::strides"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::strides"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::strides"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::weights_desc"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::weights_desc"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::weights_desc"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::weights_desc"], [157, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc8src_descEv", "dnnl::convolution_forward::primitive_desc::src_desc"], [157, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc12weights_descEv", "dnnl::convolution_forward::primitive_desc::weights_desc"], [157, 7, 1, "_CPPv4N4dnnl27deconvolution_backward_dataE", "dnnl::deconvolution_backward_data"], [157, 3, 1, "_CPPv4N4dnnl27deconvolution_backward_data27deconvolution_backward_dataERK14primitive_desc", "dnnl::deconvolution_backward_data::deconvolution_backward_data"], [157, 3, 1, "_CPPv4N4dnnl27deconvolution_backward_data27deconvolution_backward_dataEv", "dnnl::deconvolution_backward_data::deconvolution_backward_data"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data27deconvolution_backward_dataERK14primitive_desc", "dnnl::deconvolution_backward_data::deconvolution_backward_data::pd"], [157, 7, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_descE", "dnnl::deconvolution_backward_data::primitive_desc"], [157, 3, 1, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13diff_dst_descEv", "dnnl::deconvolution_backward_data::primitive_desc::diff_dst_desc"], [157, 3, 1, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13diff_src_descEv", "dnnl::deconvolution_backward_data::primitive_desc::diff_src_desc"], [157, 3, 1, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_algorithmEv", "dnnl::deconvolution_backward_data::primitive_desc::get_algorithm"], [157, 3, 1, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_dilationsEv", "dnnl::deconvolution_backward_data::primitive_desc::get_dilations"], [157, 3, 1, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_padding_lEv", "dnnl::deconvolution_backward_data::primitive_desc::get_padding_l"], [157, 3, 1, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_padding_rEv", "dnnl::deconvolution_backward_data::primitive_desc::get_padding_r"], [157, 3, 1, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_prop_kindEv", "dnnl::deconvolution_backward_data::primitive_desc::get_prop_kind"], [157, 3, 1, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc11get_stridesEv", "dnnl::deconvolution_backward_data::primitive_desc::get_strides"], [157, 3, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descEv", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::diff_dst_desc"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::diff_dst_desc"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::diff_src_desc"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::diff_src_desc"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::dilates"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::hint_fwd_pd"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::hint_fwd_pd"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::strides"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::strides"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::weights_desc"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::weights_desc"], [157, 3, 1, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc12weights_descEv", "dnnl::deconvolution_backward_data::primitive_desc::weights_desc"], [157, 7, 1, "_CPPv4N4dnnl30deconvolution_backward_weightsE", "dnnl::deconvolution_backward_weights"], [157, 3, 1, "_CPPv4N4dnnl30deconvolution_backward_weights30deconvolution_backward_weightsERK14primitive_desc", "dnnl::deconvolution_backward_weights::deconvolution_backward_weights"], [157, 3, 1, "_CPPv4N4dnnl30deconvolution_backward_weights30deconvolution_backward_weightsEv", "dnnl::deconvolution_backward_weights::deconvolution_backward_weights"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights30deconvolution_backward_weightsERK14primitive_desc", "dnnl::deconvolution_backward_weights::deconvolution_backward_weights::pd"], [157, 7, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_descE", "dnnl::deconvolution_backward_weights::primitive_desc"], [157, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc14diff_bias_descEv", "dnnl::deconvolution_backward_weights::primitive_desc::diff_bias_desc"], [157, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13diff_dst_descEv", "dnnl::deconvolution_backward_weights::primitive_desc::diff_dst_desc"], [157, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc17diff_weights_descEv", "dnnl::deconvolution_backward_weights::primitive_desc::diff_weights_desc"], [157, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_algorithmEv", "dnnl::deconvolution_backward_weights::primitive_desc::get_algorithm"], [157, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_dilationsEv", "dnnl::deconvolution_backward_weights::primitive_desc::get_dilations"], [157, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_padding_lEv", "dnnl::deconvolution_backward_weights::primitive_desc::get_padding_l"], [157, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_padding_rEv", "dnnl::deconvolution_backward_weights::primitive_desc::get_padding_r"], [157, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_prop_kindEv", "dnnl::deconvolution_backward_weights::primitive_desc::get_prop_kind"], [157, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc11get_stridesEv", "dnnl::deconvolution_backward_weights::primitive_desc::get_strides"], [157, 3, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descEv", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_bias_desc"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_bias_desc"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::dilates"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::dilates"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::src_desc"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::src_desc"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::src_desc"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::src_desc"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::strides"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::strides"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::strides"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::strides"], [157, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc8src_descEv", "dnnl::deconvolution_backward_weights::primitive_desc::src_desc"], [157, 7, 1, "_CPPv4N4dnnl21deconvolution_forwardE", "dnnl::deconvolution_forward"], [157, 3, 1, "_CPPv4N4dnnl21deconvolution_forward21deconvolution_forwardERK14primitive_desc", "dnnl::deconvolution_forward::deconvolution_forward"], [157, 3, 1, "_CPPv4N4dnnl21deconvolution_forward21deconvolution_forwardEv", "dnnl::deconvolution_forward::deconvolution_forward"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward21deconvolution_forwardERK14primitive_desc", "dnnl::deconvolution_forward::deconvolution_forward::pd"], [157, 7, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_descE", "dnnl::deconvolution_forward::primitive_desc"], [157, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc9bias_descEv", "dnnl::deconvolution_forward::primitive_desc::bias_desc"], [157, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc8dst_descEv", "dnnl::deconvolution_forward::primitive_desc::dst_desc"], [157, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_algorithmEv", "dnnl::deconvolution_forward::primitive_desc::get_algorithm"], [157, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_dilationsEv", "dnnl::deconvolution_forward::primitive_desc::get_dilations"], [157, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_padding_lEv", "dnnl::deconvolution_forward::primitive_desc::get_padding_l"], [157, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_padding_rEv", "dnnl::deconvolution_forward::primitive_desc::get_padding_r"], [157, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_prop_kindEv", "dnnl::deconvolution_forward::primitive_desc::get_prop_kind"], [157, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc11get_stridesEv", "dnnl::deconvolution_forward::primitive_desc::get_strides"], [157, 3, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descEv", "dnnl::deconvolution_forward::primitive_desc::primitive_desc"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aprop_kind"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aprop_kind"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aprop_kind"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aprop_kind"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::bias_desc"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::bias_desc"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::dilates"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::dilates"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::dst_desc"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::dst_desc"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::dst_desc"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::dst_desc"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::src_desc"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::src_desc"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::src_desc"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::src_desc"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::strides"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::strides"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::strides"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::strides"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::weights_desc"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::weights_desc"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::weights_desc"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::weights_desc"], [157, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc8src_descEv", "dnnl::deconvolution_forward::primitive_desc::src_desc"], [157, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc12weights_descEv", "dnnl::deconvolution_forward::primitive_desc::weights_desc"], [158, 7, 1, "_CPPv4N4dnnl16eltwise_backwardE", "dnnl::eltwise_backward"], [158, 3, 1, "_CPPv4N4dnnl16eltwise_backward16eltwise_backwardERK14primitive_desc", "dnnl::eltwise_backward::eltwise_backward"], [158, 3, 1, "_CPPv4N4dnnl16eltwise_backward16eltwise_backwardEv", "dnnl::eltwise_backward::eltwise_backward"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward16eltwise_backwardERK14primitive_desc", "dnnl::eltwise_backward::eltwise_backward::pd"], [158, 7, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_descE", "dnnl::eltwise_backward::primitive_desc"], [158, 3, 1, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc13diff_dst_descEv", "dnnl::eltwise_backward::primitive_desc::diff_dst_desc"], [158, 3, 1, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc13diff_src_descEv", "dnnl::eltwise_backward::primitive_desc::diff_src_desc"], [158, 3, 1, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc13get_algorithmEv", "dnnl::eltwise_backward::primitive_desc::get_algorithm"], [158, 3, 1, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc9get_alphaEv", "dnnl::eltwise_backward::primitive_desc::get_alpha"], [158, 3, 1, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc8get_betaEv", "dnnl::eltwise_backward::primitive_desc::get_beta"], [158, 3, 1, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc13get_prop_kindEv", "dnnl::eltwise_backward::primitive_desc::get_prop_kind"], [158, 3, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc"], [158, 3, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc"], [158, 3, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc"], [158, 3, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descEv", "dnnl::eltwise_backward::primitive_desc::primitive_desc"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::aalgorithm"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::aalgorithm"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::aalgorithm"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::aengine"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::aengine"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::aengine"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::allow_empty"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::allow_empty"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::allow_empty"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::alpha"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::alpha"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::attr"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::attr"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::attr"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::beta"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::data_desc"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::data_desc"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::data_desc"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::diff_dst_desc"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::diff_dst_desc"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::diff_dst_desc"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::diff_src_desc"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::diff_src_desc"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::diff_src_desc"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [158, 3, 1, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc8src_descEv", "dnnl::eltwise_backward::primitive_desc::src_desc"], [158, 7, 1, "_CPPv4N4dnnl15eltwise_forwardE", "dnnl::eltwise_forward"], [158, 3, 1, "_CPPv4N4dnnl15eltwise_forward15eltwise_forwardERK14primitive_desc", "dnnl::eltwise_forward::eltwise_forward"], [158, 3, 1, "_CPPv4N4dnnl15eltwise_forward15eltwise_forwardEv", "dnnl::eltwise_forward::eltwise_forward"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward15eltwise_forwardERK14primitive_desc", "dnnl::eltwise_forward::eltwise_forward::pd"], [158, 7, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_descE", "dnnl::eltwise_forward::primitive_desc"], [158, 3, 1, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc8dst_descEv", "dnnl::eltwise_forward::primitive_desc::dst_desc"], [158, 3, 1, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc13get_algorithmEv", "dnnl::eltwise_forward::primitive_desc::get_algorithm"], [158, 3, 1, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc9get_alphaEv", "dnnl::eltwise_forward::primitive_desc::get_alpha"], [158, 3, 1, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc8get_betaEv", "dnnl::eltwise_forward::primitive_desc::get_beta"], [158, 3, 1, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc13get_prop_kindEv", "dnnl::eltwise_forward::primitive_desc::get_prop_kind"], [158, 3, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc"], [158, 3, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc"], [158, 3, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc"], [158, 3, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descEv", "dnnl::eltwise_forward::primitive_desc::primitive_desc"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::aalgorithm"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::aalgorithm"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::aalgorithm"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::aengine"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::aengine"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::aengine"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::allow_empty"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::allow_empty"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::allow_empty"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::alpha"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::alpha"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::aprop_kind"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::aprop_kind"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::aprop_kind"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::attr"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::attr"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::attr"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::beta"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::dst_desc"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::dst_desc"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::dst_desc"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::src_desc"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::src_desc"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::src_desc"], [158, 3, 1, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc8src_descEv", "dnnl::eltwise_forward::primitive_desc::src_desc"], [61, 7, 1, "_CPPv4N4dnnl6engineE", "dnnl::engine"], [61, 3, 1, "_CPPv4N4dnnl6engine6engineE4kind6size_t", "dnnl::engine::engine"], [61, 3, 1, "_CPPv4N4dnnl6engine6engineEv", "dnnl::engine::engine"], [61, 4, 1, "_CPPv4N4dnnl6engine6engineE4kind6size_t", "dnnl::engine::engine::akind"], [61, 4, 1, "_CPPv4N4dnnl6engine6engineE4kind6size_t", "dnnl::engine::engine::index"], [61, 3, 1, "_CPPv4N4dnnl6engine9get_countE4kind", "dnnl::engine::get_count"], [61, 4, 1, "_CPPv4N4dnnl6engine9get_countE4kind", "dnnl::engine::get_count::akind"], [61, 3, 1, "_CPPv4NK4dnnl6engine8get_kindEv", "dnnl::engine::get_kind"], [61, 9, 1, "_CPPv4N4dnnl6engine4kindE", "dnnl::engine::kind"], [61, 10, 1, "_CPPv4N4dnnl6engine4kind3anyE", "dnnl::engine::kind::any"], [61, 10, 1, "_CPPv4N4dnnl6engine4kind3cpuE", "dnnl::engine::kind::cpu"], [61, 10, 1, "_CPPv4N4dnnl6engine4kind3gpuE", "dnnl::engine::kind::gpu"], [151, 7, 1, "_CPPv4N4dnnl5errorE", "dnnl::error"], [63, 7, 1, "_CPPv4N4dnnl5graph5graphE", "dnnl::graph::graph"], [63, 3, 1, "_CPPv4N4dnnl5graph5graph6add_opERK2opb", "dnnl::graph::graph::add_op"], [63, 4, 1, "_CPPv4N4dnnl5graph5graph6add_opERK2opb", "dnnl::graph::graph::add_op::allow_exception"], [63, 4, 1, "_CPPv4N4dnnl5graph5graph6add_opERK2opb", "dnnl::graph::graph::add_op::op"], [63, 3, 1, "_CPPv4N4dnnl5graph5graph8finalizeEv", "dnnl::graph::graph::finalize"], [63, 3, 1, "_CPPv4N4dnnl5graph5graph14get_partitionsEN9partition6policyE", "dnnl::graph::graph::get_partitions"], [63, 4, 1, "_CPPv4N4dnnl5graph5graph14get_partitionsEN9partition6policyE", "dnnl::graph::graph::get_partitions::policy"], [63, 3, 1, "_CPPv4N4dnnl5graph5graph5graphEN4dnnl6engine4kindE", "dnnl::graph::graph::graph"], [63, 3, 1, "_CPPv4N4dnnl5graph5graph5graphEN4dnnl6engine4kindEN4dnnl11fpmath_modeE", "dnnl::graph::graph::graph"], [63, 4, 1, "_CPPv4N4dnnl5graph5graph5graphEN4dnnl6engine4kindE", "dnnl::graph::graph::graph::engine_kind"], [63, 4, 1, "_CPPv4N4dnnl5graph5graph5graphEN4dnnl6engine4kindEN4dnnl11fpmath_modeE", "dnnl::graph::graph::graph::engine_kind"], [63, 4, 1, "_CPPv4N4dnnl5graph5graph5graphEN4dnnl6engine4kindEN4dnnl11fpmath_modeE", "dnnl::graph::graph::graph::mode"], [63, 3, 1, "_CPPv4NK4dnnl5graph5graph12is_finalizedEv", "dnnl::graph::graph::is_finalized"], [63, 7, 1, "_CPPv4N4dnnl5graph14logical_tensorE", "dnnl::graph::logical_tensor"], [63, 9, 1, "_CPPv4N4dnnl5graph14logical_tensor9data_typeE", "dnnl::graph::logical_tensor::data_type"], [63, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor9data_type4bf16E", "dnnl::graph::logical_tensor::data_type::bf16"], [63, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor9data_type7booleanE", "dnnl::graph::logical_tensor::data_type::boolean"], [63, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor9data_type3f16E", "dnnl::graph::logical_tensor::data_type::f16"], [63, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor9data_type3f32E", "dnnl::graph::logical_tensor::data_type::f32"], [63, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor9data_type3s32E", "dnnl::graph::logical_tensor::data_type::s32"], [63, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor9data_type2s8E", "dnnl::graph::logical_tensor::data_type::s8"], [63, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor9data_type2u8E", "dnnl::graph::logical_tensor::data_type::u8"], [63, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor9data_type5undefE", "dnnl::graph::logical_tensor::data_type::undef"], [63, 5, 1, "_CPPv4N4dnnl5graph14logical_tensor3dimE", "dnnl::graph::logical_tensor::dim"], [63, 5, 1, "_CPPv4N4dnnl5graph14logical_tensor4dimsE", "dnnl::graph::logical_tensor::dims"], [63, 3, 1, "_CPPv4N4dnnl5graph14logical_tensor13get_data_typeEv", "dnnl::graph::logical_tensor::get_data_type"], [63, 3, 1, "_CPPv4NK4dnnl5graph14logical_tensor8get_dimsEv", "dnnl::graph::logical_tensor::get_dims"], [63, 3, 1, "_CPPv4NK4dnnl5graph14logical_tensor6get_idEv", "dnnl::graph::logical_tensor::get_id"], [63, 3, 1, "_CPPv4NK4dnnl5graph14logical_tensor13get_layout_idEv", "dnnl::graph::logical_tensor::get_layout_id"], [63, 3, 1, "_CPPv4NK4dnnl5graph14logical_tensor15get_layout_typeEv", "dnnl::graph::logical_tensor::get_layout_type"], [63, 3, 1, "_CPPv4NK4dnnl5graph14logical_tensor12get_mem_sizeEv", "dnnl::graph::logical_tensor::get_mem_size"], [63, 3, 1, "_CPPv4NK4dnnl5graph14logical_tensor17get_property_typeEv", "dnnl::graph::logical_tensor::get_property_type"], [63, 3, 1, "_CPPv4NK4dnnl5graph14logical_tensor11get_stridesEv", "dnnl::graph::logical_tensor::get_strides"], [63, 3, 1, "_CPPv4N4dnnl5graph14logical_tensor8is_equalERK14logical_tensor", "dnnl::graph::logical_tensor::is_equal"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor8is_equalERK14logical_tensor", "dnnl::graph::logical_tensor::is_equal::lt"], [63, 9, 1, "_CPPv4N4dnnl5graph14logical_tensor11layout_typeE", "dnnl::graph::logical_tensor::layout_type"], [63, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor11layout_type3anyE", "dnnl::graph::logical_tensor::layout_type::any"], [63, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor11layout_type6opaqueE", "dnnl::graph::logical_tensor::layout_type::opaque"], [63, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor11layout_type7stridedE", "dnnl::graph::logical_tensor::layout_type::strided"], [63, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor11layout_type5undefE", "dnnl::graph::logical_tensor::layout_type::undef"], [63, 3, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type11layout_type", "dnnl::graph::logical_tensor::logical_tensor"], [63, 3, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type7int32_t11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor"], [63, 3, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor"], [63, 3, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims6size_t13property_type", "dnnl::graph::logical_tensor::logical_tensor"], [63, 3, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dimsRK4dims13property_type", "dnnl::graph::logical_tensor::logical_tensor"], [63, 3, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorERK14logical_tensor", "dnnl::graph::logical_tensor::logical_tensor"], [63, 3, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorEv", "dnnl::graph::logical_tensor::logical_tensor"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::adims"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims6size_t13property_type", "dnnl::graph::logical_tensor::logical_tensor::adims"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dimsRK4dims13property_type", "dnnl::graph::logical_tensor::logical_tensor::adims"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type11layout_type", "dnnl::graph::logical_tensor::logical_tensor::dtype"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type7int32_t11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::dtype"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::dtype"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims6size_t13property_type", "dnnl::graph::logical_tensor::logical_tensor::dtype"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dimsRK4dims13property_type", "dnnl::graph::logical_tensor::logical_tensor::dtype"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims6size_t13property_type", "dnnl::graph::logical_tensor::logical_tensor::lid"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type11layout_type", "dnnl::graph::logical_tensor::logical_tensor::ltype"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type7int32_t11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::ltype"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::ltype"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type7int32_t11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::ndims"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorERK14logical_tensor", "dnnl::graph::logical_tensor::logical_tensor::other"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type7int32_t11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::ptype"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::ptype"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims6size_t13property_type", "dnnl::graph::logical_tensor::logical_tensor::ptype"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dimsRK4dims13property_type", "dnnl::graph::logical_tensor::logical_tensor::ptype"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dimsRK4dims13property_type", "dnnl::graph::logical_tensor::logical_tensor::strides"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type11layout_type", "dnnl::graph::logical_tensor::logical_tensor::tid"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type7int32_t11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::tid"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::tid"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims6size_t13property_type", "dnnl::graph::logical_tensor::logical_tensor::tid"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dimsRK4dims13property_type", "dnnl::graph::logical_tensor::logical_tensor::tid"], [63, 3, 1, "_CPPv4N4dnnl5graph14logical_tensoraSERK14logical_tensor", "dnnl::graph::logical_tensor::operator="], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensoraSERK14logical_tensor", "dnnl::graph::logical_tensor::operator=::other"], [63, 9, 1, "_CPPv4N4dnnl5graph14logical_tensor13property_typeE", "dnnl::graph::logical_tensor::property_type"], [63, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor13property_type8constantE", "dnnl::graph::logical_tensor::property_type::constant"], [63, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor13property_type5undefE", "dnnl::graph::logical_tensor::property_type::undef"], [63, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor13property_type8variableE", "dnnl::graph::logical_tensor::property_type::variable"], [63, 7, 1, "_CPPv4N4dnnl5graph2opE", "dnnl::graph::op"], [63, 3, 1, "_CPPv4N4dnnl5graph2op9add_inputERK14logical_tensor", "dnnl::graph::op::add_input"], [63, 4, 1, "_CPPv4N4dnnl5graph2op9add_inputERK14logical_tensor", "dnnl::graph::op::add_input::t"], [63, 3, 1, "_CPPv4N4dnnl5graph2op10add_inputsERKNSt6vectorI14logical_tensorEE", "dnnl::graph::op::add_inputs"], [63, 4, 1, "_CPPv4N4dnnl5graph2op10add_inputsERKNSt6vectorI14logical_tensorEE", "dnnl::graph::op::add_inputs::ts"], [63, 3, 1, "_CPPv4N4dnnl5graph2op10add_outputERK14logical_tensor", "dnnl::graph::op::add_output"], [63, 4, 1, "_CPPv4N4dnnl5graph2op10add_outputERK14logical_tensor", "dnnl::graph::op::add_output::t"], [63, 3, 1, "_CPPv4N4dnnl5graph2op11add_outputsERKNSt6vectorI14logical_tensorEE", "dnnl::graph::op::add_outputs"], [63, 4, 1, "_CPPv4N4dnnl5graph2op11add_outputsERKNSt6vectorI14logical_tensorEE", "dnnl::graph::op::add_outputs::ts"], [63, 9, 1, "_CPPv4N4dnnl5graph2op4attrE", "dnnl::graph::op::attr"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr5alphaE", "dnnl::graph::op::attr::alpha"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr14auto_broadcastE", "dnnl::graph::op::attr::auto_broadcast"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr8auto_padE", "dnnl::graph::op::attr::auto_pad"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr4axesE", "dnnl::graph::op::attr::axes"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr4axisE", "dnnl::graph::op::attr::axis"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr15begin_norm_axisE", "dnnl::graph::op::attr::begin_norm_axis"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr4betaE", "dnnl::graph::op::attr::beta"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr30coordinate_transformation_modeE", "dnnl::graph::op::attr::coordinate_transformation_mode"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr11data_formatE", "dnnl::graph::op::attr::data_format"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr9dilationsE", "dnnl::graph::op::attr::dilations"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr9dst_shapeE", "dnnl::graph::op::attr::dst_shape"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr7epsilonE", "dnnl::graph::op::attr::epsilon"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr11exclude_padE", "dnnl::graph::op::attr::exclude_pad"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr6groupsE", "dnnl::graph::op::attr::groups"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr9keep_dimsE", "dnnl::graph::op::attr::keep_dims"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr10keep_statsE", "dnnl::graph::op::attr::keep_stats"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr6kernelE", "dnnl::graph::op::attr::kernel"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr3maxE", "dnnl::graph::op::attr::max"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr3minE", "dnnl::graph::op::attr::min"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr4modeE", "dnnl::graph::op::attr::mode"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr8momentumE", "dnnl::graph::op::attr::momentum"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr5orderE", "dnnl::graph::op::attr::order"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr14output_paddingE", "dnnl::graph::op::attr::output_padding"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr10pads_beginE", "dnnl::graph::op::attr::pads_begin"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr8pads_endE", "dnnl::graph::op::attr::pads_end"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr21per_channel_broadcastE", "dnnl::graph::op::attr::per_channel_broadcast"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr5qtypeE", "dnnl::graph::op::attr::qtype"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr13rounding_typeE", "dnnl::graph::op::attr::rounding_type"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr6scalesE", "dnnl::graph::op::attr::scales"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr5shapeE", "dnnl::graph::op::attr::shape"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr5sizesE", "dnnl::graph::op::attr::sizes"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr12special_zeroE", "dnnl::graph::op::attr::special_zero"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr9src_shapeE", "dnnl::graph::op::attr::src_shape"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr7stridesE", "dnnl::graph::op::attr::strides"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr11transpose_aE", "dnnl::graph::op::attr::transpose_a"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr11transpose_bE", "dnnl::graph::op::attr::transpose_b"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr5undefE", "dnnl::graph::op::attr::undef"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr10use_affineE", "dnnl::graph::op::attr::use_affine"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr7use_dstE", "dnnl::graph::op::attr::use_dst"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr14weights_formatE", "dnnl::graph::op::attr::weights_format"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr13weights_shapeE", "dnnl::graph::op::attr::weights_shape"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr3zpsE", "dnnl::graph::op::attr::zps"], [63, 9, 1, "_CPPv4N4dnnl5graph2op4kindE", "dnnl::graph::op::kind"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind3AbsE", "dnnl::graph::op::kind::Abs"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind11AbsBackwardE", "dnnl::graph::op::kind::AbsBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind3AddE", "dnnl::graph::op::kind::Add"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind7AvgPoolE", "dnnl::graph::op::kind::AvgPool"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind15AvgPoolBackwardE", "dnnl::graph::op::kind::AvgPoolBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind24BatchNormForwardTrainingE", "dnnl::graph::op::kind::BatchNormForwardTraining"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind18BatchNormInferenceE", "dnnl::graph::op::kind::BatchNormInference"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind25BatchNormTrainingBackwardE", "dnnl::graph::op::kind::BatchNormTrainingBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind7BiasAddE", "dnnl::graph::op::kind::BiasAdd"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind15BiasAddBackwardE", "dnnl::graph::op::kind::BiasAddBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind5ClampE", "dnnl::graph::op::kind::Clamp"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind13ClampBackwardE", "dnnl::graph::op::kind::ClampBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind6ConcatE", "dnnl::graph::op::kind::Concat"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind13ConvTransposeE", "dnnl::graph::op::kind::ConvTranspose"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind25ConvTransposeBackwardDataE", "dnnl::graph::op::kind::ConvTransposeBackwardData"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind28ConvTransposeBackwardWeightsE", "dnnl::graph::op::kind::ConvTransposeBackwardWeights"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind11ConvolutionE", "dnnl::graph::op::kind::Convolution"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind23ConvolutionBackwardDataE", "dnnl::graph::op::kind::ConvolutionBackwardData"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind26ConvolutionBackwardWeightsE", "dnnl::graph::op::kind::ConvolutionBackwardWeights"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind10DequantizeE", "dnnl::graph::op::kind::Dequantize"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind6DivideE", "dnnl::graph::op::kind::Divide"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind17DynamicDequantizeE", "dnnl::graph::op::kind::DynamicDequantize"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind15DynamicQuantizeE", "dnnl::graph::op::kind::DynamicQuantize"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind3EluE", "dnnl::graph::op::kind::Elu"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind11EluBackwardE", "dnnl::graph::op::kind::EluBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind3EndE", "dnnl::graph::op::kind::End"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind3ExpE", "dnnl::graph::op::kind::Exp"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind4GELUE", "dnnl::graph::op::kind::GELU"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind12GELUBackwardE", "dnnl::graph::op::kind::GELUBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind11HardSigmoidE", "dnnl::graph::op::kind::HardSigmoid"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind19HardSigmoidBackwardE", "dnnl::graph::op::kind::HardSigmoidBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind9HardSwishE", "dnnl::graph::op::kind::HardSwish"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind17HardSwishBackwardE", "dnnl::graph::op::kind::HardSwishBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind11InterpolateE", "dnnl::graph::op::kind::Interpolate"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind19InterpolateBackwardE", "dnnl::graph::op::kind::InterpolateBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind10LastSymbolE", "dnnl::graph::op::kind::LastSymbol"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind9LayerNormE", "dnnl::graph::op::kind::LayerNorm"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind17LayerNormBackwardE", "dnnl::graph::op::kind::LayerNormBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind9LeakyReLUE", "dnnl::graph::op::kind::LeakyReLU"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind3LogE", "dnnl::graph::op::kind::Log"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind10LogSoftmaxE", "dnnl::graph::op::kind::LogSoftmax"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind18LogSoftmaxBackwardE", "dnnl::graph::op::kind::LogSoftmaxBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind6MatMulE", "dnnl::graph::op::kind::MatMul"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind7MaxPoolE", "dnnl::graph::op::kind::MaxPool"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind15MaxPoolBackwardE", "dnnl::graph::op::kind::MaxPoolBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind7MaximumE", "dnnl::graph::op::kind::Maximum"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind7MinimumE", "dnnl::graph::op::kind::Minimum"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind4MishE", "dnnl::graph::op::kind::Mish"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind12MishBackwardE", "dnnl::graph::op::kind::MishBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind8MultiplyE", "dnnl::graph::op::kind::Multiply"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind5PReLUE", "dnnl::graph::op::kind::PReLU"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind13PReLUBackwardE", "dnnl::graph::op::kind::PReLUBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind3PowE", "dnnl::graph::op::kind::Pow"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind8QuantizeE", "dnnl::graph::op::kind::Quantize"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind4ReLUE", "dnnl::graph::op::kind::ReLU"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind12ReLUBackwardE", "dnnl::graph::op::kind::ReLUBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind10ReciprocalE", "dnnl::graph::op::kind::Reciprocal"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind8ReduceL1E", "dnnl::graph::op::kind::ReduceL1"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind8ReduceL2E", "dnnl::graph::op::kind::ReduceL2"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind9ReduceMaxE", "dnnl::graph::op::kind::ReduceMax"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind10ReduceMeanE", "dnnl::graph::op::kind::ReduceMean"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind9ReduceMinE", "dnnl::graph::op::kind::ReduceMin"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind10ReduceProdE", "dnnl::graph::op::kind::ReduceProd"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind9ReduceSumE", "dnnl::graph::op::kind::ReduceSum"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind7ReorderE", "dnnl::graph::op::kind::Reorder"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind5RoundE", "dnnl::graph::op::kind::Round"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind6SelectE", "dnnl::graph::op::kind::Select"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind7SigmoidE", "dnnl::graph::op::kind::Sigmoid"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind15SigmoidBackwardE", "dnnl::graph::op::kind::SigmoidBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind7SoftMaxE", "dnnl::graph::op::kind::SoftMax"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind15SoftMaxBackwardE", "dnnl::graph::op::kind::SoftMaxBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind8SoftPlusE", "dnnl::graph::op::kind::SoftPlus"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind16SoftPlusBackwardE", "dnnl::graph::op::kind::SoftPlusBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind4SqrtE", "dnnl::graph::op::kind::Sqrt"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind12SqrtBackwardE", "dnnl::graph::op::kind::SqrtBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind6SquareE", "dnnl::graph::op::kind::Square"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind17SquaredDifferenceE", "dnnl::graph::op::kind::SquaredDifference"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind13StaticReshapeE", "dnnl::graph::op::kind::StaticReshape"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind15StaticTransposeE", "dnnl::graph::op::kind::StaticTranspose"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind8SubtractE", "dnnl::graph::op::kind::Subtract"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind4TanhE", "dnnl::graph::op::kind::Tanh"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind12TanhBackwardE", "dnnl::graph::op::kind::TanhBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind8TypeCastE", "dnnl::graph::op::kind::TypeCast"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind8WildcardE", "dnnl::graph::op::kind::Wildcard"], [63, 3, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6stringE", "dnnl::graph::op::op"], [63, 3, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6vectorI14logical_tensorEERKNSt6vectorI14logical_tensorEERKNSt6stringE", "dnnl::graph::op::op"], [63, 4, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6stringE", "dnnl::graph::op::op::akind"], [63, 4, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6vectorI14logical_tensorEERKNSt6vectorI14logical_tensorEERKNSt6stringE", "dnnl::graph::op::op::akind"], [63, 4, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6stringE", "dnnl::graph::op::op::id"], [63, 4, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6vectorI14logical_tensorEERKNSt6vectorI14logical_tensorEERKNSt6stringE", "dnnl::graph::op::op::id"], [63, 4, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6vectorI14logical_tensorEERKNSt6vectorI14logical_tensorEERKNSt6stringE", "dnnl::graph::op::op::inputs"], [63, 4, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6stringE", "dnnl::graph::op::op::name"], [63, 4, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6vectorI14logical_tensorEERKNSt6vectorI14logical_tensorEERKNSt6stringE", "dnnl::graph::op::op::name"], [63, 4, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6vectorI14logical_tensorEERKNSt6vectorI14logical_tensorEERKNSt6stringE", "dnnl::graph::op::op::outputs"], [63, 3, 1, "_CPPv4I0EN4dnnl5graph2op8set_attrER2op4attrRK4Type", "dnnl::graph::op::set_attr"], [63, 8, 1, "_CPPv4I0EN4dnnl5graph2op8set_attrER2op4attrRK4Type", "dnnl::graph::op::set_attr::Type"], [63, 4, 1, "_CPPv4I0EN4dnnl5graph2op8set_attrER2op4attrRK4Type", "dnnl::graph::op::set_attr::name"], [63, 4, 1, "_CPPv4I0EN4dnnl5graph2op8set_attrER2op4attrRK4Type", "dnnl::graph::op::set_attr::value"], [170, 7, 1, "_CPPv4N4dnnl12gru_backwardE", "dnnl::gru_backward"], [170, 3, 1, "_CPPv4N4dnnl12gru_backward12gru_backwardERK14primitive_desc", "dnnl::gru_backward::gru_backward"], [170, 3, 1, "_CPPv4N4dnnl12gru_backward12gru_backwardEv", "dnnl::gru_backward::gru_backward"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward12gru_backwardERK14primitive_desc", "dnnl::gru_backward::gru_backward::pd"], [170, 7, 1, "_CPPv4N4dnnl12gru_backward14primitive_descE", "dnnl::gru_backward::primitive_desc"], [170, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc9bias_descEv", "dnnl::gru_backward::primitive_desc::bias_desc"], [170, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc14diff_bias_descEv", "dnnl::gru_backward::primitive_desc::diff_bias_desc"], [170, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc18diff_dst_iter_descEv", "dnnl::gru_backward::primitive_desc::diff_dst_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc19diff_dst_layer_descEv", "dnnl::gru_backward::primitive_desc::diff_dst_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc18diff_src_iter_descEv", "dnnl::gru_backward::primitive_desc::diff_src_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc19diff_src_layer_descEv", "dnnl::gru_backward::primitive_desc::diff_src_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc22diff_weights_iter_descEv", "dnnl::gru_backward::primitive_desc::diff_weights_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc23diff_weights_layer_descEv", "dnnl::gru_backward::primitive_desc::diff_weights_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc13dst_iter_descEv", "dnnl::gru_backward::primitive_desc::dst_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc14dst_layer_descEv", "dnnl::gru_backward::primitive_desc::dst_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc13get_cell_kindEv", "dnnl::gru_backward::primitive_desc::get_cell_kind"], [170, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc13get_directionEv", "dnnl::gru_backward::primitive_desc::get_direction"], [170, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc13get_prop_kindEv", "dnnl::gru_backward::primitive_desc::get_prop_kind"], [170, 3, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc"], [170, 3, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descEv", "dnnl::gru_backward::primitive_desc::primitive_desc"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::aengine"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::allow_empty"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::aprop_kind"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::attr"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::bias_desc"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::diff_bias_desc"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::diff_dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::diff_dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::diff_src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::diff_src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::diff_weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::diff_weights_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::direction"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::weights_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc13src_iter_descEv", "dnnl::gru_backward::primitive_desc::src_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc14src_layer_descEv", "dnnl::gru_backward::primitive_desc::src_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc17weights_iter_descEv", "dnnl::gru_backward::primitive_desc::weights_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc18weights_layer_descEv", "dnnl::gru_backward::primitive_desc::weights_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc14workspace_descEv", "dnnl::gru_backward::primitive_desc::workspace_desc"], [170, 7, 1, "_CPPv4N4dnnl11gru_forwardE", "dnnl::gru_forward"], [170, 3, 1, "_CPPv4N4dnnl11gru_forward11gru_forwardERK14primitive_desc", "dnnl::gru_forward::gru_forward"], [170, 3, 1, "_CPPv4N4dnnl11gru_forward11gru_forwardEv", "dnnl::gru_forward::gru_forward"], [170, 4, 1, "_CPPv4N4dnnl11gru_forward11gru_forwardERK14primitive_desc", "dnnl::gru_forward::gru_forward::pd"], [170, 7, 1, "_CPPv4N4dnnl11gru_forward14primitive_descE", "dnnl::gru_forward::primitive_desc"], [170, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc9bias_descEv", "dnnl::gru_forward::primitive_desc::bias_desc"], [170, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc13dst_iter_descEv", "dnnl::gru_forward::primitive_desc::dst_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc14dst_layer_descEv", "dnnl::gru_forward::primitive_desc::dst_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc13get_cell_kindEv", "dnnl::gru_forward::primitive_desc::get_cell_kind"], [170, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc13get_directionEv", "dnnl::gru_forward::primitive_desc::get_direction"], [170, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc13get_prop_kindEv", "dnnl::gru_forward::primitive_desc::get_prop_kind"], [170, 3, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc"], [170, 3, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descEv", "dnnl::gru_forward::primitive_desc::primitive_desc"], [170, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::aengine"], [170, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::allow_empty"], [170, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::aprop_kind"], [170, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::attr"], [170, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::bias_desc"], [170, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::direction"], [170, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::weights_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc13src_iter_descEv", "dnnl::gru_forward::primitive_desc::src_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc14src_layer_descEv", "dnnl::gru_forward::primitive_desc::src_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc17weights_iter_descEv", "dnnl::gru_forward::primitive_desc::weights_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc18weights_layer_descEv", "dnnl::gru_forward::primitive_desc::weights_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc14workspace_descEv", "dnnl::gru_forward::primitive_desc::workspace_desc"], [161, 7, 1, "_CPPv4N4dnnl27inner_product_backward_dataE", "dnnl::inner_product_backward_data"], [161, 3, 1, "_CPPv4N4dnnl27inner_product_backward_data27inner_product_backward_dataERK14primitive_desc", "dnnl::inner_product_backward_data::inner_product_backward_data"], [161, 3, 1, "_CPPv4N4dnnl27inner_product_backward_data27inner_product_backward_dataEv", "dnnl::inner_product_backward_data::inner_product_backward_data"], [161, 4, 1, "_CPPv4N4dnnl27inner_product_backward_data27inner_product_backward_dataERK14primitive_desc", "dnnl::inner_product_backward_data::inner_product_backward_data::pd"], [161, 7, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_descE", "dnnl::inner_product_backward_data::primitive_desc"], [161, 3, 1, "_CPPv4NK4dnnl27inner_product_backward_data14primitive_desc13diff_dst_descEv", "dnnl::inner_product_backward_data::primitive_desc::diff_dst_desc"], [161, 3, 1, "_CPPv4NK4dnnl27inner_product_backward_data14primitive_desc13diff_src_descEv", "dnnl::inner_product_backward_data::primitive_desc::diff_src_desc"], [161, 3, 1, "_CPPv4NK4dnnl27inner_product_backward_data14primitive_desc13get_prop_kindEv", "dnnl::inner_product_backward_data::primitive_desc::get_prop_kind"], [161, 3, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_data::primitive_desc::primitive_desc"], [161, 3, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descEv", "dnnl::inner_product_backward_data::primitive_desc::primitive_desc"], [161, 4, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_data::primitive_desc::primitive_desc::aengine"], [161, 4, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_data::primitive_desc::primitive_desc::allow_empty"], [161, 4, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_data::primitive_desc::primitive_desc::attr"], [161, 4, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_data::primitive_desc::primitive_desc::diff_dst_desc"], [161, 4, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_data::primitive_desc::primitive_desc::diff_src_desc"], [161, 4, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_data::primitive_desc::primitive_desc::hint_fwd_pd"], [161, 4, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_data::primitive_desc::primitive_desc::weights_desc"], [161, 3, 1, "_CPPv4NK4dnnl27inner_product_backward_data14primitive_desc12weights_descEv", "dnnl::inner_product_backward_data::primitive_desc::weights_desc"], [161, 7, 1, "_CPPv4N4dnnl30inner_product_backward_weightsE", "dnnl::inner_product_backward_weights"], [161, 3, 1, "_CPPv4N4dnnl30inner_product_backward_weights30inner_product_backward_weightsERK14primitive_desc", "dnnl::inner_product_backward_weights::inner_product_backward_weights"], [161, 3, 1, "_CPPv4N4dnnl30inner_product_backward_weights30inner_product_backward_weightsEv", "dnnl::inner_product_backward_weights::inner_product_backward_weights"], [161, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights30inner_product_backward_weightsERK14primitive_desc", "dnnl::inner_product_backward_weights::inner_product_backward_weights::pd"], [161, 7, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_descE", "dnnl::inner_product_backward_weights::primitive_desc"], [161, 3, 1, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc14diff_bias_descEv", "dnnl::inner_product_backward_weights::primitive_desc::diff_bias_desc"], [161, 3, 1, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc13diff_dst_descEv", "dnnl::inner_product_backward_weights::primitive_desc::diff_dst_desc"], [161, 3, 1, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc17diff_weights_descEv", "dnnl::inner_product_backward_weights::primitive_desc::diff_weights_desc"], [161, 3, 1, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc13get_prop_kindEv", "dnnl::inner_product_backward_weights::primitive_desc::get_prop_kind"], [161, 3, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc"], [161, 3, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc"], [161, 3, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descEv", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc"], [161, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::aengine"], [161, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::aengine"], [161, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::allow_empty"], [161, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::allow_empty"], [161, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::attr"], [161, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::attr"], [161, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::diff_bias_desc"], [161, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [161, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [161, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [161, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [161, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [161, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [161, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::src_desc"], [161, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::src_desc"], [161, 3, 1, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc8src_descEv", "dnnl::inner_product_backward_weights::primitive_desc::src_desc"], [161, 7, 1, "_CPPv4N4dnnl21inner_product_forwardE", "dnnl::inner_product_forward"], [161, 3, 1, "_CPPv4N4dnnl21inner_product_forward21inner_product_forwardERK14primitive_desc", "dnnl::inner_product_forward::inner_product_forward"], [161, 3, 1, "_CPPv4N4dnnl21inner_product_forward21inner_product_forwardEv", "dnnl::inner_product_forward::inner_product_forward"], [161, 4, 1, "_CPPv4N4dnnl21inner_product_forward21inner_product_forwardERK14primitive_desc", "dnnl::inner_product_forward::inner_product_forward::pd"], [161, 7, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_descE", "dnnl::inner_product_forward::primitive_desc"], [161, 3, 1, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc9bias_descEv", "dnnl::inner_product_forward::primitive_desc::bias_desc"], [161, 3, 1, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc8dst_descEv", "dnnl::inner_product_forward::primitive_desc::dst_desc"], [161, 3, 1, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc13get_prop_kindEv", "dnnl::inner_product_forward::primitive_desc::get_prop_kind"], [161, 3, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc"], [161, 3, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc"], [161, 3, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descEv", "dnnl::inner_product_forward::primitive_desc::primitive_desc"], [161, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::aengine"], [161, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::aengine"], [161, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::allow_empty"], [161, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::allow_empty"], [161, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::aprop_kind"], [161, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::aprop_kind"], [161, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::attr"], [161, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::attr"], [161, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::bias_desc"], [161, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::dst_desc"], [161, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::dst_desc"], [161, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::src_desc"], [161, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::src_desc"], [161, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::weights_desc"], [161, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::weights_desc"], [161, 3, 1, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc8src_descEv", "dnnl::inner_product_forward::primitive_desc::src_desc"], [161, 3, 1, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc12weights_descEv", "dnnl::inner_product_forward::primitive_desc::weights_desc"], [162, 7, 1, "_CPPv4N4dnnl28layer_normalization_backwardE", "dnnl::layer_normalization_backward"], [162, 3, 1, "_CPPv4N4dnnl28layer_normalization_backward28layer_normalization_backwardERK14primitive_desc", "dnnl::layer_normalization_backward::layer_normalization_backward"], [162, 3, 1, "_CPPv4N4dnnl28layer_normalization_backward28layer_normalization_backwardEv", "dnnl::layer_normalization_backward::layer_normalization_backward"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward28layer_normalization_backwardERK14primitive_desc", "dnnl::layer_normalization_backward::layer_normalization_backward::pd"], [162, 7, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_descE", "dnnl::layer_normalization_backward::primitive_desc"], [162, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc13diff_dst_descEv", "dnnl::layer_normalization_backward::primitive_desc::diff_dst_desc"], [162, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc13diff_src_descEv", "dnnl::layer_normalization_backward::primitive_desc::diff_src_desc"], [162, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc17diff_weights_descEv", "dnnl::layer_normalization_backward::primitive_desc::diff_weights_desc"], [162, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc8dst_descEv", "dnnl::layer_normalization_backward::primitive_desc::dst_desc"], [162, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc11get_epsilonEv", "dnnl::layer_normalization_backward::primitive_desc::get_epsilon"], [162, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc9get_flagsEv", "dnnl::layer_normalization_backward::primitive_desc::get_flags"], [162, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc13get_prop_kindEv", "dnnl::layer_normalization_backward::primitive_desc::get_prop_kind"], [162, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc9mean_descEv", "dnnl::layer_normalization_backward::primitive_desc::mean_desc"], [162, 3, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc"], [162, 3, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc"], [162, 3, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descEv", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::aengine"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::aengine"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::allow_empty"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::allow_empty"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::aprop_kind"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::aprop_kind"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::attr"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::attr"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::diff_dst_desc"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::diff_dst_desc"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::diff_src_desc"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::diff_src_desc"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::epsilon"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::epsilon"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::flags"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::flags"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::src_desc"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::src_desc"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::stat_desc"], [162, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc8src_descEv", "dnnl::layer_normalization_backward::primitive_desc::src_desc"], [162, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc13variance_descEv", "dnnl::layer_normalization_backward::primitive_desc::variance_desc"], [162, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc12weights_descEv", "dnnl::layer_normalization_backward::primitive_desc::weights_desc"], [162, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc14workspace_descEv", "dnnl::layer_normalization_backward::primitive_desc::workspace_desc"], [162, 7, 1, "_CPPv4N4dnnl27layer_normalization_forwardE", "dnnl::layer_normalization_forward"], [162, 3, 1, "_CPPv4N4dnnl27layer_normalization_forward27layer_normalization_forwardERK14primitive_desc", "dnnl::layer_normalization_forward::layer_normalization_forward"], [162, 3, 1, "_CPPv4N4dnnl27layer_normalization_forward27layer_normalization_forwardEv", "dnnl::layer_normalization_forward::layer_normalization_forward"], [162, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward27layer_normalization_forwardERK14primitive_desc", "dnnl::layer_normalization_forward::layer_normalization_forward::pd"], [162, 7, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_descE", "dnnl::layer_normalization_forward::primitive_desc"], [162, 3, 1, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc8dst_descEv", "dnnl::layer_normalization_forward::primitive_desc::dst_desc"], [162, 3, 1, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc11get_epsilonEv", "dnnl::layer_normalization_forward::primitive_desc::get_epsilon"], [162, 3, 1, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc9get_flagsEv", "dnnl::layer_normalization_forward::primitive_desc::get_flags"], [162, 3, 1, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc13get_prop_kindEv", "dnnl::layer_normalization_forward::primitive_desc::get_prop_kind"], [162, 3, 1, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc9mean_descEv", "dnnl::layer_normalization_forward::primitive_desc::mean_desc"], [162, 3, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc"], [162, 3, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc"], [162, 3, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descEv", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc"], [162, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::aengine"], [162, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::aengine"], [162, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::allow_empty"], [162, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::allow_empty"], [162, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::aprop_kind"], [162, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::aprop_kind"], [162, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::attr"], [162, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::attr"], [162, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::dst_desc"], [162, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::dst_desc"], [162, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::epsilon"], [162, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::epsilon"], [162, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::flags"], [162, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::flags"], [162, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::src_desc"], [162, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::src_desc"], [162, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::stat_desc"], [162, 3, 1, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc8src_descEv", "dnnl::layer_normalization_forward::primitive_desc::src_desc"], [162, 3, 1, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc13variance_descEv", "dnnl::layer_normalization_forward::primitive_desc::variance_desc"], [162, 3, 1, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc12weights_descEv", "dnnl::layer_normalization_forward::primitive_desc::weights_desc"], [162, 3, 1, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc14workspace_descEv", "dnnl::layer_normalization_forward::primitive_desc::workspace_desc"], [170, 7, 1, "_CPPv4N4dnnl16lbr_gru_backwardE", "dnnl::lbr_gru_backward"], [170, 3, 1, "_CPPv4N4dnnl16lbr_gru_backward16lbr_gru_backwardERK14primitive_desc", "dnnl::lbr_gru_backward::lbr_gru_backward"], [170, 3, 1, "_CPPv4N4dnnl16lbr_gru_backward16lbr_gru_backwardEv", "dnnl::lbr_gru_backward::lbr_gru_backward"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward16lbr_gru_backwardERK14primitive_desc", "dnnl::lbr_gru_backward::lbr_gru_backward::pd"], [170, 7, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_descE", "dnnl::lbr_gru_backward::primitive_desc"], [170, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc9bias_descEv", "dnnl::lbr_gru_backward::primitive_desc::bias_desc"], [170, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc14diff_bias_descEv", "dnnl::lbr_gru_backward::primitive_desc::diff_bias_desc"], [170, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc18diff_dst_iter_descEv", "dnnl::lbr_gru_backward::primitive_desc::diff_dst_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc19diff_dst_layer_descEv", "dnnl::lbr_gru_backward::primitive_desc::diff_dst_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc18diff_src_iter_descEv", "dnnl::lbr_gru_backward::primitive_desc::diff_src_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc19diff_src_layer_descEv", "dnnl::lbr_gru_backward::primitive_desc::diff_src_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc22diff_weights_iter_descEv", "dnnl::lbr_gru_backward::primitive_desc::diff_weights_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc23diff_weights_layer_descEv", "dnnl::lbr_gru_backward::primitive_desc::diff_weights_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13dst_iter_descEv", "dnnl::lbr_gru_backward::primitive_desc::dst_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc14dst_layer_descEv", "dnnl::lbr_gru_backward::primitive_desc::dst_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13get_cell_kindEv", "dnnl::lbr_gru_backward::primitive_desc::get_cell_kind"], [170, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13get_directionEv", "dnnl::lbr_gru_backward::primitive_desc::get_direction"], [170, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13get_prop_kindEv", "dnnl::lbr_gru_backward::primitive_desc::get_prop_kind"], [170, 3, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc"], [170, 3, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descEv", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::aengine"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::allow_empty"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::aprop_kind"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::attr"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::bias_desc"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::diff_bias_desc"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::diff_dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::diff_dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::diff_src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::diff_src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::diff_weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::diff_weights_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::direction"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::weights_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13src_iter_descEv", "dnnl::lbr_gru_backward::primitive_desc::src_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc14src_layer_descEv", "dnnl::lbr_gru_backward::primitive_desc::src_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc17weights_iter_descEv", "dnnl::lbr_gru_backward::primitive_desc::weights_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc18weights_layer_descEv", "dnnl::lbr_gru_backward::primitive_desc::weights_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc14workspace_descEv", "dnnl::lbr_gru_backward::primitive_desc::workspace_desc"], [170, 7, 1, "_CPPv4N4dnnl15lbr_gru_forwardE", "dnnl::lbr_gru_forward"], [170, 3, 1, "_CPPv4N4dnnl15lbr_gru_forward15lbr_gru_forwardERK14primitive_desc", "dnnl::lbr_gru_forward::lbr_gru_forward"], [170, 3, 1, "_CPPv4N4dnnl15lbr_gru_forward15lbr_gru_forwardEv", "dnnl::lbr_gru_forward::lbr_gru_forward"], [170, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward15lbr_gru_forwardERK14primitive_desc", "dnnl::lbr_gru_forward::lbr_gru_forward::pd"], [170, 7, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_descE", "dnnl::lbr_gru_forward::primitive_desc"], [170, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc9bias_descEv", "dnnl::lbr_gru_forward::primitive_desc::bias_desc"], [170, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13dst_iter_descEv", "dnnl::lbr_gru_forward::primitive_desc::dst_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc14dst_layer_descEv", "dnnl::lbr_gru_forward::primitive_desc::dst_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13get_cell_kindEv", "dnnl::lbr_gru_forward::primitive_desc::get_cell_kind"], [170, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13get_directionEv", "dnnl::lbr_gru_forward::primitive_desc::get_direction"], [170, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13get_prop_kindEv", "dnnl::lbr_gru_forward::primitive_desc::get_prop_kind"], [170, 3, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc"], [170, 3, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descEv", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc"], [170, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::aengine"], [170, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::allow_empty"], [170, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::aprop_kind"], [170, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::attr"], [170, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::bias_desc"], [170, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::direction"], [170, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::weights_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13src_iter_descEv", "dnnl::lbr_gru_forward::primitive_desc::src_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc14src_layer_descEv", "dnnl::lbr_gru_forward::primitive_desc::src_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc17weights_iter_descEv", "dnnl::lbr_gru_forward::primitive_desc::weights_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc18weights_layer_descEv", "dnnl::lbr_gru_forward::primitive_desc::weights_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc14workspace_descEv", "dnnl::lbr_gru_forward::primitive_desc::workspace_desc"], [163, 7, 1, "_CPPv4N4dnnl12lrn_backwardE", "dnnl::lrn_backward"], [163, 3, 1, "_CPPv4N4dnnl12lrn_backward12lrn_backwardERK14primitive_desc", "dnnl::lrn_backward::lrn_backward"], [163, 3, 1, "_CPPv4N4dnnl12lrn_backward12lrn_backwardEv", "dnnl::lrn_backward::lrn_backward"], [163, 4, 1, "_CPPv4N4dnnl12lrn_backward12lrn_backwardERK14primitive_desc", "dnnl::lrn_backward::lrn_backward::pd"], [163, 7, 1, "_CPPv4N4dnnl12lrn_backward14primitive_descE", "dnnl::lrn_backward::primitive_desc"], [163, 3, 1, "_CPPv4NK4dnnl12lrn_backward14primitive_desc13diff_dst_descEv", "dnnl::lrn_backward::primitive_desc::diff_dst_desc"], [163, 3, 1, "_CPPv4NK4dnnl12lrn_backward14primitive_desc13diff_src_descEv", "dnnl::lrn_backward::primitive_desc::diff_src_desc"], [163, 3, 1, "_CPPv4NK4dnnl12lrn_backward14primitive_desc13get_algorithmEv", "dnnl::lrn_backward::primitive_desc::get_algorithm"], [163, 3, 1, "_CPPv4NK4dnnl12lrn_backward14primitive_desc9get_alphaEv", "dnnl::lrn_backward::primitive_desc::get_alpha"], [163, 3, 1, "_CPPv4NK4dnnl12lrn_backward14primitive_desc8get_betaEv", "dnnl::lrn_backward::primitive_desc::get_beta"], [163, 3, 1, "_CPPv4NK4dnnl12lrn_backward14primitive_desc5get_kEv", "dnnl::lrn_backward::primitive_desc::get_k"], [163, 3, 1, "_CPPv4NK4dnnl12lrn_backward14primitive_desc14get_local_sizeEv", "dnnl::lrn_backward::primitive_desc::get_local_size"], [163, 3, 1, "_CPPv4NK4dnnl12lrn_backward14primitive_desc13get_prop_kindEv", "dnnl::lrn_backward::primitive_desc::get_prop_kind"], [163, 3, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc"], [163, 3, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descEv", "dnnl::lrn_backward::primitive_desc::primitive_desc"], [163, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::aalgorithm"], [163, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::aengine"], [163, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::allow_empty"], [163, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::alpha"], [163, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::attr"], [163, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::beta"], [163, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::diff_dst_desc"], [163, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::diff_src_desc"], [163, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [163, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::k"], [163, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::local_size"], [163, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::src_desc"], [163, 3, 1, "_CPPv4NK4dnnl12lrn_backward14primitive_desc14workspace_descEv", "dnnl::lrn_backward::primitive_desc::workspace_desc"], [163, 7, 1, "_CPPv4N4dnnl11lrn_forwardE", "dnnl::lrn_forward"], [163, 3, 1, "_CPPv4N4dnnl11lrn_forward11lrn_forwardERK14primitive_desc", "dnnl::lrn_forward::lrn_forward"], [163, 3, 1, "_CPPv4N4dnnl11lrn_forward11lrn_forwardEv", "dnnl::lrn_forward::lrn_forward"], [163, 4, 1, "_CPPv4N4dnnl11lrn_forward11lrn_forwardERK14primitive_desc", "dnnl::lrn_forward::lrn_forward::pd"], [163, 7, 1, "_CPPv4N4dnnl11lrn_forward14primitive_descE", "dnnl::lrn_forward::primitive_desc"], [163, 3, 1, "_CPPv4NK4dnnl11lrn_forward14primitive_desc8dst_descEv", "dnnl::lrn_forward::primitive_desc::dst_desc"], [163, 3, 1, "_CPPv4NK4dnnl11lrn_forward14primitive_desc13get_algorithmEv", "dnnl::lrn_forward::primitive_desc::get_algorithm"], [163, 3, 1, "_CPPv4NK4dnnl11lrn_forward14primitive_desc9get_alphaEv", "dnnl::lrn_forward::primitive_desc::get_alpha"], [163, 3, 1, "_CPPv4NK4dnnl11lrn_forward14primitive_desc8get_betaEv", "dnnl::lrn_forward::primitive_desc::get_beta"], [163, 3, 1, "_CPPv4NK4dnnl11lrn_forward14primitive_desc5get_kEv", "dnnl::lrn_forward::primitive_desc::get_k"], [163, 3, 1, "_CPPv4NK4dnnl11lrn_forward14primitive_desc14get_local_sizeEv", "dnnl::lrn_forward::primitive_desc::get_local_size"], [163, 3, 1, "_CPPv4NK4dnnl11lrn_forward14primitive_desc13get_prop_kindEv", "dnnl::lrn_forward::primitive_desc::get_prop_kind"], [163, 3, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc"], [163, 3, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descEv", "dnnl::lrn_forward::primitive_desc::primitive_desc"], [163, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::aalgorithm"], [163, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::aengine"], [163, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::allow_empty"], [163, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::alpha"], [163, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::aprop_kind"], [163, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::attr"], [163, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::beta"], [163, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::dst_desc"], [163, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::k"], [163, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::local_size"], [163, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::src_desc"], [163, 3, 1, "_CPPv4NK4dnnl11lrn_forward14primitive_desc8src_descEv", "dnnl::lrn_forward::primitive_desc::src_desc"], [163, 3, 1, "_CPPv4NK4dnnl11lrn_forward14primitive_desc14workspace_descEv", "dnnl::lrn_forward::primitive_desc::workspace_desc"], [170, 7, 1, "_CPPv4N4dnnl13lstm_backwardE", "dnnl::lstm_backward"], [170, 3, 1, "_CPPv4N4dnnl13lstm_backward13lstm_backwardERK14primitive_desc", "dnnl::lstm_backward::lstm_backward"], [170, 3, 1, "_CPPv4N4dnnl13lstm_backward13lstm_backwardEv", "dnnl::lstm_backward::lstm_backward"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward13lstm_backwardERK14primitive_desc", "dnnl::lstm_backward::lstm_backward::pd"], [170, 7, 1, "_CPPv4N4dnnl13lstm_backward14primitive_descE", "dnnl::lstm_backward::primitive_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc9bias_descEv", "dnnl::lstm_backward::primitive_desc::bias_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc14diff_bias_descEv", "dnnl::lstm_backward::primitive_desc::diff_bias_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc20diff_dst_iter_c_descEv", "dnnl::lstm_backward::primitive_desc::diff_dst_iter_c_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc18diff_dst_iter_descEv", "dnnl::lstm_backward::primitive_desc::diff_dst_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc19diff_dst_layer_descEv", "dnnl::lstm_backward::primitive_desc::diff_dst_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc20diff_src_iter_c_descEv", "dnnl::lstm_backward::primitive_desc::diff_src_iter_c_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc18diff_src_iter_descEv", "dnnl::lstm_backward::primitive_desc::diff_src_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc19diff_src_layer_descEv", "dnnl::lstm_backward::primitive_desc::diff_src_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc22diff_weights_iter_descEv", "dnnl::lstm_backward::primitive_desc::diff_weights_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc23diff_weights_layer_descEv", "dnnl::lstm_backward::primitive_desc::diff_weights_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc26diff_weights_peephole_descEv", "dnnl::lstm_backward::primitive_desc::diff_weights_peephole_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc28diff_weights_projection_descEv", "dnnl::lstm_backward::primitive_desc::diff_weights_projection_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc15dst_iter_c_descEv", "dnnl::lstm_backward::primitive_desc::dst_iter_c_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13dst_iter_descEv", "dnnl::lstm_backward::primitive_desc::dst_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc14dst_layer_descEv", "dnnl::lstm_backward::primitive_desc::dst_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13get_cell_kindEv", "dnnl::lstm_backward::primitive_desc::get_cell_kind"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13get_directionEv", "dnnl::lstm_backward::primitive_desc::get_direction"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13get_prop_kindEv", "dnnl::lstm_backward::primitive_desc::get_prop_kind"], [170, 3, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc"], [170, 3, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc"], [170, 3, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc"], [170, 3, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descEv", "dnnl::lstm_backward::primitive_desc::primitive_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::aengine"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::aengine"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::aengine"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::allow_empty"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::allow_empty"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::allow_empty"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::aprop_kind"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::aprop_kind"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::aprop_kind"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::attr"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::attr"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::attr"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::bias_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::bias_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::bias_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_bias_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_bias_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_bias_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_dst_iter_c_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_dst_iter_c_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_dst_iter_c_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_src_iter_c_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_src_iter_c_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_src_iter_c_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_weights_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_weights_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_weights_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_weights_peephole_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_weights_peephole_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_weights_projection_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::direction"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::direction"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::direction"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::dst_iter_c_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::dst_iter_c_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::dst_iter_c_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::src_iter_c_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::src_iter_c_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::src_iter_c_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::weights_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::weights_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::weights_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::weights_peephole_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::weights_peephole_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::weights_projection_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc15src_iter_c_descEv", "dnnl::lstm_backward::primitive_desc::src_iter_c_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13src_iter_descEv", "dnnl::lstm_backward::primitive_desc::src_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc14src_layer_descEv", "dnnl::lstm_backward::primitive_desc::src_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc17weights_iter_descEv", "dnnl::lstm_backward::primitive_desc::weights_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc18weights_layer_descEv", "dnnl::lstm_backward::primitive_desc::weights_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc21weights_peephole_descEv", "dnnl::lstm_backward::primitive_desc::weights_peephole_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc23weights_projection_descEv", "dnnl::lstm_backward::primitive_desc::weights_projection_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc14workspace_descEv", "dnnl::lstm_backward::primitive_desc::workspace_desc"], [170, 7, 1, "_CPPv4N4dnnl12lstm_forwardE", "dnnl::lstm_forward"], [170, 3, 1, "_CPPv4N4dnnl12lstm_forward12lstm_forwardERK14primitive_desc", "dnnl::lstm_forward::lstm_forward"], [170, 3, 1, "_CPPv4N4dnnl12lstm_forward12lstm_forwardEv", "dnnl::lstm_forward::lstm_forward"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward12lstm_forwardERK14primitive_desc", "dnnl::lstm_forward::lstm_forward::pd"], [170, 7, 1, "_CPPv4N4dnnl12lstm_forward14primitive_descE", "dnnl::lstm_forward::primitive_desc"], [170, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc9bias_descEv", "dnnl::lstm_forward::primitive_desc::bias_desc"], [170, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc15dst_iter_c_descEv", "dnnl::lstm_forward::primitive_desc::dst_iter_c_desc"], [170, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13dst_iter_descEv", "dnnl::lstm_forward::primitive_desc::dst_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc14dst_layer_descEv", "dnnl::lstm_forward::primitive_desc::dst_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13get_cell_kindEv", "dnnl::lstm_forward::primitive_desc::get_cell_kind"], [170, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13get_directionEv", "dnnl::lstm_forward::primitive_desc::get_direction"], [170, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13get_prop_kindEv", "dnnl::lstm_forward::primitive_desc::get_prop_kind"], [170, 3, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc"], [170, 3, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc"], [170, 3, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc"], [170, 3, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descEv", "dnnl::lstm_forward::primitive_desc::primitive_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::aengine"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::aengine"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::aengine"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::allow_empty"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::allow_empty"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::allow_empty"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::aprop_kind"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::aprop_kind"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::aprop_kind"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::attr"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::attr"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::attr"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::bias_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::bias_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::bias_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::direction"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::direction"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::direction"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::dst_iter_c_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::dst_iter_c_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::dst_iter_c_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::src_iter_c_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::src_iter_c_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::src_iter_c_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::weights_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::weights_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::weights_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::weights_peephole_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::weights_peephole_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::weights_projection_desc"], [170, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc15src_iter_c_descEv", "dnnl::lstm_forward::primitive_desc::src_iter_c_desc"], [170, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13src_iter_descEv", "dnnl::lstm_forward::primitive_desc::src_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc14src_layer_descEv", "dnnl::lstm_forward::primitive_desc::src_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc17weights_iter_descEv", "dnnl::lstm_forward::primitive_desc::weights_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc18weights_layer_descEv", "dnnl::lstm_forward::primitive_desc::weights_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc21weights_peephole_descEv", "dnnl::lstm_forward::primitive_desc::weights_peephole_desc"], [170, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc23weights_projection_descEv", "dnnl::lstm_forward::primitive_desc::weights_projection_desc"], [170, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc14workspace_descEv", "dnnl::lstm_forward::primitive_desc::workspace_desc"], [164, 7, 1, "_CPPv4N4dnnl6matmulE", "dnnl::matmul"], [164, 3, 1, "_CPPv4N4dnnl6matmul6matmulERK14primitive_desc", "dnnl::matmul::matmul"], [164, 3, 1, "_CPPv4N4dnnl6matmul6matmulEv", "dnnl::matmul::matmul"], [164, 4, 1, "_CPPv4N4dnnl6matmul6matmulERK14primitive_desc", "dnnl::matmul::matmul::pd"], [164, 7, 1, "_CPPv4N4dnnl6matmul14primitive_descE", "dnnl::matmul::primitive_desc"], [164, 3, 1, "_CPPv4NK4dnnl6matmul14primitive_desc9bias_descEv", "dnnl::matmul::primitive_desc::bias_desc"], [164, 3, 1, "_CPPv4NK4dnnl6matmul14primitive_desc8dst_descEv", "dnnl::matmul::primitive_desc::dst_desc"], [164, 3, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc"], [164, 3, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc"], [164, 3, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descEv", "dnnl::matmul::primitive_desc::primitive_desc"], [164, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::aengine"], [164, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::aengine"], [164, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::allow_empty"], [164, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::allow_empty"], [164, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::attr"], [164, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::attr"], [164, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::bias_desc"], [164, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::dst_desc"], [164, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::dst_desc"], [164, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::src_desc"], [164, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::src_desc"], [164, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::weights_desc"], [164, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::weights_desc"], [164, 3, 1, "_CPPv4NK4dnnl6matmul14primitive_desc8src_descEv", "dnnl::matmul::primitive_desc::src_desc"], [164, 3, 1, "_CPPv4NK4dnnl6matmul14primitive_desc12weights_descEv", "dnnl::matmul::primitive_desc::weights_desc"], [60, 7, 1, "_CPPv4N4dnnl6memoryE", "dnnl::memory"], [55, 9, 1, "_CPPv4N4dnnl6memory9data_typeE", "dnnl::memory::data_type"], [55, 10, 1, "_CPPv4N4dnnl6memory9data_type4bf16E", "dnnl::memory::data_type::bf16"], [55, 10, 1, "_CPPv4N4dnnl6memory9data_type3f16E", "dnnl::memory::data_type::f16"], [55, 10, 1, "_CPPv4N4dnnl6memory9data_type3f32E", "dnnl::memory::data_type::f32"], [55, 10, 1, "_CPPv4N4dnnl6memory9data_type3s32E", "dnnl::memory::data_type::s32"], [55, 10, 1, "_CPPv4N4dnnl6memory9data_type2s8E", "dnnl::memory::data_type::s8"], [55, 10, 1, "_CPPv4N4dnnl6memory9data_type2u8E", "dnnl::memory::data_type::u8"], [55, 10, 1, "_CPPv4N4dnnl6memory9data_type5undefE", "dnnl::memory::data_type::undef"], [60, 7, 1, "_CPPv4N4dnnl6memory4descE", "dnnl::memory::desc"], [60, 3, 1, "_CPPv4NK4dnnl6memory4desc9data_typeEv", "dnnl::memory::desc::data_type"], [60, 3, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_type10format_tagb", "dnnl::memory::desc::desc"], [60, 3, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_typeRK4dimsb", "dnnl::memory::desc::desc"], [60, 3, 1, "_CPPv4N4dnnl6memory4desc4descEv", "dnnl::memory::desc::desc"], [60, 4, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_type10format_tagb", "dnnl::memory::desc::desc::adata_type"], [60, 4, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_typeRK4dimsb", "dnnl::memory::desc::desc::adata_type"], [60, 4, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_type10format_tagb", "dnnl::memory::desc::desc::adims"], [60, 4, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_typeRK4dimsb", "dnnl::memory::desc::desc::adims"], [60, 4, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_type10format_tagb", "dnnl::memory::desc::desc::aformat_tag"], [60, 4, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_type10format_tagb", "dnnl::memory::desc::desc::allow_empty"], [60, 4, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_typeRK4dimsb", "dnnl::memory::desc::desc::allow_empty"], [60, 4, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_typeRK4dimsb", "dnnl::memory::desc::desc::strides"], [60, 3, 1, "_CPPv4NK4dnnl6memory4desc4dimsEv", "dnnl::memory::desc::dims"], [60, 3, 1, "_CPPv4NK4dnnl6memory4desc8get_sizeEv", "dnnl::memory::desc::get_size"], [60, 3, 1, "_CPPv4NK4dnnl6memory4desc7is_zeroEv", "dnnl::memory::desc::is_zero"], [60, 3, 1, "_CPPv4NK4dnnl6memory4descneERK4desc", "dnnl::memory::desc::operator!="], [60, 4, 1, "_CPPv4NK4dnnl6memory4descneERK4desc", "dnnl::memory::desc::operator!=::other"], [60, 3, 1, "_CPPv4NK4dnnl6memory4desceqERK4desc", "dnnl::memory::desc::operator=="], [60, 4, 1, "_CPPv4NK4dnnl6memory4desceqERK4desc", "dnnl::memory::desc::operator==::other"], [60, 3, 1, "_CPPv4NK4dnnl6memory4desc12permute_axesERKNSt6vectorIiEEb", "dnnl::memory::desc::permute_axes"], [60, 4, 1, "_CPPv4NK4dnnl6memory4desc12permute_axesERKNSt6vectorIiEEb", "dnnl::memory::desc::permute_axes::allow_empty"], [60, 4, 1, "_CPPv4NK4dnnl6memory4desc12permute_axesERKNSt6vectorIiEEb", "dnnl::memory::desc::permute_axes::permutation"], [60, 3, 1, "_CPPv4NK4dnnl6memory4desc7reshapeERK4dimsb", "dnnl::memory::desc::reshape"], [60, 4, 1, "_CPPv4NK4dnnl6memory4desc7reshapeERK4dimsb", "dnnl::memory::desc::reshape::adims"], [60, 4, 1, "_CPPv4NK4dnnl6memory4desc7reshapeERK4dimsb", "dnnl::memory::desc::reshape::allow_empty"], [60, 3, 1, "_CPPv4NK4dnnl6memory4desc14submemory_descERK4dimsRK4dimsb", "dnnl::memory::desc::submemory_desc"], [60, 4, 1, "_CPPv4NK4dnnl6memory4desc14submemory_descERK4dimsRK4dimsb", "dnnl::memory::desc::submemory_desc::adims"], [60, 4, 1, "_CPPv4NK4dnnl6memory4desc14submemory_descERK4dimsRK4dimsb", "dnnl::memory::desc::submemory_desc::allow_empty"], [60, 4, 1, "_CPPv4NK4dnnl6memory4desc14submemory_descERK4dimsRK4dimsb", "dnnl::memory::desc::submemory_desc::offsets"], [59, 5, 1, "_CPPv4N4dnnl6memory3dimE", "dnnl::memory::dim"], [59, 5, 1, "_CPPv4N4dnnl6memory4dimsE", "dnnl::memory::dims"], [58, 9, 1, "_CPPv4N4dnnl6memory10format_tagE", "dnnl::memory::format_tag"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag1aE", "dnnl::memory::format_tag::a"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag2abE", "dnnl::memory::format_tag::ab"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag3abcE", "dnnl::memory::format_tag::abc"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4abcdE", "dnnl::memory::format_tag::abcd"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5abcdeE", "dnnl::memory::format_tag::abcde"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag6abcdefE", "dnnl::memory::format_tag::abcdef"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4abdcE", "dnnl::memory::format_tag::abdc"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5abdecE", "dnnl::memory::format_tag::abdec"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag3acbE", "dnnl::memory::format_tag::acb"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5acbdeE", "dnnl::memory::format_tag::acbde"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag6acbdefE", "dnnl::memory::format_tag::acbdef"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4acdbE", "dnnl::memory::format_tag::acdb"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5acdebE", "dnnl::memory::format_tag::acdeb"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag3anyE", "dnnl::memory::format_tag::any"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag2baE", "dnnl::memory::format_tag::ba"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag3bacE", "dnnl::memory::format_tag::bac"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4bacdE", "dnnl::memory::format_tag::bacd"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5bacdeE", "dnnl::memory::format_tag::bacde"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag3bcaE", "dnnl::memory::format_tag::bca"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4bcdaE", "dnnl::memory::format_tag::bcda"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5bcdeaE", "dnnl::memory::format_tag::bcdea"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag3cbaE", "dnnl::memory::format_tag::cba"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4cdbaE", "dnnl::memory::format_tag::cdba"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5cdebaE", "dnnl::memory::format_tag::cdeba"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4chwnE", "dnnl::memory::format_tag::chwn"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag2cnE", "dnnl::memory::format_tag::cn"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4dcabE", "dnnl::memory::format_tag::dcab"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5decabE", "dnnl::memory::format_tag::decab"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag6defcabE", "dnnl::memory::format_tag::defcab"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag6dhwigoE", "dnnl::memory::format_tag::dhwigo"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5dhwioE", "dnnl::memory::format_tag::dhwio"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag6giodhwE", "dnnl::memory::format_tag::giodhw"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5giohwE", "dnnl::memory::format_tag::giohw"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag6goidhwE", "dnnl::memory::format_tag::goidhw"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5goihwE", "dnnl::memory::format_tag::goihw"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4goiwE", "dnnl::memory::format_tag::goiw"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5hwigoE", "dnnl::memory::format_tag::hwigo"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4hwioE", "dnnl::memory::format_tag::hwio"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5idhwoE", "dnnl::memory::format_tag::idhwo"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4ihwoE", "dnnl::memory::format_tag::ihwo"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag2ioE", "dnnl::memory::format_tag::io"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5iodhwE", "dnnl::memory::format_tag::iodhw"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4iohwE", "dnnl::memory::format_tag::iohw"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag3iwoE", "dnnl::memory::format_tag::iwo"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4ldgoE", "dnnl::memory::format_tag::ldgo"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5ldgoiE", "dnnl::memory::format_tag::ldgoi"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5ldigoE", "dnnl::memory::format_tag::ldigo"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4ldioE", "dnnl::memory::format_tag::ldio"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4ldncE", "dnnl::memory::format_tag::ldnc"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4ldoiE", "dnnl::memory::format_tag::ldoi"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag2ncE", "dnnl::memory::format_tag::nc"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5ncdhwE", "dnnl::memory::format_tag::ncdhw"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4nchwE", "dnnl::memory::format_tag::nchw"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag3ncwE", "dnnl::memory::format_tag::ncw"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5ndhwcE", "dnnl::memory::format_tag::ndhwc"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4nhwcE", "dnnl::memory::format_tag::nhwc"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag2ntE", "dnnl::memory::format_tag::nt"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag3ntcE", "dnnl::memory::format_tag::ntc"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag3nwcE", "dnnl::memory::format_tag::nwc"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5odhwiE", "dnnl::memory::format_tag::odhwi"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4ohwiE", "dnnl::memory::format_tag::ohwi"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag2oiE", "dnnl::memory::format_tag::oi"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5oidhwE", "dnnl::memory::format_tag::oidhw"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4oihwE", "dnnl::memory::format_tag::oihw"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag3oiwE", "dnnl::memory::format_tag::oiw"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag3owiE", "dnnl::memory::format_tag::owi"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag2tnE", "dnnl::memory::format_tag::tn"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag3tncE", "dnnl::memory::format_tag::tnc"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5undefE", "dnnl::memory::format_tag::undef"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4wigoE", "dnnl::memory::format_tag::wigo"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag3wioE", "dnnl::memory::format_tag::wio"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag1xE", "dnnl::memory::format_tag::x"], [60, 3, 1, "_CPPv4NK4dnnl6memory15get_data_handleEv", "dnnl::memory::get_data_handle"], [60, 3, 1, "_CPPv4NK4dnnl6memory8get_descEv", "dnnl::memory::get_desc"], [60, 3, 1, "_CPPv4NK4dnnl6memory10get_engineEv", "dnnl::memory::get_engine"], [60, 3, 1, "_CPPv4I0ENK4dnnl6memory8map_dataEP1Tv", "dnnl::memory::map_data"], [60, 8, 1, "_CPPv4I0ENK4dnnl6memory8map_dataEP1Tv", "dnnl::memory::map_data::T"], [60, 3, 1, "_CPPv4N4dnnl6memory6memoryERK4descRK6engine", "dnnl::memory::memory"], [60, 3, 1, "_CPPv4N4dnnl6memory6memoryERK4descRK6enginePv", "dnnl::memory::memory"], [60, 3, 1, "_CPPv4N4dnnl6memory6memoryEv", "dnnl::memory::memory"], [60, 4, 1, "_CPPv4N4dnnl6memory6memoryERK4descRK6engine", "dnnl::memory::memory::aengine"], [60, 4, 1, "_CPPv4N4dnnl6memory6memoryERK4descRK6enginePv", "dnnl::memory::memory::aengine"], [60, 4, 1, "_CPPv4N4dnnl6memory6memoryERK4descRK6enginePv", "dnnl::memory::memory::handle"], [60, 4, 1, "_CPPv4N4dnnl6memory6memoryERK4descRK6engine", "dnnl::memory::memory::md"], [60, 4, 1, "_CPPv4N4dnnl6memory6memoryERK4descRK6enginePv", "dnnl::memory::memory::md"], [60, 3, 1, "_CPPv4NK4dnnl6memory15set_data_handleEPv", "dnnl::memory::set_data_handle"], [60, 3, 1, "_CPPv4NK4dnnl6memory15set_data_handleEPvRK6stream", "dnnl::memory::set_data_handle"], [60, 4, 1, "_CPPv4NK4dnnl6memory15set_data_handleEPvRK6stream", "dnnl::memory::set_data_handle::astream"], [60, 4, 1, "_CPPv4NK4dnnl6memory15set_data_handleEPv", "dnnl::memory::set_data_handle::handle"], [60, 4, 1, "_CPPv4NK4dnnl6memory15set_data_handleEPvRK6stream", "dnnl::memory::set_data_handle::handle"], [60, 3, 1, "_CPPv4NK4dnnl6memory10unmap_dataEPv", "dnnl::memory::unmap_data"], [60, 4, 1, "_CPPv4NK4dnnl6memory10unmap_dataEPv", "dnnl::memory::unmap_data::mapped_ptr"], [159, 9, 1, "_CPPv4N4dnnl19normalization_flagsE", "dnnl::normalization_flags"], [159, 10, 1, "_CPPv4N4dnnl19normalization_flags14fuse_norm_reluE", "dnnl::normalization_flags::fuse_norm_relu"], [159, 10, 1, "_CPPv4N4dnnl19normalization_flags4noneE", "dnnl::normalization_flags::none"], [159, 10, 1, "_CPPv4N4dnnl19normalization_flags16use_global_statsE", "dnnl::normalization_flags::use_global_stats"], [159, 10, 1, "_CPPv4N4dnnl19normalization_flags9use_scaleE", "dnnl::normalization_flags::use_scale"], [159, 10, 1, "_CPPv4N4dnnl19normalization_flags9use_shiftE", "dnnl::normalization_flags::use_shift"], [165, 7, 1, "_CPPv4N4dnnl16pooling_backwardE", "dnnl::pooling_backward"], [165, 3, 1, "_CPPv4N4dnnl16pooling_backward16pooling_backwardERK14primitive_desc", "dnnl::pooling_backward::pooling_backward"], [165, 3, 1, "_CPPv4N4dnnl16pooling_backward16pooling_backwardEv", "dnnl::pooling_backward::pooling_backward"], [165, 4, 1, "_CPPv4N4dnnl16pooling_backward16pooling_backwardERK14primitive_desc", "dnnl::pooling_backward::pooling_backward::pd"], [165, 7, 1, "_CPPv4N4dnnl16pooling_backward14primitive_descE", "dnnl::pooling_backward::primitive_desc"], [165, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13diff_dst_descEv", "dnnl::pooling_backward::primitive_desc::diff_dst_desc"], [165, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13diff_src_descEv", "dnnl::pooling_backward::primitive_desc::diff_src_desc"], [165, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_algorithmEv", "dnnl::pooling_backward::primitive_desc::get_algorithm"], [165, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_dilationsEv", "dnnl::pooling_backward::primitive_desc::get_dilations"], [165, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc10get_kernelEv", "dnnl::pooling_backward::primitive_desc::get_kernel"], [165, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_padding_lEv", "dnnl::pooling_backward::primitive_desc::get_padding_l"], [165, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_padding_rEv", "dnnl::pooling_backward::primitive_desc::get_padding_r"], [165, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_prop_kindEv", "dnnl::pooling_backward::primitive_desc::get_prop_kind"], [165, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc11get_stridesEv", "dnnl::pooling_backward::primitive_desc::get_strides"], [165, 3, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc"], [165, 3, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descEv", "dnnl::pooling_backward::primitive_desc::primitive_desc"], [165, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::aalgorithm"], [165, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::aengine"], [165, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::allow_empty"], [165, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::attr"], [165, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::diff_dst_desc"], [165, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::diff_src_desc"], [165, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::dilation"], [165, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [165, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::kernel"], [165, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::padding_l"], [165, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::padding_r"], [165, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::strides"], [165, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc14workspace_descEv", "dnnl::pooling_backward::primitive_desc::workspace_desc"], [165, 7, 1, "_CPPv4N4dnnl15pooling_forwardE", "dnnl::pooling_forward"], [165, 3, 1, "_CPPv4N4dnnl15pooling_forward15pooling_forwardERK14primitive_desc", "dnnl::pooling_forward::pooling_forward"], [165, 3, 1, "_CPPv4N4dnnl15pooling_forward15pooling_forwardEv", "dnnl::pooling_forward::pooling_forward"], [165, 4, 1, "_CPPv4N4dnnl15pooling_forward15pooling_forwardERK14primitive_desc", "dnnl::pooling_forward::pooling_forward::pd"], [165, 7, 1, "_CPPv4N4dnnl15pooling_forward14primitive_descE", "dnnl::pooling_forward::primitive_desc"], [165, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc8dst_descEv", "dnnl::pooling_forward::primitive_desc::dst_desc"], [165, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_algorithmEv", "dnnl::pooling_forward::primitive_desc::get_algorithm"], [165, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_dilationsEv", "dnnl::pooling_forward::primitive_desc::get_dilations"], [165, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc10get_kernelEv", "dnnl::pooling_forward::primitive_desc::get_kernel"], [165, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_padding_lEv", "dnnl::pooling_forward::primitive_desc::get_padding_l"], [165, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_padding_rEv", "dnnl::pooling_forward::primitive_desc::get_padding_r"], [165, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_prop_kindEv", "dnnl::pooling_forward::primitive_desc::get_prop_kind"], [165, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc11get_stridesEv", "dnnl::pooling_forward::primitive_desc::get_strides"], [165, 3, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc"], [165, 3, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descEv", "dnnl::pooling_forward::primitive_desc::primitive_desc"], [165, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::aalgorithm"], [165, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::aengine"], [165, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::allow_empty"], [165, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::aprop_kind"], [165, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::attr"], [165, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::dilation"], [165, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::dst_desc"], [165, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::kernel"], [165, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::padding_l"], [165, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::padding_r"], [165, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::src_desc"], [165, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::strides"], [165, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc8src_descEv", "dnnl::pooling_forward::primitive_desc::src_desc"], [165, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc14workspace_descEv", "dnnl::pooling_forward::primitive_desc::workspace_desc"], [153, 7, 1, "_CPPv4N4dnnl8post_opsE", "dnnl::post_ops"], [153, 3, 1, "_CPPv4N4dnnl8post_ops13append_binaryE9algorithmRKN6memory4descE", "dnnl::post_ops::append_binary"], [153, 4, 1, "_CPPv4N4dnnl8post_ops13append_binaryE9algorithmRKN6memory4descE", "dnnl::post_ops::append_binary::aalgorithm"], [153, 4, 1, "_CPPv4N4dnnl8post_ops13append_binaryE9algorithmRKN6memory4descE", "dnnl::post_ops::append_binary::src1_desc"], [153, 3, 1, "_CPPv4N4dnnl8post_ops14append_eltwiseE9algorithmff", "dnnl::post_ops::append_eltwise"], [153, 4, 1, "_CPPv4N4dnnl8post_ops14append_eltwiseE9algorithmff", "dnnl::post_ops::append_eltwise::aalgorithm"], [153, 4, 1, "_CPPv4N4dnnl8post_ops14append_eltwiseE9algorithmff", "dnnl::post_ops::append_eltwise::alpha"], [153, 4, 1, "_CPPv4N4dnnl8post_ops14append_eltwiseE9algorithmff", "dnnl::post_ops::append_eltwise::beta"], [153, 3, 1, "_CPPv4N4dnnl8post_ops10append_sumEN6memory9data_typeE", "dnnl::post_ops::append_sum"], [153, 4, 1, "_CPPv4N4dnnl8post_ops10append_sumEN6memory9data_typeE", "dnnl::post_ops::append_sum::data_type"], [153, 3, 1, "_CPPv4NK4dnnl8post_ops17get_params_binaryEiR9algorithmRN6memory4descE", "dnnl::post_ops::get_params_binary"], [153, 4, 1, "_CPPv4NK4dnnl8post_ops17get_params_binaryEiR9algorithmRN6memory4descE", "dnnl::post_ops::get_params_binary::aalgorithm"], [153, 4, 1, "_CPPv4NK4dnnl8post_ops17get_params_binaryEiR9algorithmRN6memory4descE", "dnnl::post_ops::get_params_binary::index"], [153, 4, 1, "_CPPv4NK4dnnl8post_ops17get_params_binaryEiR9algorithmRN6memory4descE", "dnnl::post_ops::get_params_binary::src1_desc"], [153, 3, 1, "_CPPv4NK4dnnl8post_ops18get_params_eltwiseEiR9algorithmRfRf", "dnnl::post_ops::get_params_eltwise"], [153, 4, 1, "_CPPv4NK4dnnl8post_ops18get_params_eltwiseEiR9algorithmRfRf", "dnnl::post_ops::get_params_eltwise::aalgorithm"], [153, 4, 1, "_CPPv4NK4dnnl8post_ops18get_params_eltwiseEiR9algorithmRfRf", "dnnl::post_ops::get_params_eltwise::alpha"], [153, 4, 1, "_CPPv4NK4dnnl8post_ops18get_params_eltwiseEiR9algorithmRfRf", "dnnl::post_ops::get_params_eltwise::beta"], [153, 4, 1, "_CPPv4NK4dnnl8post_ops18get_params_eltwiseEiR9algorithmRfRf", "dnnl::post_ops::get_params_eltwise::index"], [153, 3, 1, "_CPPv4NK4dnnl8post_ops14get_params_sumEiRf", "dnnl::post_ops::get_params_sum"], [153, 3, 1, "_CPPv4NK4dnnl8post_ops14get_params_sumEiRfRN6memory9data_typeE", "dnnl::post_ops::get_params_sum"], [153, 4, 1, "_CPPv4NK4dnnl8post_ops14get_params_sumEiRfRN6memory9data_typeE", "dnnl::post_ops::get_params_sum::data_type"], [153, 4, 1, "_CPPv4NK4dnnl8post_ops14get_params_sumEiRf", "dnnl::post_ops::get_params_sum::index"], [153, 4, 1, "_CPPv4NK4dnnl8post_ops14get_params_sumEiRfRN6memory9data_typeE", "dnnl::post_ops::get_params_sum::index"], [153, 4, 1, "_CPPv4NK4dnnl8post_ops14get_params_sumEiRf", "dnnl::post_ops::get_params_sum::scale"], [153, 4, 1, "_CPPv4NK4dnnl8post_ops14get_params_sumEiRfRN6memory9data_typeE", "dnnl::post_ops::get_params_sum::scale"], [153, 3, 1, "_CPPv4NK4dnnl8post_ops4kindEi", "dnnl::post_ops::kind"], [153, 4, 1, "_CPPv4NK4dnnl8post_ops4kindEi", "dnnl::post_ops::kind::index"], [153, 3, 1, "_CPPv4NK4dnnl8post_ops3lenEv", "dnnl::post_ops::len"], [153, 3, 1, "_CPPv4N4dnnl8post_ops8post_opsEv", "dnnl::post_ops::post_ops"], [166, 7, 1, "_CPPv4N4dnnl14prelu_backwardE", "dnnl::prelu_backward"], [166, 3, 1, "_CPPv4N4dnnl14prelu_backward14prelu_backwardERK14primitive_desc", "dnnl::prelu_backward::prelu_backward"], [166, 3, 1, "_CPPv4N4dnnl14prelu_backward14prelu_backwardEv", "dnnl::prelu_backward::prelu_backward"], [166, 4, 1, "_CPPv4N4dnnl14prelu_backward14prelu_backwardERK14primitive_desc", "dnnl::prelu_backward::prelu_backward::pd"], [166, 7, 1, "_CPPv4N4dnnl14prelu_backward14primitive_descE", "dnnl::prelu_backward::primitive_desc"], [166, 3, 1, "_CPPv4NK4dnnl14prelu_backward14primitive_desc13diff_dst_descEv", "dnnl::prelu_backward::primitive_desc::diff_dst_desc"], [166, 3, 1, "_CPPv4NK4dnnl14prelu_backward14primitive_desc13diff_src_descEv", "dnnl::prelu_backward::primitive_desc::diff_src_desc"], [166, 3, 1, "_CPPv4NK4dnnl14prelu_backward14primitive_desc13get_prop_kindEv", "dnnl::prelu_backward::primitive_desc::get_prop_kind"], [166, 3, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc"], [166, 3, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descEv", "dnnl::prelu_backward::primitive_desc::primitive_desc"], [166, 4, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc::aengine"], [166, 4, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc::allow_empty"], [166, 4, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc::attr"], [166, 4, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc::diff_dst_desc"], [166, 4, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc::diff_src_desc"], [166, 4, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc::diff_weights_desc"], [166, 4, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [166, 4, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc::src_desc"], [166, 4, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc::weight_desc"], [166, 3, 1, "_CPPv4NK4dnnl14prelu_backward14primitive_desc8src_descEv", "dnnl::prelu_backward::primitive_desc::src_desc"], [166, 7, 1, "_CPPv4N4dnnl13prelu_forwardE", "dnnl::prelu_forward"], [166, 3, 1, "_CPPv4N4dnnl13prelu_forward13prelu_forwardERK14primitive_desc", "dnnl::prelu_forward::prelu_forward"], [166, 3, 1, "_CPPv4N4dnnl13prelu_forward13prelu_forwardEv", "dnnl::prelu_forward::prelu_forward"], [166, 4, 1, "_CPPv4N4dnnl13prelu_forward13prelu_forwardERK14primitive_desc", "dnnl::prelu_forward::prelu_forward::pd"], [166, 7, 1, "_CPPv4N4dnnl13prelu_forward14primitive_descE", "dnnl::prelu_forward::primitive_desc"], [166, 3, 1, "_CPPv4NK4dnnl13prelu_forward14primitive_desc8dst_descEv", "dnnl::prelu_forward::primitive_desc::dst_desc"], [166, 3, 1, "_CPPv4NK4dnnl13prelu_forward14primitive_desc13get_prop_kindEv", "dnnl::prelu_forward::primitive_desc::get_prop_kind"], [166, 3, 1, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::prelu_forward::primitive_desc::primitive_desc"], [166, 3, 1, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descEv", "dnnl::prelu_forward::primitive_desc::primitive_desc"], [166, 4, 1, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::prelu_forward::primitive_desc::primitive_desc::aengine"], [166, 4, 1, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::prelu_forward::primitive_desc::primitive_desc::allow_empty"], [166, 4, 1, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::prelu_forward::primitive_desc::primitive_desc::aprop_kind"], [166, 4, 1, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::prelu_forward::primitive_desc::primitive_desc::attr"], [166, 4, 1, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::prelu_forward::primitive_desc::primitive_desc::dst_desc"], [166, 4, 1, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::prelu_forward::primitive_desc::primitive_desc::src_desc"], [166, 4, 1, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::prelu_forward::primitive_desc::primitive_desc::weight_desc"], [166, 3, 1, "_CPPv4NK4dnnl13prelu_forward14primitive_desc8src_descEv", "dnnl::prelu_forward::primitive_desc::src_desc"], [159, 7, 1, "_CPPv4N4dnnl9primitiveE", "dnnl::primitive"], [159, 3, 1, "_CPPv4NK4dnnl9primitive7executeERK6streamRKNSt13unordered_mapIi6memoryEE", "dnnl::primitive::execute"], [159, 4, 1, "_CPPv4NK4dnnl9primitive7executeERK6streamRKNSt13unordered_mapIi6memoryEE", "dnnl::primitive::execute::args"], [159, 4, 1, "_CPPv4NK4dnnl9primitive7executeERK6streamRKNSt13unordered_mapIi6memoryEE", "dnnl::primitive::execute::astream"], [159, 3, 1, "_CPPv4NK4dnnl9primitive8get_kindEv", "dnnl::primitive::get_kind"], [159, 9, 1, "_CPPv4N4dnnl9primitive4kindE", "dnnl::primitive::kind"], [159, 10, 1, "_CPPv4N4dnnl9primitive4kind19batch_normalizationE", "dnnl::primitive::kind::batch_normalization"], [159, 10, 1, "_CPPv4N4dnnl9primitive4kind6binaryE", "dnnl::primitive::kind::binary"], [159, 10, 1, "_CPPv4N4dnnl9primitive4kind6concatE", "dnnl::primitive::kind::concat"], [159, 10, 1, "_CPPv4N4dnnl9primitive4kind11convolutionE", "dnnl::primitive::kind::convolution"], [159, 10, 1, "_CPPv4N4dnnl9primitive4kind13deconvolutionE", "dnnl::primitive::kind::deconvolution"], [159, 10, 1, "_CPPv4N4dnnl9primitive4kind7eltwiseE", "dnnl::primitive::kind::eltwise"], [159, 10, 1, "_CPPv4N4dnnl9primitive4kind13inner_productE", "dnnl::primitive::kind::inner_product"], [159, 10, 1, "_CPPv4N4dnnl9primitive4kind19layer_normalizationE", "dnnl::primitive::kind::layer_normalization"], [159, 10, 1, "_CPPv4N4dnnl9primitive4kind3lrnE", "dnnl::primitive::kind::lrn"], [159, 10, 1, "_CPPv4N4dnnl9primitive4kind6matmulE", "dnnl::primitive::kind::matmul"], [159, 10, 1, "_CPPv4N4dnnl9primitive4kind7poolingE", "dnnl::primitive::kind::pooling"], [159, 10, 1, "_CPPv4N4dnnl9primitive4kind5preluE", "dnnl::primitive::kind::prelu"], [159, 10, 1, "_CPPv4N4dnnl9primitive4kind7reorderE", "dnnl::primitive::kind::reorder"], [159, 10, 1, "_CPPv4N4dnnl9primitive4kind10resamplingE", "dnnl::primitive::kind::resampling"], [159, 10, 1, "_CPPv4N4dnnl9primitive4kind3rnnE", "dnnl::primitive::kind::rnn"], [159, 10, 1, "_CPPv4N4dnnl9primitive4kind7shuffleE", "dnnl::primitive::kind::shuffle"], [159, 10, 1, "_CPPv4N4dnnl9primitive4kind7softmaxE", "dnnl::primitive::kind::softmax"], [159, 10, 1, "_CPPv4N4dnnl9primitive4kind3sumE", "dnnl::primitive::kind::sum"], [159, 10, 1, "_CPPv4N4dnnl9primitive4kind5undefE", "dnnl::primitive::kind::undef"], [159, 3, 1, "_CPPv4N4dnnl9primitiveaSERK9primitive", "dnnl::primitive::operator="], [159, 4, 1, "_CPPv4N4dnnl9primitiveaSERK9primitive", "dnnl::primitive::operator=::rhs"], [159, 3, 1, "_CPPv4N4dnnl9primitive9primitiveERK19primitive_desc_base", "dnnl::primitive::primitive"], [159, 3, 1, "_CPPv4N4dnnl9primitive9primitiveEv", "dnnl::primitive::primitive"], [159, 4, 1, "_CPPv4N4dnnl9primitive9primitiveERK19primitive_desc_base", "dnnl::primitive::primitive::pd"], [152, 7, 1, "_CPPv4N4dnnl14primitive_attrE", "dnnl::primitive_attr"], [152, 3, 1, "_CPPv4NK4dnnl14primitive_attr15get_fpmath_modeEv", "dnnl::primitive_attr::get_fpmath_mode"], [152, 3, 1, "_CPPv4NK4dnnl14primitive_attr12get_post_opsEv", "dnnl::primitive_attr::get_post_ops"], [152, 3, 1, "_CPPv4NK4dnnl14primitive_attr15get_scales_maskEi", "dnnl::primitive_attr::get_scales_mask"], [152, 4, 1, "_CPPv4NK4dnnl14primitive_attr15get_scales_maskEi", "dnnl::primitive_attr::get_scales_mask::arg"], [152, 3, 1, "_CPPv4NK4dnnl14primitive_attr19get_scratchpad_modeEv", "dnnl::primitive_attr::get_scratchpad_mode"], [152, 3, 1, "_CPPv4N4dnnl14primitive_attr14primitive_attrEv", "dnnl::primitive_attr::primitive_attr"], [152, 3, 1, "_CPPv4N4dnnl14primitive_attr15set_fpmath_modeE11fpmath_mode", "dnnl::primitive_attr::set_fpmath_mode"], [152, 4, 1, "_CPPv4N4dnnl14primitive_attr15set_fpmath_modeE11fpmath_mode", "dnnl::primitive_attr::set_fpmath_mode::mode"], [152, 3, 1, "_CPPv4N4dnnl14primitive_attr12set_post_opsEK8post_ops", "dnnl::primitive_attr::set_post_ops"], [152, 4, 1, "_CPPv4N4dnnl14primitive_attr12set_post_opsEK8post_ops", "dnnl::primitive_attr::set_post_ops::ops"], [152, 3, 1, "_CPPv4N4dnnl14primitive_attr20set_rnn_data_qparamsEff", "dnnl::primitive_attr::set_rnn_data_qparams"], [152, 4, 1, "_CPPv4N4dnnl14primitive_attr20set_rnn_data_qparamsEff", "dnnl::primitive_attr::set_rnn_data_qparams::scale"], [152, 4, 1, "_CPPv4N4dnnl14primitive_attr20set_rnn_data_qparamsEff", "dnnl::primitive_attr::set_rnn_data_qparams::shift"], [152, 3, 1, "_CPPv4N4dnnl14primitive_attr23set_rnn_weights_qparamsEiRKNSt6vectorIfEE", "dnnl::primitive_attr::set_rnn_weights_qparams"], [152, 4, 1, "_CPPv4N4dnnl14primitive_attr23set_rnn_weights_qparamsEiRKNSt6vectorIfEE", "dnnl::primitive_attr::set_rnn_weights_qparams::mask"], [152, 4, 1, "_CPPv4N4dnnl14primitive_attr23set_rnn_weights_qparamsEiRKNSt6vectorIfEE", "dnnl::primitive_attr::set_rnn_weights_qparams::scales"], [152, 3, 1, "_CPPv4N4dnnl14primitive_attr15set_scales_maskEii", "dnnl::primitive_attr::set_scales_mask"], [152, 4, 1, "_CPPv4N4dnnl14primitive_attr15set_scales_maskEii", "dnnl::primitive_attr::set_scales_mask::arg"], [152, 4, 1, "_CPPv4N4dnnl14primitive_attr15set_scales_maskEii", "dnnl::primitive_attr::set_scales_mask::mask"], [152, 3, 1, "_CPPv4N4dnnl14primitive_attr19set_scratchpad_modeE15scratchpad_mode", "dnnl::primitive_attr::set_scratchpad_mode"], [152, 4, 1, "_CPPv4N4dnnl14primitive_attr19set_scratchpad_modeE15scratchpad_mode", "dnnl::primitive_attr::set_scratchpad_mode::mode"], [152, 3, 1, "_CPPv4N4dnnl14primitive_attr20set_zero_points_maskEii", "dnnl::primitive_attr::set_zero_points_mask"], [152, 4, 1, "_CPPv4N4dnnl14primitive_attr20set_zero_points_maskEii", "dnnl::primitive_attr::set_zero_points_mask::arg"], [152, 4, 1, "_CPPv4N4dnnl14primitive_attr20set_zero_points_maskEii", "dnnl::primitive_attr::set_zero_points_mask::mask"], [159, 7, 1, "_CPPv4N4dnnl14primitive_descE", "dnnl::primitive_desc"], [159, 3, 1, "_CPPv4N4dnnl14primitive_desc9next_implEv", "dnnl::primitive_desc::next_impl"], [159, 3, 1, "_CPPv4N4dnnl14primitive_desc14primitive_descEv", "dnnl::primitive_desc::primitive_desc"], [159, 7, 1, "_CPPv4N4dnnl19primitive_desc_baseE", "dnnl::primitive_desc_base"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base9bias_descEv", "dnnl::primitive_desc_base::bias_desc"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13diff_dst_descEi", "dnnl::primitive_desc_base::diff_dst_desc"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13diff_dst_descEv", "dnnl::primitive_desc_base::diff_dst_desc"], [159, 4, 1, "_CPPv4NK4dnnl19primitive_desc_base13diff_dst_descEi", "dnnl::primitive_desc_base::diff_dst_desc::idx"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13diff_src_descEi", "dnnl::primitive_desc_base::diff_src_desc"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13diff_src_descEv", "dnnl::primitive_desc_base::diff_src_desc"], [159, 4, 1, "_CPPv4NK4dnnl19primitive_desc_base13diff_src_descEi", "dnnl::primitive_desc_base::diff_src_desc::idx"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base17diff_weights_descEi", "dnnl::primitive_desc_base::diff_weights_desc"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base17diff_weights_descEv", "dnnl::primitive_desc_base::diff_weights_desc"], [159, 4, 1, "_CPPv4NK4dnnl19primitive_desc_base17diff_weights_descEi", "dnnl::primitive_desc_base::diff_weights_desc::idx"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base8dst_descEi", "dnnl::primitive_desc_base::dst_desc"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base8dst_descEv", "dnnl::primitive_desc_base::dst_desc"], [159, 4, 1, "_CPPv4NK4dnnl19primitive_desc_base8dst_descEi", "dnnl::primitive_desc_base::dst_desc::idx"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base19get_activation_kindEv", "dnnl::primitive_desc_base::get_activation_kind"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13get_algorithmEv", "dnnl::primitive_desc_base::get_algorithm"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base9get_alphaEv", "dnnl::primitive_desc_base::get_alpha"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base8get_axisEv", "dnnl::primitive_desc_base::get_axis"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base8get_betaEv", "dnnl::primitive_desc_base::get_beta"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13get_cell_kindEv", "dnnl::primitive_desc_base::get_cell_kind"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13get_dilationsEv", "dnnl::primitive_desc_base::get_dilations"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13get_directionEv", "dnnl::primitive_desc_base::get_direction"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base10get_engineEv", "dnnl::primitive_desc_base::get_engine"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base11get_epsilonEv", "dnnl::primitive_desc_base::get_epsilon"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base11get_factorsEv", "dnnl::primitive_desc_base::get_factors"], [159, 3, 1, "_CPPv4I0ENK4dnnl19primitive_desc_base9get_flagsE1Tv", "dnnl::primitive_desc_base::get_flags"], [159, 8, 1, "_CPPv4I0ENK4dnnl19primitive_desc_base9get_flagsE1Tv", "dnnl::primitive_desc_base::get_flags::T"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base14get_group_sizeEv", "dnnl::primitive_desc_base::get_group_size"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base5get_kEv", "dnnl::primitive_desc_base::get_k"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base10get_kernelEv", "dnnl::primitive_desc_base::get_kernel"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base8get_kindEv", "dnnl::primitive_desc_base::get_kind"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base14get_local_sizeEv", "dnnl::primitive_desc_base::get_local_size"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base5get_pEv", "dnnl::primitive_desc_base::get_p"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13get_padding_lEv", "dnnl::primitive_desc_base::get_padding_l"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13get_padding_rEv", "dnnl::primitive_desc_base::get_padding_r"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base18get_primitive_attrEv", "dnnl::primitive_desc_base::get_primitive_attr"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13get_prop_kindEv", "dnnl::primitive_desc_base::get_prop_kind"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base11get_stridesEv", "dnnl::primitive_desc_base::get_strides"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13impl_info_strEv", "dnnl::primitive_desc_base::impl_info_str"], [159, 3, 1, "_CPPv4N4dnnl19primitive_desc_base19primitive_desc_baseEv", "dnnl::primitive_desc_base::primitive_desc_base"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base8query_mdE5queryi", "dnnl::primitive_desc_base::query_md"], [159, 4, 1, "_CPPv4NK4dnnl19primitive_desc_base8query_mdE5queryi", "dnnl::primitive_desc_base::query_md::idx"], [159, 4, 1, "_CPPv4NK4dnnl19primitive_desc_base8query_mdE5queryi", "dnnl::primitive_desc_base::query_md::what"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base9query_s64E5query", "dnnl::primitive_desc_base::query_s64"], [159, 4, 1, "_CPPv4NK4dnnl19primitive_desc_base9query_s64E5query", "dnnl::primitive_desc_base::query_s64::what"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base15scratchpad_descEv", "dnnl::primitive_desc_base::scratchpad_desc"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base17scratchpad_engineEv", "dnnl::primitive_desc_base::scratchpad_engine"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base8src_descEi", "dnnl::primitive_desc_base::src_desc"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base8src_descEv", "dnnl::primitive_desc_base::src_desc"], [159, 4, 1, "_CPPv4NK4dnnl19primitive_desc_base8src_descEi", "dnnl::primitive_desc_base::src_desc::idx"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base12weights_descEi", "dnnl::primitive_desc_base::weights_desc"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base12weights_descEv", "dnnl::primitive_desc_base::weights_desc"], [159, 4, 1, "_CPPv4NK4dnnl19primitive_desc_base12weights_descEi", "dnnl::primitive_desc_base::weights_desc::idx"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base14workspace_descEv", "dnnl::primitive_desc_base::workspace_desc"], [159, 9, 1, "_CPPv4N4dnnl9prop_kindE", "dnnl::prop_kind"], [159, 10, 1, "_CPPv4N4dnnl9prop_kind8backwardE", "dnnl::prop_kind::backward"], [159, 10, 1, "_CPPv4N4dnnl9prop_kind13backward_biasE", "dnnl::prop_kind::backward_bias"], [159, 10, 1, "_CPPv4N4dnnl9prop_kind13backward_dataE", "dnnl::prop_kind::backward_data"], [159, 10, 1, "_CPPv4N4dnnl9prop_kind16backward_weightsE", "dnnl::prop_kind::backward_weights"], [159, 10, 1, "_CPPv4N4dnnl9prop_kind7forwardE", "dnnl::prop_kind::forward"], [159, 10, 1, "_CPPv4N4dnnl9prop_kind17forward_inferenceE", "dnnl::prop_kind::forward_inference"], [159, 10, 1, "_CPPv4N4dnnl9prop_kind15forward_scoringE", "dnnl::prop_kind::forward_scoring"], [159, 10, 1, "_CPPv4N4dnnl9prop_kind16forward_trainingE", "dnnl::prop_kind::forward_training"], [159, 10, 1, "_CPPv4N4dnnl9prop_kind5undefE", "dnnl::prop_kind::undef"], [167, 7, 1, "_CPPv4N4dnnl9reductionE", "dnnl::reduction"], [167, 7, 1, "_CPPv4N4dnnl9reduction14primitive_descE", "dnnl::reduction::primitive_desc"], [167, 3, 1, "_CPPv4NK4dnnl9reduction14primitive_desc8dst_descEv", "dnnl::reduction::primitive_desc::dst_desc"], [167, 3, 1, "_CPPv4NK4dnnl9reduction14primitive_desc13get_algorithmEv", "dnnl::reduction::primitive_desc::get_algorithm"], [167, 3, 1, "_CPPv4NK4dnnl9reduction14primitive_desc11get_epsilonEv", "dnnl::reduction::primitive_desc::get_epsilon"], [167, 3, 1, "_CPPv4NK4dnnl9reduction14primitive_desc5get_pEv", "dnnl::reduction::primitive_desc::get_p"], [167, 3, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::reduction::primitive_desc::primitive_desc"], [167, 3, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descEv", "dnnl::reduction::primitive_desc::primitive_desc"], [167, 4, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::reduction::primitive_desc::primitive_desc::aalgorithm"], [167, 4, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::reduction::primitive_desc::primitive_desc::aengine"], [167, 4, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::reduction::primitive_desc::primitive_desc::allow_empty"], [167, 4, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::reduction::primitive_desc::primitive_desc::attr"], [167, 4, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::reduction::primitive_desc::primitive_desc::dst_desc"], [167, 4, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::reduction::primitive_desc::primitive_desc::eps"], [167, 4, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::reduction::primitive_desc::primitive_desc::p"], [167, 4, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::reduction::primitive_desc::primitive_desc::src_desc"], [167, 3, 1, "_CPPv4NK4dnnl9reduction14primitive_desc8src_descEv", "dnnl::reduction::primitive_desc::src_desc"], [167, 3, 1, "_CPPv4N4dnnl9reduction9reductionEv", "dnnl::reduction::reduction"], [168, 7, 1, "_CPPv4N4dnnl7reorderE", "dnnl::reorder"], [168, 3, 1, "_CPPv4NK4dnnl7reorder7executeERK6streamR6memoryR6memory", "dnnl::reorder::execute"], [168, 4, 1, "_CPPv4NK4dnnl7reorder7executeERK6streamR6memoryR6memory", "dnnl::reorder::execute::astream"], [168, 4, 1, "_CPPv4NK4dnnl7reorder7executeERK6streamR6memoryR6memory", "dnnl::reorder::execute::dst"], [168, 4, 1, "_CPPv4NK4dnnl7reorder7executeERK6streamR6memoryR6memory", "dnnl::reorder::execute::src"], [168, 7, 1, "_CPPv4N4dnnl7reorder14primitive_descE", "dnnl::reorder::primitive_desc"], [168, 3, 1, "_CPPv4NK4dnnl7reorder14primitive_desc8dst_descEv", "dnnl::reorder::primitive_desc::dst_desc"], [168, 3, 1, "_CPPv4NK4dnnl7reorder14primitive_desc14get_dst_engineEv", "dnnl::reorder::primitive_desc::get_dst_engine"], [168, 3, 1, "_CPPv4NK4dnnl7reorder14primitive_desc14get_src_engineEv", "dnnl::reorder::primitive_desc::get_src_engine"], [168, 3, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6engineRKN6memory4descERK6engineRKN6memory4descERK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc"], [168, 3, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6memoryRK6memoryRK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc"], [168, 3, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descEv", "dnnl::reorder::primitive_desc::primitive_desc"], [168, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6engineRKN6memory4descERK6engineRKN6memory4descERK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::allow_empty"], [168, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6memoryRK6memoryRK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::allow_empty"], [168, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6engineRKN6memory4descERK6engineRKN6memory4descERK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::attr"], [168, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6memoryRK6memoryRK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::attr"], [168, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6memoryRK6memoryRK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::dst"], [168, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6engineRKN6memory4descERK6engineRKN6memory4descERK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::dst_engine"], [168, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6engineRKN6memory4descERK6engineRKN6memory4descERK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::dst_md"], [168, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6memoryRK6memoryRK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::src"], [168, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6engineRKN6memory4descERK6engineRKN6memory4descERK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::src_engine"], [168, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6engineRKN6memory4descERK6engineRKN6memory4descERK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::src_md"], [168, 3, 1, "_CPPv4NK4dnnl7reorder14primitive_desc8src_descEv", "dnnl::reorder::primitive_desc::src_desc"], [168, 3, 1, "_CPPv4N4dnnl7reorder7reorderERK14primitive_desc", "dnnl::reorder::reorder"], [168, 3, 1, "_CPPv4N4dnnl7reorder7reorderERK6memoryRK6memoryRK14primitive_attr", "dnnl::reorder::reorder"], [168, 3, 1, "_CPPv4N4dnnl7reorder7reorderEv", "dnnl::reorder::reorder"], [168, 4, 1, "_CPPv4N4dnnl7reorder7reorderERK6memoryRK6memoryRK14primitive_attr", "dnnl::reorder::reorder::attr"], [168, 4, 1, "_CPPv4N4dnnl7reorder7reorderERK6memoryRK6memoryRK14primitive_attr", "dnnl::reorder::reorder::dst"], [168, 4, 1, "_CPPv4N4dnnl7reorder7reorderERK14primitive_desc", "dnnl::reorder::reorder::pd"], [168, 4, 1, "_CPPv4N4dnnl7reorder7reorderERK6memoryRK6memoryRK14primitive_attr", "dnnl::reorder::reorder::src"], [169, 7, 1, "_CPPv4N4dnnl19resampling_backwardE", "dnnl::resampling_backward"], [169, 7, 1, "_CPPv4N4dnnl19resampling_backward14primitive_descE", "dnnl::resampling_backward::primitive_desc"], [169, 3, 1, "_CPPv4NK4dnnl19resampling_backward14primitive_desc13diff_dst_descEv", "dnnl::resampling_backward::primitive_desc::diff_dst_desc"], [169, 3, 1, "_CPPv4NK4dnnl19resampling_backward14primitive_desc13diff_src_descEv", "dnnl::resampling_backward::primitive_desc::diff_src_desc"], [169, 3, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc"], [169, 3, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc"], [169, 3, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descEv", "dnnl::resampling_backward::primitive_desc::primitive_desc"], [169, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::aalgorithm"], [169, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::aalgorithm"], [169, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::aengine"], [169, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::aengine"], [169, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::allow_empty"], [169, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::allow_empty"], [169, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::attr"], [169, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::attr"], [169, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::diff_dst_desc"], [169, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::diff_dst_desc"], [169, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::diff_src_desc"], [169, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::diff_src_desc"], [169, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::factors"], [169, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [169, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [169, 3, 1, "_CPPv4N4dnnl19resampling_backward19resampling_backwardERK14primitive_desc", "dnnl::resampling_backward::resampling_backward"], [169, 3, 1, "_CPPv4N4dnnl19resampling_backward19resampling_backwardEv", "dnnl::resampling_backward::resampling_backward"], [169, 4, 1, "_CPPv4N4dnnl19resampling_backward19resampling_backwardERK14primitive_desc", "dnnl::resampling_backward::resampling_backward::pd"], [169, 7, 1, "_CPPv4N4dnnl18resampling_forwardE", "dnnl::resampling_forward"], [169, 7, 1, "_CPPv4N4dnnl18resampling_forward14primitive_descE", "dnnl::resampling_forward::primitive_desc"], [169, 3, 1, "_CPPv4NK4dnnl18resampling_forward14primitive_desc8dst_descEv", "dnnl::resampling_forward::primitive_desc::dst_desc"], [169, 3, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc"], [169, 3, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc"], [169, 3, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc"], [169, 3, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descEv", "dnnl::resampling_forward::primitive_desc::primitive_desc"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::aalgorithm"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::aalgorithm"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::aalgorithm"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::aengine"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::aengine"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::aengine"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::allow_empty"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::allow_empty"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::allow_empty"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::aprop_kind"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::aprop_kind"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::aprop_kind"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::attr"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::attr"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::attr"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::dst_desc"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::dst_desc"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::factors"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::factors"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::src_desc"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::src_desc"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::src_desc"], [169, 3, 1, "_CPPv4NK4dnnl18resampling_forward14primitive_desc8src_descEv", "dnnl::resampling_forward::primitive_desc::src_desc"], [169, 3, 1, "_CPPv4N4dnnl18resampling_forward18resampling_forwardERK14primitive_desc", "dnnl::resampling_forward::resampling_forward"], [169, 3, 1, "_CPPv4N4dnnl18resampling_forward18resampling_forwardEv", "dnnl::resampling_forward::resampling_forward"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward18resampling_forwardERK14primitive_desc", "dnnl::resampling_forward::resampling_forward::pd"], [170, 9, 1, "_CPPv4N4dnnl13rnn_directionE", "dnnl::rnn_direction"], [170, 10, 1, "_CPPv4N4dnnl13rnn_direction20bidirectional_concatE", "dnnl::rnn_direction::bidirectional_concat"], [170, 10, 1, "_CPPv4N4dnnl13rnn_direction17bidirectional_sumE", "dnnl::rnn_direction::bidirectional_sum"], [170, 10, 1, "_CPPv4N4dnnl13rnn_direction5undefE", "dnnl::rnn_direction::undef"], [170, 10, 1, "_CPPv4N4dnnl13rnn_direction14unidirectionalE", "dnnl::rnn_direction::unidirectional"], [170, 10, 1, "_CPPv4N4dnnl13rnn_direction25unidirectional_left2rightE", "dnnl::rnn_direction::unidirectional_left2right"], [170, 10, 1, "_CPPv4N4dnnl13rnn_direction25unidirectional_right2leftE", "dnnl::rnn_direction::unidirectional_right2left"], [170, 9, 1, "_CPPv4N4dnnl9rnn_flagsE", "dnnl::rnn_flags"], [170, 10, 1, "_CPPv4N4dnnl9rnn_flags5undefE", "dnnl::rnn_flags::undef"], [159, 7, 1, "_CPPv4N4dnnl23rnn_primitive_desc_baseE", "dnnl::rnn_primitive_desc_base"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base20augru_attention_descEv", "dnnl::rnn_primitive_desc_base::augru_attention_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base9bias_descEv", "dnnl::rnn_primitive_desc_base::bias_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base25diff_augru_attention_descEv", "dnnl::rnn_primitive_desc_base::diff_augru_attention_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base14diff_bias_descEv", "dnnl::rnn_primitive_desc_base::diff_bias_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base20diff_dst_iter_c_descEv", "dnnl::rnn_primitive_desc_base::diff_dst_iter_c_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base18diff_dst_iter_descEv", "dnnl::rnn_primitive_desc_base::diff_dst_iter_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base19diff_dst_layer_descEv", "dnnl::rnn_primitive_desc_base::diff_dst_layer_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base20diff_src_iter_c_descEv", "dnnl::rnn_primitive_desc_base::diff_src_iter_c_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base18diff_src_iter_descEv", "dnnl::rnn_primitive_desc_base::diff_src_iter_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base19diff_src_layer_descEv", "dnnl::rnn_primitive_desc_base::diff_src_layer_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base22diff_weights_iter_descEv", "dnnl::rnn_primitive_desc_base::diff_weights_iter_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base23diff_weights_layer_descEv", "dnnl::rnn_primitive_desc_base::diff_weights_layer_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base26diff_weights_peephole_descEv", "dnnl::rnn_primitive_desc_base::diff_weights_peephole_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base28diff_weights_projection_descEv", "dnnl::rnn_primitive_desc_base::diff_weights_projection_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base15dst_iter_c_descEv", "dnnl::rnn_primitive_desc_base::dst_iter_c_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base13dst_iter_descEv", "dnnl::rnn_primitive_desc_base::dst_iter_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base14dst_layer_descEv", "dnnl::rnn_primitive_desc_base::dst_layer_desc"], [159, 3, 1, "_CPPv4N4dnnl23rnn_primitive_desc_base23rnn_primitive_desc_baseEv", "dnnl::rnn_primitive_desc_base::rnn_primitive_desc_base"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base15src_iter_c_descEv", "dnnl::rnn_primitive_desc_base::src_iter_c_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base13src_iter_descEv", "dnnl::rnn_primitive_desc_base::src_iter_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base14src_layer_descEv", "dnnl::rnn_primitive_desc_base::src_layer_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base17weights_iter_descEv", "dnnl::rnn_primitive_desc_base::weights_iter_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base18weights_layer_descEv", "dnnl::rnn_primitive_desc_base::weights_layer_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base21weights_peephole_descEv", "dnnl::rnn_primitive_desc_base::weights_peephole_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base23weights_projection_descEv", "dnnl::rnn_primitive_desc_base::weights_projection_desc"], [152, 9, 1, "_CPPv4N4dnnl15scratchpad_modeE", "dnnl::scratchpad_mode"], [152, 10, 1, "_CPPv4N4dnnl15scratchpad_mode7libraryE", "dnnl::scratchpad_mode::library"], [152, 10, 1, "_CPPv4N4dnnl15scratchpad_mode4userE", "dnnl::scratchpad_mode::user"], [171, 7, 1, "_CPPv4N4dnnl16shuffle_backwardE", "dnnl::shuffle_backward"], [171, 7, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_descE", "dnnl::shuffle_backward::primitive_desc"], [171, 3, 1, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc13diff_dst_descEv", "dnnl::shuffle_backward::primitive_desc::diff_dst_desc"], [171, 3, 1, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc13diff_src_descEv", "dnnl::shuffle_backward::primitive_desc::diff_src_desc"], [171, 3, 1, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc8get_axisEv", "dnnl::shuffle_backward::primitive_desc::get_axis"], [171, 3, 1, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc14get_group_sizeEv", "dnnl::shuffle_backward::primitive_desc::get_group_size"], [171, 3, 1, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc13get_prop_kindEv", "dnnl::shuffle_backward::primitive_desc::get_prop_kind"], [171, 3, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb", "dnnl::shuffle_backward::primitive_desc::primitive_desc"], [171, 3, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descEv", "dnnl::shuffle_backward::primitive_desc::primitive_desc"], [171, 4, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb", "dnnl::shuffle_backward::primitive_desc::primitive_desc::aengine"], [171, 4, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb", "dnnl::shuffle_backward::primitive_desc::primitive_desc::allow_empty"], [171, 4, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb", "dnnl::shuffle_backward::primitive_desc::primitive_desc::attr"], [171, 4, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb", "dnnl::shuffle_backward::primitive_desc::primitive_desc::axis"], [171, 4, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb", "dnnl::shuffle_backward::primitive_desc::primitive_desc::diff_dst_desc"], [171, 4, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb", "dnnl::shuffle_backward::primitive_desc::primitive_desc::diff_src_desc"], [171, 4, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb", "dnnl::shuffle_backward::primitive_desc::primitive_desc::group_size"], [171, 4, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb", "dnnl::shuffle_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [171, 3, 1, "_CPPv4N4dnnl16shuffle_backward16shuffle_backwardERK14primitive_desc", "dnnl::shuffle_backward::shuffle_backward"], [171, 3, 1, "_CPPv4N4dnnl16shuffle_backward16shuffle_backwardEv", "dnnl::shuffle_backward::shuffle_backward"], [171, 4, 1, "_CPPv4N4dnnl16shuffle_backward16shuffle_backwardERK14primitive_desc", "dnnl::shuffle_backward::shuffle_backward::pd"], [171, 7, 1, "_CPPv4N4dnnl15shuffle_forwardE", "dnnl::shuffle_forward"], [171, 7, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_descE", "dnnl::shuffle_forward::primitive_desc"], [171, 3, 1, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc8dst_descEv", "dnnl::shuffle_forward::primitive_desc::dst_desc"], [171, 3, 1, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc8get_axisEv", "dnnl::shuffle_forward::primitive_desc::get_axis"], [171, 3, 1, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc14get_group_sizeEv", "dnnl::shuffle_forward::primitive_desc::get_group_size"], [171, 3, 1, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc13get_prop_kindEv", "dnnl::shuffle_forward::primitive_desc::get_prop_kind"], [171, 3, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb", "dnnl::shuffle_forward::primitive_desc::primitive_desc"], [171, 3, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descEv", "dnnl::shuffle_forward::primitive_desc::primitive_desc"], [171, 4, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb", "dnnl::shuffle_forward::primitive_desc::primitive_desc::aengine"], [171, 4, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb", "dnnl::shuffle_forward::primitive_desc::primitive_desc::allow_empty"], [171, 4, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb", "dnnl::shuffle_forward::primitive_desc::primitive_desc::aprop_kind"], [171, 4, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb", "dnnl::shuffle_forward::primitive_desc::primitive_desc::attr"], [171, 4, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb", "dnnl::shuffle_forward::primitive_desc::primitive_desc::axis"], [171, 4, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb", "dnnl::shuffle_forward::primitive_desc::primitive_desc::dst_desc"], [171, 4, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb", "dnnl::shuffle_forward::primitive_desc::primitive_desc::group_size"], [171, 4, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb", "dnnl::shuffle_forward::primitive_desc::primitive_desc::src_desc"], [171, 3, 1, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc8src_descEv", "dnnl::shuffle_forward::primitive_desc::src_desc"], [171, 3, 1, "_CPPv4N4dnnl15shuffle_forward15shuffle_forwardERK14primitive_desc", "dnnl::shuffle_forward::shuffle_forward"], [171, 3, 1, "_CPPv4N4dnnl15shuffle_forward15shuffle_forwardEv", "dnnl::shuffle_forward::shuffle_forward"], [171, 4, 1, "_CPPv4N4dnnl15shuffle_forward15shuffle_forwardERK14primitive_desc", "dnnl::shuffle_forward::shuffle_forward::pd"], [172, 7, 1, "_CPPv4N4dnnl16softmax_backwardE", "dnnl::softmax_backward"], [172, 7, 1, "_CPPv4N4dnnl16softmax_backward14primitive_descE", "dnnl::softmax_backward::primitive_desc"], [172, 3, 1, "_CPPv4NK4dnnl16softmax_backward14primitive_desc13diff_dst_descEv", "dnnl::softmax_backward::primitive_desc::diff_dst_desc"], [172, 3, 1, "_CPPv4NK4dnnl16softmax_backward14primitive_desc13diff_src_descEv", "dnnl::softmax_backward::primitive_desc::diff_src_desc"], [172, 3, 1, "_CPPv4NK4dnnl16softmax_backward14primitive_desc8dst_descEv", "dnnl::softmax_backward::primitive_desc::dst_desc"], [172, 3, 1, "_CPPv4NK4dnnl16softmax_backward14primitive_desc13get_algorithmEv", "dnnl::softmax_backward::primitive_desc::get_algorithm"], [172, 3, 1, "_CPPv4NK4dnnl16softmax_backward14primitive_desc8get_axisEv", "dnnl::softmax_backward::primitive_desc::get_axis"], [172, 3, 1, "_CPPv4NK4dnnl16softmax_backward14primitive_desc13get_prop_kindEv", "dnnl::softmax_backward::primitive_desc::get_prop_kind"], [172, 3, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc"], [172, 3, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descEv", "dnnl::softmax_backward::primitive_desc::primitive_desc"], [172, 4, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc::aalgorithm"], [172, 4, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc::aengine"], [172, 4, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc::allow_empty"], [172, 4, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc::attr"], [172, 4, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc::axis"], [172, 4, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc::diff_dst_desc"], [172, 4, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc::diff_src_desc"], [172, 4, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc::dst_desc"], [172, 4, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [172, 3, 1, "_CPPv4N4dnnl16softmax_backward16softmax_backwardERK14primitive_desc", "dnnl::softmax_backward::softmax_backward"], [172, 3, 1, "_CPPv4N4dnnl16softmax_backward16softmax_backwardEv", "dnnl::softmax_backward::softmax_backward"], [172, 4, 1, "_CPPv4N4dnnl16softmax_backward16softmax_backwardERK14primitive_desc", "dnnl::softmax_backward::softmax_backward::pd"], [172, 7, 1, "_CPPv4N4dnnl15softmax_forwardE", "dnnl::softmax_forward"], [172, 7, 1, "_CPPv4N4dnnl15softmax_forward14primitive_descE", "dnnl::softmax_forward::primitive_desc"], [172, 3, 1, "_CPPv4NK4dnnl15softmax_forward14primitive_desc8dst_descEv", "dnnl::softmax_forward::primitive_desc::dst_desc"], [172, 3, 1, "_CPPv4NK4dnnl15softmax_forward14primitive_desc13get_algorithmEv", "dnnl::softmax_forward::primitive_desc::get_algorithm"], [172, 3, 1, "_CPPv4NK4dnnl15softmax_forward14primitive_desc8get_axisEv", "dnnl::softmax_forward::primitive_desc::get_axis"], [172, 3, 1, "_CPPv4NK4dnnl15softmax_forward14primitive_desc13get_prop_kindEv", "dnnl::softmax_forward::primitive_desc::get_prop_kind"], [172, 3, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb", "dnnl::softmax_forward::primitive_desc::primitive_desc"], [172, 3, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descEv", "dnnl::softmax_forward::primitive_desc::primitive_desc"], [172, 4, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb", "dnnl::softmax_forward::primitive_desc::primitive_desc::aalgorithm"], [172, 4, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb", "dnnl::softmax_forward::primitive_desc::primitive_desc::aengine"], [172, 4, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb", "dnnl::softmax_forward::primitive_desc::primitive_desc::allow_empty"], [172, 4, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb", "dnnl::softmax_forward::primitive_desc::primitive_desc::aprop_kind"], [172, 4, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb", "dnnl::softmax_forward::primitive_desc::primitive_desc::attr"], [172, 4, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb", "dnnl::softmax_forward::primitive_desc::primitive_desc::axis"], [172, 4, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb", "dnnl::softmax_forward::primitive_desc::primitive_desc::dst_desc"], [172, 4, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb", "dnnl::softmax_forward::primitive_desc::primitive_desc::src_desc"], [172, 3, 1, "_CPPv4NK4dnnl15softmax_forward14primitive_desc8src_descEv", "dnnl::softmax_forward::primitive_desc::src_desc"], [172, 3, 1, "_CPPv4N4dnnl15softmax_forward15softmax_forwardERK14primitive_desc", "dnnl::softmax_forward::softmax_forward"], [172, 3, 1, "_CPPv4N4dnnl15softmax_forward15softmax_forwardEv", "dnnl::softmax_forward::softmax_forward"], [172, 4, 1, "_CPPv4N4dnnl15softmax_forward15softmax_forwardERK14primitive_desc", "dnnl::softmax_forward::softmax_forward::pd"], [61, 7, 1, "_CPPv4N4dnnl6streamE", "dnnl::stream"], [61, 9, 1, "_CPPv4N4dnnl6stream5flagsE", "dnnl::stream::flags"], [61, 10, 1, "_CPPv4N4dnnl6stream5flags13default_flagsE", "dnnl::stream::flags::default_flags"], [61, 10, 1, "_CPPv4N4dnnl6stream5flags8in_orderE", "dnnl::stream::flags::in_order"], [61, 10, 1, "_CPPv4N4dnnl6stream5flags12out_of_orderE", "dnnl::stream::flags::out_of_order"], [61, 3, 1, "_CPPv4NK4dnnl6stream10get_engineEv", "dnnl::stream::get_engine"], [61, 3, 1, "_CPPv4N4dnnl6stream6streamERK6engine5flags", "dnnl::stream::stream"], [61, 3, 1, "_CPPv4N4dnnl6stream6streamEv", "dnnl::stream::stream"], [61, 4, 1, "_CPPv4N4dnnl6stream6streamERK6engine5flags", "dnnl::stream::stream::aengine"], [61, 4, 1, "_CPPv4N4dnnl6stream6streamERK6engine5flags", "dnnl::stream::stream::aflags"], [61, 3, 1, "_CPPv4N4dnnl6stream4waitEv", "dnnl::stream::wait"], [173, 7, 1, "_CPPv4N4dnnl3sumE", "dnnl::sum"], [173, 7, 1, "_CPPv4N4dnnl3sum14primitive_descE", "dnnl::sum::primitive_desc"], [173, 3, 1, "_CPPv4NK4dnnl3sum14primitive_desc8dst_descEv", "dnnl::sum::primitive_desc::dst_desc"], [173, 3, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKN6memory4descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc"], [173, 3, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc"], [173, 3, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descEv", "dnnl::sum::primitive_desc::primitive_desc"], [173, 4, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKN6memory4descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc::aengine"], [173, 4, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc::aengine"], [173, 4, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKN6memory4descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc::attr"], [173, 4, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc::attr"], [173, 4, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKN6memory4descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc::dst"], [173, 4, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKN6memory4descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc::scales"], [173, 4, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc::scales"], [173, 4, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKN6memory4descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc::srcs"], [173, 4, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc::srcs"], [173, 3, 1, "_CPPv4NK4dnnl3sum14primitive_desc8src_descEi", "dnnl::sum::primitive_desc::src_desc"], [173, 4, 1, "_CPPv4NK4dnnl3sum14primitive_desc8src_descEi", "dnnl::sum::primitive_desc::src_desc::idx"], [173, 3, 1, "_CPPv4N4dnnl3sum3sumERK14primitive_desc", "dnnl::sum::sum"], [173, 3, 1, "_CPPv4N4dnnl3sum3sumEv", "dnnl::sum::sum"], [173, 4, 1, "_CPPv4N4dnnl3sum3sumERK14primitive_desc", "dnnl::sum::sum::pd"], [159, 3, 1, "_CPPv4N4dnnl12sycl_interop7executeERK9primitiveRK6streamRKNSt13unordered_mapIi6memoryEERKNSt6vectorIN2cl4sycl5eventEEE", "dnnl::sycl_interop::execute"], [159, 4, 1, "_CPPv4N4dnnl12sycl_interop7executeERK9primitiveRK6streamRKNSt13unordered_mapIi6memoryEERKNSt6vectorIN2cl4sycl5eventEEE", "dnnl::sycl_interop::execute::aprimitive"], [159, 4, 1, "_CPPv4N4dnnl12sycl_interop7executeERK9primitiveRK6streamRKNSt13unordered_mapIi6memoryEERKNSt6vectorIN2cl4sycl5eventEEE", "dnnl::sycl_interop::execute::args"], [159, 4, 1, "_CPPv4N4dnnl12sycl_interop7executeERK9primitiveRK6streamRKNSt13unordered_mapIi6memoryEERKNSt6vectorIN2cl4sycl5eventEEE", "dnnl::sycl_interop::execute::astream"], [159, 4, 1, "_CPPv4N4dnnl12sycl_interop7executeERK9primitiveRK6streamRKNSt13unordered_mapIi6memoryEERKNSt6vectorIN2cl4sycl5eventEEE", "dnnl::sycl_interop::execute::dependencies"], [60, 3, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10get_bufferEN2cl4sycl6bufferI1T5ndimsEERK6memory", "dnnl::sycl_interop::get_buffer"], [60, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10get_bufferEN2cl4sycl6bufferI1T5ndimsEERK6memory", "dnnl::sycl_interop::get_buffer::T"], [60, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10get_bufferEN2cl4sycl6bufferI1T5ndimsEERK6memory", "dnnl::sycl_interop::get_buffer::amemory"], [60, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10get_bufferEN2cl4sycl6bufferI1T5ndimsEERK6memory", "dnnl::sycl_interop::get_buffer::ndims"], [61, 3, 1, "_CPPv4N4dnnl12sycl_interop11get_contextERK6engine", "dnnl::sycl_interop::get_context"], [61, 4, 1, "_CPPv4N4dnnl12sycl_interop11get_contextERK6engine", "dnnl::sycl_interop::get_context::aengine"], [61, 3, 1, "_CPPv4N4dnnl12sycl_interop10get_deviceERK6engine", "dnnl::sycl_interop::get_device"], [61, 4, 1, "_CPPv4N4dnnl12sycl_interop10get_deviceERK6engine", "dnnl::sycl_interop::get_device::aengine"], [60, 3, 1, "_CPPv4N4dnnl12sycl_interop15get_memory_kindERK6memory", "dnnl::sycl_interop::get_memory_kind"], [60, 4, 1, "_CPPv4N4dnnl12sycl_interop15get_memory_kindERK6memory", "dnnl::sycl_interop::get_memory_kind::amemory"], [61, 3, 1, "_CPPv4N4dnnl12sycl_interop9get_queueERK6stream", "dnnl::sycl_interop::get_queue"], [61, 4, 1, "_CPPv4N4dnnl12sycl_interop9get_queueERK6stream", "dnnl::sycl_interop::get_queue::astream"], [61, 3, 1, "_CPPv4N4dnnl12sycl_interop11make_engineERKN2cl4sycl6deviceERKN2cl4sycl7contextE", "dnnl::sycl_interop::make_engine"], [61, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_engineERKN2cl4sycl6deviceERKN2cl4sycl7contextE", "dnnl::sycl_interop::make_engine::acontext"], [61, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_engineERKN2cl4sycl6deviceERKN2cl4sycl7contextE", "dnnl::sycl_interop::make_engine::adevice"], [60, 3, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6engineN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory"], [60, 3, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6streamN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory"], [60, 3, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6engine11memory_kindPv", "dnnl::sycl_interop::make_memory"], [60, 3, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6stream11memory_kindPv", "dnnl::sycl_interop::make_memory"], [60, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6engineN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::T"], [60, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6streamN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::T"], [60, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6engineN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::abuffer"], [60, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6streamN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::abuffer"], [60, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6engineN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::adesc"], [60, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6streamN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::adesc"], [60, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6engine11memory_kindPv", "dnnl::sycl_interop::make_memory::adesc"], [60, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6stream11memory_kindPv", "dnnl::sycl_interop::make_memory::adesc"], [60, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6engineN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::aengine"], [60, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6engine11memory_kindPv", "dnnl::sycl_interop::make_memory::aengine"], [60, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6engine11memory_kindPv", "dnnl::sycl_interop::make_memory::ahandle"], [60, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6stream11memory_kindPv", "dnnl::sycl_interop::make_memory::ahandle"], [60, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6engine11memory_kindPv", "dnnl::sycl_interop::make_memory::akind"], [60, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6stream11memory_kindPv", "dnnl::sycl_interop::make_memory::akind"], [60, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6streamN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::astream"], [60, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6stream11memory_kindPv", "dnnl::sycl_interop::make_memory::astream"], [60, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6engineN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::ndims"], [60, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6streamN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::ndims"], [61, 3, 1, "_CPPv4N4dnnl12sycl_interop11make_streamERK6engineRN2cl4sycl5queueE", "dnnl::sycl_interop::make_stream"], [61, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_streamERK6engineRN2cl4sycl5queueE", "dnnl::sycl_interop::make_stream::aengine"], [61, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_streamERK6engineRN2cl4sycl5queueE", "dnnl::sycl_interop::make_stream::aqueue"], [60, 9, 1, "_CPPv4N4dnnl12sycl_interop11memory_kindE", "dnnl::sycl_interop::memory_kind"], [60, 10, 1, "_CPPv4N4dnnl12sycl_interop11memory_kind6bufferE", "dnnl::sycl_interop::memory_kind::buffer"], [60, 10, 1, "_CPPv4N4dnnl12sycl_interop11memory_kind3usmE", "dnnl::sycl_interop::memory_kind::usm"], [60, 3, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::set_buffer"], [60, 3, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEER6stream", "dnnl::sycl_interop::set_buffer"], [60, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::set_buffer::T"], [60, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEER6stream", "dnnl::sycl_interop::set_buffer::T"], [60, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::set_buffer::abuffer"], [60, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEER6stream", "dnnl::sycl_interop::set_buffer::abuffer"], [60, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::set_buffer::amemory"], [60, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEER6stream", "dnnl::sycl_interop::set_buffer::amemory"], [60, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEER6stream", "dnnl::sycl_interop::set_buffer::astream"], [60, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::set_buffer::ndims"], [60, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEER6stream", "dnnl::sycl_interop::set_buffer::ndims"], [170, 7, 1, "_CPPv4N4dnnl20vanilla_rnn_backwardE", "dnnl::vanilla_rnn_backward"], [170, 7, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_descE", "dnnl::vanilla_rnn_backward::primitive_desc"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc9bias_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::bias_desc"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc14diff_bias_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::diff_bias_desc"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc18diff_dst_iter_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::diff_dst_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc19diff_dst_layer_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::diff_dst_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc18diff_src_iter_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::diff_src_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc19diff_src_layer_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::diff_src_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc22diff_weights_iter_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::diff_weights_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc23diff_weights_layer_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::diff_weights_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13dst_iter_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::dst_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc14dst_layer_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::dst_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc19get_activation_kindEv", "dnnl::vanilla_rnn_backward::primitive_desc::get_activation_kind"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc9get_alphaEv", "dnnl::vanilla_rnn_backward::primitive_desc::get_alpha"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc8get_betaEv", "dnnl::vanilla_rnn_backward::primitive_desc::get_beta"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13get_cell_kindEv", "dnnl::vanilla_rnn_backward::primitive_desc::get_cell_kind"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13get_directionEv", "dnnl::vanilla_rnn_backward::primitive_desc::get_direction"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13get_prop_kindEv", "dnnl::vanilla_rnn_backward::primitive_desc::get_prop_kind"], [170, 3, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc"], [170, 3, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc"], [170, 3, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::activation"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::activation"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::aengine"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::aengine"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::allow_empty"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::allow_empty"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::alpha"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::aprop_kind"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::aprop_kind"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::attr"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::attr"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::bias_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::bias_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_bias_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_bias_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_weights_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_weights_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::direction"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::direction"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::weights_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::weights_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13src_iter_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::src_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc14src_layer_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::src_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc17weights_iter_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::weights_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc18weights_layer_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::weights_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc14workspace_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::workspace_desc"], [170, 3, 1, "_CPPv4N4dnnl20vanilla_rnn_backward20vanilla_rnn_backwardERK14primitive_desc", "dnnl::vanilla_rnn_backward::vanilla_rnn_backward"], [170, 3, 1, "_CPPv4N4dnnl20vanilla_rnn_backward20vanilla_rnn_backwardEv", "dnnl::vanilla_rnn_backward::vanilla_rnn_backward"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward20vanilla_rnn_backwardERK14primitive_desc", "dnnl::vanilla_rnn_backward::vanilla_rnn_backward::pd"], [170, 7, 1, "_CPPv4N4dnnl19vanilla_rnn_forwardE", "dnnl::vanilla_rnn_forward"], [170, 7, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_descE", "dnnl::vanilla_rnn_forward::primitive_desc"], [170, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc9bias_descEv", "dnnl::vanilla_rnn_forward::primitive_desc::bias_desc"], [170, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13dst_iter_descEv", "dnnl::vanilla_rnn_forward::primitive_desc::dst_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc14dst_layer_descEv", "dnnl::vanilla_rnn_forward::primitive_desc::dst_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc19get_activation_kindEv", "dnnl::vanilla_rnn_forward::primitive_desc::get_activation_kind"], [170, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc9get_alphaEv", "dnnl::vanilla_rnn_forward::primitive_desc::get_alpha"], [170, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc8get_betaEv", "dnnl::vanilla_rnn_forward::primitive_desc::get_beta"], [170, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13get_cell_kindEv", "dnnl::vanilla_rnn_forward::primitive_desc::get_cell_kind"], [170, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13get_directionEv", "dnnl::vanilla_rnn_forward::primitive_desc::get_direction"], [170, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13get_prop_kindEv", "dnnl::vanilla_rnn_forward::primitive_desc::get_prop_kind"], [170, 3, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc"], [170, 3, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc"], [170, 3, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descEv", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::activation"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::activation"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::aengine"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::aengine"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::allow_empty"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::allow_empty"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::alpha"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::aprop_kind"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::aprop_kind"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::attr"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::attr"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::bias_desc"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::bias_desc"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::direction"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::direction"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::weights_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::weights_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13src_iter_descEv", "dnnl::vanilla_rnn_forward::primitive_desc::src_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc14src_layer_descEv", "dnnl::vanilla_rnn_forward::primitive_desc::src_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc17weights_iter_descEv", "dnnl::vanilla_rnn_forward::primitive_desc::weights_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc18weights_layer_descEv", "dnnl::vanilla_rnn_forward::primitive_desc::weights_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc14workspace_descEv", "dnnl::vanilla_rnn_forward::primitive_desc::workspace_desc"], [170, 3, 1, "_CPPv4N4dnnl19vanilla_rnn_forward19vanilla_rnn_forwardERK14primitive_desc", "dnnl::vanilla_rnn_forward::vanilla_rnn_forward"], [170, 3, 1, "_CPPv4N4dnnl19vanilla_rnn_forward19vanilla_rnn_forwardEv", "dnnl::vanilla_rnn_forward::vanilla_rnn_forward"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward19vanilla_rnn_forwardERK14primitive_desc", "dnnl::vanilla_rnn_forward::vanilla_rnn_forward::pd"], [800, 3, 1, "_CPPv411do_allocate6size_t6size_t", "do_allocate"], [800, 4, 1, "_CPPv411do_allocate6size_t6size_t", "do_allocate::alignment"], [800, 4, 1, "_CPPv411do_allocate6size_t6size_t", "do_allocate::n"], [800, 3, 1, "_CPPv413do_deallocatePv6size_t6size_t", "do_deallocate"], [800, 4, 1, "_CPPv413do_deallocatePv6size_t6size_t", "do_deallocate::alignment"], [800, 4, 1, "_CPPv413do_deallocatePv6size_t6size_t", "do_deallocate::n"], [800, 4, 1, "_CPPv413do_deallocatePv6size_t6size_t", "do_deallocate::p"], [800, 3, 1, "_CPPv4NK11do_is_equalERKNSt3pmr15memory_resourceE", "do_is_equal"], [800, 4, 1, "_CPPv4NK11do_is_equalERKNSt3pmr15memory_resourceE", "do_is_equal::other"], [565, 3, 1, "_CPPv4NK5emptyEv", "empty"], [565, 3, 1, "_CPPv4NK3endEv", "end"], [856, 3, 1, "_CPPv47enqueueRR11task_handle", "enqueue"], [856, 3, 1, "_CPPv4I0E7enqueuevRR1F", "enqueue"], [856, 3, 1, "_CPPv4I0E7enqueuevRR1FR10task_group", "enqueue"], [856, 8, 1, "_CPPv4I0E7enqueuevRR1F", "enqueue::F"], [856, 8, 1, "_CPPv4I0E7enqueuevRR1FR10task_group", "enqueue::F"], [856, 4, 1, "_CPPv4I0E7enqueuevRR1F", "enqueue::f"], [856, 4, 1, "_CPPv4I0E7enqueuevRR1FR10task_group", "enqueue::f"], [856, 4, 1, "_CPPv47enqueueRR11task_handle", "enqueue::h"], [856, 4, 1, "_CPPv4I0E7enqueuevRR1FR10task_group", "enqueue::tg"], [864, 9, 1, "_CPPv4N18ets_key_usage_type20ets_key_per_instanceE", "ets_key_usage_type::ets_key_per_instance"], [864, 9, 1, "_CPPv4N18ets_key_usage_type10ets_no_keyE", "ets_key_usage_type::ets_no_key"], [864, 9, 1, "_CPPv4N18ets_key_usage_type17ets_suspend_awareE", "ets_key_usage_type::ets_suspend_aware"], [769, 3, 1, "_CPPv416exception_thrownv", "exception_thrown"], [856, 3, 1, "_CPPv4I0E7executeDTcl1fEERR1F", "execute"], [856, 8, 1, "_CPPv4I0E7executeDTcl1fEERR1F", "execute::F"], [856, 4, 1, "_CPPv4I0E7executeDTcl1fEERR1F", "execute::f"], [574, 3, 1, "_CPPv46filterv", "filter"], [574, 3, 1, "_CPPv4I0E6filter11filter_modeRK4Body", "filter"], [574, 8, 1, "_CPPv4I0E6filter11filter_modeRK4Body", "filter::Body"], [574, 4, 1, "_CPPv4I0E6filter11filter_modeRK4Body", "filter::body"], [574, 4, 1, "_CPPv4I0E6filter11filter_modeRK4Body", "filter::mode"], [855, 3, 1, "_CPPv48finalizeR21task_scheduler_handle", "finalize"], [855, 3, 1, "_CPPv48finalizeR21task_scheduler_handleRKNSt9nothrow_tE", "finalize"], [855, 4, 1, "_CPPv48finalizeR21task_scheduler_handle", "finalize::handle"], [855, 4, 1, "_CPPv48finalizeR21task_scheduler_handleRKNSt9nothrow_tE", "finalize::handle"], [852, 3, 1, "_CPPv414global_control9parameter6size_t", "global_control"], [852, 4, 1, "_CPPv414global_control9parameter6size_t", "global_control::param"], [852, 4, 1, "_CPPv414global_control9parameter6size_t", "global_control::value"], [565, 3, 1, "_CPPv4NK9grainsizeEv", "grainsize"], [769, 3, 1, "_CPPv45graphR18task_group_context", "graph"], [769, 4, 1, "_CPPv45graphR18task_group_context", "graph::context"], [756, 3, 1, "_CPPv410initializeN10task_arena6attachE", "initialize"], [856, 3, 1, "_CPPv410initialize11constraintsj8priority", "initialize"], [856, 3, 1, "_CPPv410initializeN6oneapi3tbb6attachE", "initialize"], [856, 3, 1, "_CPPv410initializeij8priority", "initialize"], [856, 3, 1, "_CPPv410initializev", "initialize"], [856, 4, 1, "_CPPv410initialize11constraintsj8priority", "initialize::a_priority"], [856, 4, 1, "_CPPv410initializeij8priority", "initialize::a_priority"], [856, 4, 1, "_CPPv410initialize11constraintsj8priority", "initialize::constraints_"], [856, 4, 1, "_CPPv410initializeij8priority", "initialize::max_concurrency"], [856, 4, 1, "_CPPv410initialize11constraintsj8priority", "initialize::reserved_slots"], [856, 4, 1, "_CPPv410initializeij8priority", "initialize::reserved_slots"], [772, 3, 1, "_CPPv410input_nodeRK10input_node", "input_node"], [772, 3, 1, "_CPPv4I0E10input_nodeR5graph4Body", "input_node"], [772, 8, 1, "_CPPv4I0E10input_nodeR5graph4Body", "input_node::Body"], [772, 4, 1, "_CPPv4I0E10input_nodeR5graph4Body", "input_node::body"], [772, 4, 1, "_CPPv4I0E10input_nodeR5graph4Body", "input_node::g"], [772, 4, 1, "_CPPv410input_nodeRK10input_node", "input_node::src"], [761, 3, 1, "_CPPv411input_portsv", "input_ports"], [792, 3, 1, "_CPPv4I0ENK4is_aEbv", "is_a"], [792, 8, 1, "_CPPv4I0ENK4is_aEbv", "is_a::V"], [856, 3, 1, "_CPPv4NK9is_activeEv", "is_active"], [769, 3, 1, "_CPPv412is_cancelledv", "is_cancelled"], [565, 3, 1, "_CPPv4NK12is_divisibleEv", "is_divisible"], [580, 3, 1, "_CPPv413is_final_scanv", "is_final_scan"], [854, 3, 1, "_CPPv4NK28is_group_execution_cancelledEv", "is_group_execution_cancelled"], [857, 3, 1, "_CPPv4NK12is_observingEv", "is_observing"], [854, 9, 1, "_CPPv4N6kind_t5boundE", "kind_t::bound"], [854, 9, 1, "_CPPv4N6kind_t8isolatedE", "kind_t::isolated"], [585, 3, 1, "_CPPv4NK4leftEv", "left"], [806, 3, 1, "_CPPv44lockv", "lock"], [574, 3, 1, "_CPPv4I000E11make_filter6filterI1T1UEN6filter4modeERK4Func", "make_filter"], [574, 8, 1, "_CPPv4I000E11make_filter6filterI1T1UEN6filter4modeERK4Func", "make_filter::Func"], [574, 8, 1, "_CPPv4I000E11make_filter6filterI1T1UEN6filter4modeERK4Func", "make_filter::T"], [574, 8, 1, "_CPPv4I000E11make_filter6filterI1T1UEN6filter4modeERK4Func", "make_filter::U"], [574, 4, 1, "_CPPv4I000E11make_filter6filterI1T1UEN6filter4modeERK4Func", "make_filter::f"], [574, 4, 1, "_CPPv4I000E11make_filter6filterI1T1UEN6filter4modeERK4Func", "make_filter::mode"], [856, 3, 1, "_CPPv4NK15max_concurrencyEv", "max_concurrency"], [799, 3, 1, "_CPPv4NK8max_sizeEv", "max_size"], [841, 6, 1, "_CPPv4N10mutex_func1M13is_fair_mutexE", "mutex_func::M::is_fair_mutex"], [841, 6, 1, "_CPPv4N10mutex_func1M18is_recursive_mutexE", "mutex_func::M::is_recursive_mutex"], [841, 6, 1, "_CPPv4N10mutex_func1M11is_rw_mutexE", "mutex_func::M::is_rw_mutex"], [841, 3, 1, "_CPPv4N10mutex_func1M11scoped_lockER1M", "mutex_func::M::scoped_lock"], [841, 3, 1, "_CPPv4N10mutex_func1M11scoped_lockEv", "mutex_func::M::scoped_lock"], [841, 3, 1, "_CPPv4N10mutex_func1M11scoped_lock7acquireER1M", "mutex_func::M::scoped_lock::acquire"], [841, 3, 1, "_CPPv4N10mutex_func1M11scoped_lock7releaseEv", "mutex_func::M::scoped_lock::release"], [841, 3, 1, "_CPPv4N10mutex_func1M11scoped_lock11try_acquireER1M", "mutex_func::M::scoped_lock::try_acquire"], [841, 3, 1, "_CPPv4N10mutex_func1MD0Ev", "mutex_func::M::~scoped_lock"], [841, 5, 1, "_CPPv4N10mutex_type1M11scoped_lockE", "mutex_type::M::scoped_lock"], [856, 6, 1, "_CPPv415not_initialized", "not_initialized"], [806, 3, 1, "_CPPv410null_mutexv", "null_mutex"], [795, 3, 1, "_CPPv410numa_nodesv", "numa_nodes"], [857, 3, 1, "_CPPv47observeb", "observe"], [857, 4, 1, "_CPPv47observeb", "observe::state"], [857, 3, 1, "_CPPv418on_scheduler_entryb", "on_scheduler_entry"], [857, 4, 1, "_CPPv418on_scheduler_entryb", "on_scheduler_entry::is_worker"], [857, 3, 1, "_CPPv417on_scheduler_exitb", "on_scheduler_exit"], [857, 4, 1, "_CPPv417on_scheduler_exitb", "on_scheduler_exit::is_worker"], [37, 7, 1, "_CPPv4I0EN6oneapi3dal5arrayE", "oneapi::dal::array"], [37, 8, 1, "_CPPv4I0EN6oneapi3dal5arrayE", "oneapi::dal::array::Data"], [37, 3, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::array"], [37, 3, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERKN4sycl5queueEP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::array"], [37, 3, 1, "_CPPv4N6oneapi3dal5array5arrayERK5arrayI4DataE", "oneapi::dal::array::array"], [37, 3, 1, "_CPPv4N6oneapi3dal5array5arrayERR5arrayI4DataE", "oneapi::dal::array::array"], [37, 3, 1, "_CPPv4N6oneapi3dal5array5arrayEv", "oneapi::dal::array::array"], [37, 8, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERKN4sycl5queueEP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::array::Deleter"], [37, 8, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::array::ExtData"], [37, 8, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERKN4sycl5queueEP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::array::ExtData"], [37, 8, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::array::RefData"], [37, 4, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::array::count"], [37, 4, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERKN4sycl5queueEP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::array::count"], [37, 4, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::array::data"], [37, 4, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERKN4sycl5queueEP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::array::data"], [37, 4, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERKN4sycl5queueEP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::array::deleter"], [37, 4, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERKN4sycl5queueEP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::array::dependencies"], [37, 4, 1, "_CPPv4N6oneapi3dal5array5arrayERK5arrayI4DataE", "oneapi::dal::array::array::other"], [37, 4, 1, "_CPPv4N6oneapi3dal5array5arrayERR5arrayI4DataE", "oneapi::dal::array::array::other"], [37, 4, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERKN4sycl5queueEP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::array::queue"], [37, 4, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::array::ref"], [37, 3, 1, "_CPPv4N6oneapi3dal5array5emptyERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::empty"], [37, 4, 1, "_CPPv4N6oneapi3dal5array5emptyERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::empty::alloc"], [37, 4, 1, "_CPPv4N6oneapi3dal5array5emptyERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::empty::count"], [37, 4, 1, "_CPPv4N6oneapi3dal5array5emptyERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::empty::queue"], [37, 3, 1, "_CPPv4I0EN6oneapi3dal5array4fullE5arrayI4DataERN4sycl5queueENSt7int64_tERR7ElementRKN4sycl3usm5allocE", "oneapi::dal::array::full"], [37, 8, 1, "_CPPv4I0EN6oneapi3dal5array4fullE5arrayI4DataERN4sycl5queueENSt7int64_tERR7ElementRKN4sycl3usm5allocE", "oneapi::dal::array::full::Element"], [37, 4, 1, "_CPPv4I0EN6oneapi3dal5array4fullE5arrayI4DataERN4sycl5queueENSt7int64_tERR7ElementRKN4sycl3usm5allocE", "oneapi::dal::array::full::alloc"], [37, 4, 1, "_CPPv4I0EN6oneapi3dal5array4fullE5arrayI4DataERN4sycl5queueENSt7int64_tERR7ElementRKN4sycl3usm5allocE", "oneapi::dal::array::full::count"], [37, 4, 1, "_CPPv4I0EN6oneapi3dal5array4fullE5arrayI4DataERN4sycl5queueENSt7int64_tERR7ElementRKN4sycl3usm5allocE", "oneapi::dal::array::full::element"], [37, 4, 1, "_CPPv4I0EN6oneapi3dal5array4fullE5arrayI4DataERN4sycl5queueENSt7int64_tERR7ElementRKN4sycl3usm5allocE", "oneapi::dal::array::full::queue"], [37, 3, 1, "_CPPv4NK6oneapi3dal5array9get_countEv", "oneapi::dal::array::get_count"], [37, 3, 1, "_CPPv4NK6oneapi3dal5array8get_dataEv", "oneapi::dal::array::get_data"], [37, 3, 1, "_CPPv4NK6oneapi3dal5array16get_mutable_dataEv", "oneapi::dal::array::get_mutable_data"], [37, 3, 1, "_CPPv4NK6oneapi3dal5array8get_sizeEv", "oneapi::dal::array::get_size"], [37, 3, 1, "_CPPv4NK6oneapi3dal5array16has_mutable_dataEv", "oneapi::dal::array::has_mutable_data"], [37, 3, 1, "_CPPv4N6oneapi3dal5array17need_mutable_dataERN4sycl5queueERKN4sycl3usm5allocE", "oneapi::dal::array::need_mutable_data"], [37, 4, 1, "_CPPv4N6oneapi3dal5array17need_mutable_dataERN4sycl5queueERKN4sycl3usm5allocE", "oneapi::dal::array::need_mutable_data::alloc"], [37, 4, 1, "_CPPv4N6oneapi3dal5array17need_mutable_dataERN4sycl5queueERKN4sycl3usm5allocE", "oneapi::dal::array::need_mutable_data::queue"], [37, 3, 1, "_CPPv4N6oneapi3dal5arrayaSERK5arrayI4DataE", "oneapi::dal::array::operator="], [37, 3, 1, "_CPPv4N6oneapi3dal5arrayaSERR5arrayI4DataE", "oneapi::dal::array::operator="], [37, 4, 1, "_CPPv4N6oneapi3dal5arrayaSERK5arrayI4DataE", "oneapi::dal::array::operator=::other"], [37, 4, 1, "_CPPv4N6oneapi3dal5arrayaSERR5arrayI4DataE", "oneapi::dal::array::operator=::other"], [37, 3, 1, "_CPPv4NK6oneapi3dal5arrayixENSt7int64_tE", "oneapi::dal::array::operator[]"], [37, 4, 1, "_CPPv4NK6oneapi3dal5arrayixENSt7int64_tE", "oneapi::dal::array::operator[]::index"], [37, 3, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::reset"], [37, 3, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvRK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::reset"], [37, 3, 1, "_CPPv4N6oneapi3dal5array5resetERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::reset"], [37, 3, 1, "_CPPv4N6oneapi3dal5array5resetEv", "oneapi::dal::array::reset"], [37, 8, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::reset::Deleter"], [37, 8, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::reset::ExtData"], [37, 8, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvRK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::reset::ExtData"], [37, 8, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvRK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::reset::RefData"], [37, 4, 1, "_CPPv4N6oneapi3dal5array5resetERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::reset::alloc"], [37, 4, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::reset::count"], [37, 4, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvRK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::reset::count"], [37, 4, 1, "_CPPv4N6oneapi3dal5array5resetERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::reset::count"], [37, 4, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::reset::data"], [37, 4, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvRK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::reset::data"], [37, 4, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::reset::deleter"], [37, 4, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::reset::dependencies"], [37, 4, 1, "_CPPv4N6oneapi3dal5array5resetERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::reset::queue"], [37, 4, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvRK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::reset::ref"], [37, 3, 1, "_CPPv4I0EN6oneapi3dal5array4wrapE5arrayI4DataEP7ExtDataNSt7int64_tERKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::wrap"], [37, 8, 1, "_CPPv4I0EN6oneapi3dal5array4wrapE5arrayI4DataEP7ExtDataNSt7int64_tERKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::wrap::ExtData"], [37, 4, 1, "_CPPv4I0EN6oneapi3dal5array4wrapE5arrayI4DataEP7ExtDataNSt7int64_tERKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::wrap::count"], [37, 4, 1, "_CPPv4I0EN6oneapi3dal5array4wrapE5arrayI4DataEP7ExtDataNSt7int64_tERKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::wrap::data"], [37, 4, 1, "_CPPv4I0EN6oneapi3dal5array4wrapE5arrayI4DataEP7ExtDataNSt7int64_tERKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::wrap::dependencies"], [37, 3, 1, "_CPPv4N6oneapi3dal5array5zerosERN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::zeros"], [37, 4, 1, "_CPPv4N6oneapi3dal5array5zerosERN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::zeros::alloc"], [37, 4, 1, "_CPPv4N6oneapi3dal5array5zerosERN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::zeros::count"], [37, 4, 1, "_CPPv4N6oneapi3dal5array5zerosERN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::zeros::queue"], [34, 7, 1, "_CPPv4I0EN6oneapi3dal15column_accessorE", "oneapi::dal::column_accessor"], [34, 8, 1, "_CPPv4I0EN6oneapi3dal15column_accessorE", "oneapi::dal::column_accessor::Data"], [34, 3, 1, "_CPPv4N6oneapi3dal15column_accessor15column_accessorERK5table", "oneapi::dal::column_accessor::column_accessor"], [34, 4, 1, "_CPPv4N6oneapi3dal15column_accessor15column_accessorERK5table", "oneapi::dal::column_accessor::column_accessor::obj"], [34, 3, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull"], [34, 3, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueER5arrayI6data_tENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull"], [34, 4, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull::alloc"], [34, 4, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueER5arrayI6data_tENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull::alloc"], [34, 4, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueER5arrayI6data_tENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull::block"], [34, 4, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull::column_index"], [34, 4, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueER5arrayI6data_tENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull::column_index"], [34, 4, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull::queue"], [34, 4, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueER5arrayI6data_tENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull::queue"], [34, 4, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull::rows"], [34, 4, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueER5arrayI6data_tENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull::rows"], [38, 7, 1, "_CPPv4N6oneapi3dal3csv11data_sourceE", "oneapi::dal::csv::data_source"], [38, 3, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceEPKcc12read_options", "oneapi::dal::csv::data_source::data_source"], [38, 3, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceERKNSt6stringEc12read_options", "oneapi::dal::csv::data_source::data_source"], [38, 4, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceEPKcc12read_options", "oneapi::dal::csv::data_source::data_source::delimiter"], [38, 4, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceERKNSt6stringEc12read_options", "oneapi::dal::csv::data_source::data_source::delimiter"], [38, 4, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceEPKcc12read_options", "oneapi::dal::csv::data_source::data_source::file_name"], [38, 4, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceERKNSt6stringEc12read_options", "oneapi::dal::csv::data_source::data_source::file_name"], [38, 4, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceEPKcc12read_options", "oneapi::dal::csv::data_source::data_source::opts"], [38, 4, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceERKNSt6stringEc12read_options", "oneapi::dal::csv::data_source::data_source::opts"], [38, 6, 1, "_CPPv4N6oneapi3dal3csv11data_source9delimiterE", "oneapi::dal::csv::data_source::delimiter"], [38, 6, 1, "_CPPv4N6oneapi3dal3csv11data_source9file_nameE", "oneapi::dal::csv::data_source::file_name"], [38, 6, 1, "_CPPv4N6oneapi3dal3csv11data_source7optionsE", "oneapi::dal::csv::data_source::options"], [38, 7, 1, "_CPPv4I0EN6oneapi3dal3csv9read_argsE", "oneapi::dal::csv::read_args"], [38, 8, 1, "_CPPv4I0EN6oneapi3dal3csv9read_argsE", "oneapi::dal::csv::read_args::Object"], [38, 3, 1, "_CPPv4N6oneapi3dal3csv9read_args9read_argsEv", "oneapi::dal::csv::read_args::read_args"], [42, 9, 1, "_CPPv4N6oneapi3dal11data_layoutE", "oneapi::dal::data_layout"], [29, 9, 1, "_CPPv4N6oneapi3dal9data_typeE", "oneapi::dal::data_type"], [42, 9, 1, "_CPPv4N6oneapi3dal12feature_typeE", "oneapi::dal::feature_type"], [41, 7, 1, "_CPPv4N6oneapi3dal13homogen_tableE", "oneapi::dal::homogen_table"], [41, 3, 1, "_CPPv4I0ENK6oneapi3dal13homogen_table8get_dataEPK4Datav", "oneapi::dal::homogen_table::get_data"], [41, 3, 1, "_CPPv4NK6oneapi3dal13homogen_table8get_dataEv", "oneapi::dal::homogen_table::get_data"], [41, 8, 1, "_CPPv4I0ENK6oneapi3dal13homogen_table8get_dataEPK4Datav", "oneapi::dal::homogen_table::get_data::Data"], [41, 3, 1, "_CPPv4NK6oneapi3dal13homogen_table8get_kindEv", "oneapi::dal::homogen_table::get_kind"], [41, 3, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table"], [41, 3, 1, "_CPPv4N6oneapi3dal13homogen_table13homogen_tableEv", "oneapi::dal::homogen_table::homogen_table"], [41, 8, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table::ConstDeleter"], [41, 8, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table::Data"], [41, 4, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table::column_count"], [41, 4, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table::data_deleter"], [41, 4, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table::data_pointer"], [41, 4, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table::dependencies"], [41, 4, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table::layout"], [41, 4, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table::queue"], [41, 4, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table::row_count"], [41, 3, 1, "_CPPv4N6oneapi3dal13homogen_table4kindEv", "oneapi::dal::homogen_table::kind"], [41, 3, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::wrap"], [41, 8, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::wrap::Data"], [41, 4, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::wrap::column_count"], [41, 4, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::wrap::data_pointer"], [41, 4, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::wrap::dependencies"], [41, 4, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::wrap::layout"], [41, 4, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::wrap::queue"], [41, 4, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::wrap::row_count"], [19, 7, 1, "_CPPv4I000EN6oneapi3dal6kmeans10descriptorE", "oneapi::dal::kmeans::descriptor"], [19, 8, 1, "_CPPv4I000EN6oneapi3dal6kmeans10descriptorE", "oneapi::dal::kmeans::descriptor::Float"], [19, 8, 1, "_CPPv4I000EN6oneapi3dal6kmeans10descriptorE", "oneapi::dal::kmeans::descriptor::Method"], [19, 8, 1, "_CPPv4I000EN6oneapi3dal6kmeans10descriptorE", "oneapi::dal::kmeans::descriptor::Task"], [19, 6, 1, "_CPPv4N6oneapi3dal6kmeans10descriptor18accuracy_thresholdE", "oneapi::dal::kmeans::descriptor::accuracy_threshold"], [19, 6, 1, "_CPPv4N6oneapi3dal6kmeans10descriptor13cluster_countE", "oneapi::dal::kmeans::descriptor::cluster_count"], [19, 3, 1, "_CPPv4N6oneapi3dal6kmeans10descriptor10descriptorENSt7int64_tE", "oneapi::dal::kmeans::descriptor::descriptor"], [19, 4, 1, "_CPPv4N6oneapi3dal6kmeans10descriptor10descriptorENSt7int64_tE", "oneapi::dal::kmeans::descriptor::descriptor::cluster_count"], [19, 6, 1, "_CPPv4N6oneapi3dal6kmeans10descriptor19max_iteration_countE", "oneapi::dal::kmeans::descriptor::max_iteration_count"], [19, 3, 1, "_CPPv4I000EN6oneapi3dal6kmeans5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::kmeans::infer"], [19, 8, 1, "_CPPv4I000EN6oneapi3dal6kmeans5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::kmeans::infer::Float"], [19, 8, 1, "_CPPv4I000EN6oneapi3dal6kmeans5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::kmeans::infer::Method"], [19, 8, 1, "_CPPv4I000EN6oneapi3dal6kmeans5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::kmeans::infer::Task"], [19, 4, 1, "_CPPv4I000EN6oneapi3dal6kmeans5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::kmeans::infer::desc"], [19, 4, 1, "_CPPv4I000EN6oneapi3dal6kmeans5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::kmeans::infer::input"], [19, 7, 1, "_CPPv4I0EN6oneapi3dal6kmeans11infer_inputE", "oneapi::dal::kmeans::infer_input"], [19, 8, 1, "_CPPv4I0EN6oneapi3dal6kmeans11infer_inputE", "oneapi::dal::kmeans::infer_input::Task"], [19, 6, 1, "_CPPv4N6oneapi3dal6kmeans11infer_input4dataE", "oneapi::dal::kmeans::infer_input::data"], [19, 3, 1, "_CPPv4N6oneapi3dal6kmeans11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::kmeans::infer_input::infer_input"], [19, 4, 1, "_CPPv4N6oneapi3dal6kmeans11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::kmeans::infer_input::infer_input::data"], [19, 4, 1, "_CPPv4N6oneapi3dal6kmeans11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::kmeans::infer_input::infer_input::m"], [19, 6, 1, "_CPPv4N6oneapi3dal6kmeans11infer_input5modelE", "oneapi::dal::kmeans::infer_input::model"], [19, 7, 1, "_CPPv4I0EN6oneapi3dal6kmeans12infer_resultE", "oneapi::dal::kmeans::infer_result"], [19, 8, 1, "_CPPv4I0EN6oneapi3dal6kmeans12infer_resultE", "oneapi::dal::kmeans::infer_result::Task"], [19, 3, 1, "_CPPv4NK6oneapi3dal6kmeans12infer_result10get_labelsEv", "oneapi::dal::kmeans::infer_result::get_labels"], [19, 3, 1, "_CPPv4NK6oneapi3dal6kmeans12infer_result28get_objective_function_valueEv", "oneapi::dal::kmeans::infer_result::get_objective_function_value"], [19, 3, 1, "_CPPv4N6oneapi3dal6kmeans12infer_result12infer_resultEv", "oneapi::dal::kmeans::infer_result::infer_result"], [19, 5, 1, "_CPPv4N6oneapi3dal6kmeans6method10by_defaultE", "oneapi::dal::kmeans::method::by_default"], [19, 7, 1, "_CPPv4N6oneapi3dal6kmeans6method5lloydE", "oneapi::dal::kmeans::method::lloyd"], [19, 7, 1, "_CPPv4I0EN6oneapi3dal6kmeans5modelE", "oneapi::dal::kmeans::model"], [19, 8, 1, "_CPPv4I0EN6oneapi3dal6kmeans5modelE", "oneapi::dal::kmeans::model::Task"], [19, 3, 1, "_CPPv4NK6oneapi3dal6kmeans5model13get_centroidsEv", "oneapi::dal::kmeans::model::get_centroids"], [19, 3, 1, "_CPPv4NK6oneapi3dal6kmeans5model17get_cluster_countEv", "oneapi::dal::kmeans::model::get_cluster_count"], [19, 3, 1, "_CPPv4N6oneapi3dal6kmeans5model5modelEv", "oneapi::dal::kmeans::model::model"], [19, 5, 1, "_CPPv4N6oneapi3dal6kmeans4task10by_defaultE", "oneapi::dal::kmeans::task::by_default"], [19, 7, 1, "_CPPv4N6oneapi3dal6kmeans4task10clusteringE", "oneapi::dal::kmeans::task::clustering"], [19, 3, 1, "_CPPv4I000EN6oneapi3dal6kmeans5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::kmeans::train"], [19, 8, 1, "_CPPv4I000EN6oneapi3dal6kmeans5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::kmeans::train::Float"], [19, 8, 1, "_CPPv4I000EN6oneapi3dal6kmeans5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::kmeans::train::Method"], [19, 8, 1, "_CPPv4I000EN6oneapi3dal6kmeans5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::kmeans::train::Task"], [19, 4, 1, "_CPPv4I000EN6oneapi3dal6kmeans5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::kmeans::train::desc"], [19, 4, 1, "_CPPv4I000EN6oneapi3dal6kmeans5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::kmeans::train::input"], [19, 7, 1, "_CPPv4I0EN6oneapi3dal6kmeans11train_inputE", "oneapi::dal::kmeans::train_input"], [19, 8, 1, "_CPPv4I0EN6oneapi3dal6kmeans11train_inputE", "oneapi::dal::kmeans::train_input::Task"], [19, 6, 1, "_CPPv4N6oneapi3dal6kmeans11train_input4dataE", "oneapi::dal::kmeans::train_input::data"], [19, 6, 1, "_CPPv4N6oneapi3dal6kmeans11train_input17initial_centroidsE", "oneapi::dal::kmeans::train_input::initial_centroids"], [19, 3, 1, "_CPPv4N6oneapi3dal6kmeans11train_input11train_inputERK5tableRK5table", "oneapi::dal::kmeans::train_input::train_input"], [19, 4, 1, "_CPPv4N6oneapi3dal6kmeans11train_input11train_inputERK5tableRK5table", "oneapi::dal::kmeans::train_input::train_input::data"], [19, 4, 1, "_CPPv4N6oneapi3dal6kmeans11train_input11train_inputERK5tableRK5table", "oneapi::dal::kmeans::train_input::train_input::initial_centroids"], [19, 7, 1, "_CPPv4I0EN6oneapi3dal6kmeans12train_resultE", "oneapi::dal::kmeans::train_result"], [19, 8, 1, "_CPPv4I0EN6oneapi3dal6kmeans12train_resultE", "oneapi::dal::kmeans::train_result::Task"], [19, 3, 1, "_CPPv4NK6oneapi3dal6kmeans12train_result19get_iteration_countEv", "oneapi::dal::kmeans::train_result::get_iteration_count"], [19, 3, 1, "_CPPv4NK6oneapi3dal6kmeans12train_result10get_labelsEv", "oneapi::dal::kmeans::train_result::get_labels"], [19, 3, 1, "_CPPv4NK6oneapi3dal6kmeans12train_result9get_modelEv", "oneapi::dal::kmeans::train_result::get_model"], [19, 3, 1, "_CPPv4NK6oneapi3dal6kmeans12train_result28get_objective_function_valueEv", "oneapi::dal::kmeans::train_result::get_objective_function_value"], [19, 3, 1, "_CPPv4N6oneapi3dal6kmeans12train_result12train_resultEv", "oneapi::dal::kmeans::train_result::train_result"], [20, 3, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init7computeE14compute_resultI4TaskERK10descriptorI5Float6Method4TaskERK13compute_inputI4TaskE", "oneapi::dal::kmeans_init::compute"], [20, 8, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init7computeE14compute_resultI4TaskERK10descriptorI5Float6Method4TaskERK13compute_inputI4TaskE", "oneapi::dal::kmeans_init::compute::Float"], [20, 8, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init7computeE14compute_resultI4TaskERK10descriptorI5Float6Method4TaskERK13compute_inputI4TaskE", "oneapi::dal::kmeans_init::compute::Method"], [20, 8, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init7computeE14compute_resultI4TaskERK10descriptorI5Float6Method4TaskERK13compute_inputI4TaskE", "oneapi::dal::kmeans_init::compute::Task"], [20, 4, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init7computeE14compute_resultI4TaskERK10descriptorI5Float6Method4TaskERK13compute_inputI4TaskE", "oneapi::dal::kmeans_init::compute::desc"], [20, 4, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init7computeE14compute_resultI4TaskERK10descriptorI5Float6Method4TaskERK13compute_inputI4TaskE", "oneapi::dal::kmeans_init::compute::input"], [20, 7, 1, "_CPPv4I0EN6oneapi3dal11kmeans_init13compute_inputE", "oneapi::dal::kmeans_init::compute_input"], [20, 8, 1, "_CPPv4I0EN6oneapi3dal11kmeans_init13compute_inputE", "oneapi::dal::kmeans_init::compute_input::Task"], [20, 3, 1, "_CPPv4N6oneapi3dal11kmeans_init13compute_input13compute_inputERK5table", "oneapi::dal::kmeans_init::compute_input::compute_input"], [20, 4, 1, "_CPPv4N6oneapi3dal11kmeans_init13compute_input13compute_inputERK5table", "oneapi::dal::kmeans_init::compute_input::compute_input::data"], [20, 6, 1, "_CPPv4N6oneapi3dal11kmeans_init13compute_input4dataE", "oneapi::dal::kmeans_init::compute_input::data"], [20, 7, 1, "_CPPv4I0EN6oneapi3dal11kmeans_init14compute_resultE", "oneapi::dal::kmeans_init::compute_result"], [20, 8, 1, "_CPPv4I0EN6oneapi3dal11kmeans_init14compute_resultE", "oneapi::dal::kmeans_init::compute_result::Task"], [20, 3, 1, "_CPPv4N6oneapi3dal11kmeans_init14compute_result14compute_resultEv", "oneapi::dal::kmeans_init::compute_result::compute_result"], [20, 3, 1, "_CPPv4NK6oneapi3dal11kmeans_init14compute_result13get_centroidsEv", "oneapi::dal::kmeans_init::compute_result::get_centroids"], [20, 7, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init10descriptorE", "oneapi::dal::kmeans_init::descriptor"], [20, 8, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init10descriptorE", "oneapi::dal::kmeans_init::descriptor::Float"], [20, 8, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init10descriptorE", "oneapi::dal::kmeans_init::descriptor::Method"], [20, 8, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init10descriptorE", "oneapi::dal::kmeans_init::descriptor::Task"], [20, 6, 1, "_CPPv4N6oneapi3dal11kmeans_init10descriptor13cluster_countE", "oneapi::dal::kmeans_init::descriptor::cluster_count"], [20, 3, 1, "_CPPv4N6oneapi3dal11kmeans_init10descriptor10descriptorENSt7int64_tE", "oneapi::dal::kmeans_init::descriptor::descriptor"], [20, 4, 1, "_CPPv4N6oneapi3dal11kmeans_init10descriptor10descriptorENSt7int64_tE", "oneapi::dal::kmeans_init::descriptor::descriptor::cluster_count"], [20, 5, 1, "_CPPv4N6oneapi3dal11kmeans_init6method10by_defaultE", "oneapi::dal::kmeans_init::method::by_default"], [20, 7, 1, "_CPPv4N6oneapi3dal11kmeans_init6method5denseE", "oneapi::dal::kmeans_init::method::dense"], [20, 5, 1, "_CPPv4N6oneapi3dal11kmeans_init4task10by_defaultE", "oneapi::dal::kmeans_init::task::by_default"], [20, 7, 1, "_CPPv4N6oneapi3dal11kmeans_init4task4initE", "oneapi::dal::kmeans_init::task::init"], [25, 7, 1, "_CPPv4I000EN6oneapi3dal3knn10descriptorE", "oneapi::dal::knn::descriptor"], [25, 8, 1, "_CPPv4I000EN6oneapi3dal3knn10descriptorE", "oneapi::dal::knn::descriptor::Float"], [25, 8, 1, "_CPPv4I000EN6oneapi3dal3knn10descriptorE", "oneapi::dal::knn::descriptor::Method"], [25, 8, 1, "_CPPv4I000EN6oneapi3dal3knn10descriptorE", "oneapi::dal::knn::descriptor::Task"], [25, 6, 1, "_CPPv4N6oneapi3dal3knn10descriptor11class_countE", "oneapi::dal::knn::descriptor::class_count"], [25, 3, 1, "_CPPv4N6oneapi3dal3knn10descriptor10descriptorENSt7int64_tENSt7int64_tE", "oneapi::dal::knn::descriptor::descriptor"], [25, 4, 1, "_CPPv4N6oneapi3dal3knn10descriptor10descriptorENSt7int64_tENSt7int64_tE", "oneapi::dal::knn::descriptor::descriptor::class_count"], [25, 4, 1, "_CPPv4N6oneapi3dal3knn10descriptor10descriptorENSt7int64_tENSt7int64_tE", "oneapi::dal::knn::descriptor::descriptor::neighbor_count"], [25, 6, 1, "_CPPv4N6oneapi3dal3knn10descriptor14neighbor_countE", "oneapi::dal::knn::descriptor::neighbor_count"], [25, 3, 1, "_CPPv4I000EN6oneapi3dal3knn5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::knn::infer"], [25, 8, 1, "_CPPv4I000EN6oneapi3dal3knn5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::knn::infer::Float"], [25, 8, 1, "_CPPv4I000EN6oneapi3dal3knn5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::knn::infer::Method"], [25, 8, 1, "_CPPv4I000EN6oneapi3dal3knn5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::knn::infer::Task"], [25, 4, 1, "_CPPv4I000EN6oneapi3dal3knn5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::knn::infer::desc"], [25, 4, 1, "_CPPv4I000EN6oneapi3dal3knn5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::knn::infer::input"], [25, 7, 1, "_CPPv4I0EN6oneapi3dal3knn11infer_inputE", "oneapi::dal::knn::infer_input"], [25, 8, 1, "_CPPv4I0EN6oneapi3dal3knn11infer_inputE", "oneapi::dal::knn::infer_input::Task"], [25, 6, 1, "_CPPv4N6oneapi3dal3knn11infer_input4dataE", "oneapi::dal::knn::infer_input::data"], [25, 3, 1, "_CPPv4N6oneapi3dal3knn11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::knn::infer_input::infer_input"], [25, 4, 1, "_CPPv4N6oneapi3dal3knn11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::knn::infer_input::infer_input::data"], [25, 4, 1, "_CPPv4N6oneapi3dal3knn11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::knn::infer_input::infer_input::m"], [25, 6, 1, "_CPPv4N6oneapi3dal3knn11infer_input5modelE", "oneapi::dal::knn::infer_input::model"], [25, 7, 1, "_CPPv4I0EN6oneapi3dal3knn12infer_resultE", "oneapi::dal::knn::infer_result"], [25, 8, 1, "_CPPv4I0EN6oneapi3dal3knn12infer_resultE", "oneapi::dal::knn::infer_result::Task"], [25, 3, 1, "_CPPv4NK6oneapi3dal3knn12infer_result10get_labelsEv", "oneapi::dal::knn::infer_result::get_labels"], [25, 3, 1, "_CPPv4N6oneapi3dal3knn12infer_result12infer_resultEv", "oneapi::dal::knn::infer_result::infer_result"], [25, 7, 1, "_CPPv4N6oneapi3dal3knn6method10bruteforceE", "oneapi::dal::knn::method::bruteforce"], [25, 5, 1, "_CPPv4N6oneapi3dal3knn6method10by_defaultE", "oneapi::dal::knn::method::by_default"], [25, 7, 1, "_CPPv4N6oneapi3dal3knn6method7kd_treeE", "oneapi::dal::knn::method::kd_tree"], [25, 7, 1, "_CPPv4I0EN6oneapi3dal3knn5modelE", "oneapi::dal::knn::model"], [25, 8, 1, "_CPPv4I0EN6oneapi3dal3knn5modelE", "oneapi::dal::knn::model::Task"], [25, 3, 1, "_CPPv4N6oneapi3dal3knn5model5modelEv", "oneapi::dal::knn::model::model"], [25, 5, 1, "_CPPv4N6oneapi3dal3knn4task10by_defaultE", "oneapi::dal::knn::task::by_default"], [25, 7, 1, "_CPPv4N6oneapi3dal3knn4task14classificationE", "oneapi::dal::knn::task::classification"], [25, 3, 1, "_CPPv4I000EN6oneapi3dal3knn5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::knn::train"], [25, 8, 1, "_CPPv4I000EN6oneapi3dal3knn5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::knn::train::Float"], [25, 8, 1, "_CPPv4I000EN6oneapi3dal3knn5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::knn::train::Method"], [25, 8, 1, "_CPPv4I000EN6oneapi3dal3knn5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::knn::train::Task"], [25, 4, 1, "_CPPv4I000EN6oneapi3dal3knn5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::knn::train::desc"], [25, 4, 1, "_CPPv4I000EN6oneapi3dal3knn5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::knn::train::input"], [25, 7, 1, "_CPPv4I0EN6oneapi3dal3knn11train_inputE", "oneapi::dal::knn::train_input"], [25, 8, 1, "_CPPv4I0EN6oneapi3dal3knn11train_inputE", "oneapi::dal::knn::train_input::Task"], [25, 6, 1, "_CPPv4N6oneapi3dal3knn11train_input4dataE", "oneapi::dal::knn::train_input::data"], [25, 6, 1, "_CPPv4N6oneapi3dal3knn11train_input6labelsE", "oneapi::dal::knn::train_input::labels"], [25, 3, 1, "_CPPv4N6oneapi3dal3knn11train_input11train_inputERK5tableRK5table", "oneapi::dal::knn::train_input::train_input"], [25, 4, 1, "_CPPv4N6oneapi3dal3knn11train_input11train_inputERK5tableRK5table", "oneapi::dal::knn::train_input::train_input::data"], [25, 4, 1, "_CPPv4N6oneapi3dal3knn11train_input11train_inputERK5tableRK5table", "oneapi::dal::knn::train_input::train_input::labels"], [25, 7, 1, "_CPPv4I0EN6oneapi3dal3knn12train_resultE", "oneapi::dal::knn::train_result"], [25, 8, 1, "_CPPv4I0EN6oneapi3dal3knn12train_resultE", "oneapi::dal::knn::train_result::Task"], [25, 3, 1, "_CPPv4NK6oneapi3dal3knn12train_result9get_modelEv", "oneapi::dal::knn::train_result::get_model"], [25, 3, 1, "_CPPv4N6oneapi3dal3knn12train_result12train_resultEv", "oneapi::dal::knn::train_result::train_result"], [22, 7, 1, "_CPPv4I000EN6oneapi3dal3pca10descriptorE", "oneapi::dal::pca::descriptor"], [22, 8, 1, "_CPPv4I000EN6oneapi3dal3pca10descriptorE", "oneapi::dal::pca::descriptor::Float"], [22, 8, 1, "_CPPv4I000EN6oneapi3dal3pca10descriptorE", "oneapi::dal::pca::descriptor::Method"], [22, 8, 1, "_CPPv4I000EN6oneapi3dal3pca10descriptorE", "oneapi::dal::pca::descriptor::Task"], [22, 6, 1, "_CPPv4N6oneapi3dal3pca10descriptor15component_countE", "oneapi::dal::pca::descriptor::component_count"], [22, 3, 1, "_CPPv4N6oneapi3dal3pca10descriptor10descriptorENSt7int64_tE", "oneapi::dal::pca::descriptor::descriptor"], [22, 4, 1, "_CPPv4N6oneapi3dal3pca10descriptor10descriptorENSt7int64_tE", "oneapi::dal::pca::descriptor::descriptor::component_count"], [22, 6, 1, "_CPPv4N6oneapi3dal3pca10descriptor13deterministicE", "oneapi::dal::pca::descriptor::deterministic"], [22, 3, 1, "_CPPv4I000EN6oneapi3dal3pca5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::pca::infer"], [22, 8, 1, "_CPPv4I000EN6oneapi3dal3pca5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::pca::infer::Float"], [22, 8, 1, "_CPPv4I000EN6oneapi3dal3pca5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::pca::infer::Method"], [22, 8, 1, "_CPPv4I000EN6oneapi3dal3pca5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::pca::infer::Task"], [22, 4, 1, "_CPPv4I000EN6oneapi3dal3pca5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::pca::infer::desc"], [22, 4, 1, "_CPPv4I000EN6oneapi3dal3pca5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::pca::infer::input"], [22, 7, 1, "_CPPv4I0EN6oneapi3dal3pca11infer_inputE", "oneapi::dal::pca::infer_input"], [22, 8, 1, "_CPPv4I0EN6oneapi3dal3pca11infer_inputE", "oneapi::dal::pca::infer_input::Task"], [22, 6, 1, "_CPPv4N6oneapi3dal3pca11infer_input4dataE", "oneapi::dal::pca::infer_input::data"], [22, 3, 1, "_CPPv4N6oneapi3dal3pca11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::pca::infer_input::infer_input"], [22, 4, 1, "_CPPv4N6oneapi3dal3pca11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::pca::infer_input::infer_input::data"], [22, 4, 1, "_CPPv4N6oneapi3dal3pca11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::pca::infer_input::infer_input::m"], [22, 6, 1, "_CPPv4N6oneapi3dal3pca11infer_input5modelE", "oneapi::dal::pca::infer_input::model"], [22, 7, 1, "_CPPv4I0EN6oneapi3dal3pca12infer_resultE", "oneapi::dal::pca::infer_result"], [22, 8, 1, "_CPPv4I0EN6oneapi3dal3pca12infer_resultE", "oneapi::dal::pca::infer_result::Task"], [22, 3, 1, "_CPPv4NK6oneapi3dal3pca12infer_result20get_transformed_dataEv", "oneapi::dal::pca::infer_result::get_transformed_data"], [22, 3, 1, "_CPPv4N6oneapi3dal3pca12infer_result12infer_resultEv", "oneapi::dal::pca::infer_result::infer_result"], [22, 5, 1, "_CPPv4N6oneapi3dal3pca6method10by_defaultE", "oneapi::dal::pca::method::by_default"], [22, 7, 1, "_CPPv4N6oneapi3dal3pca6method3covE", "oneapi::dal::pca::method::cov"], [22, 7, 1, "_CPPv4N6oneapi3dal3pca6method3svdE", "oneapi::dal::pca::method::svd"], [22, 7, 1, "_CPPv4I0EN6oneapi3dal3pca5modelE", "oneapi::dal::pca::model"], [22, 8, 1, "_CPPv4I0EN6oneapi3dal3pca5modelE", "oneapi::dal::pca::model::Task"], [22, 3, 1, "_CPPv4NK6oneapi3dal3pca5model19get_component_countEv", "oneapi::dal::pca::model::get_component_count"], [22, 3, 1, "_CPPv4NK6oneapi3dal3pca5model16get_eigenvectorsEv", "oneapi::dal::pca::model::get_eigenvectors"], [22, 3, 1, "_CPPv4N6oneapi3dal3pca5model5modelEv", "oneapi::dal::pca::model::model"], [22, 5, 1, "_CPPv4N6oneapi3dal3pca4task10by_defaultE", "oneapi::dal::pca::task::by_default"], [22, 7, 1, "_CPPv4N6oneapi3dal3pca4task13dim_reductionE", "oneapi::dal::pca::task::dim_reduction"], [22, 3, 1, "_CPPv4I000EN6oneapi3dal3pca5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::pca::train"], [22, 8, 1, "_CPPv4I000EN6oneapi3dal3pca5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::pca::train::Float"], [22, 8, 1, "_CPPv4I000EN6oneapi3dal3pca5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::pca::train::Method"], [22, 8, 1, "_CPPv4I000EN6oneapi3dal3pca5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::pca::train::Task"], [22, 4, 1, "_CPPv4I000EN6oneapi3dal3pca5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::pca::train::desc"], [22, 4, 1, "_CPPv4I000EN6oneapi3dal3pca5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::pca::train::input"], [22, 7, 1, "_CPPv4I0EN6oneapi3dal3pca11train_inputE", "oneapi::dal::pca::train_input"], [22, 8, 1, "_CPPv4I0EN6oneapi3dal3pca11train_inputE", "oneapi::dal::pca::train_input::Task"], [22, 6, 1, "_CPPv4N6oneapi3dal3pca11train_input4dataE", "oneapi::dal::pca::train_input::data"], [22, 3, 1, "_CPPv4N6oneapi3dal3pca11train_input11train_inputERK5table", "oneapi::dal::pca::train_input::train_input"], [22, 4, 1, "_CPPv4N6oneapi3dal3pca11train_input11train_inputERK5table", "oneapi::dal::pca::train_input::train_input::data"], [22, 7, 1, "_CPPv4I0EN6oneapi3dal3pca12train_resultE", "oneapi::dal::pca::train_result"], [22, 8, 1, "_CPPv4I0EN6oneapi3dal3pca12train_resultE", "oneapi::dal::pca::train_result::Task"], [22, 3, 1, "_CPPv4NK6oneapi3dal3pca12train_result15get_eigenvaluesEv", "oneapi::dal::pca::train_result::get_eigenvalues"], [22, 3, 1, "_CPPv4NK6oneapi3dal3pca12train_result16get_eigenvectorsEv", "oneapi::dal::pca::train_result::get_eigenvectors"], [22, 3, 1, "_CPPv4NK6oneapi3dal3pca12train_result9get_meansEv", "oneapi::dal::pca::train_result::get_means"], [22, 3, 1, "_CPPv4NK6oneapi3dal3pca12train_result9get_modelEv", "oneapi::dal::pca::train_result::get_model"], [22, 3, 1, "_CPPv4NK6oneapi3dal3pca12train_result13get_variancesEv", "oneapi::dal::pca::train_result::get_variances"], [22, 3, 1, "_CPPv4N6oneapi3dal3pca12train_result12train_resultEv", "oneapi::dal::pca::train_result::train_result"], [29, 7, 1, "_CPPv4N6oneapi3dal5rangeE", "oneapi::dal::range"], [29, 3, 1, "_CPPv4NK6oneapi3dal5range17get_element_countENSt7int64_tE", "oneapi::dal::range::get_element_count"], [29, 4, 1, "_CPPv4NK6oneapi3dal5range17get_element_countENSt7int64_tE", "oneapi::dal::range::get_element_count::max_end_index"], [29, 3, 1, "_CPPv4N6oneapi3dal5range5rangeENSt7int64_tENSt7int64_tE", "oneapi::dal::range::range"], [29, 4, 1, "_CPPv4N6oneapi3dal5range5rangeENSt7int64_tENSt7int64_tE", "oneapi::dal::range::range::end"], [29, 4, 1, "_CPPv4N6oneapi3dal5range5rangeENSt7int64_tENSt7int64_tE", "oneapi::dal::range::range::start"], [38, 3, 1, "_CPPv4I00EN6oneapi3dal4readE6ObjectRK10DataSource", "oneapi::dal::read"], [38, 8, 1, "_CPPv4I00EN6oneapi3dal4readE6ObjectRK10DataSource", "oneapi::dal::read::DataSource"], [38, 8, 1, "_CPPv4I00EN6oneapi3dal4readE6ObjectRK10DataSource", "oneapi::dal::read::Object"], [38, 4, 1, "_CPPv4I00EN6oneapi3dal4readE6ObjectRK10DataSource", "oneapi::dal::read::ds"], [35, 7, 1, "_CPPv4I0EN6oneapi3dal12row_accessorE", "oneapi::dal::row_accessor"], [35, 8, 1, "_CPPv4I0EN6oneapi3dal12row_accessorE", "oneapi::dal::row_accessor::Data"], [35, 3, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueER5arrayI6data_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::row_accessor::pull"], [35, 3, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::row_accessor::pull"], [35, 4, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueER5arrayI6data_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::row_accessor::pull::alloc"], [35, 4, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::row_accessor::pull::alloc"], [35, 4, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueER5arrayI6data_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::row_accessor::pull::block"], [35, 4, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueER5arrayI6data_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::row_accessor::pull::queue"], [35, 4, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::row_accessor::pull::queue"], [35, 4, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueER5arrayI6data_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::row_accessor::pull::rows"], [35, 4, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::row_accessor::pull::rows"], [35, 3, 1, "_CPPv4N6oneapi3dal12row_accessor12row_accessorERK5table", "oneapi::dal::row_accessor::row_accessor"], [35, 4, 1, "_CPPv4N6oneapi3dal12row_accessor12row_accessorERK5table", "oneapi::dal::row_accessor::row_accessor::obj"], [42, 7, 1, "_CPPv4N6oneapi3dal5tableE", "oneapi::dal::table"], [42, 3, 1, "_CPPv4NK6oneapi3dal5table16get_column_countEv", "oneapi::dal::table::get_column_count"], [42, 3, 1, "_CPPv4NK6oneapi3dal5table15get_data_layoutEv", "oneapi::dal::table::get_data_layout"], [42, 3, 1, "_CPPv4NK6oneapi3dal5table8get_kindEv", "oneapi::dal::table::get_kind"], [42, 3, 1, "_CPPv4NK6oneapi3dal5table12get_metadataEv", "oneapi::dal::table::get_metadata"], [42, 3, 1, "_CPPv4NK6oneapi3dal5table13get_row_countEv", "oneapi::dal::table::get_row_count"], [42, 3, 1, "_CPPv4NK6oneapi3dal5table8has_dataEv", "oneapi::dal::table::has_data"], [42, 3, 1, "_CPPv4N6oneapi3dal5tableaSERK5table", "oneapi::dal::table::operator="], [42, 3, 1, "_CPPv4N6oneapi3dal5tableaSERR5table", "oneapi::dal::table::operator="], [42, 4, 1, "_CPPv4N6oneapi3dal5tableaSERK5table", "oneapi::dal::table::operator=::other"], [42, 4, 1, "_CPPv4N6oneapi3dal5tableaSERR5table", "oneapi::dal::table::operator=::other"], [42, 3, 1, "_CPPv4N6oneapi3dal5table5tableERK5table", "oneapi::dal::table::table"], [42, 3, 1, "_CPPv4N6oneapi3dal5table5tableERR5table", "oneapi::dal::table::table"], [42, 3, 1, "_CPPv4N6oneapi3dal5table5tableEv", "oneapi::dal::table::table"], [42, 4, 1, "_CPPv4N6oneapi3dal5table5tableERK5table", "oneapi::dal::table::table::other"], [42, 4, 1, "_CPPv4N6oneapi3dal5table5tableERR5table", "oneapi::dal::table::table::other"], [42, 7, 1, "_CPPv4N6oneapi3dal14table_metadataE", "oneapi::dal::table_metadata"], [42, 3, 1, "_CPPv4NK6oneapi3dal14table_metadata13get_data_typeENSt7int64_tE", "oneapi::dal::table_metadata::get_data_type"], [42, 4, 1, "_CPPv4NK6oneapi3dal14table_metadata13get_data_typeENSt7int64_tE", "oneapi::dal::table_metadata::get_data_type::feature_index"], [42, 3, 1, "_CPPv4NK6oneapi3dal14table_metadata17get_feature_countEv", "oneapi::dal::table_metadata::get_feature_count"], [42, 3, 1, "_CPPv4NK6oneapi3dal14table_metadata16get_feature_typeENSt7int64_tE", "oneapi::dal::table_metadata::get_feature_type"], [42, 4, 1, "_CPPv4NK6oneapi3dal14table_metadata16get_feature_typeENSt7int64_tE", "oneapi::dal::table_metadata::get_feature_type::feature_index"], [42, 3, 1, "_CPPv4N6oneapi3dal14table_metadata14table_metadataERK5arrayI9data_typeERK5arrayI12feature_typeE", "oneapi::dal::table_metadata::table_metadata"], [42, 3, 1, "_CPPv4N6oneapi3dal14table_metadata14table_metadataEv", "oneapi::dal::table_metadata::table_metadata"], [42, 4, 1, "_CPPv4N6oneapi3dal14table_metadata14table_metadataERK5arrayI9data_typeERK5arrayI12feature_typeE", "oneapi::dal::table_metadata::table_metadata::dtypes"], [42, 4, 1, "_CPPv4N6oneapi3dal14table_metadata14table_metadataERK5arrayI9data_typeERK5arrayI12feature_typeE", "oneapi::dal::table_metadata::table_metadata::ftypes"], [863, 3, 1, "_CPPv4N6oneapi3tbb10combinable5clearEv", "oneapi::tbb::combinable::clear"], [863, 3, 1, "_CPPv4I0EN6oneapi3tbb10combinable10combinableE5FInit", "oneapi::tbb::combinable::combinable"], [863, 3, 1, "_CPPv4N6oneapi3tbb10combinable10combinableERK10combinable", "oneapi::tbb::combinable::combinable"], [863, 3, 1, "_CPPv4N6oneapi3tbb10combinable10combinableERR10combinable", "oneapi::tbb::combinable::combinable"], [863, 3, 1, "_CPPv4N6oneapi3tbb10combinable10combinableEv", "oneapi::tbb::combinable::combinable"], [863, 8, 1, "_CPPv4I0EN6oneapi3tbb10combinable10combinableE5FInit", "oneapi::tbb::combinable::combinable::FInit"], [863, 4, 1, "_CPPv4I0EN6oneapi3tbb10combinable10combinableE5FInit", "oneapi::tbb::combinable::combinable::finit"], [863, 4, 1, "_CPPv4N6oneapi3tbb10combinable10combinableERK10combinable", "oneapi::tbb::combinable::combinable::other"], [863, 4, 1, "_CPPv4N6oneapi3tbb10combinable10combinableERR10combinable", "oneapi::tbb::combinable::combinable::other"], [863, 3, 1, "_CPPv4I0EN6oneapi3tbb10combinable7combineE1T10BinaryFunc", "oneapi::tbb::combinable::combine"], [863, 8, 1, "_CPPv4I0EN6oneapi3tbb10combinable7combineE1T10BinaryFunc", "oneapi::tbb::combinable::combine::BinaryFunc"], [863, 4, 1, "_CPPv4I0EN6oneapi3tbb10combinable7combineE1T10BinaryFunc", "oneapi::tbb::combinable::combine::f"], [863, 3, 1, "_CPPv4I0EN6oneapi3tbb10combinable12combine_eachEv9UnaryFunc", "oneapi::tbb::combinable::combine_each"], [863, 8, 1, "_CPPv4I0EN6oneapi3tbb10combinable12combine_eachEv9UnaryFunc", "oneapi::tbb::combinable::combine_each::UnaryFunc"], [863, 4, 1, "_CPPv4I0EN6oneapi3tbb10combinable12combine_eachEv9UnaryFunc", "oneapi::tbb::combinable::combine_each::f"], [863, 3, 1, "_CPPv4N6oneapi3tbb10combinable5localERb", "oneapi::tbb::combinable::local"], [863, 3, 1, "_CPPv4N6oneapi3tbb10combinable5localEv", "oneapi::tbb::combinable::local"], [863, 4, 1, "_CPPv4N6oneapi3tbb10combinable5localERb", "oneapi::tbb::combinable::local::exists"], [863, 3, 1, "_CPPv4N6oneapi3tbb10combinableaSERK10combinable", "oneapi::tbb::combinable::operator="], [863, 3, 1, "_CPPv4N6oneapi3tbb10combinableaSERR10combinable", "oneapi::tbb::combinable::operator="], [863, 4, 1, "_CPPv4N6oneapi3tbb10combinableaSERK10combinable", "oneapi::tbb::combinable::operator=::other"], [863, 4, 1, "_CPPv4N6oneapi3tbb10combinableaSERR10combinable", "oneapi::tbb::combinable::operator=::other"], [863, 3, 1, "_CPPv4N6oneapi3tbb10combinableD0Ev", "oneapi::tbb::combinable::~combinable"], [867, 3, 1, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5beginEv", "oneapi::tbb::enumerable_thread_specific::begin"], [867, 3, 1, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific5beginEv", "oneapi::tbb::enumerable_thread_specific::begin"], [865, 3, 1, "_CPPv4I0EN6oneapi3tbb26enumerable_thread_specific7combineE1T10BinaryFunc", "oneapi::tbb::enumerable_thread_specific::combine"], [865, 8, 1, "_CPPv4I0EN6oneapi3tbb26enumerable_thread_specific7combineE1T10BinaryFunc", "oneapi::tbb::enumerable_thread_specific::combine::BinaryFunc"], [865, 4, 1, "_CPPv4I0EN6oneapi3tbb26enumerable_thread_specific7combineE1T10BinaryFunc", "oneapi::tbb::enumerable_thread_specific::combine::f"], [865, 3, 1, "_CPPv4I0EN6oneapi3tbb26enumerable_thread_specific12combine_eachEv9UnaryFunc", "oneapi::tbb::enumerable_thread_specific::combine_each"], [865, 8, 1, "_CPPv4I0EN6oneapi3tbb26enumerable_thread_specific12combine_eachEv9UnaryFunc", "oneapi::tbb::enumerable_thread_specific::combine_each::UnaryFunc"], [865, 4, 1, "_CPPv4I0EN6oneapi3tbb26enumerable_thread_specific12combine_eachEv9UnaryFunc", "oneapi::tbb::enumerable_thread_specific::combine_each::f"], [869, 3, 1, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific5emptyEv", "oneapi::tbb::enumerable_thread_specific::empty"], [867, 3, 1, "_CPPv4N6oneapi3tbb26enumerable_thread_specific3endEv", "oneapi::tbb::enumerable_thread_specific::end"], [867, 3, 1, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific3endEv", "oneapi::tbb::enumerable_thread_specific::end"], [868, 3, 1, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5localERb", "oneapi::tbb::enumerable_thread_specific::local"], [868, 3, 1, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5localEv", "oneapi::tbb::enumerable_thread_specific::local"], [868, 4, 1, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5localERb", "oneapi::tbb::enumerable_thread_specific::local::exists"], [867, 3, 1, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5rangeE6size_t", "oneapi::tbb::enumerable_thread_specific::range"], [867, 3, 1, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific5rangeE6size_t", "oneapi::tbb::enumerable_thread_specific::range"], [867, 4, 1, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5rangeE6size_t", "oneapi::tbb::enumerable_thread_specific::range::grainsize"], [867, 4, 1, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific5rangeE6size_t", "oneapi::tbb::enumerable_thread_specific::range::grainsize"], [869, 3, 1, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific4sizeEv", "oneapi::tbb::enumerable_thread_specific::size"], [871, 3, 1, "_CPPv4N6oneapi3tbb9flatten2d5beginEv", "oneapi::tbb::flatten2d::begin"], [871, 3, 1, "_CPPv4NK6oneapi3tbb9flatten2d5beginEv", "oneapi::tbb::flatten2d::begin"], [871, 3, 1, "_CPPv4N6oneapi3tbb9flatten2d3endEv", "oneapi::tbb::flatten2d::end"], [871, 3, 1, "_CPPv4NK6oneapi3tbb9flatten2d3endEv", "oneapi::tbb::flatten2d::end"], [871, 3, 1, "_CPPv4I0EN6oneapi3tbb9flatten2d9flatten2dE11flattened2dI9ContainerERK9ContainerKN9Container14const_iteratorEKN9Container14const_iteratorE", "oneapi::tbb::flatten2d::flatten2d"], [871, 8, 1, "_CPPv4I0EN6oneapi3tbb9flatten2d9flatten2dE11flattened2dI9ContainerERK9ContainerKN9Container14const_iteratorEKN9Container14const_iteratorE", "oneapi::tbb::flatten2d::flatten2d::Container"], [871, 4, 1, "_CPPv4I0EN6oneapi3tbb9flatten2d9flatten2dE11flattened2dI9ContainerERK9ContainerKN9Container14const_iteratorEKN9Container14const_iteratorE", "oneapi::tbb::flatten2d::flatten2d::b"], [871, 4, 1, "_CPPv4I0EN6oneapi3tbb9flatten2d9flatten2dE11flattened2dI9ContainerERK9ContainerKN9Container14const_iteratorEKN9Container14const_iteratorE", "oneapi::tbb::flatten2d::flatten2d::c"], [871, 4, 1, "_CPPv4I0EN6oneapi3tbb9flatten2d9flatten2dE11flattened2dI9ContainerERK9ContainerKN9Container14const_iteratorEKN9Container14const_iteratorE", "oneapi::tbb::flatten2d::flatten2d::e"], [871, 3, 1, "_CPPv4I0EN6oneapi3tbb9flatten2d11flattened2dERK9Container", "oneapi::tbb::flatten2d::flattened2d"], [871, 3, 1, "_CPPv4N6oneapi3tbb9flatten2d11flattened2dERK9Container", "oneapi::tbb::flatten2d::flattened2d"], [871, 3, 1, "_CPPv4N6oneapi3tbb9flatten2d11flattened2dERK9ContainerN9Container14const_iteratorEN9Container14const_iteratorE", "oneapi::tbb::flatten2d::flattened2d"], [871, 8, 1, "_CPPv4I0EN6oneapi3tbb9flatten2d11flattened2dERK9Container", "oneapi::tbb::flatten2d::flattened2d::Container"], [871, 4, 1, "_CPPv4I0EN6oneapi3tbb9flatten2d11flattened2dERK9Container", "oneapi::tbb::flatten2d::flattened2d::c"], [871, 4, 1, "_CPPv4N6oneapi3tbb9flatten2d11flattened2dERK9Container", "oneapi::tbb::flatten2d::flattened2d::c"], [871, 4, 1, "_CPPv4N6oneapi3tbb9flatten2d11flattened2dERK9ContainerN9Container14const_iteratorEN9Container14const_iteratorE", "oneapi::tbb::flatten2d::flattened2d::c"], [871, 4, 1, "_CPPv4N6oneapi3tbb9flatten2d11flattened2dERK9ContainerN9Container14const_iteratorEN9Container14const_iteratorE", "oneapi::tbb::flatten2d::flattened2d::first"], [871, 4, 1, "_CPPv4N6oneapi3tbb9flatten2d11flattened2dERK9ContainerN9Container14const_iteratorEN9Container14const_iteratorE", "oneapi::tbb::flatten2d::flattened2d::last"], [871, 3, 1, "_CPPv4NK6oneapi3tbb9flatten2d4sizeEv", "oneapi::tbb::flatten2d::size"], [771, 3, 1, "_CPPv4N6oneapi3tbb4flow12indexer_node12indexer_nodeER5graph", "oneapi::tbb::flow::indexer_node::indexer_node"], [771, 3, 1, "_CPPv4N6oneapi3tbb4flow12indexer_node12indexer_nodeERK12indexer_node", "oneapi::tbb::flow::indexer_node::indexer_node"], [771, 4, 1, "_CPPv4N6oneapi3tbb4flow12indexer_node12indexer_nodeER5graph", "oneapi::tbb::flow::indexer_node::indexer_node::g"], [771, 4, 1, "_CPPv4N6oneapi3tbb4flow12indexer_node12indexer_nodeERK12indexer_node", "oneapi::tbb::flow::indexer_node::indexer_node::src"], [771, 3, 1, "_CPPv4N6oneapi3tbb4flow12indexer_node11input_portsEv", "oneapi::tbb::flow::indexer_node::input_ports"], [771, 3, 1, "_CPPv4N6oneapi3tbb4flow12indexer_node7try_getER11output_type", "oneapi::tbb::flow::indexer_node::try_get"], [771, 4, 1, "_CPPv4N6oneapi3tbb4flow12indexer_node7try_getER11output_type", "oneapi::tbb::flow::indexer_node::try_get::v"], [776, 3, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node11decrementerEv", "oneapi::tbb::flow::limiter_node::decrementer"], [776, 3, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node12limiter_nodeER5graph6size_t", "oneapi::tbb::flow::limiter_node::limiter_node"], [776, 3, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node12limiter_nodeERK12limiter_node", "oneapi::tbb::flow::limiter_node::limiter_node"], [776, 4, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node12limiter_nodeER5graph6size_t", "oneapi::tbb::flow::limiter_node::limiter_node::g"], [776, 4, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node12limiter_nodeERK12limiter_node", "oneapi::tbb::flow::limiter_node::limiter_node::src"], [776, 4, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node12limiter_nodeER5graph6size_t", "oneapi::tbb::flow::limiter_node::limiter_node::threshold"], [776, 3, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node7try_getER1T", "oneapi::tbb::flow::limiter_node::try_get"], [776, 4, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node7try_getER1T", "oneapi::tbb::flow::limiter_node::try_get::v"], [776, 3, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node7try_putERK1T", "oneapi::tbb::flow::limiter_node::try_put"], [776, 4, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node7try_putERK1T", "oneapi::tbb::flow::limiter_node::try_put::v"], [782, 3, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node5clearEv", "oneapi::tbb::flow::overwrite_node::clear"], [782, 3, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node8is_validEv", "oneapi::tbb::flow::overwrite_node::is_valid"], [782, 3, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node14overwrite_nodeER5graph", "oneapi::tbb::flow::overwrite_node::overwrite_node"], [782, 3, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node14overwrite_nodeERK14overwrite_node", "oneapi::tbb::flow::overwrite_node::overwrite_node"], [782, 4, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node14overwrite_nodeER5graph", "oneapi::tbb::flow::overwrite_node::overwrite_node::g"], [782, 4, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node14overwrite_nodeERK14overwrite_node", "oneapi::tbb::flow::overwrite_node::overwrite_node::src"], [782, 3, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node7try_getER1T", "oneapi::tbb::flow::overwrite_node::try_get"], [782, 4, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node7try_getER1T", "oneapi::tbb::flow::overwrite_node::try_get::v"], [782, 3, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node7try_putERK1T", "oneapi::tbb::flow::overwrite_node::try_put"], [782, 4, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node7try_putERK1T", "oneapi::tbb::flow::overwrite_node::try_put::v"], [782, 3, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_nodeD0Ev", "oneapi::tbb::flow::overwrite_node::~overwrite_node"], [784, 3, 1, "_CPPv4N6oneapi3tbb4flow19priority_node_queue19priority_queue_nodeER5graph", "oneapi::tbb::flow::priority_node_queue::priority_queue_node"], [784, 3, 1, "_CPPv4N6oneapi3tbb4flow19priority_node_queue19priority_queue_nodeERK19priority_queue_node", "oneapi::tbb::flow::priority_node_queue::priority_queue_node"], [784, 4, 1, "_CPPv4N6oneapi3tbb4flow19priority_node_queue19priority_queue_nodeER5graph", "oneapi::tbb::flow::priority_node_queue::priority_queue_node::g"], [784, 4, 1, "_CPPv4N6oneapi3tbb4flow19priority_node_queue19priority_queue_nodeERK19priority_queue_node", "oneapi::tbb::flow::priority_node_queue::priority_queue_node::src"], [784, 3, 1, "_CPPv4N6oneapi3tbb4flow19priority_node_queue7try_getER1T", "oneapi::tbb::flow::priority_node_queue::try_get"], [784, 4, 1, "_CPPv4N6oneapi3tbb4flow19priority_node_queue7try_getER1T", "oneapi::tbb::flow::priority_node_queue::try_get::v"], [784, 3, 1, "_CPPv4N6oneapi3tbb4flow19priority_node_queue7try_putERK1T", "oneapi::tbb::flow::priority_node_queue::try_put"], [784, 4, 1, "_CPPv4N6oneapi3tbb4flow19priority_node_queue7try_putERK1T", "oneapi::tbb::flow::priority_node_queue::try_put::v"], [785, 3, 1, "_CPPv4N6oneapi3tbb4flow10queue_node10queue_nodeER5graph", "oneapi::tbb::flow::queue_node::queue_node"], [785, 3, 1, "_CPPv4N6oneapi3tbb4flow10queue_node10queue_nodeERK10queue_node", "oneapi::tbb::flow::queue_node::queue_node"], [785, 4, 1, "_CPPv4N6oneapi3tbb4flow10queue_node10queue_nodeER5graph", "oneapi::tbb::flow::queue_node::queue_node::g"], [785, 4, 1, "_CPPv4N6oneapi3tbb4flow10queue_node10queue_nodeERK10queue_node", "oneapi::tbb::flow::queue_node::queue_node::src"], [785, 3, 1, "_CPPv4N6oneapi3tbb4flow10queue_node7try_getER1T", "oneapi::tbb::flow::queue_node::try_get"], [785, 4, 1, "_CPPv4N6oneapi3tbb4flow10queue_node7try_getER1T", "oneapi::tbb::flow::queue_node::try_get::v"], [785, 3, 1, "_CPPv4N6oneapi3tbb4flow10queue_node7try_putERK1T", "oneapi::tbb::flow::queue_node::try_put"], [785, 4, 1, "_CPPv4N6oneapi3tbb4flow10queue_node7try_putERK1T", "oneapi::tbb::flow::queue_node::try_put::v"], [790, 3, 1, "_CPPv4I0EN6oneapi3tbb4flow14sequencer_node14sequencer_nodeER5graphRK9Sequencer", "oneapi::tbb::flow::sequencer_node::sequencer_node"], [790, 3, 1, "_CPPv4N6oneapi3tbb4flow14sequencer_node14sequencer_nodeERK14sequencer_node", "oneapi::tbb::flow::sequencer_node::sequencer_node"], [790, 8, 1, "_CPPv4I0EN6oneapi3tbb4flow14sequencer_node14sequencer_nodeER5graphRK9Sequencer", "oneapi::tbb::flow::sequencer_node::sequencer_node::Sequencer"], [790, 4, 1, "_CPPv4I0EN6oneapi3tbb4flow14sequencer_node14sequencer_nodeER5graphRK9Sequencer", "oneapi::tbb::flow::sequencer_node::sequencer_node::g"], [790, 4, 1, "_CPPv4I0EN6oneapi3tbb4flow14sequencer_node14sequencer_nodeER5graphRK9Sequencer", "oneapi::tbb::flow::sequencer_node::sequencer_node::s"], [790, 4, 1, "_CPPv4N6oneapi3tbb4flow14sequencer_node14sequencer_nodeERK14sequencer_node", "oneapi::tbb::flow::sequencer_node::sequencer_node::src"], [790, 3, 1, "_CPPv4N6oneapi3tbb4flow14sequencer_node7try_getER1T", "oneapi::tbb::flow::sequencer_node::try_get"], [790, 4, 1, "_CPPv4N6oneapi3tbb4flow14sequencer_node7try_getER1T", "oneapi::tbb::flow::sequencer_node::try_get::v"], [790, 3, 1, "_CPPv4N6oneapi3tbb4flow14sequencer_node7try_putERK1T", "oneapi::tbb::flow::sequencer_node::try_put"], [790, 4, 1, "_CPPv4N6oneapi3tbb4flow14sequencer_node7try_putERK1T", "oneapi::tbb::flow::sequencer_node::try_put::v"], [791, 3, 1, "_CPPv4N6oneapi3tbb4flow10split_node12output_portsEv", "oneapi::tbb::flow::split_node::output_ports"], [791, 3, 1, "_CPPv4N6oneapi3tbb4flow10split_node10split_nodeER5graph", "oneapi::tbb::flow::split_node::split_node"], [791, 3, 1, "_CPPv4N6oneapi3tbb4flow10split_node10split_nodeERK10split_node", "oneapi::tbb::flow::split_node::split_node"], [791, 4, 1, "_CPPv4N6oneapi3tbb4flow10split_node10split_nodeER5graph", "oneapi::tbb::flow::split_node::split_node::g"], [791, 4, 1, "_CPPv4N6oneapi3tbb4flow10split_node10split_nodeERK10split_node", "oneapi::tbb::flow::split_node::split_node::other"], [791, 3, 1, "_CPPv4N6oneapi3tbb4flow10split_node7try_putERK9TupleType", "oneapi::tbb::flow::split_node::try_put"], [791, 4, 1, "_CPPv4N6oneapi3tbb4flow10split_node7try_putERK9TupleType", "oneapi::tbb::flow::split_node::try_put::v"], [791, 3, 1, "_CPPv4N6oneapi3tbb4flow10split_nodeD0Ev", "oneapi::tbb::flow::split_node::~split_node"], [793, 3, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode5clearEv", "oneapi::tbb::flow::write_once_mode::clear"], [793, 3, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode8is_validEv", "oneapi::tbb::flow::write_once_mode::is_valid"], [793, 3, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode7try_getER1T", "oneapi::tbb::flow::write_once_mode::try_get"], [793, 4, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode7try_getER1T", "oneapi::tbb::flow::write_once_mode::try_get::v"], [793, 3, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode7try_putERK1T", "oneapi::tbb::flow::write_once_mode::try_put"], [793, 4, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode7try_putERK1T", "oneapi::tbb::flow::write_once_mode::try_put::v"], [793, 3, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode15write_once_nodeER5graph", "oneapi::tbb::flow::write_once_mode::write_once_node"], [793, 3, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode15write_once_nodeERK15write_once_node", "oneapi::tbb::flow::write_once_mode::write_once_node"], [793, 4, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode15write_once_nodeER5graph", "oneapi::tbb::flow::write_once_mode::write_once_node::g"], [793, 4, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode15write_once_nodeERK15write_once_node", "oneapi::tbb::flow::write_once_mode::write_once_node::src"], [793, 3, 1, "_CPPv4N6oneapi3tbb4flow15write_once_modeD0Ev", "oneapi::tbb::flow::write_once_mode::~write_once_node"], [805, 3, 1, "_CPPv4N6oneapi3tbb5mutex4lockEv", "oneapi::tbb::mutex::lock"], [805, 3, 1, "_CPPv4N6oneapi3tbb5mutex5mutexEv", "oneapi::tbb::mutex::mutex"], [805, 7, 1, "_CPPv4N6oneapi3tbb5mutex11scoped_lockE", "oneapi::tbb::mutex::scoped_lock"], [805, 3, 1, "_CPPv4N6oneapi3tbb5mutex8try_lockEv", "oneapi::tbb::mutex::try_lock"], [805, 3, 1, "_CPPv4N6oneapi3tbb5mutex6unlockEv", "oneapi::tbb::mutex::unlock"], [805, 3, 1, "_CPPv4N6oneapi3tbb5mutexD0Ev", "oneapi::tbb::mutex::~mutex"], [807, 3, 1, "_CPPv4N6oneapi3tbb13null_rw_mutex4lockEv", "oneapi::tbb::null_rw_mutex::lock"], [807, 3, 1, "_CPPv4N6oneapi3tbb13null_rw_mutex11lock_sharedEv", "oneapi::tbb::null_rw_mutex::lock_shared"], [807, 3, 1, "_CPPv4N6oneapi3tbb13null_rw_mutex13null_rw_mutexEv", "oneapi::tbb::null_rw_mutex::null_rw_mutex"], [807, 7, 1, "_CPPv4N6oneapi3tbb13null_rw_mutex11scoped_lockE", "oneapi::tbb::null_rw_mutex::scoped_lock"], [807, 3, 1, "_CPPv4N6oneapi3tbb13null_rw_mutex8try_lockEv", "oneapi::tbb::null_rw_mutex::try_lock"], [807, 3, 1, "_CPPv4N6oneapi3tbb13null_rw_mutex15try_lock_sharedEv", "oneapi::tbb::null_rw_mutex::try_lock_shared"], [807, 3, 1, "_CPPv4N6oneapi3tbb13null_rw_mutex6unlockEv", "oneapi::tbb::null_rw_mutex::unlock"], [807, 3, 1, "_CPPv4N6oneapi3tbb13null_rw_mutex13unlock_sharedEv", "oneapi::tbb::null_rw_mutex::unlock_shared"], [807, 3, 1, "_CPPv4N6oneapi3tbb13null_rw_mutexD0Ev", "oneapi::tbb::null_rw_mutex::~null_rw_mutex"], [808, 3, 1, "_CPPv4N6oneapi3tbb14queueing_mutex13queuing_mutexEv", "oneapi::tbb::queueing_mutex::queuing_mutex"], [808, 7, 1, "_CPPv4N6oneapi3tbb14queueing_mutex11scoped_lockE", "oneapi::tbb::queueing_mutex::scoped_lock"], [808, 3, 1, "_CPPv4N6oneapi3tbb14queueing_mutexD0Ev", "oneapi::tbb::queueing_mutex::~queuing_mutex"], [809, 3, 1, "_CPPv4N6oneapi3tbb17queueing_rw_mutex16queuing_rw_mutexEv", "oneapi::tbb::queueing_rw_mutex::queuing_rw_mutex"], [809, 7, 1, "_CPPv4N6oneapi3tbb17queueing_rw_mutex11scoped_lockE", "oneapi::tbb::queueing_rw_mutex::scoped_lock"], [809, 3, 1, "_CPPv4N6oneapi3tbb17queueing_rw_mutexD0Ev", "oneapi::tbb::queueing_rw_mutex::~queuing_rw_mutex"], [810, 3, 1, "_CPPv4N6oneapi3tbb8rw_mutex4lockEv", "oneapi::tbb::rw_mutex::lock"], [810, 3, 1, "_CPPv4N6oneapi3tbb8rw_mutex11lock_sharedEv", "oneapi::tbb::rw_mutex::lock_shared"], [810, 3, 1, "_CPPv4N6oneapi3tbb8rw_mutex8rw_mutexEv", "oneapi::tbb::rw_mutex::rw_mutex"], [810, 7, 1, "_CPPv4N6oneapi3tbb8rw_mutex11scoped_lockE", "oneapi::tbb::rw_mutex::scoped_lock"], [810, 3, 1, "_CPPv4N6oneapi3tbb8rw_mutex8try_lockEv", "oneapi::tbb::rw_mutex::try_lock"], [810, 3, 1, "_CPPv4N6oneapi3tbb8rw_mutex15try_lock_sharedEv", "oneapi::tbb::rw_mutex::try_lock_shared"], [810, 3, 1, "_CPPv4N6oneapi3tbb8rw_mutex6unlockEv", "oneapi::tbb::rw_mutex::unlock"], [810, 3, 1, "_CPPv4N6oneapi3tbb8rw_mutex13unlock_sharedEv", "oneapi::tbb::rw_mutex::unlock_shared"], [810, 3, 1, "_CPPv4N6oneapi3tbb8rw_mutexD0Ev", "oneapi::tbb::rw_mutex::~rw_mutex"], [801, 3, 1, "_CPPv4N6oneapi3tbb18scalable_allocator8allocateE9size_type", "oneapi::tbb::scalable_allocator::allocate"], [801, 4, 1, "_CPPv4N6oneapi3tbb18scalable_allocator8allocateE9size_type", "oneapi::tbb::scalable_allocator::allocate::n"], [801, 3, 1, "_CPPv4N6oneapi3tbb18scalable_allocator10deallocateEP10value_type9size_type", "oneapi::tbb::scalable_allocator::deallocate"], [801, 4, 1, "_CPPv4N6oneapi3tbb18scalable_allocator10deallocateEP10value_type9size_type", "oneapi::tbb::scalable_allocator::deallocate::n"], [801, 4, 1, "_CPPv4N6oneapi3tbb18scalable_allocator10deallocateEP10value_type9size_type", "oneapi::tbb::scalable_allocator::deallocate::p"], [801, 3, 1, "_CPPv4I00EN6oneapi3tbb18scalable_allocatorneEbRK18scalable_allocatorI1TERK18scalable_allocatorI1UE", "oneapi::tbb::scalable_allocator::operator!="], [801, 8, 1, "_CPPv4I00EN6oneapi3tbb18scalable_allocatorneEbRK18scalable_allocatorI1TERK18scalable_allocatorI1UE", "oneapi::tbb::scalable_allocator::operator!=::T"], [801, 8, 1, "_CPPv4I00EN6oneapi3tbb18scalable_allocatorneEbRK18scalable_allocatorI1TERK18scalable_allocatorI1UE", "oneapi::tbb::scalable_allocator::operator!=::U"], [801, 3, 1, "_CPPv4I00EN6oneapi3tbb18scalable_allocatoreqEbRK18scalable_allocatorI1TERK18scalable_allocatorI1UE", "oneapi::tbb::scalable_allocator::operator=="], [801, 8, 1, "_CPPv4I00EN6oneapi3tbb18scalable_allocatoreqEbRK18scalable_allocatorI1TERK18scalable_allocatorI1UE", "oneapi::tbb::scalable_allocator::operator==::T"], [801, 8, 1, "_CPPv4I00EN6oneapi3tbb18scalable_allocatoreqEbRK18scalable_allocatorI1TERK18scalable_allocatorI1UE", "oneapi::tbb::scalable_allocator::operator==::U"], [811, 7, 1, "_CPPv4N6oneapi3tbb22speculative_spin_mutex11scoped_lockE", "oneapi::tbb::speculative_spin_mutex::scoped_lock"], [811, 3, 1, "_CPPv4N6oneapi3tbb22speculative_spin_mutex22speculative_spin_mutexEv", "oneapi::tbb::speculative_spin_mutex::speculative_spin_mutex"], [811, 3, 1, "_CPPv4N6oneapi3tbb22speculative_spin_mutexD0Ev", "oneapi::tbb::speculative_spin_mutex::~speculative_spin_mutex"], [812, 7, 1, "_CPPv4N6oneapi3tbb25speculative_spin_rw_mutex11scoped_lockE", "oneapi::tbb::speculative_spin_rw_mutex::scoped_lock"], [812, 3, 1, "_CPPv4N6oneapi3tbb25speculative_spin_rw_mutex25speculative_spin_rw_mutexEv", "oneapi::tbb::speculative_spin_rw_mutex::speculative_spin_rw_mutex"], [812, 3, 1, "_CPPv4N6oneapi3tbb25speculative_spin_rw_mutexD0Ev", "oneapi::tbb::speculative_spin_rw_mutex::~speculative_spin_rw_mutex"], [813, 3, 1, "_CPPv4N6oneapi3tbb10spin_mutex4lockEv", "oneapi::tbb::spin_mutex::lock"], [813, 7, 1, "_CPPv4N6oneapi3tbb10spin_mutex11scoped_lockE", "oneapi::tbb::spin_mutex::scoped_lock"], [813, 3, 1, "_CPPv4N6oneapi3tbb10spin_mutex10spin_mutexEv", "oneapi::tbb::spin_mutex::spin_mutex"], [813, 3, 1, "_CPPv4N6oneapi3tbb10spin_mutex8try_lockEv", "oneapi::tbb::spin_mutex::try_lock"], [813, 3, 1, "_CPPv4N6oneapi3tbb10spin_mutex6unlockEv", "oneapi::tbb::spin_mutex::unlock"], [813, 3, 1, "_CPPv4N6oneapi3tbb10spin_mutexD0Ev", "oneapi::tbb::spin_mutex::~spin_mutex"], [814, 3, 1, "_CPPv4N6oneapi3tbb13spin_rw_mutex4lockEv", "oneapi::tbb::spin_rw_mutex::lock"], [814, 3, 1, "_CPPv4N6oneapi3tbb13spin_rw_mutex11lock_sharedEv", "oneapi::tbb::spin_rw_mutex::lock_shared"], [814, 7, 1, "_CPPv4N6oneapi3tbb13spin_rw_mutex11scoped_lockE", "oneapi::tbb::spin_rw_mutex::scoped_lock"], [814, 3, 1, "_CPPv4N6oneapi3tbb13spin_rw_mutex13spin_rw_mutexEv", "oneapi::tbb::spin_rw_mutex::spin_rw_mutex"], [814, 3, 1, "_CPPv4N6oneapi3tbb13spin_rw_mutex8try_lockEv", "oneapi::tbb::spin_rw_mutex::try_lock"], [814, 3, 1, "_CPPv4N6oneapi3tbb13spin_rw_mutex15try_lock_sharedEv", "oneapi::tbb::spin_rw_mutex::try_lock_shared"], [814, 3, 1, "_CPPv4N6oneapi3tbb13spin_rw_mutex6unlockEv", "oneapi::tbb::spin_rw_mutex::unlock"], [814, 3, 1, "_CPPv4N6oneapi3tbb13spin_rw_mutex13unlock_sharedEv", "oneapi::tbb::spin_rw_mutex::unlock_shared"], [814, 3, 1, "_CPPv4N6oneapi3tbb13spin_rw_mutexD0Ev", "oneapi::tbb::spin_rw_mutex::~spin_rw_mutex"], [859, 3, 1, "_CPPv4N6oneapi3tbb10task_group6cancelEv", "oneapi::tbb::task_group::cancel"], [859, 3, 1, "_CPPv4I0EN6oneapi3tbb10task_group5deferE11task_handleRR1F", "oneapi::tbb::task_group::defer"], [859, 8, 1, "_CPPv4I0EN6oneapi3tbb10task_group5deferE11task_handleRR1F", "oneapi::tbb::task_group::defer::F"], [859, 4, 1, "_CPPv4I0EN6oneapi3tbb10task_group5deferE11task_handleRR1F", "oneapi::tbb::task_group::defer::f"], [859, 3, 1, "_CPPv4N6oneapi3tbb10task_group31is_current_task_group_cancelingEv", "oneapi::tbb::task_group::is_current_task_group_canceling"], [859, 3, 1, "_CPPv4I0EN6oneapi3tbb10task_group3runEvRR4Func", "oneapi::tbb::task_group::run"], [859, 3, 1, "_CPPv4N6oneapi3tbb10task_group3runERR11task_handle", "oneapi::tbb::task_group::run"], [859, 8, 1, "_CPPv4I0EN6oneapi3tbb10task_group3runEvRR4Func", "oneapi::tbb::task_group::run::Func"], [859, 4, 1, "_CPPv4I0EN6oneapi3tbb10task_group3runEvRR4Func", "oneapi::tbb::task_group::run::f"], [859, 4, 1, "_CPPv4N6oneapi3tbb10task_group3runERR11task_handle", "oneapi::tbb::task_group::run::h"], [859, 3, 1, "_CPPv4I0EN6oneapi3tbb10task_group12run_and_waitE17task_group_statusRK4Func", "oneapi::tbb::task_group::run_and_wait"], [859, 8, 1, "_CPPv4I0EN6oneapi3tbb10task_group12run_and_waitE17task_group_statusRK4Func", "oneapi::tbb::task_group::run_and_wait::Func"], [859, 4, 1, "_CPPv4I0EN6oneapi3tbb10task_group12run_and_waitE17task_group_statusRK4Func", "oneapi::tbb::task_group::run_and_wait::f"], [859, 3, 1, "_CPPv4N6oneapi3tbb10task_group10task_groupER18task_group_context", "oneapi::tbb::task_group::task_group"], [859, 3, 1, "_CPPv4N6oneapi3tbb10task_group10task_groupEv", "oneapi::tbb::task_group::task_group"], [859, 4, 1, "_CPPv4N6oneapi3tbb10task_group10task_groupER18task_group_context", "oneapi::tbb::task_group::task_group::context"], [859, 3, 1, "_CPPv4N6oneapi3tbb10task_group4waitEv", "oneapi::tbb::task_group::wait"], [859, 3, 1, "_CPPv4N6oneapi3tbb10task_groupD0Ev", "oneapi::tbb::task_group::~task_group"], [803, 3, 1, "_CPPv4N6oneapi3tbb13tbb_allocator8allocateE9size_type", "oneapi::tbb::tbb_allocator::allocate"], [803, 4, 1, "_CPPv4N6oneapi3tbb13tbb_allocator8allocateE9size_type", "oneapi::tbb::tbb_allocator::allocate::n"], [803, 3, 1, "_CPPv4N6oneapi3tbb13tbb_allocator14allocator_typeEv", "oneapi::tbb::tbb_allocator::allocator_type"], [803, 3, 1, "_CPPv4N6oneapi3tbb13tbb_allocator10deallocateEP1T9size_type", "oneapi::tbb::tbb_allocator::deallocate"], [803, 4, 1, "_CPPv4N6oneapi3tbb13tbb_allocator10deallocateEP1T9size_type", "oneapi::tbb::tbb_allocator::deallocate::n"], [803, 4, 1, "_CPPv4N6oneapi3tbb13tbb_allocator10deallocateEP1T9size_type", "oneapi::tbb::tbb_allocator::deallocate::p"], [803, 3, 1, "_CPPv4I00EN6oneapi3tbb13tbb_allocatorneEbRK13tbb_allocatorI1TERK13tbb_allocatorI1UE", "oneapi::tbb::tbb_allocator::operator!="], [803, 8, 1, "_CPPv4I00EN6oneapi3tbb13tbb_allocatorneEbRK13tbb_allocatorI1TERK13tbb_allocatorI1UE", "oneapi::tbb::tbb_allocator::operator!=::T"], [803, 8, 1, "_CPPv4I00EN6oneapi3tbb13tbb_allocatorneEbRK13tbb_allocatorI1TERK13tbb_allocatorI1UE", "oneapi::tbb::tbb_allocator::operator!=::U"], [803, 3, 1, "_CPPv4I00EN6oneapi3tbb13tbb_allocatoreqEbRK13tbb_allocatorI1TERK13tbb_allocatorI1UE", "oneapi::tbb::tbb_allocator::operator=="], [803, 8, 1, "_CPPv4I00EN6oneapi3tbb13tbb_allocatoreqEbRK13tbb_allocatorI1TERK13tbb_allocatorI1UE", "oneapi::tbb::tbb_allocator::operator==::T"], [803, 8, 1, "_CPPv4I00EN6oneapi3tbb13tbb_allocatoreqEbRK13tbb_allocatorI1TERK13tbb_allocatorI1UE", "oneapi::tbb::tbb_allocator::operator==::U"], [580, 3, 1, "_CPPv4cvbv", "operator bool"], [855, 3, 1, "_CPPv4NKcvbEv", "operator bool"], [585, 3, 1, "_CPPv4NKcv5splitEv", "operator split"], [799, 3, 1, "_CPPv4I00EnebRK23cache_aligned_allocatorI1TERK23cache_aligned_allocatorI1UE", "operator!="], [799, 8, 1, "_CPPv4I00EnebRK23cache_aligned_allocatorI1TERK23cache_aligned_allocatorI1UE", "operator!=::T"], [799, 8, 1, "_CPPv4I00EnebRK23cache_aligned_allocatorI1TERK23cache_aligned_allocatorI1UE", "operator!=::U"], [574, 3, 1, "_CPPv4I000Ean6filterI1T1UERK6filterI1T1VERK6filterI1V1UE", "operator&amp;"], [574, 8, 1, "_CPPv4I000Ean6filterI1T1UERK6filterI1T1VERK6filterI1V1UE", "operator&amp;::T"], [574, 8, 1, "_CPPv4I000Ean6filterI1T1UERK6filterI1T1VERK6filterI1V1UE", "operator&amp;::U"], [574, 8, 1, "_CPPv4I000Ean6filterI1T1UERK6filterI1T1VERK6filterI1V1UE", "operator&amp;::V"], [574, 4, 1, "_CPPv4I000Ean6filterI1T1UERK6filterI1T1VERK6filterI1V1UE", "operator&amp;::left"], [574, 4, 1, "_CPPv4I000Ean6filterI1T1UERK6filterI1T1VERK6filterI1V1UE", "operator&amp;::right"], [822, 3, 1, "_CPPv4mlRK5IndexRK5Index", "operator*"], [822, 4, 1, "_CPPv4mlRK5IndexRK5Index", "operator*::i"], [822, 4, 1, "_CPPv4mlRK5IndexRK5Index", "operator*::j"], [816, 3, 1, "_CPPv4plRK5Value1D", "operator+"], [822, 3, 1, "_CPPv4plRK5Index1D", "operator+"], [822, 3, 1, "_CPPv4plRK5IndexRK5Index", "operator+"], [822, 3, 1, "_CPPv4ppv", "operator++"], [816, 4, 1, "_CPPv4plRK5Value1D", "operator+::i"], [822, 4, 1, "_CPPv4plRK5Index1D", "operator+::i"], [822, 4, 1, "_CPPv4plRK5IndexRK5Index", "operator+::i"], [822, 4, 1, "_CPPv4plRK5IndexRK5Index", "operator+::j"], [816, 4, 1, "_CPPv4plRK5Value1D", "operator+::k"], [822, 4, 1, "_CPPv4plRK5Index1D", "operator+::k"], [816, 3, 1, "_CPPv4miRK5ValueRK5Value", "operator-"], [822, 3, 1, "_CPPv4miRK5IndexRK5Index", "operator-"], [816, 4, 1, "_CPPv4miRK5ValueRK5Value", "operator-::i"], [822, 4, 1, "_CPPv4miRK5IndexRK5Index", "operator-::i"], [816, 4, 1, "_CPPv4miRK5ValueRK5Value", "operator-::j"], [822, 4, 1, "_CPPv4miRK5IndexRK5Index", "operator-::j"], [822, 3, 1, "_CPPv4dvRK5IndexRK5Index", "operator/"], [822, 4, 1, "_CPPv4dvRK5IndexRK5Index", "operator/::i"], [822, 4, 1, "_CPPv4dvRK5IndexRK5Index", "operator/::j"], [815, 3, 1, "_CPPv4ltRK1TRK1T", "operator&lt;"], [816, 3, 1, "_CPPv4ltRK5ValueRK5Value", "operator&lt;"], [822, 3, 1, "_CPPv4ltRK5IndexRK5Index", "operator&lt;"], [816, 4, 1, "_CPPv4ltRK5ValueRK5Value", "operator&lt;::i"], [822, 4, 1, "_CPPv4ltRK5IndexRK5Index", "operator&lt;::i"], [816, 4, 1, "_CPPv4ltRK5ValueRK5Value", "operator&lt;::j"], [822, 4, 1, "_CPPv4ltRK5IndexRK5Index", "operator&lt;::j"], [815, 4, 1, "_CPPv4ltRK1TRK1T", "operator&lt;::x"], [815, 4, 1, "_CPPv4ltRK1TRK1T", "operator&lt;::y"], [822, 3, 1, "_CPPv4leRK5IndexRK5Index", "operator&lt;="], [822, 4, 1, "_CPPv4leRK5IndexRK5Index", "operator&lt;=::i"], [822, 4, 1, "_CPPv4leRK5IndexRK5Index", "operator&lt;=::j"], [816, 3, 1, "_CPPv4aSRK5Value", "operator="], [822, 3, 1, "_CPPv4aSRK5Index", "operator="], [855, 3, 1, "_CPPv4aSRR21task_scheduler_handle", "operator="], [855, 4, 1, "_CPPv4aSRR21task_scheduler_handle", "operator=::other"], [799, 3, 1, "_CPPv4I00EeqbRK23cache_aligned_allocatorI1TERK23cache_aligned_allocatorI1UE", "operator=="], [799, 8, 1, "_CPPv4I00EeqbRK23cache_aligned_allocatorI1TERK23cache_aligned_allocatorI1UE", "operator==::T"], [799, 8, 1, "_CPPv4I00EeqbRK23cache_aligned_allocatorI1TERK23cache_aligned_allocatorI1UE", "operator==::U"], [761, 3, 1, "_CPPv412output_portsv", "output_ports"], [852, 9, 1, "_CPPv4N9parameter23max_allowed_parallelismE", "parameter::max_allowed_parallelism"], [852, 9, 1, "_CPPv4N9parameter22terminate_on_exceptionE", "parameter::terminate_on_exception"], [852, 9, 1, "_CPPv4N9parameter17thread_stack_sizeE", "parameter::thread_stack_size"], [856, 9, 1, "_CPPv4N8priority4highE", "priority::high"], [856, 9, 1, "_CPPv4N8priority3lowE", "priority::low"], [856, 9, 1, "_CPPv4N8priority6normalE", "priority::normal"], [585, 3, 1, "_CPPv418proportional_splitNSt6size_tENSt6size_tE", "proportional_split"], [585, 4, 1, "_CPPv418proportional_splitNSt6size_tENSt6size_tE", "proportional_split::_left"], [585, 4, 1, "_CPPv418proportional_splitNSt6size_tENSt6size_tE", "proportional_split::_right"], [855, 3, 1, "_CPPv47releasev", "release"], [769, 3, 1, "_CPPv45reset11reset_flags", "reset"], [854, 3, 1, "_CPPv45resetv", "reset"], [769, 4, 1, "_CPPv45reset11reset_flags", "reset::f"], [585, 3, 1, "_CPPv4NK5rightEv", "right"], [798, 3, 1, "_CPPv424scalable_allocation_modei8intptr_t", "scalable_allocation_mode"], [798, 4, 1, "_CPPv424scalable_allocation_modei8intptr_t", "scalable_allocation_mode::mode"], [798, 4, 1, "_CPPv424scalable_allocation_modei8intptr_t", "scalable_allocation_mode::value"], [798, 3, 1, "_CPPv414scalable_msizePv", "scalable_msize"], [798, 4, 1, "_CPPv414scalable_msizePv", "scalable_msize::ptr"], [806, 7, 1, "_CPPv411scoped_lock", "scoped_lock"], [761, 3, 1, "_CPPv418set_external_portsRR16input_ports_typeRR17output_ports_type", "set_external_ports"], [761, 4, 1, "_CPPv418set_external_portsRR16input_ports_typeRR17output_ports_type", "set_external_ports::input_ports_tuple"], [761, 4, 1, "_CPPv418set_external_portsRR16input_ports_typeRR17output_ports_type", "set_external_ports::output_ports_tuple"], [565, 3, 1, "_CPPv4NK4sizeEv", "size"], [565, 5, 1, "_CPPv49size_type", "size_type"], [817, 3, 1, "_CPPv4NSt5beginE1c", "std::begin"], [817, 3, 1, "_CPPv4NSt3endE1c", "std::end"], [576, 3, 1, "_CPPv44stopv", "stop"], [815, 3, 1, "_CPPv44swapR1TR1T", "swap"], [815, 4, 1, "_CPPv44swapR1TR1T", "swap::x"], [815, 4, 1, "_CPPv44swapR1TR1T", "swap::y"], [792, 3, 1, "_CPPv4NK3tagEv", "tag"], [792, 3, 1, "_CPPv4I00E10tagged_msgRK1TRK1R", "tagged_msg"], [792, 8, 1, "_CPPv4I00E10tagged_msgRK1TRK1R", "tagged_msg::R"], [792, 8, 1, "_CPPv4I00E10tagged_msgRK1TRK1R", "tagged_msg::T"], [792, 4, 1, "_CPPv4I00E10tagged_msgRK1TRK1R", "tagged_msg::index"], [792, 4, 1, "_CPPv4I00E10tagged_msgRK1TRK1R", "tagged_msg::value"], [756, 3, 1, "_CPPv410task_arenaN10task_arena6attachE", "task_arena"], [856, 3, 1, "_CPPv410task_arena11constraintsj8priority", "task_arena"], [856, 3, 1, "_CPPv410task_arenaN6oneapi3tbb6attachE", "task_arena"], [856, 3, 1, "_CPPv410task_arenaRK10task_arena", "task_arena"], [856, 3, 1, "_CPPv410task_arenaij8priority", "task_arena"], [856, 4, 1, "_CPPv410task_arena11constraintsj8priority", "task_arena::a_priority"], [856, 4, 1, "_CPPv410task_arenaij8priority", "task_arena::a_priority"], [856, 4, 1, "_CPPv410task_arena11constraintsj8priority", "task_arena::constraints_"], [856, 4, 1, "_CPPv410task_arenaij8priority", "task_arena::max_concurrency"], [856, 4, 1, "_CPPv410task_arena11constraintsj8priority", "task_arena::reserved_slots"], [856, 4, 1, "_CPPv410task_arenaij8priority", "task_arena::reserved_slots"], [856, 3, 1, "_CPPv4N10task_arena8wait_forER10task_group", "task_arena::wait_for"], [856, 4, 1, "_CPPv4N10task_arena8wait_forER10task_group", "task_arena::wait_for::tg"], [854, 3, 1, "_CPPv418task_group_context6kind_t9uintptr_t", "task_group_context"], [854, 4, 1, "_CPPv418task_group_context6kind_t9uintptr_t", "task_group_context::relation_to_parent"], [854, 4, 1, "_CPPv418task_group_context6kind_t9uintptr_t", "task_group_context::traits"], [855, 3, 1, "_CPPv421task_scheduler_handleN6oneapi3tbb6attachE", "task_scheduler_handle"], [855, 3, 1, "_CPPv421task_scheduler_handleRR21task_scheduler_handle", "task_scheduler_handle"], [855, 3, 1, "_CPPv421task_scheduler_handlev", "task_scheduler_handle"], [855, 4, 1, "_CPPv421task_scheduler_handleRR21task_scheduler_handle", "task_scheduler_handle::other"], [857, 3, 1, "_CPPv423task_scheduler_observerR10task_arena", "task_scheduler_observer"], [857, 3, 1, "_CPPv423task_scheduler_observerv", "task_scheduler_observer"], [861, 3, 1, "_CPPv4NK3tbb11task_handlecvbEv", "tbb::task_handle::operator bool"], [861, 3, 1, "_CPPv4N3tbb11task_handleaSERR11task_handle", "tbb::task_handle::operator="], [861, 4, 1, "_CPPv4N3tbb11task_handleaSERR11task_handle", "tbb::task_handle::operator=::src"], [861, 3, 1, "_CPPv4N3tbb11task_handle11task_handleERR11task_handle", "tbb::task_handle::task_handle"], [861, 3, 1, "_CPPv4N3tbb11task_handle11task_handleEv", "tbb::task_handle::task_handle"], [861, 4, 1, "_CPPv4N3tbb11task_handle11task_handleERR11task_handle", "tbb::task_handle::task_handle::src"], [861, 3, 1, "_CPPv4N3tbb11task_handleD0Ev", "tbb::task_handle::~task_handle"], [858, 3, 1, "_CPPv4N3tbb15this_task_arena20current_thread_indexEv", "tbb::this_task_arena::current_thread_index"], [858, 3, 1, "_CPPv4I0EN3tbb15this_task_arena7enqueueEvRR1F", "tbb::this_task_arena::enqueue"], [858, 3, 1, "_CPPv4I0EN3tbb15this_task_arena7enqueueEvRR1FR10task_group", "tbb::this_task_arena::enqueue"], [858, 3, 1, "_CPPv4N3tbb15this_task_arena7enqueueERR11task_handle", "tbb::this_task_arena::enqueue"], [858, 8, 1, "_CPPv4I0EN3tbb15this_task_arena7enqueueEvRR1F", "tbb::this_task_arena::enqueue::F"], [858, 8, 1, "_CPPv4I0EN3tbb15this_task_arena7enqueueEvRR1FR10task_group", "tbb::this_task_arena::enqueue::F"], [858, 4, 1, "_CPPv4I0EN3tbb15this_task_arena7enqueueEvRR1F", "tbb::this_task_arena::enqueue::f"], [858, 4, 1, "_CPPv4I0EN3tbb15this_task_arena7enqueueEvRR1FR10task_group", "tbb::this_task_arena::enqueue::f"], [858, 4, 1, "_CPPv4N3tbb15this_task_arena7enqueueERR11task_handle", "tbb::this_task_arena::enqueue::h"], [858, 4, 1, "_CPPv4I0EN3tbb15this_task_arena7enqueueEvRR1FR10task_group", "tbb::this_task_arena::enqueue::tg"], [858, 3, 1, "_CPPv4I0EN3tbb15this_task_arena7isolateEDTcl1fEERR1F", "tbb::this_task_arena::isolate"], [858, 8, 1, "_CPPv4I0EN3tbb15this_task_arena7isolateEDTcl1fEERR1F", "tbb::this_task_arena::isolate::F"], [858, 4, 1, "_CPPv4I0EN3tbb15this_task_arena7isolateEDTcl1fEERR1F", "tbb::this_task_arena::isolate::f"], [858, 3, 1, "_CPPv4N3tbb15this_task_arena15max_concurrencyEv", "tbb::this_task_arena::max_concurrency"], [856, 3, 1, "_CPPv49terminatev", "terminate"], [854, 3, 1, "_CPPv4NK6traitsEv", "traits"], [854, 9, 1, "_CPPv4N11traits_type11fp_settingsE", "traits_type::fp_settings"], [759, 3, 1, "_CPPv47try_getR11output_type", "try_get"], [760, 3, 1, "_CPPv47try_getR1T", "try_get"], [772, 3, 1, "_CPPv47try_getR6Output", "try_get"], [759, 4, 1, "_CPPv47try_getR11output_type", "try_get::v"], [760, 4, 1, "_CPPv47try_getR1T", "try_get::v"], [772, 4, 1, "_CPPv47try_getR6Output", "try_get::v"], [806, 3, 1, "_CPPv48try_lockv", "try_lock"], [759, 3, 1, "_CPPv47try_putRK10input_type", "try_put"], [760, 3, 1, "_CPPv47try_putRK1T", "try_put"], [759, 4, 1, "_CPPv47try_putRK10input_type", "try_put::v"], [760, 4, 1, "_CPPv47try_putRK1T", "try_put::v"], [806, 3, 1, "_CPPv46unlockv", "unlock"], [800, 3, 1, "_CPPv4NK17upstream_resourceEv", "upstream_resource"], [769, 3, 1, "_CPPv412wait_for_allv", "wait_for_all"], [852, 3, 1, "_CPPv4D0v", "~global_control"], [769, 3, 1, "_CPPv4D0v", "~graph"], [806, 3, 1, "_CPPv4D0v", "~null_mutex"], [856, 3, 1, "_CPPv4D0v", "~task_arena"], [854, 3, 1, "_CPPv4D0v", "~task_group_context"], [855, 3, 1, "_CPPv4D0v", "~task_scheduler_handle"], [857, 3, 1, "_CPPv4D0v", "~task_scheduler_observer"]], "scalable_allocation_command": [[798, 2, 1, "c.scalable_allocation_command", "cmd"], [798, 2, 1, "c.scalable_allocation_command", "reserved"]]}, "objtypes": {"0": "c:macro", "1": "c:function", "2": "c:functionParam", "3": "cpp:function", "4": "cpp:functionParam", "5": "cpp:type", "6": "cpp:member", "7": "cpp:class", "8": "cpp:templateParam", "9": "cpp:enum", "10": "cpp:enumerator"}, "objnames": {"0": ["c", "macro", "C macro"], "1": ["c", "function", "C function"], "2": ["c", "functionParam", "C function parameter"], "3": ["cpp", "function", "C++ function"], "4": ["cpp", "functionParam", "C++ function parameter"], "5": ["cpp", "type", "C++ type"], "6": ["cpp", "member", "C++ member"], "7": ["cpp", "class", "C++ class"], "8": ["cpp", "templateParam", "C++ template parameter"], "9": ["cpp", "enum", "C++ enum"], "10": ["cpp", "enumerator", "C++ enumerator"]}, "titleterms": {"softwar": 0, "architectur": [0, 184], "oneapi": [0, 5, 38, 43, 457, 465, 590, 875], "platform": 0, "api": [0, 58, 60, 149, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 182, 184, 252, 254], "program": [0, 6, 19, 20, 22, 25, 29, 34, 35, 37, 38, 41, 42, 50, 149], "exampl": [0, 19, 20, 22, 25, 34, 35, 37, 38, 40, 49, 56, 152, 153, 157, 180, 372, 418, 463, 566, 570, 572, 573, 577, 578, 757, 763, 765, 767, 768, 778, 780, 782, 784, 785, 790, 793, 853, 855, 856, 857], "direct": 0, "definit": [2, 29, 39, 51, 63, 159, 181, 263, 876], "oneccl": [3, 12, 17], "introduct": [4, 45, 151, 796, 876], "namespac": [5, 31, 151, 174, 184, 590, 795], "ccl": 5, "model": [6, 19, 22, 25, 50, 56, 57, 61, 62, 149, 184, 372, 418, 463, 841, 842], "collect": 7, "oper": [7, 12, 13, 14, 15, 19, 20, 22, 25, 38, 39, 51, 52, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 181, 262, 596, 605, 617, 619, 632, 646, 659, 667, 675, 689, 691, 704, 718, 732, 746, 755, 866], "allgath": 7, "allgatherv": 7, "allreduc": 7, "alltoallv": 7, "barrier": 7, "broadcast": [7, 114, 115], "reduc": 7, "reducescatt": 7, "point": [7, 48, 152], "To": 7, "send": 7, "recv": 7, "datatyp": [8, 184], "custom": [8, 180], "error": [9, 30, 149, 151, 152, 184], "handl": [9, 30, 149, 151, 152, 184, 424, 593], "except": [9, 30, 184, 557, 744], "classif": [9, 25, 30, 184], "common": [9, 29, 32, 43, 63, 159, 184], "gener": [10, 51, 149, 151, 174, 182, 265, 350, 358, 359, 372, 373, 377, 378, 391, 421, 423, 846], "workflow": [10, 54, 56], "group": [11, 81, 152, 157, 850], "call": 11, "group_start": 11, "group_end": 11, "concept": [12, 40], "devic": [12, 179, 180, 184, 348, 350, 359, 372, 373, 374], "context": 12, "kei": [12, 40, 604], "valu": [12, 296, 546, 604, 610, 627, 641, 655, 684, 699, 713, 727, 741], "store": [12, 593], "commun": [12, 15], "split": [12, 561, 585, 586], "stream": [12, 61, 149], "event": [12, 14], "attribut": [12, 13, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "progress": 14, "track": 14, "reduct": [16, 167], "current": [17, 33], "version": [17, 33, 174, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 266, 268, 269, 272, 274, 276, 277, 280, 281, 284, 285, 288, 290, 292, 294, 297, 299, 300, 303, 305, 307, 309, 311, 312, 315, 317, 318, 321, 323, 325, 327, 329, 331, 333, 334, 337, 339, 341, 343, 391, 426, 427, 428, 429, 433, 434, 435, 436, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 591], "thi": [17, 33], "specif": [17, 33, 53, 184, 875, 876], "cluster": 18, "k": [19, 20, 25, 27], "mean": [19, 20, 162, 445, 447, 450, 453, 462, 465], "mathemat": [19, 20, 22, 25, 46, 558], "formul": [19, 20, 22, 25], "train": [19, 22, 25, 52, 154, 157, 158, 161, 162, 165, 166, 169, 171, 172], "method": [19, 20, 22, 25, 48, 349, 376], "lloyd": 19, "": 19, "infer": [19, 22, 25, 52, 154, 157, 158, 161, 162, 165, 166, 169, 171, 172], "usag": [19, 20, 22, 25, 34, 35, 37, 38, 184, 261, 263, 372, 418, 463], "interfac": [19, 20, 22, 25, 29, 32, 34, 35, 37, 38, 41, 42, 413, 688, 703, 717, 731, 757, 798, 844, 845, 848], "descriptor": [19, 20, 22, 25, 48, 60, 159, 260, 262], "tag": [19, 20, 22, 25, 58, 561, 851], "task": [19, 20, 22, 25, 48, 815, 850, 853], "input": [19, 20, 22, 25, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], "result": [19, 20, 22, 25, 39, 51], "initi": 20, "comput": [20, 47, 48, 52], "dens": [20, 265, 424], "decomposit": 21, "princip": 22, "compon": 22, "analysi": 22, "pca": 22, "covari": 22, "svd": 22, "sign": 22, "flip": 22, "techniqu": 22, "algorithm": [23, 157, 177, 181, 182, 561, 815], "nearest": [24, 25, 169], "neighbor": [24, 25, 169], "knn": 24, "nn": 25, "brute": 25, "forc": 25, "d": [25, 27], "tree": [25, 27], "appendix": [26, 183], "relat": [27, 152, 264], "term": [27, 43], "bibliographi": [28, 346, 481], "type": [29, 36, 39, 42, 48, 55, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 179, 180, 264, 386, 443, 562, 563, 564, 756, 757, 758, 771, 774, 779, 795, 850, 851, 852, 854, 856, 864], "scalar": [29, 372, 466], "enum": [29, 63], "class": [29, 159, 179, 262, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 419, 420, 566, 570, 573, 578, 592, 593, 594, 595, 603, 604, 616, 630, 631, 644, 645, 658, 666, 674, 687, 702, 716, 730, 744, 757, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 873, 874], "data": [29, 37, 38, 39, 40, 42, 55, 57, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 259, 260, 263, 424], "rang": [29, 181, 263, 561, 613, 626, 640, 654, 683, 698, 712, 726, 740, 753, 829], "header": [31, 174], "file": [31, 174], "oned": [33, 43, 44], "column": 34, "accessor": [34, 35, 36, 40, 604], "row": 35, "requir": [36, 37, 42, 180, 744, 815, 841, 842], "detail": [36, 39, 40, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "arrai": 37, "ownership": 37, "implement": [37, 150], "note": [37, 149, 150, 151], "csv": 38, "sourc": [38, 39, 40, 150, 154, 162, 163, 165, 166, 172, 173], "read": [38, 39], "dal": 38, "object": [38, 40, 60, 63, 178, 182, 630, 644], "arg": [38, 39, 472], "shortcut": [39, 51], "manag": [40, 152, 261], "dataset": [40, 448], "tabl": [40, 41, 42, 263], "metadata": [40, 42], "interact": 40, "between": [40, 154, 157, 158, 161, 162, 165, 166, 169, 171, 172], "homogen": 41, "layout": [42, 171, 259], "featur": [42, 184, 588, 589], "glossari": 43, "machin": 43, "learn": 43, "notat": [46, 53, 546, 849], "mode": [47, 152], "batch": [47, 154], "onlin": 47, "distribut": [47, 348, 349, 375, 376], "float": [48, 152], "end": [49, 90, 608, 620, 634, 648, 677, 688, 693, 703, 707, 717, 721, 731, 735, 749], "support": [51, 52, 54, 56, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 182, 443], "convent": [53, 849], "variabl": [53, 591], "tensor": [53, 63, 149, 154], "name": [53, 815], "rnn": [53, 170], "bfloat16": 54, "int8": 56, "quantiz": [56, 117, 152], "numer": 56, "behavior": 56, "convolut": [56, 81, 152, 157], "per": [56, 152], "channel": [56, 152], "scale": [56, 152, 162], "memori": [58, 59, 60, 181, 184, 797], "format": [58, 425], "plain": 58, "optim": 58, "ani": 58, "propag": 58, "execut": [61, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 179, 184], "engin": [61, 149, 347, 350, 354, 377], "low": 62, "precis": [62, 264], "logic": [63, 149], "kind": 63, "graph": [63, 64, 149, 151, 757, 765, 769, 778, 815], "member": [63, 184, 262, 562, 563, 564, 565, 567, 568, 574, 576, 580, 585, 593, 594, 595, 599, 600, 601, 602, 603, 604, 611, 612, 613, 616, 622, 623, 624, 626, 630, 631, 636, 637, 638, 640, 644, 645, 650, 651, 652, 654, 658, 661, 662, 666, 670, 671, 672, 673, 674, 679, 680, 681, 683, 687, 695, 696, 698, 702, 709, 710, 712, 716, 723, 724, 726, 730, 737, 738, 740, 744, 750, 751, 752, 753, 756, 758, 759, 760, 761, 763, 767, 769, 771, 772, 774, 776, 779, 782, 784, 785, 790, 791, 792, 793, 799, 800, 801, 803, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 852, 854, 855, 856, 857, 859, 860, 861, 863, 864, 871, 874], "function": [63, 170, 179, 182, 184, 257, 258, 262, 263, 558, 559, 561, 562, 563, 564, 565, 567, 568, 574, 576, 580, 585, 591, 593, 594, 595, 601, 602, 603, 604, 613, 616, 626, 630, 631, 640, 644, 645, 654, 658, 666, 672, 673, 674, 683, 687, 698, 702, 712, 716, 726, 730, 740, 744, 753, 756, 757, 758, 759, 760, 761, 763, 767, 768, 769, 771, 772, 774, 776, 779, 782, 784, 785, 790, 791, 792, 793, 795, 797, 799, 800, 801, 803, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 852, 854, 855, 856, 857, 859, 861, 863, 864, 871, 874], "macro": [63, 588, 589, 591], "specifi": 63, "unknown": 63, "shape": 63, "extens": [64, 151, 182, 193, 296], "ab": [65, 467], "argument": [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 466], "output": [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152], "absbackward": 66, "add": [67, 471], "avgpool": 68, "avgpoolbackward": 69, "batchnormforwardtrain": 70, "batchnorminfer": 71, "batchnormtrainingbackward": 72, "biasadd": 73, "biasaddbackward": 74, "clamp": 75, "clampbackward": 76, "concat": [77, 156], "convtranspos": 78, "convtransposebackwarddata": 79, "convtransposebackwardweight": 80, "regular": [81, 157], "dilat": [81, 157], "convolutionbackwarddata": 82, "convolutionbackwardweight": 83, "dequant": 84, "divid": 85, "dynamicdequant": 86, "dynamicquant": 87, "elu": 88, "elubackward": 89, "exp": [91, 500], "gelu": 92, "gelubackward": 93, "hardsigmoid": 94, "hardsigmoidbackward": 95, "hardswish": 96, "hardswishbackward": 97, "interpol": 98, "interpolatebackward": 99, "layernorm": 100, "layernormbackward": 101, "leakyrelu": 102, "log": 103, "logsoftmax": 104, "logsoftmaxbackward": 105, "matmul": 106, "maxpool": 107, "maxpoolbackward": 108, "maximum": [109, 181], "minimum": [110, 181], "mish": 111, "mishbackward": 112, "multipli": 113, "prelu": [114, 166], "rule": [114, 115], "prelubackward": 115, "pow": [116, 531], "relu": [118, 153], "relubackward": 119, "reciproc": 120, "reducel1": 121, "reducel2": 122, "reducemax": 123, "reducemean": 124, "reducemin": 125, "reduceprod": 126, "reducesum": 127, "reorder": [128, 168, 181], "round": [129, 538], "select": 130, "sigmoid": 131, "sigmoidbackward": 132, "softplu": 133, "softplusbackward": 134, "softmax": [135, 172], "softmaxbackward": 136, "sqrt": [137, 548], "sqrtbackward": 138, "squar": 139, "squareddiffer": 140, "staticreshap": 141, "statictranspos": 142, "subtract": 143, "tanh": [144, 552], "tanhbackward": 145, "typecast": 146, "wildcard": 147, "set": [148, 181], "partit": [149, 181, 413], "compil": 149, "onednn": 150, "open": 150, "test": 150, "scratchpad": 152, "librari": [152, 182, 797], "user": [152, 180], "zero": 152, "1": [152, 157, 190], "weight": 152, "2": [152, 157, 191], "implicit": 152, "downconvers": 152, "math": [152, 265, 457, 465, 556], "post": [153, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 184], "op": [153, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwis": 153, "sum": [153, 173], "binari": [153, 155, 599, 611, 622, 636, 650, 661, 670, 679, 695, 709, 723, 737, 750], "chain": 153, "normal": [154, 159, 162, 163], "forward": [154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 169, 171, 172, 766], "differ": [154, 157, 158, 161, 162, 165, 166, 169, 171, 172], "backward": [154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 169, 171, 172, 263], "represent": [154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173], "destin": [154, 162, 163, 165, 166, 172, 173], "Their": [154, 162, 163, 165, 166, 172], "gradient": [154, 162, 163, 165, 166, 172], "statist": [154, 265, 456, 459, 463], "deconvolut": 157, "transpos": 157, "elementwis": 158, "base": [159, 418, 463], "primit": [159, 160], "enumer": [159, 264, 574, 769, 788], "flag": 159, "indic": [159, 263], "inner": 161, "product": 161, "layer": 162, "varianc": 162, "shift": 162, "local": [163, 862], "respons": 163, "matrix": [164, 345, 424, 437, 438], "multipl": 164, "pool": 165, "resampl": 169, "bilinear": 169, "cell": 170, "vanilla": 170, "lstm": 170, "peephol": 170, "project": 170, "gru": 170, "linear": [170, 265, 296], "befor": 170, "reset": 170, "augru": 170, "shuffl": 171, "inform": [174, 591, 846], "onedpl": [175, 180], "parallel": [176, 177, 181, 561, 613, 626, 640, 654, 683, 698, 712, 726, 740, 753], "addit": [177, 263], "buffer": [178, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 266, 268, 269, 272, 274, 276, 277, 280, 281, 284, 285, 288, 290, 292, 294, 297, 299, 300, 303, 305, 307, 309, 311, 312, 315, 317, 318, 321, 323, 325, 327, 329, 331, 333, 334, 337, 339, 341, 343, 391, 418, 426, 427, 428, 429, 433, 434, 435, 436, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 464, 465, 757, 766], "wrapper": 178, "posit": 178, "polici": [179, 180, 607, 692, 706, 720, 734, 768, 775], "c": [179, 182, 184, 798], "standard": [179, 182, 184], "align": 179, "device_polici": 179, "predefin": [179, 783], "make_device_polici": 179, "trait": [179, 180], "iter": [180, 598, 608, 613, 620, 626, 634, 640, 648, 654, 669, 677, 683, 693, 698, 707, 712, 721, 726, 735, 740, 749, 753, 867], "For": 180, "us": [180, 184], "With": 180, "indirect": 180, "access": [180, 593, 604, 619, 691, 748], "other": [180, 184, 595, 603, 616, 631, 645, 658, 666, 674, 687, 702, 716, 730, 744], "defin": [180, 184], "auxiliari": [181, 592, 844], "whole": 181, "sequenc": [181, 592, 596, 605, 610, 617, 627, 629, 632, 641, 643, 646, 655, 657, 659, 667, 675, 684, 686, 689, 699, 701, 704, 713, 715, 718, 727, 729, 732, 741, 743, 746, 840], "element": [181, 413, 593, 596, 601, 602, 605, 610, 617, 619, 627, 629, 632, 641, 643, 646, 655, 657, 659, 663, 667, 672, 673, 675, 684, 686, 689, 691, 699, 701, 704, 713, 715, 718, 727, 729, 732, 741, 743, 746, 748], "search": 181, "comparison": [181, 599, 611, 622, 623, 636, 637, 650, 651, 661, 670, 679, 680, 695, 709, 723, 737, 750, 751], "sort": [181, 437], "merg": [181, 641, 655, 684, 713, 727, 741], "heap": 181, "copi": [181, 194, 596, 605, 617, 632, 646, 659, 667, 675, 689, 704, 718, 732, 746, 866], "mutat": 181, "In": [181, 252, 254], "place": [181, 252, 254], "uniniti": 181, "sycl": 182, "kernel": 182, "random": [182, 265, 350, 372, 373, 377, 421, 423], "number": [182, 265, 350, 372, 373, 377, 413, 421, 423, 602, 673, 688, 703, 717, 731], "limit": [182, 783], "onemath": [183, 184, 265, 372, 418, 463, 560], "futur": 183, "consider": 183, "acknowledg": 183, "queue": [184, 592, 601, 768], "non": [184, 574, 595, 599, 600, 603, 611, 612, 616, 622, 623, 624, 631, 636, 637, 638, 645, 650, 651, 652, 658, 661, 662, 666, 670, 671, 674, 679, 680, 681, 687, 695, 696, 702, 709, 710, 716, 723, 724, 730, 737, 738, 744, 750, 751, 752, 774, 792, 799, 801, 803, 855, 856, 859, 861, 864, 871, 874], "asynchron": 184, "synchron": 184, "when": 184, "usm": [184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 266, 268, 269, 272, 274, 276, 277, 280, 281, 284, 285, 288, 290, 292, 294, 297, 299, 300, 303, 305, 307, 309, 311, 312, 315, 317, 318, 321, 323, 325, 327, 329, 331, 333, 334, 337, 339, 341, 343, 391, 418, 426, 427, 428, 429, 433, 434, 435, 436, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 461, 462, 463, 464, 465], "host": [184, 375, 377, 378, 418, 421, 422], "thread": [184, 862, 872], "safeti": [184, 744, 872], "The": [184, 257, 258, 262, 602, 673, 688, 703, 717, 731], "unifi": 184, "share": 184, "design": 184, "dpc": 184, "lapack": [184, 296], "complianc": 184, "pre": 184, "condit": 184, "check": 184, "asum": 185, "axpbi": 186, "axpi": 187, "axpy_batch": 188, "bla": [189, 190, 191, 192, 193, 442, 466], "routin": [189, 190, 191, 192, 296, 359, 373, 374, 378, 421, 422, 459, 460], "level": [190, 191, 192], "3": 192, "like": [193, 296], "copy_batch": 195, "dgmm_batch": 196, "dot": 197, "dotc": 198, "dotu": 199, "gbmv": 200, "gemm": 201, "gemm_batch": 202, "gemm_bia": 203, "gemmt": 204, "gemv": 205, "gemv_batch": 206, "ger": 207, "gerc": 208, "geru": 209, "hbmv": 210, "hemm": 211, "hemv": 212, "her": 213, "her2": 214, "her2k": 215, "herk": 216, "hpmv": 217, "hpr": 218, "hpr2": 219, "iamax": 220, "iamin": 221, "imatcopi": 222, "imatcopy_batch": 223, "nrm2": 224, "omatadd": 225, "omatadd_batch": 226, "omatcopi": 227, "omatcopy2": 228, "omatcopy_batch": 229, "rot": 230, "rotg": 231, "rotm": 232, "rotmg": 233, "sbmv": 234, "scal": 235, "sdsdot": 236, "spmv": [237, 440], "spr": 238, "spr2": 239, "swap": [240, 593, 600, 602, 612, 615, 624, 629, 638, 643, 652, 657, 662, 665, 671, 673, 681, 686, 696, 701, 710, 715, 724, 729, 738, 743, 752, 755], "symm": 241, "symv": 242, "syr": 243, "syr2": 244, "syr2k": 245, "syrk": 246, "syrk_batch": 247, "tbmv": 248, "tbsv": 249, "tpmv": 250, "tpsv": 251, "trmm": 252, "out": [252, 254], "trmv": 253, "trsm": 254, "trsm_batch": 255, "trsv": 256, "compute_backward": 257, "templat": [257, 258, 262, 349, 376, 443, 573, 594, 595, 603, 616, 631, 645, 658, 666, 674, 687, 702, 716, 730, 744], "compute_forward": 258, "configur": [259, 587], "storag": [260, 345, 425, 862], "complex": 260, "real": [260, 263], "workspac": 261, "placement": 261, "automat": 261, "extern": 261, "typic": 261, "descript": [262, 687, 702, 716, 730, 744], "constructor": [262, 593, 596, 605, 617, 632, 646, 659, 667, 675, 689, 704, 718, 732, 746, 866], "assign": [262, 593, 596, 605, 617, 632, 646, 659, 667, 675, 689, 704, 718, 732, 746, 866], "set_valu": 262, "get_valu": 262, "set_workspac": 262, "commit": 262, "discret": [263, 265, 371, 416], "fourier": [263, 265], "transform": [263, 265], "elementari": 263, "constraint": 263, "domain": [263, 264, 265], "dft": [263, 264], "recommend": 263, "summari": [263, 265, 456, 459, 463, 766], "scope": 264, "config_param": 264, "config_valu": 264, "algebra": 265, "spars": [265, 424, 425, 442], "vector": [265, 372, 424, 556], "gebrd": 266, "gebrd_scratchpad_s": 267, "geqrf": 268, "geqrf_batch": 269, "geqrf_batch_scratchpad_s": 270, "geqrf_scratchpad_s": 271, "gerqf": 272, "gerqf_scratchpad_s": 273, "gesvd": 274, "gesvd_scratchpad_s": 275, "getrf": 276, "getrf_batch": 277, "getrf_batch_scratchpad_s": 278, "getrf_scratchpad_s": 279, "getri": 280, "getri_batch": 281, "getri_batch_scratchpad_s": 282, "getri_scratchpad_s": 283, "getr": 284, "getrs_batch": 285, "getrs_batch_scratchpad_s": 286, "getrs_scratchpad_s": 287, "heevd": 288, "heevd_scratchpad_s": 289, "hegvd": 290, "hegvd_scratchpad_s": 291, "hetrd": 292, "hetrd_scratchpad_s": 293, "hetrf": 294, "hetrf_scratchpad_s": 295, "equat": 296, "singular": 296, "eigenvalu": 296, "problem": 296, "orgbr": 297, "orgbr_scratchpad_s": 298, "orgqr": 299, "orgqr_batch": 300, "orgqr_batch_scratchpad_s": 301, "orgqr_scratchpad_s": 302, "orgtr": 303, "orgtr_scratchpad_s": 304, "ormqr": 305, "ormqr_scratchpad_s": 306, "ormrq": 307, "ormrq_scratchpad_s": 308, "ormtr": 309, "ormtr_scratchpad_s": 310, "potrf": 311, "potrf_batch": 312, "potrf_batch_scratchpad_s": 313, "potrf_scratchpad_s": 314, "potri": 315, "potri_scratchpad_s": 316, "potr": 317, "potrs_batch": 318, "potrs_batch_scratchpad_s": 319, "potrs_scratchpad_s": 320, "syevd": 321, "syevd_scratchpad_s": 322, "sygvd": 323, "sygvd_scratchpad_s": 324, "sytrd": 325, "sytrd_scratchpad_s": 326, "sytrf": 327, "sytrf_scratchpad_s": 328, "trtr": 329, "trtrs_scratchpad_s": 330, "ungbr": 331, "ungbr_scratchpad_s": 332, "ungqr": 333, "ungqr_batch": 334, "ungqr_batch_scratchpad_s": 335, "ungqr_scratchpad_s": 336, "ungtr": 337, "ungtr_scratchpad_s": 338, "unmqr": 339, "unmqr_scratchpad_s": 340, "unmrq": 341, "unmrq_scratchpad_s": 342, "unmtr": 343, "unmtr_scratchpad_s": 344, "adaptor": [347, 354], "paramet": [349, 376], "basic": [350, 377], "bernoulli": [351, 380], "beta": [352, 381], "bit": [353, 383], "count": [354, 609, 621, 635, 649, 678, 694, 708, 722, 736], "count_engine_adaptor": 354, "exponenti": [355, 387], "gamma": [356, 388], "gaussian": [357, 389], "geometr": [360, 392], "lognorm": [361, 397], "mcg31m1": [362, 398], "mcg59": [363, 399], "mrg32k3a": [364, 400], "pcg64_dxsm": 365, "philox4x32x10": [366, 407], "poisson": [367, 408], "skip_ahead": [368, 413], "uniform_bit": [369, 417], "uniform": [370, 371, 415, 416], "continu": [370, 415], "rng": [372, 418, 423], "servic": [374, 422, 460, 559, 757], "ars5": 379, "binomi": 382, "cauchi": 384, "chi_squar": 385, "default_engin": 386, "alia": 386, "gaussian_mv": 390, "gumbel": 393, "hypergeometr": 394, "laplac": 395, "leapfrog": 396, "mt19937": 401, "mt2203": 402, "multinomi": 403, "negative_binomi": 404, "niederreit": 405, "nondeterminist": 406, "poisson_v": 409, "r250": 410, "rayleigh": 411, "sfmt19937": 412, "skip": 413, "sobol": 414, "weibul": 419, "wichmann_hil": 420, "init_coo_matrix": 426, "init_csr_matrix": 427, "init_dense_matrix": 428, "init_dense_vector": 429, "release_dense_matrix": 430, "release_dense_vector": 431, "release_sparse_matrix": 432, "set_coo_matrix_data": 433, "set_csr_matrix_data": 434, "set_dense_matrix_data": 435, "set_dense_vector_data": 436, "set_matrix_properti": 437, "properti": [437, 757, 766], "symmetr": 437, "sorted_by_row": 437, "view": 438, "matrix_descr": 438, "matrix_view": 438, "spmm": 439, "spmm_descr": 439, "init_spmm_descr": 439, "release_spmm_descr": 439, "spmm_alg": 439, "spmv_descr": 440, "init_spmv_descr": 440, "release_spmv_descr": 440, "spmv_alg": 440, "spsv": 441, "spsv_descr": 441, "init_spsv_descr": 441, "release_spsv_descr": 441, "spsv_alg": 441, "central_mo": [444, 445], "provid": [445, 447, 450, 462, 465, 841, 842], "central_sum": [446, 447], "structur": 448, "kurtosi": [449, 450], "make_dataset": 451, "max": 452, "min": 454, "min_max": 455, "raw_moment": 457, "stat": [457, 465], "raw_sum": 458, "skew": [461, 462], "variat": [464, 465], "aco": 468, "acosh": 469, "acospi": 470, "asin": 473, "asinh": 474, "asinpi": 475, "atan": 476, "atan2": 477, "atan2pi": 478, "atanh": 479, "atanpi": 480, "cbrt": 482, "cdfnorm": 483, "cdfnorminv": 484, "ceil": 485, "ci": 486, "clear_statu": 487, "conj": 488, "copysign": 489, "co": 490, "cosd": 491, "cosh": 492, "cospi": 493, "create_error_handl": 494, "div": 495, "erf": 496, "erfc": 497, "erfcinv": 498, "erfinv": 499, "exp10": 501, "exp2": 502, "expint1": 503, "expm1": 504, "fdim": 505, "floor": 506, "fmax": 507, "fmin": 508, "fmod": 509, "frac": 510, "get_mod": 511, "get_statu": 512, "hypot": 513, "inv": 514, "invcbrt": 515, "invsqrt": 516, "lgamma": 517, "linearfrac": 518, "ln": 519, "log10": 520, "log1p": 521, "log2": 522, "logb": 523, "maxmag": 524, "minmag": 525, "modf": 526, "mul": 527, "mulbyconj": 528, "nearbyint": 529, "nextaft": 530, "pow2o3": 532, "pow3o2": 533, "powr": 534, "powx": 535, "remaind": 536, "rint": 537, "set_statu": 539, "set_mod": 540, "sin": 541, "sinco": 542, "sind": 543, "sinh": 544, "sinpi": 545, "special": [546, 757], "sqr": 547, "sub": 549, "tan": 550, "tand": 551, "tanpi": 553, "tgamma": 554, "trunc": 555, "vm": [558, 559], "block": 561, "partition": 561, "blocked_nd_rang": 562, "deduct": [562, 574, 597, 606, 618, 633, 647, 660, 668, 676, 690, 705, 719, 733, 747, 763, 767, 772, 774, 790], "guid": [562, 574, 597, 606, 618, 633, 647, 660, 668, 676, 690, 705, 719, 733, 747, 763, 767, 772, 774, 790], "blocked_range2d": 563, "blocked_range3d": 564, "blocked_rang": 565, "collaborative_call_onc": 566, "collaborative_once_flag": [566, 567], "feeder": [568, 570], "parallel_deterministic_reduc": 569, "parallel_for_each": 570, "parallel_for": 571, "parallel_invok": 572, "parallel_pipelin": 573, "filter": [573, 574], "flow_control": [573, 576], "filter_mod": [574, 575], "parallel_reduc": 577, "imper": [577, 578], "form": [577, 578], "lambda": [577, 578], "express": [577, 578], "parallel_scan": 578, "pre_scan": 578, "final_scan": 578, "parallel_sort": 579, "pre_scan_tag": 580, "final_scan_tag": 580, "affinity_partition": 581, "auto_partition": 582, "simple_partition": 583, "static_partition": 584, "proport": 585, "enabl": 588, "debug": 588, "tbb_use_assert": 588, "tbb_use_profiling_tool": 588, "tbb_use_except": 589, "tbb_use_glibcxx_vers": 589, "tbb": 590, "flow": [590, 757, 765, 778, 815], "tbb_runtime_interface_vers": 591, "tbb_runtime_vers": 591, "tbb_version": 591, "environ": 591, "contain": [592, 596, 605, 617, 621, 632, 635, 641, 646, 649, 655, 659, 667, 675, 678, 684, 689, 694, 704, 708, 713, 718, 722, 727, 732, 736, 741, 746, 815, 866], "unord": 592, "associ": 592, "order": 592, "node": [593, 627, 629, 641, 643, 655, 657, 684, 686, 699, 701, 713, 715, 727, 729, 741, 743, 757, 768, 780], "synopsi": [593, 594, 595, 603, 616, 630, 631, 644, 645, 658, 666, 674, 687, 702, 716, 730, 744], "destructor": [593, 596, 605, 617, 632, 646, 659, 667, 675, 689, 704, 718, 732, 746, 866], "state": 593, "get_alloc": [593, 601, 605, 625, 639, 653, 672, 682, 697, 711, 725, 739, 746], "tbb_hash_compar": 594, "concurrent_bounded_queu": 595, "construct": [596, 604, 605, 617, 632, 646, 659, 667, 675, 689, 704, 718, 732, 746, 866], "destruct": [596, 604, 605, 617, 632, 646, 659, 667, 675, 689, 704, 718, 732, 746, 866], "empti": [596, 604, 605, 614, 617, 628, 632, 642, 646, 656, 659, 664, 667, 675, 685, 689, 700, 704, 714, 718, 728, 732, 742, 746, 754, 866], "from": [596, 605, 617, 632, 646, 659, 667, 675, 689, 704, 718, 732, 746], "move": [596, 605, 617, 632, 646, 659, 667, 675, 689, 704, 718, 732, 746, 866], "unsafe_begin": [598, 669], "unsafe_cbegin": [598, 669], "unsafe_end": [598, 669], "unsafe_cend": [598, 669], "concurr": [601, 602, 610, 615, 627, 629, 641, 643, 655, 657, 663, 665, 672, 673, 684, 686, 699, 701, 713, 715, 727, 729, 741, 743, 745, 755, 783, 868, 870], "safe": [601, 610, 627, 641, 655, 663, 672, 684, 699, 713, 727, 741, 868], "push": [601, 663, 672], "pop": [601, 663, 672], "abort": 601, "capac": [601, 614, 628, 642, 656, 664, 685, 700, 714, 728, 742, 754, 869], "unsaf": [602, 615, 629, 643, 657, 665, 673, 686, 701, 715, 729, 743, 755, 870], "clear": [602, 615, 629, 643, 657, 665, 673, 686, 701, 715, 729, 743, 755, 870], "concurrent_hash_map": 603, "const_accessor": 604, "pair": 604, "releas": 604, "hash": [607, 692, 706, 720, 734], "rehash": [607, 692, 706, 720, 734], "bucket_count": 607, "begin": [608, 620, 634, 648, 677, 688, 693, 703, 707, 717, 721, 731, 735, 749], "cbegin": [608, 620, 634, 648, 677, 693, 707, 721, 735, 749], "cend": [608, 620, 634, 648, 677, 693, 707, 721, 735, 749], "equal_rang": [608, 621, 635, 649, 678, 694, 708, 722, 736], "lookup": [609, 621, 635, 649, 678, 694, 708, 722, 736], "find": [609, 621, 635, 649, 678, 694, 708, 722, 736], "modifi": [610, 615, 627, 629, 641, 643, 655, 657, 663, 665, 684, 686, 699, 701, 713, 715, 727, 729, 741, 743, 868, 870], "insert": [610, 627, 641, 655, 684, 699, 713, 727, 741], "emplac": [610, 627, 641, 655, 684, 699, 713, 727, 741], "eras": [610, 629, 643, 657, 686, 701, 715, 729, 743], "size": [614, 628, 642, 656, 664, 685, 688, 700, 703, 714, 717, 728, 731, 742, 754, 869], "max_siz": [614, 628, 642, 656, 685, 700, 714, 728, 742, 754], "concurrent_map": 616, "lower_bound": [621, 635, 649, 678], "upper_bound": [621, 635, 649, 678], "lexicograph": [623, 637, 651, 680, 751], "observ": [625, 639, 653, 682, 697, 711, 725, 739], "key_comp": [625, 639, 653, 682], "value_comp": [625, 639, 653, 682], "extract": [629, 643, 657, 686, 701, 715, 729, 743], "value_compar": [630, 644], "concurrent_multimap": 631, "concurrent_multiset": 645, "concurrent_priority_queu": 658, "concurrent_queu": 666, "concurrent_set": 674, "concurrent_unordered_map": 687, "bucket": [688, 703, 717, 731], "load": [692, 706, 720, 734], "factor": [692, 706, 720, 734], "manual": [692, 706, 720, 734], "hash_funct": [697, 711, 725, 739], "key_eq": [697, 711, 725, 739], "concurrent_unordered_multimap": 702, "concurrent_unordered_multiset": 716, "concurrent_unordered_set": 730, "concurrent_vector": 744, "growth": 745, "grow_bi": 745, "grow_to_at_least": 745, "push_back": 745, "emplace_back": 745, "index": 748, "first": 748, "last": 748, "rbegin": 749, "crbegin": 749, "rend": 749, "crend": 749, "reserv": [755, 794], "resiz": 755, "shrink_to_fit": 755, "task_arena": [756, 856], "attach": [756, 851], "constant": [756, 852, 854, 856, 860, 864], "abstract": 757, "port": 757, "edg": 757, "messag": [757, 778], "async_nod": 758, "broadcast_nod": 759, "buffer_nod": 760, "composite_nod": 761, "continue_msg": 762, "continue_nod": 763, "copy_bodi": 764, "depend": 765, "function_nod": 767, "reject": 768, "lightweight": 768, "reset_flag": [769, 788], "graph_nod": 770, "indexer_nod": 771, "input_nod": 772, "input_port": 773, "join_nod": [774, 775], "limiter_nod": 776, "make_edg": 777, "multifunction_nod": 779, "prioriti": 780, "output_port": 781, "overwrite_nod": 782, "priority_queue_nod": 784, "queue_nod": 785, "receiv": 786, "remove_edg": 787, "sender": 789, "sequencer_nod": 790, "split_nod": 791, "tagged_msg": 792, "write_once_nod": 793, "identifi": 794, "case": 794, "prefix": 794, "info": 795, "alloc": [797, 798], "resourc": 797, "scalabl": 798, "cache_aligned_alloc": 799, "cache_aligned_resourc": 800, "scalable_alloc": 801, "scalable_memory_resourc": 802, "tbb_alloc": 803, "mutual": 804, "exclus": 804, "mutex": [804, 805, 815, 841, 842], "null_mutex": 806, "null_rw_mutex": 807, "queuing_mutex": 808, "queuing_rw_mutex": 809, "rw_mutex": 810, "speculative_spin_mutex": 811, "speculative_spin_rw_mutex": 812, "spin_mutex": 813, "spin_rw_mutex": 814, "pseudo": 815, "signatur": 815, "schedul": [815, 850], "blockedrangevalu": 816, "containerbasedsequ": 817, "filterbodi": 818, "parallelforbodi": 819, "parallelforeachbodi": 820, "parallelforfunc": 821, "parallelforindex": 822, "parallelreducebodi": 823, "parallelreducefunc": 824, "parallelreducereduct": 825, "parallelscanbodi": 826, "parallelscancombin": 827, "parallelscanfunc": 828, "splittabl": 830, "containerrang": 831, "hashcompar": 832, "asyncnodebodi": 833, "continuenodebodi": 834, "functionnodebodi": 835, "gatewaytyp": 836, "inputnodebodi": 837, "joinnodefunctionobject": 838, "multifunctionnodebodi": 839, "guarante": [841, 842], "readerwritermutex": 842, "suspendfunc": 843, "onetbb": [844, 845, 847, 848], "deprec": 845, "control": 850, "arena": 850, "helper": 850, "global_control": 852, "resum": 853, "task_group_context": 854, "task_scheduler_handl": 855, "task_scheduler_observ": 857, "this_task_arena": 858, "task_group": 859, "task_group_statu": 860, "task_handl": 861, "combin": [863, 865], "enumerable_thread_specif": 864, "flattened2d": 871, "time": 873, "syntax": 873, "tick_count": 874, "interval_t": 874, "target": 876, "audienc": 876, "goal": 876, "contribut": 876, "guidelin": 876, "legal": 877, "notic": 877, "disclaim": 877}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Software Architecture": [[0, "software-architecture"]], "oneAPI Platform": [[0, "oneapi-platform"]], "API Programming Example": [[0, "api-programming-example"]], "Direct Programming Example": [[0, "direct-programming-example"]], "Definitions": [[2, "definitions"], [263, "definitions"], [876, "definitions"]], "oneCCL": [[3, "oneccl"]], "Introduction": [[4, "introduction"], [45, "introduction"], [151, "introduction"], [796, "introduction"], [876, "introduction"]], "Namespaces": [[5, "namespaces"], [31, "namespaces"], [151, "namespaces"], [174, "namespaces"], [590, "namespaces"]], "oneapi::ccl namespace": [[5, "oneapi-ccl-namespace"]], "ccl namespace": [[5, "ccl-namespace"]], "Programming Model": [[6, "programming-model"], [149, "programming-model"]], "Collective Operations": [[7, "collective-operations"]], "Allgather": [[7, "allgather"]], "Allgatherv": [[7, "allgatherv"]], "Allreduce": [[7, "allreduce"]], "Alltoallv": [[7, "alltoallv"]], "Barrier": [[7, "barrier"]], "Broadcast": [[7, "broadcast"]], "Reduce": [[7, "reduce"]], "ReduceScatter": [[7, "reducescatter"]], "Point-To-Point Operations": [[7, "point-to-point-operations"]], "Send": [[7, "send"]], "Recv": [[7, "recv"]], "Datatypes": [[8, "datatypes"]], "Custom Datatypes": [[8, "custom-datatypes"]], "Error handling": [[9, "error-handling"], [30, "error-handling"]], "Exception classification": [[9, "exception-classification"], [30, "exception-classification"], [184, "exception-classification"]], "Common exceptions": [[9, "common-exceptions"], [184, "common-exceptions"]], "Generic Workflow": [[10, "generic-workflow"]], "Group Calls": [[11, "group-calls"]], "Group_start": [[11, "group-start"]], "Group_end": [[11, "group-end"]], "oneCCL Concepts": [[12, "oneccl-concepts"]], "Device": [[12, "device"]], "Context": [[12, "context"]], "Key-Value Store": [[12, "key-value-store"]], "Communicator": [[12, "communicator"]], "SPLIT-COMMUNICATOR": [[12, "split-communicator"]], "Stream": [[12, "stream"], [61, "stream"], [149, "stream"]], "Event": [[12, "event"], [14, "event"]], "Operation Attributes": [[12, "operation-attributes"], [13, "operation-attributes"], [65, "operation-attributes"], [66, "operation-attributes"], [67, "operation-attributes"], [68, "operation-attributes"], [69, "operation-attributes"], [70, "operation-attributes"], [71, "operation-attributes"], [72, "operation-attributes"], [73, "operation-attributes"], [74, "operation-attributes"], [75, "operation-attributes"], [76, "operation-attributes"], [77, "operation-attributes"], [78, "operation-attributes"], [79, "operation-attributes"], [80, "operation-attributes"], [81, "operation-attributes"], [82, "operation-attributes"], [83, "operation-attributes"], [84, "operation-attributes"], [85, "operation-attributes"], [86, "operation-attributes"], [87, "operation-attributes"], [88, "operation-attributes"], [89, "operation-attributes"], [90, "operation-attributes"], [91, "operation-attributes"], [92, "operation-attributes"], [93, "operation-attributes"], [94, "operation-attributes"], [95, "operation-attributes"], [96, "operation-attributes"], [97, "operation-attributes"], [98, "operation-attributes"], [99, "operation-attributes"], [100, "operation-attributes"], [101, "operation-attributes"], [102, "operation-attributes"], [103, "operation-attributes"], [104, "operation-attributes"], [105, "operation-attributes"], [106, "operation-attributes"], [107, "operation-attributes"], [108, "operation-attributes"], [109, "operation-attributes"], [110, "operation-attributes"], [111, "operation-attributes"], [112, "operation-attributes"], [113, "operation-attributes"], [114, "operation-attributes"], [115, "operation-attributes"], [117, "operation-attributes"], [118, "operation-attributes"], [119, "operation-attributes"], [120, "operation-attributes"], [121, "operation-attributes"], [122, "operation-attributes"], [123, "operation-attributes"], [124, "operation-attributes"], [125, "operation-attributes"], [126, "operation-attributes"], [127, "operation-attributes"], [128, "operation-attributes"], [129, "operation-attributes"], [130, "operation-attributes"], [131, "operation-attributes"], [132, "operation-attributes"], [133, "operation-attributes"], [134, "operation-attributes"], [135, "operation-attributes"], [136, "operation-attributes"], [137, "operation-attributes"], [138, "operation-attributes"], [139, "operation-attributes"], [140, "operation-attributes"], [141, "operation-attributes"], [142, "operation-attributes"], [143, "operation-attributes"], [144, "operation-attributes"], [145, "operation-attributes"], [146, "operation-attributes"], [147, "operation-attributes"]], "Operation Progress Tracking": [[14, "operation-progress-tracking"]], "Communication Operations": [[15, "communication-operations"]], "Reductions": [[16, "reductions"]], "Current Version of this oneCCL Specification": [[17, "current-version-of-this-oneccl-specification"]], "Clustering": [[18, "clustering"]], "K-Means": [[19, "k-means"]], "Mathematical formulation": [[19, "mathematical-formulation"], [20, "mathematical-formulation"], [22, "mathematical-formulation"], [25, "mathematical-formulation"]], "Training": [[19, "training"], [19, "id2"], [22, "training"], [22, "id6"], [25, "training"], [25, "id1"]], "Training method: Lloyd\u2019s": [[19, "training-method-lloyd-s"]], "Inference": [[19, "inference"], [19, "id3"], [22, "inference"], [22, "id7"], [25, "inference"], [25, "id2"]], "Inference method: Lloyd\u2019s": [[19, "inference-method-lloyd-s"]], "Usage example": [[19, "usage-example"], [20, "usage-example"], [22, "usage-example"], [25, "usage-example"], [34, "usage-example"], [35, "usage-example"], [37, "usage-example"], [38, "usage-example"]], "Programming Interface": [[19, "programming-interface"], [20, "programming-interface"], [22, "programming-interface"], [25, "programming-interface"], [38, "programming-interface"]], "Descriptor": [[19, "descriptor"], [20, "descriptor"], [22, "descriptor"], [25, "descriptor"]], "Method tags": [[19, "method-tags"], [20, "method-tags"], [22, "method-tags"], [25, "method-tags"]], "Task tags": [[19, "task-tags"], [20, "task-tags"], [22, "task-tags"], [25, "task-tags"]], "Model": [[19, "model"], [22, "model"], [25, "model"]], "Training train(...)": [[19, "training-train"], [22, "training-train"], [25, "training-train"]], "Input": [[19, "input"], [19, "kmeans-i-api-input"], [20, "input"], [22, "input"], [22, "pca-i-api-input"], [25, "input"], [25, "knn-i-api-input"], [51, "input"]], "Result": [[19, "result"], [19, "kmeans-i-api-result"], [20, "result"], [22, "result"], [22, "pca-i-api-result"], [25, "result"], [25, "knn-i-api-result"], [39, "result"], [51, "result"]], "Operation": [[19, "operation"], [19, "id6"], [20, "operation"], [22, "operation"], [22, "id10"], [25, "operation"], [25, "id5"], [38, "operation"]], "Inference infer(...)": [[19, "inference-infer"], [22, "inference-infer"], [25, "inference-infer"]], "K-Means initialization": [[20, "k-means-initialization"]], "Computing": [[20, "computing"], [20, "id1"]], "Computing method: dense": [[20, "computing-method-dense"]], "Computing compute(...)": [[20, "computing-compute"]], "Decomposition": [[21, "decomposition"]], "Principal Components Analysis (PCA)": [[22, "principal-components-analysis-pca"]], "Training method: Covariance": [[22, "training-method-covariance"]], "Training method: SVD": [[22, "training-method-svd"]], "Sign-flip technique": [[22, "sign-flip-technique"]], "Inference methods: Covariance and SVD": [[22, "inference-methods-covariance-and-svd"]], "Algorithms": [[23, "algorithms"], [157, "algorithms"], [561, "algorithms"], [815, "algorithms"]], "Nearest Neighbors (kNN)": [[24, "nearest-neighbors-knn"]], "k-Nearest Neighbors Classification (k-NN)": [[25, "k-nearest-neighbors-classification-k-nn"]], "Training method: brute-force": [[25, "training-method-brute-force"]], "Training method: k-d tree": [[25, "training-method-k-d-tree"]], "Inference method: brute-force": [[25, "inference-method-brute-force"]], "Inference method: k-d tree": [[25, "inference-method-k-d-tree"]], "Appendix": [[26, "appendix"]], "k-d Tree": [[27, "k-d-tree"]], "Related terms": [[27, "related-terms"]], "Bibliography": [[28, "bibliography"], [346, "bibliography"], [481, "bibliography"]], "Common type definitions": [[29, "common-type-definitions"]], "Programming interface": [[29, "programming-interface"], [34, "programming-interface"], [35, "programming-interface"], [37, "programming-interface"], [41, "programming-interface"], [42, "programming-interface"]], "Scalar types": [[29, "scalar-types"]], "Enum classes": [[29, "enum-classes"]], "Data type": [[29, "data-type"]], "Range": [[29, "range"], [829, "range"]], "Header files": [[31, "header-files"]], "Common Interface": [[32, "common-interface"]], "Current Version of this oneDAL Specification": [[33, "current-version-of-this-dal-short-name-specification"]], "Column accessor": [[34, "column-accessor"]], "Row accessor": [[35, "row-accessor"]], "Accessors": [[36, "accessors"]], "Requirements": [[36, "requirements"], [744, "requirements"]], "Accessor Types": [[36, "accessor-types"]], "Details": [[36, "details"], [39, "details"], [40, "details"]], "Array": [[37, "array"]], "Data ownership requirements": [[37, "data-ownership-requirements"]], "Implementation notes": [[37, "implementation-notes"]], "CSV data source": [[38, "csv-data-source"]], "Reading oneapi::dal::read<Object>(...)": [[38, "reading-oneapi-dal-read-object"]], "Args": [[38, "args"], [39, "args"]], "Data Sources": [[39, "data-sources"]], "Read": [[39, "read"]], "Read operation definition": [[39, "read-operation-definition"]], "Read operation shortcuts": [[39, "read-operation-shortcuts"]], "Data Source Types": [[39, "data-source-types"]], "Data management": [[40, "data-management"]], "Key concepts": [[40, "key-concepts"]], "Dataset": [[40, "dataset"]], "Data source": [[40, "data-source"]], "Table": [[40, "table"], [42, "table"]], "Table metadata": [[40, "table-metadata"], [42, "table-metadata"]], "Accessor": [[40, "accessor"]], "Example of interaction between table and accessor objects": [[40, "example-of-interaction-between-table-and-accessor-objects"]], "Homogeneous table": [[41, "homogeneous-table"]], "Tables": [[42, "tables"]], "Requirements on table types": [[42, "requirements-on-table-types"]], "Table types": [[42, "table-types"]], "Data layout": [[42, "data-layout"]], "Feature type": [[42, "feature-type"]], "Glossary": [[43, "glossary"]], "Machine learning terms": [[43, "machine-learning-terms"]], "oneDAL terms": [[43, "dal-short-name-terms"]], "Common oneAPI terms": [[43, "common-oneapi-terms"]], "oneDAL": [[44, "dal-short-name"]], "Mathematical Notations": [[46, "mathematical-notations"]], "Computational modes": [[47, "computational-modes"]], "Batch": [[47, "batch"]], "Online": [[47, "online"]], "Distributed": [[47, "distributed"]], "Descriptors": [[48, "descriptors"], [60, "descriptors"]], "Floating-point Types": [[48, "floating-point-types"]], "Computational Methods": [[48, "computational-methods"]], "Computational Tasks": [[48, "computational-tasks"]], "End-to-end example": [[49, "end-to-end-example"]], "Programming model": [[50, "programming-model"]], "Operations": [[51, "operations"], [149, "operations"]], "General operation definition": [[51, "general-operation-definition"]], "Operation shortcuts": [[51, "operation-shortcuts"]], "Supported operation": [[51, "supported-operation"]], "Supported operations": [[52, "supported-operations"]], "Train": [[52, "train"]], "Infer": [[52, "infer"]], "Compute": [[52, "compute"]], "Conventions": [[53, "conventions"]], "Variable (Tensor) Names": [[53, "variable-tensor-names"]], "RNN-Specific Notation": [[53, "rnn-specific-notation"]], "Bfloat16": [[54, "bfloat16"]], "Workflow": [[54, "workflow"], [56, "workflow"]], "Support": [[54, "support"], [56, "support"]], "Data types": [[55, "data-types"]], "Int8": [[56, "int8"]], "Quantization Model": [[56, "quantization-model"]], "Numerical behavior": [[56, "numerical-behavior"]], "Example: Convolution Quantization Workflow": [[56, "example-convolution-quantization-workflow"]], "Per-Channel Scaling": [[56, "per-channel-scaling"]], "Data model": [[57, "data-model"]], "Memory Formats": [[58, "memory-formats"]], "Plain Memory Formats": [[58, "plain-memory-formats"]], "Format Tags": [[58, "format-tags"]], "Optimized Format \u2018any\u2019": [[58, "optimized-format-any"]], "Memory Format Propagation": [[58, "memory-format-propagation"]], "API": [[58, "api"], [60, "api"], [152, "api"], [153, "api"], [154, "api"], [155, "api"], [156, "api"], [157, "api"], [158, "api"], [161, "api"], [162, "api"], [163, "api"], [164, "api"], [165, "api"], [166, "api"], [167, "api"], [168, "api"], [169, "api"], [170, "api"], [171, "api"], [172, "api"], [173, "api"]], "Memory": [[59, "memory"]], "Memory Descriptors and Objects": [[60, "memory-descriptors-and-objects"]], "Objects": [[60, "objects"]], "Execution Model": [[61, "execution-model"], [184, "execution-model"]], "Engine": [[61, "engine"], [149, "engine"]], "Data Model": [[62, "data-model"]], "Low Precision Support": [[62, "low-precision-support"]], "Common Definitions": [[63, "common-definitions"], [159, "common-definitions"]], "Logical tensor enums and type": [[63, "logical-tensor-enums-and-type"]], "Operation attributes and kinds": [[63, "operation-attributes-and-kinds"]], "Graph objects member functions": [[63, "graph-objects-member-functions"]], "Macros to specify unknown shapes": [[63, "macros-to-specify-unknown-shapes"]], "Graph extension": [[64, "graph-extension"]], "Abs": [[65, "abs"]], "Execution Arguments": [[65, "execution-arguments"], [66, "execution-arguments"], [67, "execution-arguments"], [68, "execution-arguments"], [69, "execution-arguments"], [70, "execution-arguments"], [71, "execution-arguments"], [72, "execution-arguments"], [73, "execution-arguments"], [74, "execution-arguments"], [75, "execution-arguments"], [76, "execution-arguments"], [77, "execution-arguments"], [78, "execution-arguments"], [79, "execution-arguments"], [80, "execution-arguments"], [81, "execution-arguments"], [82, "execution-arguments"], [83, "execution-arguments"], [84, "execution-arguments"], [85, "execution-arguments"], [86, "execution-arguments"], [87, "execution-arguments"], [88, "execution-arguments"], [89, "execution-arguments"], [90, "execution-arguments"], [91, "execution-arguments"], [92, "execution-arguments"], [93, "execution-arguments"], [94, "execution-arguments"], [95, "execution-arguments"], [96, "execution-arguments"], [97, "execution-arguments"], [98, "execution-arguments"], [99, "execution-arguments"], [100, "execution-arguments"], [101, "execution-arguments"], [102, "execution-arguments"], [103, "execution-arguments"], [104, "execution-arguments"], [105, "execution-arguments"], [106, "execution-arguments"], [107, "execution-arguments"], [108, "execution-arguments"], [109, "execution-arguments"], [110, "execution-arguments"], [111, "execution-arguments"], [112, "execution-arguments"], [113, "execution-arguments"], [114, "execution-arguments"], [115, "execution-arguments"], [117, "execution-arguments"], [118, "execution-arguments"], [119, "execution-arguments"], [120, "execution-arguments"], [121, "execution-arguments"], [122, "execution-arguments"], [123, "execution-arguments"], [124, "execution-arguments"], [125, "execution-arguments"], [126, "execution-arguments"], [127, "execution-arguments"], [128, "execution-arguments"], [129, "execution-arguments"], [130, "execution-arguments"], [131, "execution-arguments"], [132, "execution-arguments"], [133, "execution-arguments"], [134, "execution-arguments"], [135, "execution-arguments"], [136, "execution-arguments"], [137, "execution-arguments"], [138, "execution-arguments"], [139, "execution-arguments"], [140, "execution-arguments"], [141, "execution-arguments"], [142, "execution-arguments"], [143, "execution-arguments"], [144, "execution-arguments"], [145, "execution-arguments"], [146, "execution-arguments"], [147, "execution-arguments"], [154, "execution-arguments"], [155, "execution-arguments"], [156, "execution-arguments"], [157, "execution-arguments"], [158, "execution-arguments"], [161, "execution-arguments"], [162, "execution-arguments"], [163, "execution-arguments"], [164, "execution-arguments"], [165, "execution-arguments"], [166, "execution-arguments"], [167, "execution-arguments"], [168, "execution-arguments"], [169, "execution-arguments"], [170, "execution-arguments"], [171, "execution-arguments"], [172, "execution-arguments"], [173, "execution-arguments"]], "Inputs": [[65, "inputs"], [66, "inputs"], [67, "inputs"], [68, "inputs"], [69, "inputs"], [70, "inputs"], [71, "inputs"], [72, "inputs"], [73, "inputs"], [74, "inputs"], [75, "inputs"], [76, "inputs"], [77, "inputs"], [78, "inputs"], [79, "inputs"], [80, "inputs"], [81, "inputs"], [82, "inputs"], [83, "inputs"], [84, "inputs"], [85, "inputs"], [86, "inputs"], [87, "inputs"], [88, "inputs"], [89, "inputs"], [90, "inputs"], [91, "inputs"], [92, "inputs"], [93, "inputs"], [94, "inputs"], [95, "inputs"], [96, "inputs"], [97, "inputs"], [98, "inputs"], [99, "inputs"], [100, "inputs"], [101, "inputs"], [102, "inputs"], [103, "inputs"], [104, "inputs"], [105, "inputs"], [106, "inputs"], [107, "inputs"], [108, "inputs"], [109, "inputs"], [110, "inputs"], [111, "inputs"], [112, "inputs"], [113, "inputs"], [114, "inputs"], [115, "inputs"], [116, "inputs"], [117, "inputs"], [118, "inputs"], [119, "inputs"], [120, "inputs"], [121, "inputs"], [122, "inputs"], [123, "inputs"], [124, "inputs"], [125, "inputs"], [126, "inputs"], [127, "inputs"], [128, "inputs"], [129, "inputs"], [130, "inputs"], [131, "inputs"], [132, "inputs"], [133, "inputs"], [134, "inputs"], [135, "inputs"], [136, "inputs"], [137, "inputs"], [138, "inputs"], [139, "inputs"], [140, "inputs"], [141, "inputs"], [142, "inputs"], [143, "inputs"], [144, "inputs"], [145, "inputs"], [146, "inputs"], [147, "inputs"]], "Outputs": [[65, "outputs"], [66, "outputs"], [67, "outputs"], [68, "outputs"], [69, "outputs"], [70, "outputs"], [71, "outputs"], [72, "outputs"], [73, "outputs"], [74, "outputs"], [75, "outputs"], [76, "outputs"], [77, "outputs"], [78, "outputs"], [79, "outputs"], [80, "outputs"], [81, "outputs"], [82, "outputs"], [83, "outputs"], [84, "outputs"], [85, "outputs"], [86, "outputs"], [87, "outputs"], [88, "outputs"], [89, "outputs"], [90, "outputs"], [91, "outputs"], [92, "outputs"], [93, "outputs"], [94, "outputs"], [95, "outputs"], [96, "outputs"], [97, "outputs"], [98, "outputs"], [99, "outputs"], [100, "outputs"], [101, "outputs"], [102, "outputs"], [103, "outputs"], [104, "outputs"], [105, "outputs"], [106, "outputs"], [107, "outputs"], [108, "outputs"], [109, "outputs"], [110, "outputs"], [111, "outputs"], [112, "outputs"], [113, "outputs"], [114, "outputs"], [115, "outputs"], [116, "outputs"], [117, "outputs"], [118, "outputs"], [119, "outputs"], [120, "outputs"], [121, "outputs"], [122, "outputs"], [123, "outputs"], [124, "outputs"], [125, "outputs"], [126, "outputs"], [127, "outputs"], [128, "outputs"], [129, "outputs"], [130, "outputs"], [131, "outputs"], [132, "outputs"], [133, "outputs"], [134, "outputs"], [135, "outputs"], [136, "outputs"], [137, "outputs"], [138, "outputs"], [139, "outputs"], [140, "outputs"], [141, "outputs"], [142, "outputs"], [143, "outputs"], [144, "outputs"], [145, "outputs"], [146, "outputs"], [147, "outputs"]], "Supported Data Types": [[65, "supported-data-types"], [66, "supported-data-types"], [67, "supported-data-types"], [68, "supported-data-types"], [69, "supported-data-types"], [70, "supported-data-types"], [71, "supported-data-types"], [72, "supported-data-types"], [73, "supported-data-types"], [74, "supported-data-types"], [75, "supported-data-types"], [76, "supported-data-types"], [77, "supported-data-types"], [78, "supported-data-types"], [79, "supported-data-types"], [80, "supported-data-types"], [81, "supported-data-types"], [82, "supported-data-types"], [83, "supported-data-types"], [84, "supported-data-types"], [85, "supported-data-types"], [86, "supported-data-types"], [87, "supported-data-types"], [88, "supported-data-types"], [89, "supported-data-types"], [90, "supported-data-types"], [91, "supported-data-types"], [92, "supported-data-types"], [93, "supported-data-types"], [94, "supported-data-types"], [95, "supported-data-types"], [96, "supported-data-types"], [97, "supported-data-types"], [98, "supported-data-types"], [99, "supported-data-types"], [100, "supported-data-types"], [101, "supported-data-types"], [102, "supported-data-types"], [103, "supported-data-types"], [104, "supported-data-types"], [105, "supported-data-types"], [106, "supported-data-types"], [107, "supported-data-types"], [108, "supported-data-types"], [109, "supported-data-types"], [110, "supported-data-types"], [111, "supported-data-types"], [112, "supported-data-types"], [113, "supported-data-types"], [114, "supported-data-types"], [115, "supported-data-types"], [116, "supported-data-types"], [117, "supported-data-types"], [118, "supported-data-types"], [119, "supported-data-types"], [120, "supported-data-types"], [121, "supported-data-types"], [122, "supported-data-types"], [123, "supported-data-types"], [124, "supported-data-types"], [125, "supported-data-types"], [126, "supported-data-types"], [127, "supported-data-types"], [128, "supported-data-types"], [129, "supported-data-types"], [130, "supported-data-types"], [131, "supported-data-types"], [132, "supported-data-types"], [133, "supported-data-types"], [134, "supported-data-types"], [135, "supported-data-types"], [136, "supported-data-types"], [137, "supported-data-types"], [138, "supported-data-types"], [139, "supported-data-types"], [140, "supported-data-types"], [141, "supported-data-types"], [142, "supported-data-types"], [143, "supported-data-types"], [144, "supported-data-types"], [145, "supported-data-types"], [146, "supported-data-types"], [147, "supported-data-types"]], "AbsBackward": [[66, "absbackward"]], "Add": [[67, "add"]], "AvgPool": [[68, "avgpool"]], "AvgPoolBackward": [[69, "avgpoolbackward"]], "BatchNormForwardTraining": [[70, "batchnormforwardtraining"]], "BatchNormInference": [[71, "batchnorminference"]], "BatchNormTrainingBackward": [[72, "batchnormtrainingbackward"]], "BiasAdd": [[73, "biasadd"]], "BiasAddBackward": [[74, "biasaddbackward"]], "Clamp": [[75, "clamp"]], "ClampBackward": [[76, "clampbackward"]], "Concat": [[77, "concat"], [156, "concat"]], "ConvTranspose": [[78, "convtranspose"]], "ConvTransposeBackwardData": [[79, "convtransposebackwarddata"]], "ConvTransposeBackwardWeights": [[80, "convtransposebackwardweights"]], "Convolution": [[81, "convolution"]], "Regular Convolution": [[81, "regular-convolution"], [157, "regular-convolution"]], "Convolution with Groups": [[81, "convolution-with-groups"], [157, "convolution-with-groups"]], "Convolution with Dilation": [[81, "convolution-with-dilation"], [157, "convolution-with-dilation"]], "ConvolutionBackwardData": [[82, "convolutionbackwarddata"]], "ConvolutionBackwardWeights": [[83, "convolutionbackwardweights"]], "Dequantize": [[84, "dequantize"]], "Divide": [[85, "divide"]], "DynamicDequantize": [[86, "dynamicdequantize"]], "DynamicQuantize": [[87, "dynamicquantize"]], "Elu": [[88, "elu"]], "EluBackward": [[89, "elubackward"]], "End": [[90, "end"]], "Exp": [[91, "exp"]], "GELU": [[92, "gelu"]], "GELUBackward": [[93, "gelubackward"]], "HardSigmoid": [[94, "hardsigmoid"]], "HardSigmoidBackward": [[95, "hardsigmoidbackward"]], "HardSwish": [[96, "hardswish"]], "HardSwishBackward": [[97, "hardswishbackward"]], "Interpolate": [[98, "interpolate"]], "InterpolateBackward": [[99, "interpolatebackward"]], "LayerNorm": [[100, "layernorm"]], "LayerNormBackward": [[101, "layernormbackward"]], "LeakyReLU": [[102, "leakyrelu"]], "Log": [[103, "log"]], "LogSoftmax": [[104, "logsoftmax"]], "LogSoftmaxBackward": [[105, "logsoftmaxbackward"]], "MatMul": [[106, "matmul"]], "MaxPool": [[107, "maxpool"]], "MaxPoolBackward": [[108, "maxpoolbackward"]], "Maximum": [[109, "maximum"]], "Minimum": [[110, "minimum"]], "Mish": [[111, "mish"]], "MishBackward": [[112, "mishbackward"]], "Multiply": [[113, "multiply"]], "PReLU": [[114, "prelu"]], "Broadcasting Rules": [[114, "broadcasting-rules"], [115, "broadcasting-rules"]], "PReLUBackward": [[115, "prelubackward"]], "Pow": [[116, "pow"]], "Quantize": [[117, "quantize"]], "ReLU": [[118, "relu"]], "ReLUBackward": [[119, "relubackward"]], "Reciprocal": [[120, "reciprocal"]], "ReduceL1": [[121, "reducel1"]], "ReduceL2": [[122, "reducel2"]], "ReduceMax": [[123, "reducemax"]], "ReduceMean": [[124, "reducemean"]], "ReduceMin": [[125, "reducemin"]], "ReduceProd": [[126, "reduceprod"]], "ReduceSum": [[127, "reducesum"]], "Reorder": [[128, "reorder"], [168, "reorder"]], "Round": [[129, "round"]], "Select": [[130, "select"]], "Sigmoid": [[131, "sigmoid"]], "SigmoidBackward": [[132, "sigmoidbackward"]], "SoftPlus": [[133, "softplus"]], "SoftPlusBackward": [[134, "softplusbackward"]], "SoftMax": [[135, "softmax"]], "SoftMaxBackward": [[136, "softmaxbackward"]], "Sqrt": [[137, "sqrt"]], "SqrtBackward": [[138, "sqrtbackward"]], "Square": [[139, "square"]], "SquaredDifference": [[140, "squareddifference"]], "StaticReshape": [[141, "staticreshape"]], "StaticTranspose": [[142, "statictranspose"]], "Subtract": [[143, "subtract"]], "Tanh": [[144, "tanh"]], "TanhBackward": [[145, "tanhbackward"]], "TypeCast": [[146, "typecast"]], "Wildcard": [[147, "wildcard"]], "Operation Set": [[148, "operation-set"]], "Logical Tensor": [[149, "logical-tensor"]], "Graph": [[149, "graph"]], "Partition": [[149, "partition"]], "Tensor": [[149, "tensor"]], "Compiled Partition": [[149, "compiled-partition"]], "General API notes": [[149, "general-api-notes"], [151, "general-api-notes"]], "Error Handling": [[149, "error-handling"], [151, "error-handling"]], "oneDNN": [[150, "onednn"]], "Open Source Implementation": [[150, "id1"]], "Implementation Notes": [[150, "implementation-notes"]], "Testing": [[150, "testing"]], "Graph Extension": [[151, "graph-extension"]], "Attributes": [[152, "attributes"]], "Scratchpad Mode": [[152, "scratchpad-mode"]], "Examples": [[152, "examples"], [757, "examples"], [782, "examples"], [855, "examples"]], "Library Manages Scratchpad": [[152, "library-manages-scratchpad"]], "User Manages Scratchpad": [[152, "user-manages-scratchpad"]], "Quantization": [[152, "quantization"]], "Quantization Attributes (scales and zero-points)": [[152, "quantization-attributes-scales-and-zero-points"]], "Example 1: weights quantization with per-output-channel scaling": [[152, "example-1-weights-quantization-with-per-output-channel-scaling"]], "Example 2: convolution with groups, with per-output-channel quantization": [[152, "example-2-convolution-with-groups-with-per-output-channel-quantization"]], "Implicit downconversions and floating-point math mode": [[152, "implicit-downconversions-and-floating-point-math-mode"]], "Attribute Related Error Handling": [[152, "attribute-related-error-handling"]], "Post-ops": [[153, "post-ops"]], "Supported Post-ops": [[153, "supported-post-ops"]], "Eltwise Post-op": [[153, "eltwise-post-op"]], "Sum Post-op": [[153, "sum-post-op"]], "Binary post-ops": [[153, "binary-post-ops"]], "Examples of Chained Post-ops": [[153, "examples-of-chained-post-ops"]], "Sum -> ReLU": [[153, "sum-relu"]], "Batch Normalization": [[154, "batch-normalization"]], "Forward": [[154, "forward"], [157, "forward"], [158, "forward"], [161, "forward"], [162, "forward"], [163, "forward"], [165, "forward"], [166, "forward"], [169, "forward"], [171, "forward"], [172, "forward"]], "Difference Between Forward Training and Forward Inference": [[154, "difference-between-forward-training-and-forward-inference"], [157, "difference-between-forward-training-and-forward-inference"], [158, "difference-between-forward-training-and-forward-inference"], [161, "difference-between-forward-training-and-forward-inference"], [162, "difference-between-forward-training-and-forward-inference"], [165, "difference-between-forward-training-and-forward-inference"], [166, "difference-between-forward-training-and-forward-inference"], [169, "difference-between-forward-training-and-forward-inference"], [171, "difference-between-forward-training-and-forward-inference"], [172, "difference-between-forward-training-and-forward-inference"]], "Backward": [[154, "backward"], [157, "backward"], [158, "backward"], [161, "backward"], [162, "backward"], [163, "backward"], [165, "backward"], [166, "backward"], [169, "backward"], [171, "backward"], [172, "backward"]], "Operation Details": [[154, "operation-details"], [155, "operation-details"], [156, "operation-details"], [157, "operation-details"], [158, "operation-details"], [161, "operation-details"], [162, "operation-details"], [163, "operation-details"], [164, "operation-details"], [165, "operation-details"], [166, "operation-details"], [167, "operation-details"], [168, "operation-details"], [169, "operation-details"], [170, "operation-details"], [171, "operation-details"], [172, "operation-details"], [173, "operation-details"]], "Data Types Support": [[154, "data-types-support"], [155, "data-types-support"], [156, "data-types-support"], [157, "data-types-support"], [161, "data-types-support"], [162, "data-types-support"], [164, "data-types-support"], [166, "data-types-support"], [167, "data-types-support"], [168, "data-types-support"], [169, "data-types-support"], [170, "data-types-support"], [171, "data-types-support"], [172, "data-types-support"], [173, "data-types-support"]], "Data Representation": [[154, "data-representation"], [155, "data-representation"], [156, "data-representation"], [157, "data-representation"], [158, "data-representation"], [161, "data-representation"], [162, "data-representation"], [163, "data-representation"], [164, "data-representation"], [165, "data-representation"], [166, "data-representation"], [167, "data-representation"], [168, "data-representation"], [170, "data-representation"], [172, "data-representation"], [173, "data-representation"]], "Source, Destination, and Their Gradients": [[154, "source-destination-and-their-gradients"], [162, "source-destination-and-their-gradients"], [163, "source-destination-and-their-gradients"], [165, "source-destination-and-their-gradients"], [166, "source-destination-and-their-gradients"], [172, "source-destination-and-their-gradients"]], "Statistics Tensors": [[154, "statistics-tensors"]], "Post-ops and Attributes": [[154, "post-ops-and-attributes"], [155, "post-ops-and-attributes"], [156, "post-ops-and-attributes"], [157, "post-ops-and-attributes"], [158, "post-ops-and-attributes"], [161, "post-ops-and-attributes"], [163, "post-ops-and-attributes"], [165, "post-ops-and-attributes"], [166, "post-ops-and-attributes"], [168, "post-ops-and-attributes"], [169, "post-ops-and-attributes"], [170, "post-ops-and-attributes"], [171, "post-ops-and-attributes"], [172, "post-ops-and-attributes"], [173, "post-ops-and-attributes"]], "Binary": [[155, "binary"]], "Forward and Backward": [[155, "forward-and-backward"], [156, "forward-and-backward"]], "Convolution and Deconvolution": [[157, "convolution-and-deconvolution"]], "Deconvolution (Transposed Convolution)": [[157, "deconvolution-transposed-convolution"]], "Example 1": [[157, "example-1"]], "Example 2": [[157, "example-2"]], "Elementwise": [[158, "elementwise"]], "Data Type Support": [[158, "data-type-support"], [163, "data-type-support"], [165, "data-type-support"]], "Base Class for Primitives": [[159, "base-class-for-primitives"]], "Base Class for Primitives Descriptors": [[159, "base-class-for-primitives-descriptors"]], "Common Enumerations": [[159, "common-enumerations"]], "Normalization Primitives Flags": [[159, "normalization-primitives-flags"]], "Execution argument indices": [[159, "execution-argument-indices"]], "Primitives": [[160, "primitives"]], "Inner Product": [[161, "inner-product"]], "Layer normalization": [[162, "layer-normalization"]], "Mean and Variance": [[162, "mean-and-variance"]], "Scale and Shift": [[162, "scale-and-shift"]], "Local Response Normalization": [[163, "local-response-normalization"]], "Matrix Multiplication": [[164, "matrix-multiplication"]], "Attributes and Post-ops": [[164, "attributes-and-post-ops"], [167, "attributes-and-post-ops"]], "Pooling": [[165, "pooling"]], "Prelu": [[166, "prelu"]], "Reduction": [[167, "reduction"]], "Resampling": [[169, "resampling"]], "Nearest Neighbor Resampling": [[169, "nearest-neighbor-resampling"]], "Bilinear Resampling": [[169, "bilinear-resampling"]], "RNN": [[170, "rnn"]], "Cell Functions": [[170, "cell-functions"]], "Vanilla RNN": [[170, "vanilla-rnn"]], "LSTM": [[170, "lstm"]], "LSTM (or Vanilla LSTM)": [[170, "lstm-or-vanilla-lstm"]], "LSTM with Peephole": [[170, "lstm-with-peephole"]], "LSTM with Projection": [[170, "lstm-with-projection"]], "GRU": [[170, "gru"]], "Linear-Before-Reset GRU": [[170, "linear-before-reset-gru"]], "AUGRU": [[170, "augru"]], "Linear-Before-Reset AUGRU": [[170, "linear-before-reset-augru"]], "Shuffle": [[171, "shuffle"]], "Data Layouts": [[171, "data-layouts"]], "Softmax": [[172, "softmax"]], "Sum": [[173, "sum"]], "Sources, Destination": [[173, "sources-destination"]], "General Information": [[174, "general-information"], [846, "general-information"]], "Header Files": [[174, "header-files"]], "Version Information": [[174, "version-information"], [591, "version-information"]], "oneDPL": [[175, "onedpl"]], "Parallel API": [[176, "parallel-api"]], "Parallel Algorithms": [[177, "parallel-algorithms"]], "Additional Algorithms": [[177, "additional-algorithms"]], "Buffer Wrappers": [[178, "buffer-wrappers"]], "Buffer Position Objects": [[178, "buffer-position-objects"]], "Execution Policies": [[179, "execution-policies"]], "C++ Standard Aligned Execution Policies": [[179, "c-standard-aligned-execution-policies"]], "Device Execution Policies": [[179, "device-execution-policies"]], "device_policy Class": [[179, "device-policy-class"]], "Predefined Device Policy": [[179, "predefined-device-policy"]], "make_device_policy Function": [[179, "make-device-policy-function"]], "Execution Policy Type Trait": [[179, "execution-policy-type-trait"]], "Iterators": [[180, "iterators"], [598, "iterators"], [608, "iterators"], [620, "iterators"], [634, "iterators"], [648, "iterators"], [669, "iterators"], [677, "iterators"], [693, "iterators"], [707, "iterators"], [721, "iterators"], [735, "iterators"], [749, "iterators"]], "Requirements For Iterator Use With Device Policies": [[180, "requirements-for-iterator-use-with-device-policies"]], "Indirect Device Accessibility Type Trait": [[180, "indirect-device-accessibility-type-trait"]], "oneDPL Iterators": [[180, "onedpl-iterators"]], "Other Iterators": [[180, "other-iterators"]], "Customization For User Defined Iterators": [[180, "customization-for-user-defined-iterators"]], "Example": [[180, "example"], [566, "example"], [570, "example"], [572, "example"], [573, "example"], [763, "example"], [767, "example"], [768, "example"], [780, "example"], [784, "example"], [785, "example"], [790, "example"], [793, "example"], [853, "example"], [856, "example"], [857, "example"]], "Parallel Range Algorithms": [[181, "parallel-range-algorithms"]], "Auxiliary Definitions": [[181, "auxiliary-definitions"]], "Whole Sequence Operations": [[181, "whole-sequence-operations"]], "Element Search Operations": [[181, "element-search-operations"]], "Minimum and Maximum": [[181, "minimum-and-maximum"]], "Sequence Search and Comparison": [[181, "sequence-search-and-comparison"]], "Sorting, Merge, and Heap Operations": [[181, "sorting-merge-and-heap-operations"]], "Set operations": [[181, "set-operations"]], "Partition operations": [[181, "partition-operations"]], "Copying Mutating Operations": [[181, "copying-mutating-operations"]], "In-place Mutating Operations": [[181, "in-place-mutating-operations"]], "Sequence Reordering": [[181, "sequence-reordering"]], "Uninitialized Memory Algorithms": [[181, "uninitialized-memory-algorithms"]], "SYCL Kernels API": [[182, "sycl-kernels-api"]], "Supported C++ Standard Library APIs and Algorithms": [[182, "supported-c-standard-library-apis-and-algorithms"]], "Random Number Generation": [[182, "random-number-generation"]], "Supported Functionality": [[182, "supported-functionality"]], "Limitations": [[182, "limitations"]], "Extensions": [[182, "extensions"]], "Function Objects": [[182, "function-objects"]], "oneMath Appendix": [[183, "onemath-appendix"]], "Future considerations": [[183, "future-considerations"]], "Acknowledgment": [[183, "acknowledgment"]], "oneMath Architecture": [[184, "onemath-architecture"]], "Use of Queues": [[184, "use-of-queues"]], "Non-Member Functions": [[184, "non-member-functions"], [861, "non-member-functions"]], "Member Functions": [[184, "member-functions"], [799, "member-functions"], [800, "member-functions"], [801, "member-functions"], [803, "member-functions"], [855, "member-functions"], [861, "member-functions"]], "Device Usage": [[184, "device-usage"]], "Asynchronous Execution": [[184, "asynchronous-execution"]], "Synchronization When Using Buffers": [[184, "synchronization-when-using-buffers"]], "Synchronization When Using USM APIs": [[184, "synchronization-when-using-usm-apis"]], "Host Thread Safety": [[184, "host-thread-safety"]], "Memory Model": [[184, "memory-model"]], "The Buffer Memory Model": [[184, "the-buffer-memory-model"]], "Unified Shared Memory Model": [[184, "unified-shared-memory-model"]], "API Design": [[184, "api-design"]], "oneMath namespaces": [[184, "onemath-namespaces"]], "Standard C++ datatype usage": [[184, "standard-c-datatype-usage"]], "DPC++ datatype usage": [[184, "dpc-datatype-usage"]], "oneMath defined datatypes": [[184, "onemath-defined-datatypes"]], "Exceptions and Error Handling": [[184, "exceptions-and-error-handling"]], "LAPACK specific exceptions": [[184, "lapack-specific-exceptions"]], "Other Features": [[184, "other-features"]], "Specification Version and Compliance": [[184, "specification-version-and-compliance"]], "Pre/Post Condition Checking": [[184, "pre-post-condition-checking"]], "asum": [[185, "asum"]], "asum (Buffer Version)": [[185, "asum-buffer-version"]], "asum (USM Version)": [[185, "asum-usm-version"]], "axpby": [[186, "axpby"]], "axpby (Buffer Version)": [[186, "axpby-buffer-version"]], "axpby (USM Version)": [[186, "axpby-usm-version"]], "axpy": [[187, "axpy"]], "axpy (Buffer Version)": [[187, "axpy-buffer-version"]], "axpy (USM Version)": [[187, "axpy-usm-version"]], "axpy_batch": [[188, "axpy-batch"]], "axpy_batch (Buffer Version)": [[188, "axpy-batch-buffer-version"]], "axpy_batch (USM Version)": [[188, "axpy-batch-usm-version"]], "BLAS Routines": [[189, "blas-routines"]], "BLAS Level 1 Routines": [[190, "blas-level-1-routines"]], "BLAS Level 2 Routines": [[191, "blas-level-2-routines"]], "BLAS Level 3 Routines": [[192, "blas-level-3-routines"]], "BLAS-like Extensions": [[193, "blas-like-extensions"]], "copy": [[194, "copy"]], "copy (Buffer Version)": [[194, "copy-buffer-version"]], "copy (USM Version)": [[194, "copy-usm-version"]], "copy_batch": [[195, "copy-batch"]], "copy_batch (Buffer Version)": [[195, "copy-batch-buffer-version"]], "copy_batch (USM Version)": [[195, "copy-batch-usm-version"]], "dgmm_batch": [[196, "dgmm-batch"]], "dgmm_batch (Buffer Version)": [[196, "dgmm-batch-buffer-version"]], "dgmm_batch (USM Version)": [[196, "dgmm-batch-usm-version"]], "dot": [[197, "dot"]], "dot (Buffer Version)": [[197, "dot-buffer-version"]], "dot (USM Version)": [[197, "dot-usm-version"]], "dotc": [[198, "dotc"]], "dotc (Buffer Version)": [[198, "dotc-buffer-version"]], "dotc (USM Version)": [[198, "dotc-usm-version"]], "dotu": [[199, "dotu"]], "dotu (Buffer Version)": [[199, "dotu-buffer-version"]], "dotu (USM Version)": [[199, "dotu-usm-version"]], "gbmv": [[200, "gbmv"]], "gbmv (Buffer Version)": [[200, "gbmv-buffer-version"]], "gbmv (USM Version)": [[200, "gbmv-usm-version"]], "gemm": [[201, "gemm"]], "gemm (Buffer Version)": [[201, "gemm-buffer-version"]], "gemm (USM Version)": [[201, "gemm-usm-version"]], "gemm_batch": [[202, "gemm-batch"]], "gemm_batch (Buffer Version)": [[202, "gemm-batch-buffer-version"]], "gemm_batch (USM Version)": [[202, "gemm-batch-usm-version"]], "gemm_bias": [[203, "gemm-bias"]], "gemm_bias (Buffer Version)": [[203, "gemm-bias-buffer-version"]], "gemm_bias (USM Version)": [[203, "gemm-bias-usm-version"]], "gemmt": [[204, "gemmt"]], "gemmt (Buffer Version)": [[204, "gemmt-buffer-version"]], "gemmt (USM Version)": [[204, "gemmt-usm-version"]], "gemv": [[205, "gemv"]], "gemv (Buffer Version)": [[205, "gemv-buffer-version"]], "gemv (USM Version)": [[205, "gemv-usm-version"]], "gemv_batch": [[206, "gemv-batch"]], "gemv_batch (Buffer Version)": [[206, "gemv-batch-buffer-version"]], "gemv_batch (USM Version)": [[206, "gemv-batch-usm-version"]], "ger": [[207, "ger"]], "ger (Buffer Version)": [[207, "ger-buffer-version"]], "ger (USM Version)": [[207, "ger-usm-version"]], "gerc": [[208, "gerc"]], "gerc (Buffer Version)": [[208, "gerc-buffer-version"]], "gerc (USM Version)": [[208, "gerc-usm-version"]], "geru": [[209, "geru"]], "geru (Buffer Version)": [[209, "geru-buffer-version"]], "geru (USM Version)": [[209, "geru-usm-version"]], "hbmv": [[210, "hbmv"]], "hbmv (Buffer Version)": [[210, "hbmv-buffer-version"]], "hbmv (USM Version)": [[210, "hbmv-usm-version"]], "hemm": [[211, "hemm"]], "hemm (Buffer Version)": [[211, "hemm-buffer-version"]], "hemm (USM Version)": [[211, "hemm-usm-version"]], "hemv": [[212, "hemv"]], "hemv (Buffer Version)": [[212, "hemv-buffer-version"]], "hemv (USM Version)": [[212, "hemv-usm-version"]], "her": [[213, "her"]], "her (Buffer Version)": [[213, "her-buffer-version"]], "her (USM Version)": [[213, "her-usm-version"]], "her2": [[214, "her2"]], "her2 (Buffer Version)": [[214, "her2-buffer-version"]], "her2 (USM Version)": [[214, "her2-usm-version"]], "her2k": [[215, "her2k"]], "her2k (Buffer Version)": [[215, "her2k-buffer-version"]], "her2k (USM Version)": [[215, "her2k-usm-version"]], "herk": [[216, "herk"]], "herk (Buffer Version)": [[216, "herk-buffer-version"]], "herk (USM Version)": [[216, "herk-usm-version"]], "hpmv": [[217, "hpmv"]], "hpmv (Buffer Version)": [[217, "hpmv-buffer-version"]], "hpmv (USM Version)": [[217, "hpmv-usm-version"]], "hpr": [[218, "hpr"]], "hpr (Buffer Version)": [[218, "hpr-buffer-version"]], "hpr (USM Version)": [[218, "hpr-usm-version"]], "hpr2": [[219, "hpr2"]], "hpr2 (Buffer Version)": [[219, "hpr2-buffer-version"]], "hpr2 (USM Version)": [[219, "hpr2-usm-version"]], "iamax": [[220, "iamax"]], "iamax (Buffer Version)": [[220, "iamax-buffer-version"]], "iamax (USM Version)": [[220, "iamax-usm-version"]], "iamin": [[221, "iamin"]], "iamin (Buffer Version)": [[221, "iamin-buffer-version"]], "iamin (USM Version)": [[221, "iamin-usm-version"]], "imatcopy": [[222, "imatcopy"]], "imatcopy (Buffer Version)": [[222, "imatcopy-buffer-version"]], "imatcopy (USM Version)": [[222, "imatcopy-usm-version"]], "imatcopy_batch": [[223, "imatcopy-batch"]], "imatcopy_batch (Buffer Version)": [[223, "imatcopy-batch-buffer-version"]], "imatcopy_batch (USM Version)": [[223, "imatcopy-batch-usm-version"]], "nrm2": [[224, "nrm2"]], "nrm2 (Buffer Version)": [[224, "nrm2-buffer-version"]], "nrm2 (USM Version)": [[224, "nrm2-usm-version"]], "omatadd": [[225, "omatadd"]], "omatadd (Buffer Version)": [[225, "omatadd-buffer-version"]], "omatadd (USM Version)": [[225, "omatadd-usm-version"]], "omatadd_batch": [[226, "omatadd-batch"]], "omatadd_batch (Buffer Version)": [[226, "omatadd-batch-buffer-version"]], "omatadd_batch (USM Version)": [[226, "omatadd-batch-usm-version"]], "omatcopy": [[227, "omatcopy"]], "omatcopy (Buffer Version)": [[227, "omatcopy-buffer-version"]], "omatcopy (USM Version)": [[227, "omatcopy-usm-version"]], "omatcopy2": [[228, "omatcopy2"]], "omatcopy2 (Buffer Version)": [[228, "omatcopy2-buffer-version"]], "omatcopy2 (USM Version)": [[228, "omatcopy2-usm-version"]], "omatcopy_batch": [[229, "omatcopy-batch"]], "omatcopy_batch (Buffer Version)": [[229, "omatcopy-batch-buffer-version"]], "omatcopy_batch (USM Version)": [[229, "omatcopy-batch-usm-version"]], "rot": [[230, "rot"]], "rot (Buffer Version)": [[230, "rot-buffer-version"]], "rot (USM Version)": [[230, "rot-usm-version"]], "rotg": [[231, "rotg"]], "rotg (Buffer Version)": [[231, "rotg-buffer-version"]], "rotg (USM Version)": [[231, "rotg-usm-version"]], "rotm": [[232, "rotm"]], "rotm (Buffer Version)": [[232, "rotm-buffer-version"]], "rotm (USM Version)": [[232, "rotm-usm-version"]], "rotmg": [[233, "rotmg"]], "rotmg (Buffer Version)": [[233, "rotmg-buffer-version"]], "rotmg (USM Version)": [[233, "rotmg-usm-version"]], "sbmv": [[234, "sbmv"]], "sbmv (Buffer Version)": [[234, "sbmv-buffer-version"]], "sbmv (USM Version)": [[234, "sbmv-usm-version"]], "scal": [[235, "scal"]], "scal (Buffer Version)": [[235, "scal-buffer-version"]], "scal (USM Version)": [[235, "scal-usm-version"]], "sdsdot": [[236, "sdsdot"]], "sdsdot (Buffer Version)": [[236, "sdsdot-buffer-version"]], "sdsdot (USM Version)": [[236, "sdsdot-usm-version"]], "spmv": [[237, "spmv"], [440, "spmv"], [440, "onemath-sparse-spmv"]], "spmv (Buffer Version)": [[237, "spmv-buffer-version"]], "spmv (USM Version)": [[237, "spmv-usm-version"]], "spr": [[238, "spr"]], "spr (Buffer Version)": [[238, "spr-buffer-version"]], "spr (USM Version)": [[238, "spr-usm-version"]], "spr2": [[239, "spr2"]], "spr2 (Buffer Version)": [[239, "spr2-buffer-version"]], "spr2 (USM Version)": [[239, "spr2-usm-version"]], "swap": [[240, "swap"], [602, "swap"], [615, "swap"], [629, "swap"], [643, "swap"], [657, "swap"], [665, "swap"], [673, "swap"], [686, "swap"], [701, "swap"], [715, "swap"], [729, "swap"], [743, "swap"], [755, "swap"]], "swap (Buffer Version)": [[240, "swap-buffer-version"]], "swap (USM Version)": [[240, "swap-usm-version"]], "symm": [[241, "symm"]], "symm (Buffer Version)": [[241, "symm-buffer-version"]], "symm (USM Version)": [[241, "symm-usm-version"]], "symv": [[242, "symv"]], "symv (Buffer Version)": [[242, "symv-buffer-version"]], "symv (USM Version)": [[242, "symv-usm-version"]], "syr": [[243, "syr"]], "syr (Buffer Version)": [[243, "syr-buffer-version"]], "syr (USM Version)": [[243, "syr-usm-version"]], "syr2": [[244, "syr2"]], "syr2 (Buffer Version)": [[244, "syr2-buffer-version"]], "syr2 (USM Version)": [[244, "syr2-usm-version"]], "syr2k": [[245, "syr2k"]], "syr2k (Buffer Version)": [[245, "syr2k-buffer-version"]], "syr2k (USM Version)": [[245, "syr2k-usm-version"]], "syrk": [[246, "syrk"]], "syrk (Buffer Version)": [[246, "syrk-buffer-version"]], "syrk (USM Version)": [[246, "syrk-usm-version"]], "syrk_batch": [[247, "syrk-batch"]], "syrk_batch (Buffer Version)": [[247, "syrk-batch-buffer-version"]], "syrk_batch (USM Version)": [[247, "syrk-batch-usm-version"]], "tbmv": [[248, "tbmv"]], "tbmv (Buffer Version)": [[248, "tbmv-buffer-version"]], "tbmv (USM Version)": [[248, "tbmv-usm-version"]], "tbsv": [[249, "tbsv"]], "tbsv (Buffer Version)": [[249, "tbsv-buffer-version"]], "tbsv (USM Version)": [[249, "tbsv-usm-version"]], "tpmv": [[250, "tpmv"]], "tpmv (Buffer Version)": [[250, "tpmv-buffer-version"]], "tpmv (USM Version)": [[250, "tpmv-usm-version"]], "tpsv": [[251, "tpsv"]], "tpsv (Buffer Version)": [[251, "tpsv-buffer-version"]], "tpsv (USM Version)": [[251, "tpsv-usm-version"]], "trmm": [[252, "trmm"]], "trmm (Buffer Version)": [[252, "trmm-buffer-version"]], "In-place API": [[252, "in-place-api"], [252, "id1"], [254, "in-place-api"], [254, "id1"]], "Out-of-place API": [[252, "out-of-place-api"], [252, "id2"], [254, "out-of-place-api"], [254, "id2"]], "trmm (USM Version)": [[252, "trmm-usm-version"]], "trmv": [[253, "trmv"]], "trmv (Buffer Version)": [[253, "trmv-buffer-version"]], "trmv (USM Version)": [[253, "trmv-usm-version"]], "trsm": [[254, "trsm"]], "trsm (Buffer Version)": [[254, "trsm-buffer-version"]], "trsm (USM Version)": [[254, "trsm-usm-version"]], "trsm_batch": [[255, "trsm-batch"]], "trsm_batch (Buffer Version)": [[255, "trsm-batch-buffer-version"]], "trsm_batch (USM Version)": [[255, "trsm-batch-usm-version"]], "trsv": [[256, "trsv"]], "trsv (Buffer Version)": [[256, "trsv-buffer-version"]], "trsv (USM Version)": [[256, "trsv-usm-version"]], "The compute_backward function templates": [[257, "the-compute-backward-function-templates"]], "compute_backward (Buffer versions)": [[257, "compute-backward-buffer-versions"]], "compute_backward (USM versions)": [[257, "compute-backward-usm-versions"]], "The compute_forward function templates": [[258, "the-compute-forward-function-templates"]], "compute_forward (Buffer versions)": [[258, "compute-forward-buffer-versions"]], "compute_forward (USM versions)": [[258, "compute-forward-usm-versions"]], "Configuration of data layouts": [[259, "configuration-of-data-layouts"]], "Data storage": [[260, "data-storage"]], "Complex descriptors": [[260, "complex-descriptors"]], "Real descriptors": [[260, "real-descriptors"]], "Workspace placement": [[261, "workspace-placement"]], "Automatically- and externally-managed workspaces": [[261, "automatically-and-externally-managed-workspaces"]], "Typical usage of externally-managed workspaces": [[261, "typical-usage-of-externally-managed-workspaces"]], "The descriptor class template": [[262, "the-descriptor-class-template"]], "Description": [[262, "description"], [687, "description"], [702, "description"], [716, "description"], [730, "description"], [744, "description"]], "Constructors": [[262, "constructors"], [593, "constructors"]], "Assignment operators": [[262, "assignment-operators"], [596, "assignment-operators"], [605, "assignment-operators"], [617, "assignment-operators"], [632, "assignment-operators"], [646, "assignment-operators"], [659, "assignment-operators"], [667, "assignment-operators"], [675, "assignment-operators"], [689, "assignment-operators"], [704, "assignment-operators"], [718, "assignment-operators"], [732, "assignment-operators"], [746, "assignment-operators"], [866, "assignment-operators"]], "set_value member functions": [[262, "set-value-member-functions"]], "get_value member functions": [[262, "get-value-member-functions"]], "set_workspace member function": [[262, "set-workspace-member-function"]], "commit member function": [[262, "commit-member-function"]], "Discrete Fourier Transform Functions": [[263, "discrete-fourier-transform-functions"]], "Elementary range of indices": [[263, "elementary-range-of-indices"]], "Additional constraints for data in backward domain of real DFTs": [[263, "additional-constraints-for-data-in-backward-domain-of-real-dfts"]], "Recommended usage": [[263, "recommended-usage"]], "Summary table": [[263, "summary-table"]], "DFT-related scoped enumeration types": [[264, "dft-related-scoped-enumeration-types"]], "precision": [[264, "precision"]], "domain": [[264, "domain"]], "config_param": [[264, "config-param"]], "config_value": [[264, "config-value"]], "oneMath Domains": [[265, "onemath-domains"]], "Dense Linear Algebra": [[265, "dense-linear-algebra"]], "Sparse Linear Algebra": [[265, "sparse-linear-algebra"]], "Discrete Fourier Transforms": [[265, "discrete-fourier-transforms"]], "Random Number Generators": [[265, "random-number-generators"]], "Summary Statistics": [[265, "summary-statistics"], [456, "summary-statistics"]], "Vector Math": [[265, "vector-math"], [556, "vector-math"]], "gebrd": [[266, "gebrd"]], "gebrd (Buffer Version)": [[266, "gebrd-buffer-version"]], "gebrd (USM Version)": [[266, "gebrd-usm-version"]], "gebrd_scratchpad_size": [[267, "gebrd-scratchpad-size"]], "geqrf": [[268, "geqrf"]], "geqrf (Buffer Version)": [[268, "geqrf-buffer-version"]], "geqrf (USM Version)": [[268, "geqrf-usm-version"]], "geqrf_batch": [[269, "geqrf-batch"]], "geqrf_batch (Buffer Version)": [[269, "geqrf-batch-buffer-version"]], "geqrf_batch (USM Version)": [[269, "geqrf-batch-usm-version"]], "geqrf_batch_scratchpad_size": [[270, "geqrf-batch-scratchpad-size"]], "geqrf_scratchpad_size": [[271, "geqrf-scratchpad-size"]], "gerqf": [[272, "gerqf"]], "gerqf (Buffer Version)": [[272, "gerqf-buffer-version"]], "gerqf (USM Version)": [[272, "gerqf-usm-version"]], "gerqf_scratchpad_size": [[273, "gerqf-scratchpad-size"], [273, "id1"]], "gesvd": [[274, "gesvd"]], "gesvd (Buffer Version)": [[274, "gesvd-buffer-version"]], "gesvd (USM Version)": [[274, "gesvd-usm-version"]], "gesvd_scratchpad_size": [[275, "gesvd-scratchpad-size"], [275, "id1"]], "getrf": [[276, "getrf"]], "getrf (BUFFER Version)": [[276, "getrf-buffer-version"]], "getrf (USM Version)": [[276, "getrf-usm-version"]], "getrf_batch": [[277, "getrf-batch"]], "getrf_batch (Buffer Version)": [[277, "getrf-batch-buffer-version"]], "getrf_batch (USM Version)": [[277, "getrf-batch-usm-version"]], "getrf_batch_scratchpad_size": [[278, "getrf-batch-scratchpad-size"]], "getrf_scratchpad_size": [[279, "getrf-scratchpad-size"], [279, "id1"]], "getri": [[280, "getri"]], "getri (BUFFER Version)": [[280, "getri-buffer-version"]], "getri (USM Version)": [[280, "getri-usm-version"]], "getri_batch": [[281, "getri-batch"]], "getri_batch (Buffer Version)": [[281, "getri-batch-buffer-version"]], "getri_batch (USM Version)": [[281, "getri-batch-usm-version"]], "getri_batch_scratchpad_size": [[282, "getri-batch-scratchpad-size"]], "getri_scratchpad_size": [[283, "getri-scratchpad-size"], [283, "id1"]], "getrs": [[284, "getrs"]], "getrs (Buffer Version)": [[284, "getrs-buffer-version"]], "getrs (USM Version)": [[284, "getrs-usm-version"]], "getrs_batch": [[285, "getrs-batch"]], "getrs_batch (Buffer Version)": [[285, "getrs-batch-buffer-version"]], "getrs_batch (USM Version)": [[285, "getrs-batch-usm-version"]], "getrs_batch_scratchpad_size": [[286, "getrs-batch-scratchpad-size"]], "getrs_scratchpad_size": [[287, "getrs-scratchpad-size"], [287, "id1"]], "heevd": [[288, "heevd"]], "heevd (Buffer Version)": [[288, "heevd-buffer-version"]], "heevd (USM Version)": [[288, "heevd-usm-version"]], "heevd_scratchpad_size": [[289, "heevd-scratchpad-size"], [289, "id1"]], "hegvd": [[290, "hegvd"]], "hegvd (Buffer Version)": [[290, "hegvd-buffer-version"]], "hegvd (USM Version)": [[290, "hegvd-usm-version"]], "hegvd_scratchpad_size": [[291, "hegvd-scratchpad-size"], [291, "id1"]], "hetrd": [[292, "hetrd"]], "hetrd (Buffer Version)": [[292, "hetrd-buffer-version"]], "hetrd (USM Version)": [[292, "hetrd-usm-version"]], "hetrd_scratchpad_size": [[293, "hetrd-scratchpad-size"], [293, "id1"]], "hetrf": [[294, "hetrf"]], "hetrf (Buffer Version)": [[294, "hetrf-buffer-version"]], "hetrf (USM Version)": [[294, "hetrf-usm-version"]], "hetrf_scratchpad_size": [[295, "hetrf-scratchpad-size"], [295, "id1"]], "LAPACK Routines": [[296, "lapack-routines"]], "LAPACK Linear Equation Routines": [[296, "lapack-linear-equation-routines"]], "LAPACK Singular Value and Eigenvalue Problem Routines": [[296, "lapack-singular-value-and-eigenvalue-problem-routines"]], "LAPACK-like Extensions Routines": [[296, "lapack-like-extensions-routines"]], "orgbr": [[297, "orgbr"]], "orgbr (Buffer Version)": [[297, "orgbr-buffer-version"]], "orgbr (USM Version)": [[297, "orgbr-usm-version"]], "orgbr_scratchpad_size": [[298, "orgbr-scratchpad-size"], [298, "id1"]], "orgqr": [[299, "orgqr"]], "orgqr (Buffer Version)": [[299, "orgqr-buffer-version"]], "orgqr (USM Version)": [[299, "orgqr-usm-version"]], "orgqr_batch": [[300, "orgqr-batch"]], "orgqr_batch (Buffer Version)": [[300, "orgqr-batch-buffer-version"]], "orgqr_batch (USM Version)": [[300, "orgqr-batch-usm-version"]], "orgqr_batch_scratchpad_size": [[301, "orgqr-batch-scratchpad-size"]], "orgqr_scratchpad_size": [[302, "orgqr-scratchpad-size"], [302, "id1"]], "orgtr": [[303, "orgtr"]], "orgtr (Buffer Version)": [[303, "orgtr-buffer-version"]], "orgtr (USM Version)": [[303, "orgtr-usm-version"]], "orgtr_scratchpad_size": [[304, "orgtr-scratchpad-size"], [304, "id1"]], "ormqr": [[305, "ormqr"]], "ormqr (Buffer Version)": [[305, "ormqr-buffer-version"]], "ormqr (USM Version)": [[305, "ormqr-usm-version"]], "ormqr_scratchpad_size": [[306, "ormqr-scratchpad-size"], [306, "id1"]], "ormrq": [[307, "ormrq"]], "ormrq (Buffer Version)": [[307, "ormrq-buffer-version"]], "ormrq (USM Version)": [[307, "ormrq-usm-version"]], "ormrq_scratchpad_size": [[308, "ormrq-scratchpad-size"], [308, "id1"]], "ormtr": [[309, "ormtr"]], "ormtr (Buffer Version)": [[309, "ormtr-buffer-version"]], "ormtr (USM Version)": [[309, "ormtr-usm-version"]], "ormtr_scratchpad_size": [[310, "ormtr-scratchpad-size"], [310, "id1"]], "potrf": [[311, "potrf"]], "potrf (Buffer Version)": [[311, "potrf-buffer-version"]], "potrf (USM Version)": [[311, "potrf-usm-version"]], "potrf_batch": [[312, "potrf-batch"]], "potrf_batch (Buffer Version)": [[312, "potrf-batch-buffer-version"]], "potrf_batch (USM Version)": [[312, "potrf-batch-usm-version"]], "potrf_batch_scratchpad_size": [[313, "potrf-batch-scratchpad-size"]], "potrf_scratchpad_size": [[314, "potrf-scratchpad-size"], [314, "id1"]], "potri": [[315, "potri"]], "potri (Buffer Version)": [[315, "potri-buffer-version"]], "potri (USM Version)": [[315, "potri-usm-version"]], "potri_scratchpad_size": [[316, "potri-scratchpad-size"], [316, "id1"]], "potrs": [[317, "potrs"]], "potrs (Buffer Version)": [[317, "potrs-buffer-version"]], "potrs (USM Version)": [[317, "potrs-usm-version"]], "potrs_batch": [[318, "potrs-batch"]], "potrs_batch (Buffer Version)": [[318, "potrs-batch-buffer-version"]], "potrs_batch (USM Version)": [[318, "potrs-batch-usm-version"]], "potrs_batch_scratchpad_size": [[319, "potrs-batch-scratchpad-size"]], "potrs_scratchpad_size": [[320, "potrs-scratchpad-size"], [320, "id1"]], "syevd": [[321, "syevd"]], "syevd (Buffer Version)": [[321, "syevd-buffer-version"]], "syevd (USM Version)": [[321, "syevd-usm-version"]], "syevd_scratchpad_size": [[322, "syevd-scratchpad-size"], [322, "id1"]], "sygvd": [[323, "sygvd"]], "sygvd (Buffer Version)": [[323, "sygvd-buffer-version"]], "sygvd (USM Version)": [[323, "sygvd-usm-version"]], "sygvd_scratchpad_size": [[324, "sygvd-scratchpad-size"], [324, "id1"]], "sytrd": [[325, "sytrd"]], "sytrd (Buffer Version)": [[325, "sytrd-buffer-version"]], "sytrd (USM Version)": [[325, "sytrd-usm-version"]], "sytrd_scratchpad_size": [[326, "sytrd-scratchpad-size"], [326, "id1"]], "sytrf": [[327, "sytrf"]], "sytrf (Buffer Version)": [[327, "sytrf-buffer-version"]], "sytrf (USM Version)": [[327, "sytrf-usm-version"]], "sytrf_scratchpad_size": [[328, "sytrf-scratchpad-size"], [328, "id1"]], "trtrs": [[329, "trtrs"]], "trtrs (Buffer Version)": [[329, "trtrs-buffer-version"]], "trtrs (USM Version)": [[329, "trtrs-usm-version"]], "trtrs_scratchpad_size": [[330, "trtrs-scratchpad-size"], [330, "id1"]], "ungbr": [[331, "ungbr"]], "ungbr (Buffer Version)": [[331, "ungbr-buffer-version"]], "ungbr (USM Version)": [[331, "ungbr-usm-version"]], "ungbr_scratchpad_size": [[332, "ungbr-scratchpad-size"], [332, "id1"]], "ungqr": [[333, "ungqr"]], "ungqr (Buffer Version)": [[333, "ungqr-buffer-version"]], "ungqr (USM Version)": [[333, "ungqr-usm-version"]], "ungqr_batch": [[334, "ungqr-batch"]], "ungqr_batch (Buffer Version)": [[334, "ungqr-batch-buffer-version"]], "ungqr_batch (USM Version)": [[334, "ungqr-batch-usm-version"]], "ungqr_batch_scratchpad_size": [[335, "ungqr-batch-scratchpad-size"]], "ungqr_scratchpad_size": [[336, "ungqr-scratchpad-size"], [336, "id1"]], "ungtr": [[337, "ungtr"]], "ungtr (Buffer Version)": [[337, "ungtr-buffer-version"]], "ungtr (USM Version)": [[337, "ungtr-usm-version"]], "ungtr_scratchpad_size": [[338, "ungtr-scratchpad-size"], [338, "id1"]], "unmqr": [[339, "unmqr"]], "unmqr (Buffer Version)": [[339, "unmqr-buffer-version"]], "unmqr (USM Version)": [[339, "unmqr-usm-version"]], "unmqr_scratchpad_size": [[340, "unmqr-scratchpad-size"], [340, "id1"]], "unmrq": [[341, "unmrq"]], "unmrq (Buffer Version)": [[341, "unmrq-buffer-version"]], "unmrq (USM Version)": [[341, "unmrq-usm-version"]], "unmrq_scratchpad_size": [[342, "unmrq-scratchpad-size"], [342, "id1"]], "unmtr": [[343, "unmtr"]], "unmtr (Buffer Version)": [[343, "unmtr-buffer-version"]], "unmtr (USM Version)": [[343, "unmtr-usm-version"]], "unmtr_scratchpad_size": [[344, "unmtr-scratchpad-size"], [344, "id1"]], "Matrix Storage": [[345, "matrix-storage"]], "Engine Adaptors": [[347, "engine-adaptors"]], "Device Distributions": [[348, "device-distributions"]], "Distributions Template Parameter Method": [[349, "distributions-template-parameter-method"], [376, "distributions-template-parameter-method"]], "Device Engines (Basic Random Number Generators)": [[350, "device-engines-basic-random-number-generators"]], "bernoulli": [[351, "bernoulli"], [380, "bernoulli"]], "class bernoulli": [[351, "class-bernoulli"], [380, "class-bernoulli"]], "beta": [[352, "beta"], [381, "beta"]], "class beta": [[352, "class-beta"], [381, "class-beta"]], "bits": [[353, "bits"], [383, "bits"]], "class bits": [[353, "class-bits"], [383, "class-bits"]], "Count Engine Adaptor": [[354, "count-engine-adaptor"]], "class count_engine_adaptor": [[354, "class-count-engine-adaptor"]], "exponential": [[355, "exponential"], [387, "exponential"]], "class exponential": [[355, "class-exponential"], [387, "class-exponential"]], "gamma": [[356, "gamma"], [388, "gamma"]], "class gamma": [[356, "class-gamma"], [388, "class-gamma"]], "gaussian": [[357, "gaussian"], [389, "gaussian"]], "class gaussian": [[357, "class-gaussian"], [389, "class-gaussian"]], "generate": [[358, "generate"], [391, "generate"]], "Device Generate Routines": [[359, "device-generate-routines"]], "geometric": [[360, "geometric"], [392, "geometric"]], "class geometric": [[360, "class-geometric"], [392, "class-geometric"]], "lognormal": [[361, "lognormal"], [397, "lognormal"]], "class lognormal": [[361, "class-lognormal"], [397, "class-lognormal"]], "mcg31m1": [[362, "mcg31m1"], [398, "mcg31m1"]], "class mcg31m1": [[362, "class-mcg31m1"], [398, "class-mcg31m1"]], "mcg59": [[363, "mcg59"], [399, "mcg59"]], "class mcg59": [[363, "class-mcg59"], [399, "class-mcg59"]], "mrg32k3a": [[364, "mrg32k3a"], [400, "mrg32k3a"]], "class mrg32k3a": [[364, "class-mrg32k3a"], [400, "class-mrg32k3a"]], "pcg64_dxsm": [[365, "pcg64-dxsm"]], "class pcg64_dxsm": [[365, "class-pcg64-dxsm"]], "philox4x32x10": [[366, "philox4x32x10"], [407, "philox4x32x10"]], "class philox4x32x10": [[366, "class-philox4x32x10"], [407, "class-philox4x32x10"]], "poisson": [[367, "poisson"], [408, "poisson"]], "class poisson": [[367, "class-poisson"], [408, "class-poisson"]], "skip_ahead": [[368, "skip-ahead"], [368, "id1"], [413, "skip-ahead"], [413, "onemath-rng-skip-ahead-common"]], "uniform_bits": [[369, "uniform-bits"], [417, "uniform-bits"]], "class uniform_bits": [[369, "class-uniform-bits"], [417, "class-uniform-bits"]], "uniform (Continuous)": [[370, "uniform-continuous"]], "class uniform": [[370, "class-uniform"], [371, "class-uniform"], [415, "class-uniform"], [416, "class-uniform"]], "uniform (Discrete)": [[371, "uniform-discrete"]], "oneMath RNG Device Usage Model": [[372, "onemath-rng-device-usage-model"]], "Example of Scalar Random Numbers Generation": [[372, "example-of-scalar-random-numbers-generation"]], "Example of Vector Random Numbers Generation": [[372, "example-of-vector-random-numbers-generation"]], "Random Number Generators Device Routines": [[373, "random-number-generators-device-routines"]], "Device Service Routines": [[374, "device-service-routines"]], "Host Distributions": [[375, "host-distributions"]], "Host Engines (Basic Random Number Generators)": [[377, "host-engines-basic-random-number-generators"]], "Host Generate Routine": [[378, "host-generate-routine"]], "ars5": [[379, "ars5"]], "class ars5": [[379, "class-ars5"]], "binomial": [[382, "binomial"]], "class binomial": [[382, "class-binomial"]], "cauchy": [[384, "cauchy"]], "class cauchy": [[384, "class-cauchy"]], "chi_square": [[385, "chi-square"]], "class chi_square": [[385, "class-chi-square"]], "default_engine": [[386, "default-engine"]], "type alias default_engine": [[386, "type-alias-default-engine"]], "gaussian_mv": [[390, "gaussian-mv"]], "class gaussian_mv": [[390, "class-gaussian-mv"]], "generate (Buffer version)": [[391, "generate-buffer-version"]], "generate (USM version)": [[391, "generate-usm-version"]], "gumbel": [[393, "gumbel"]], "class gumbel": [[393, "class-gumbel"]], "hypergeometric": [[394, "hypergeometric"]], "class hypergeometric": [[394, "class-hypergeometric"]], "laplace": [[395, "laplace"]], "class laplace": [[395, "class-laplace"]], "leapfrog": [[396, "leapfrog"], [396, "onemath-rng-leapfrog-common"]], "mt19937": [[401, "mt19937"]], "class mt19937": [[401, "class-mt19937"]], "mt2203": [[402, "mt2203"]], "class mt2203": [[402, "class-mt2203"]], "multinomial": [[403, "multinomial"]], "class multinomial": [[403, "class-multinomial"]], "negative_binomial": [[404, "negative-binomial"]], "class negative_binomial": [[404, "class-negative-binomial"]], "niederreiter": [[405, "niederreiter"]], "class niederreiter": [[405, "class-niederreiter"]], "nondeterministic": [[406, "nondeterministic"]], "class nondeterministic": [[406, "class-nondeterministic"]], "poisson_v": [[409, "poisson-v"]], "class poisson_v": [[409, "class-poisson-v"]], "r250": [[410, "r250"]], "class r250": [[410, "class-r250"]], "rayleigh": [[411, "rayleigh"]], "class rayleigh": [[411, "class-rayleigh"]], "sfmt19937": [[412, "sfmt19937"]], "class sfmt19937": [[412, "class-sfmt19937"]], "skip_ahead (Interface with a partitioned number of skipped elements)": [[413, "skip-ahead-interface-with-a-partitioned-number-of-skipped-elements"]], "sobol": [[414, "sobol"]], "class sobol": [[414, "class-sobol"]], "uniform (continuous)": [[415, "uniform-continuous"]], "uniform (discrete)": [[416, "uniform-discrete"]], "oneMath RNG Host Usage Model": [[418, "onemath-rng-host-usage-model"]], "Buffer-based example": [[418, "buffer-based-example"]], "USM-based example": [[418, "usm-based-example"], [463, "usm-based-example"]], "weibull": [[419, "weibull"]], "class weibull": [[419, "class-weibull"]], "wichmann_hill": [[420, "wichmann-hill"]], "class wichmann_hill": [[420, "class-wichmann-hill"]], "Random Number Generators Host Routines": [[421, "random-number-generators-host-routines"]], "Host Service Routines": [[422, "host-service-routines"]], "Random Number Generators (RNG)": [[423, "random-number-generators-rng"]], "Data handles": [[424, "data-handles"]], "Dense vector handle": [[424, "dense-vector-handle"]], "Dense matrix handle": [[424, "dense-matrix-handle"]], "Sparse matrix handle": [[424, "sparse-matrix-handle"]], "Sparse storage formats": [[425, "sparse-storage-formats"]], "init_coo_matrix": [[426, "init-coo-matrix"]], "init_coo_matrix (Buffer version)": [[426, "init-coo-matrix-buffer-version"]], "init_coo_matrix (USM version)": [[426, "init-coo-matrix-usm-version"]], "init_csr_matrix": [[427, "init-csr-matrix"]], "init_csr_matrix (Buffer version)": [[427, "init-csr-matrix-buffer-version"]], "init_csr_matrix (USM version)": [[427, "init-csr-matrix-usm-version"]], "init_dense_matrix": [[428, "init-dense-matrix"]], "init_dense_matrix (Buffer version)": [[428, "init-dense-matrix-buffer-version"]], "init_dense_matrix (USM version)": [[428, "init-dense-matrix-usm-version"]], "init_dense_vector": [[429, "init-dense-vector"]], "init_dense_vector (Buffer version)": [[429, "init-dense-vector-buffer-version"]], "init_dense_vector (USM version)": [[429, "init-dense-vector-usm-version"]], "release_dense_matrix": [[430, "release-dense-matrix"]], "release_dense_vector": [[431, "release-dense-vector"]], "release_sparse_matrix": [[432, "release-sparse-matrix"]], "set_coo_matrix_data": [[433, "set-coo-matrix-data"]], "set_coo_matrix_data (Buffer version)": [[433, "set-coo-matrix-data-buffer-version"]], "set_coo_matrix_data (USM version)": [[433, "set-coo-matrix-data-usm-version"]], "set_csr_matrix_data": [[434, "set-csr-matrix-data"]], "set_csr_matrix_data (Buffer version)": [[434, "set-csr-matrix-data-buffer-version"]], "set_csr_matrix_data (USM version)": [[434, "set-csr-matrix-data-usm-version"]], "set_dense_matrix_data": [[435, "set-dense-matrix-data"]], "set_dense_matrix_data (Buffer version)": [[435, "set-dense-matrix-data-buffer-version"]], "set_dense_matrix_data (USM version)": [[435, "set-dense-matrix-data-usm-version"]], "set_dense_vector_data": [[436, "set-dense-vector-data"]], "set_dense_vector_data (Buffer version)": [[436, "set-dense-vector-data-buffer-version"]], "set_dense_vector_data (USM version)": [[436, "set-dense-vector-data-usm-version"]], "set_matrix_property": [[437, "set-matrix-property"], [437, "id1"]], "Matrix properties": [[437, "matrix-properties"]], "symmetric": [[437, "symmetric"]], "sorted": [[437, "sorted"]], "sorted_by_rows": [[437, "sorted-by-rows"]], "Matrix view": [[438, "matrix-view"]], "matrix_descr": [[438, "matrix-descr"]], "matrix_view": [[438, "onemath-sparse-matrix-view"]], "spmm": [[439, "spmm"], [439, "onemath-sparse-spmm"]], "spmm_descr": [[439, "spmm-descr"]], "init_spmm_descr": [[439, "init-spmm-descr"]], "release_spmm_descr": [[439, "release-spmm-descr"]], "spmm_alg": [[439, "spmm-alg"]], "spmv_descr": [[440, "spmv-descr"]], "init_spmv_descr": [[440, "init-spmv-descr"]], "release_spmv_descr": [[440, "release-spmv-descr"]], "spmv_alg": [[440, "spmv-alg"]], "spsv": [[441, "spsv"], [441, "onemath-sparse-spsv"]], "spsv_descr": [[441, "spsv-descr"]], "init_spsv_descr": [[441, "init-spsv-descr"]], "release_spsv_descr": [[441, "release-spsv-descr"]], "spsv_alg": [[441, "spsv-alg"]], "Sparse BLAS": [[442, "sparse-blas"]], "Supported template types": [[443, "supported-template-types"]], "central_moment": [[444, "central-moment"]], "central_moment (buffer version)": [[444, "central-moment-buffer-version"]], "central_moment (USM version)": [[444, "central-moment-usm-version"]], "central_moment with provided mean": [[445, "central-moment-with-provided-mean"]], "central_moment with provided mean (buffer version)": [[445, "central-moment-with-provided-mean-buffer-version"]], "central_moment with provided mean (USM version)": [[445, "central-moment-with-provided-mean-usm-version"]], "central_sum": [[446, "central-sum"]], "central_sum (Buffer version)": [[446, "central-sum-buffer-version"]], "central_sum (USM version)": [[446, "central-sum-usm-version"]], "central_sum with provided mean": [[447, "central-sum-with-provided-mean"]], "central_sum with provided mean (buffer version)": [[447, "central-sum-with-provided-mean-buffer-version"]], "central_sum with provided mean  (USM version)": [[447, "central-sum-with-provided-mean-usm-version"]], "dataset": [[448, "dataset"]], "structure dataset (Buffer version)": [[448, "structure-dataset-buffer-version"]], "structure dataset (USM version)": [[448, "structure-dataset-usm-version"]], "kurtosis": [[449, "kurtosis"]], "kurtosis (buffer version)": [[449, "kurtosis-buffer-version"]], "kurtosis (USM version)": [[449, "kurtosis-usm-version"]], "kurtosis with provided mean": [[450, "kurtosis-with-provided-mean"]], "kurtosis with provided mean (buffer version)": [[450, "kurtosis-with-provided-mean-buffer-version"]], "kurtosis with provided mean (USM version)": [[450, "kurtosis-with-provided-mean-usm-version"]], "make_dataset": [[451, "make-dataset"]], "make_dataset (buffer version)": [[451, "make-dataset-buffer-version"]], "make_dataset (USM version)": [[451, "make-dataset-usm-version"]], "max": [[452, "max"]], "max (buffer version)": [[452, "max-buffer-version"]], "max (USM version)": [[452, "max-usm-version"]], "mean": [[453, "mean"]], "mean (buffer version)": [[453, "mean-buffer-version"]], "mean (USM version)": [[453, "mean-usm-version"]], "min": [[454, "min"]], "min (buffer version)": [[454, "min-buffer-version"]], "min (USM version)": [[454, "min-usm-version"]], "min_max": [[455, "min-max"]], "min_max (buffer version)": [[455, "min-max-buffer-version"]], "min_max (USM version)": [[455, "min-max-usm-version"]], "raw_moment": [[457, "raw-moment"]], "oneapi::math::stats::raw_moment (buffer version)": [[457, "oneapi-math-stats-raw-moment-buffer-version"]], "raw_moment (USM version)": [[457, "raw-moment-usm-version"]], "raw_sum": [[458, "raw-sum"]], "raw_sum (Buffer version)": [[458, "raw-sum-buffer-version"]], "raw_sum (USM version)": [[458, "raw-sum-usm-version"]], "Summary Statistics Routines": [[459, "summary-statistics-routines"]], "Service Routines": [[460, "service-routines"]], "skewness": [[461, "skewness"]], "skewness (buffer version)": [[461, "skewness-buffer-version"]], "skewness (USM version)": [[461, "skewness-usm-version"]], "skewness with provided mean": [[462, "skewness-with-provided-mean"]], "skewness with provided mean (buffer version)": [[462, "skewness-with-provided-mean-buffer-version"]], "skewness with provided mean (USM version)": [[462, "skewness-with-provided-mean-usm-version"]], "oneMath Summary Statistics Usage Model": [[463, "onemath-summary-statistics-usage-model"]], "variation": [[464, "variation"]], "variation (buffer version)": [[464, "variation-buffer-version"]], "variation (USM version)": [[464, "variation-usm-version"]], "variation with provided mean": [[465, "variation-with-provided-mean"]], "oneapi::math::stats::variation (buffer version)": [[465, "oneapi-math-stats-variation-buffer-version"]], "variation with provided mean (USM version)": [[465, "variation-with-provided-mean-usm-version"]], "Scalar Arguments in BLAS": [[466, "scalar-arguments-in-blas"]], "abs": [[467, "abs"]], "acos": [[468, "acos"]], "acosh": [[469, "acosh"]], "acospi": [[470, "acospi"]], "add": [[471, "add"]], "arg": [[472, "arg"]], "asin": [[473, "asin"]], "asinh": [[474, "asinh"]], "asinpi": [[475, "asinpi"]], "atan": [[476, "atan"]], "atan2": [[477, "atan2"]], "atan2pi": [[478, "atan2pi"]], "atanh": [[479, "atanh"]], "atanpi": [[480, "atanpi"]], "cbrt": [[482, "cbrt"]], "cdfnorm": [[483, "cdfnorm"]], "cdfnorminv": [[484, "cdfnorminv"]], "ceil": [[485, "ceil"]], "cis": [[486, "cis"]], "clear_status": [[487, "clear-status"]], "conj": [[488, "conj"]], "copysign": [[489, "copysign"]], "cos": [[490, "cos"]], "cosd": [[491, "cosd"]], "cosh": [[492, "cosh"]], "cospi": [[493, "cospi"]], "create_error_handler": [[494, "create-error-handler"]], "div": [[495, "div"]], "erf": [[496, "erf"]], "erfc": [[497, "erfc"]], "erfcinv": [[498, "erfcinv"]], "erfinv": [[499, "erfinv"]], "exp": [[500, "exp"]], "exp10": [[501, "exp10"]], "exp2": [[502, "exp2"]], "expint1": [[503, "expint1"]], "expm1": [[504, "expm1"]], "fdim": [[505, "fdim"]], "floor": [[506, "floor"]], "fmax": [[507, "fmax"]], "fmin": [[508, "fmin"]], "fmod": [[509, "fmod"]], "frac": [[510, "frac"]], "get_mode": [[511, "get-mode"]], "get_status": [[512, "get-status"]], "hypot": [[513, "hypot"]], "inv": [[514, "inv"]], "invcbrt": [[515, "invcbrt"]], "invsqrt": [[516, "invsqrt"]], "lgamma": [[517, "lgamma"]], "linearfrac": [[518, "linearfrac"]], "ln": [[519, "ln"]], "log10": [[520, "log10"]], "log1p": [[521, "log1p"]], "log2": [[522, "log2"]], "logb": [[523, "logb"]], "maxmag": [[524, "maxmag"]], "minmag": [[525, "minmag"]], "modf": [[526, "modf"]], "mul": [[527, "mul"]], "mulbyconj": [[528, "mulbyconj"]], "nearbyint": [[529, "nearbyint"]], "nextafter": [[530, "nextafter"]], "pow": [[531, "pow"]], "pow2o3": [[532, "pow2o3"]], "pow3o2": [[533, "pow3o2"]], "powr": [[534, "powr"]], "powx": [[535, "powx"]], "remainder": [[536, "remainder"]], "rint": [[537, "rint"]], "round": [[538, "round"]], "set_status": [[539, "set-status"]], "set_mode": [[540, "set-mode"]], "sin": [[541, "sin"]], "sincos": [[542, "sincos"]], "sind": [[543, "sind"]], "sinh": [[544, "sinh"]], "sinpi": [[545, "sinpi"]], "Special Value Notations": [[546, "special-value-notations"]], "sqr": [[547, "sqr"]], "sqrt": [[548, "sqrt"]], "sub": [[549, "sub"]], "tan": [[550, "tan"]], "tand": [[551, "tand"]], "tanh": [[552, "tanh"]], "tanpi": [[553, "tanpi"]], "tgamma": [[554, "tgamma"]], "trunc": [[555, "trunc"]], "Exceptions": [[557, "exceptions"]], "VM Mathematical Functions": [[558, "vm-mathematical-functions"]], "VM Service Functions": [[559, "vm-service-functions"]], "oneMath": [[560, "onemath"]], "Parallel Functions": [[561, "parallel-functions"]], "Blocked Ranges": [[561, "blocked-ranges"]], "Partitioners": [[561, "partitioners"]], "Split Tags": [[561, "split-tags"]], "blocked_nd_range": [[562, "blocked-nd-range"]], "Member types": [[562, "member-types"], [563, "member-types"], [564, "member-types"], [758, "member-types"], [771, "member-types"], [774, "member-types"], [779, "member-types"]], "Member functions": [[562, "member-functions"], [563, "member-functions"], [564, "member-functions"], [565, "member-functions"], [567, "member-functions"], [568, "member-functions"], [574, "member-functions"], [576, "member-functions"], [580, "member-functions"], [585, "member-functions"], [593, "member-functions"], [594, "member-functions"], [595, "member-functions"], [603, "member-functions"], [604, "member-functions"], [616, "member-functions"], [630, "member-functions"], [631, "member-functions"], [644, "member-functions"], [645, "member-functions"], [658, "member-functions"], [666, "member-functions"], [674, "member-functions"], [687, "member-functions"], [702, "member-functions"], [716, "member-functions"], [730, "member-functions"], [744, "member-functions"], [756, "member-functions"], [758, "member-functions"], [759, "member-functions"], [760, "member-functions"], [761, "member-functions"], [763, "member-functions"], [767, "member-functions"], [769, "member-functions"], [771, "member-functions"], [772, "member-functions"], [774, "member-functions"], [776, "member-functions"], [779, "member-functions"], [782, "member-functions"], [784, "member-functions"], [785, "member-functions"], [790, "member-functions"], [791, "member-functions"], [792, "member-functions"], [793, "member-functions"], [805, "member-functions"], [806, "member-functions"], [807, "member-functions"], [808, "member-functions"], [809, "member-functions"], [810, "member-functions"], [811, "member-functions"], [812, "member-functions"], [813, "member-functions"], [814, "member-functions"], [852, "member-functions"], [854, "member-functions"], [856, "member-functions"], [857, "member-functions"], [859, "member-functions"], [863, "member-functions"], [864, "member-functions"], [871, "member-functions"]], "Deduction Guides": [[562, "deduction-guides"], [574, "deduction-guides"], [763, "deduction-guides"], [767, "deduction-guides"], [772, "deduction-guides"], [774, "deduction-guides"], [790, "deduction-guides"]], "blocked_range2d": [[563, "blocked-range2d"]], "blocked_range3d": [[564, "blocked-range3d"]], "blocked_range": [[565, "blocked-range"]], "collaborative_call_once": [[566, "collaborative-call-once"]], "collaborative_once_flag Class": [[566, "collaborative-once-flag-class"]], "collaborative_once_flag": [[567, "collaborative-once-flag"]], "feeder": [[568, "feeder"]], "parallel_deterministic_reduce": [[569, "parallel-deterministic-reduce"]], "parallel_for_each": [[570, "parallel-for-each"]], "feeder Class": [[570, "feeder-class"]], "parallel_for": [[571, "parallel-for"]], "parallel_invoke": [[572, "parallel-invoke"]], "parallel_pipeline": [[573, "parallel-pipeline"]], "filter Class Template": [[573, "filter-class-template"]], "flow_control Class": [[573, "flow-control-class"]], "filter": [[574, "filter"]], "filter_mode Enumeration": [[574, "filter-mode-enumeration"]], "Non-member functions": [[574, "non-member-functions"], [595, "non-member-functions"], [603, "non-member-functions"], [616, "non-member-functions"], [631, "non-member-functions"], [645, "non-member-functions"], [658, "non-member-functions"], [666, "non-member-functions"], [674, "non-member-functions"], [687, "non-member-functions"], [702, "non-member-functions"], [716, "non-member-functions"], [730, "non-member-functions"], [744, "non-member-functions"], [792, "non-member-functions"], [859, "non-member-functions"], [871, "non-member-functions"], [874, "non-member-functions"]], "filter_mode": [[575, "filter-mode"]], "flow_control": [[576, "flow-control"]], "parallel_reduce": [[577, "parallel-reduce"]], "Example (Imperative Form)": [[577, "example-imperative-form"], [578, "example-imperative-form"]], "Example with Lambda Expressions": [[577, "example-with-lambda-expressions"], [578, "example-with-lambda-expressions"]], "parallel_scan": [[578, "parallel-scan"]], "pre_scan and final_scan Classes": [[578, "pre-scan-and-final-scan-classes"]], "parallel_sort": [[579, "parallel-sort"]], "pre_scan_tag and final_scan_tag": [[580, "pre-scan-tag-and-final-scan-tag"]], "affinity_partitioner": [[581, "affinity-partitioner"]], "auto_partitioner": [[582, "auto-partitioner"]], "simple_partitioner": [[583, "simple-partitioner"]], "static_partitioner": [[584, "static-partitioner"]], "proportional split": [[585, "proportional-split"]], "split": [[586, "split"]], "Configuration": [[587, "configuration"]], "Enabling Debugging Features": [[588, "enabling-debugging-features"]], "Debugging Macros": [[588, "id1"]], "TBB_USE_ASSERT Macro": [[588, "tbb-use-assert-macro"]], "TBB_USE_PROFILING_TOOLS Macro": [[588, "tbb-use-profiling-tools-macro"]], "Feature Macros": [[589, "feature-macros"]], "TBB_USE_EXCEPTIONS macro": [[589, "tbb-use-exceptions-macro"]], "TBB_USE_GLIBCXX_VERSION macro": [[589, "tbb-use-glibcxx-version-macro"]], "tbb Namespace": [[590, "tbb-namespace"]], "tbb::flow Namespace": [[590, "tbb-flow-namespace"]], "oneapi::tbb Namespace": [[590, "oneapi-tbb-namespace"]], "Version Macros": [[591, "version-macros"]], "TBB_runtime_interface_version Function": [[591, "tbb-runtime-interface-version-function"]], "TBB_runtime_version Function": [[591, "tbb-runtime-version-function"]], "TBB_VERSION Environment Variable": [[591, "tbb-version-environment-variable"]], "Containers": [[592, "containers"], [815, "containers"]], "Sequences": [[592, "sequences"]], "Queues": [[592, "queues"]], "Unordered associative containers": [[592, "unordered-associative-containers"]], "Ordered associative containers": [[592, "ordered-associative-containers"]], "Auxiliary classes": [[592, "auxiliary-classes"]], "Node handles": [[593, "node-handles"]], "Class synopsis": [[593, "class-synopsis"]], "Assignment": [[593, "assignment"]], "Destructor": [[593, "destructor"], [596, "destructor"], [605, "destructor"], [617, "destructor"], [632, "destructor"], [646, "destructor"], [659, "destructor"], [667, "destructor"], [675, "destructor"], [689, "destructor"], [704, "destructor"], [718, "destructor"], [732, "destructor"], [746, "destructor"], [866, "destructor"]], "Swap": [[593, "swap"]], "State": [[593, "state"]], "Access to the stored element": [[593, "access-to-the-stored-element"]], "get_allocator": [[593, "get-allocator"], [601, "get-allocator"], [605, "get-allocator"], [625, "get-allocator"], [639, "get-allocator"], [653, "get-allocator"], [672, "get-allocator"], [682, "get-allocator"], [697, "get-allocator"], [711, "get-allocator"], [725, "get-allocator"], [739, "get-allocator"], [746, "get-allocator"]], "tbb_hash_compare": [[594, "tbb-hash-compare"]], "Class Template Synopsis": [[594, "class-template-synopsis"], [595, "class-template-synopsis"], [603, "class-template-synopsis"], [616, "class-template-synopsis"], [631, "class-template-synopsis"], [645, "class-template-synopsis"], [658, "class-template-synopsis"], [666, "class-template-synopsis"], [674, "class-template-synopsis"], [687, "class-template-synopsis"], [702, "class-template-synopsis"], [716, "class-template-synopsis"], [730, "class-template-synopsis"], [744, "class-template-synopsis"]], "concurrent_bounded_queue": [[595, "concurrent-bounded-queue"]], "Other": [[595, "other"], [603, "other"], [616, "other"], [631, "other"], [645, "other"], [658, "other"], [666, "other"], [674, "other"], [687, "other"], [702, "other"], [716, "other"], [730, "other"], [744, "other"]], "Construction, destruction, copying": [[596, "construction-destruction-copying"], [605, "construction-destruction-copying"], [617, "construction-destruction-copying"], [632, "construction-destruction-copying"], [646, "construction-destruction-copying"], [659, "construction-destruction-copying"], [667, "construction-destruction-copying"], [675, "construction-destruction-copying"], [689, "construction-destruction-copying"], [704, "construction-destruction-copying"], [718, "construction-destruction-copying"], [732, "construction-destruction-copying"], [746, "construction-destruction-copying"], [866, "construction-destruction-copying"]], "Empty container constructors": [[596, "empty-container-constructors"], [605, "empty-container-constructors"], [617, "empty-container-constructors"], [632, "empty-container-constructors"], [646, "empty-container-constructors"], [659, "empty-container-constructors"], [667, "empty-container-constructors"], [675, "empty-container-constructors"], [689, "empty-container-constructors"], [704, "empty-container-constructors"], [718, "empty-container-constructors"], [732, "empty-container-constructors"], [746, "empty-container-constructors"], [866, "empty-container-constructors"]], "Constructors from the sequence of elements": [[596, "constructors-from-the-sequence-of-elements"], [605, "constructors-from-the-sequence-of-elements"], [617, "constructors-from-the-sequence-of-elements"], [632, "constructors-from-the-sequence-of-elements"], [646, "constructors-from-the-sequence-of-elements"], [659, "constructors-from-the-sequence-of-elements"], [667, "constructors-from-the-sequence-of-elements"], [675, "constructors-from-the-sequence-of-elements"], [689, "constructors-from-the-sequence-of-elements"], [704, "constructors-from-the-sequence-of-elements"], [718, "constructors-from-the-sequence-of-elements"], [732, "constructors-from-the-sequence-of-elements"], [746, "constructors-from-the-sequence-of-elements"]], "Copying constructors": [[596, "copying-constructors"], [605, "copying-constructors"], [617, "copying-constructors"], [632, "copying-constructors"], [646, "copying-constructors"], [659, "copying-constructors"], [667, "copying-constructors"], [675, "copying-constructors"], [689, "copying-constructors"], [704, "copying-constructors"], [718, "copying-constructors"], [732, "copying-constructors"], [746, "copying-constructors"], [866, "copying-constructors"]], "Moving constructors": [[596, "moving-constructors"], [605, "moving-constructors"], [617, "moving-constructors"], [632, "moving-constructors"], [646, "moving-constructors"], [659, "moving-constructors"], [667, "moving-constructors"], [675, "moving-constructors"], [689, "moving-constructors"], [704, "moving-constructors"], [718, "moving-constructors"], [732, "moving-constructors"], [746, "moving-constructors"], [866, "moving-constructors"]], "assign": [[596, "assign"], [659, "assign"], [667, "assign"], [746, "assign"]], "Deduction guides": [[597, "deduction-guides"], [606, "deduction-guides"], [618, "deduction-guides"], [633, "deduction-guides"], [647, "deduction-guides"], [660, "deduction-guides"], [668, "deduction-guides"], [676, "deduction-guides"], [690, "deduction-guides"], [705, "deduction-guides"], [719, "deduction-guides"], [733, "deduction-guides"], [747, "deduction-guides"]], "unsafe_begin and unsafe_cbegin": [[598, "unsafe-begin-and-unsafe-cbegin"], [669, "unsafe-begin-and-unsafe-cbegin"]], "unsafe_end and unsafe_cend": [[598, "unsafe-end-and-unsafe-cend"], [669, "unsafe-end-and-unsafe-cend"]], "Non-member binary comparisons": [[599, "non-member-binary-comparisons"], [611, "non-member-binary-comparisons"], [622, "non-member-binary-comparisons"], [636, "non-member-binary-comparisons"], [650, "non-member-binary-comparisons"], [661, "non-member-binary-comparisons"], [670, "non-member-binary-comparisons"], [679, "non-member-binary-comparisons"], [695, "non-member-binary-comparisons"], [709, "non-member-binary-comparisons"], [723, "non-member-binary-comparisons"], [737, "non-member-binary-comparisons"], [750, "non-member-binary-comparisons"]], "Non-member swap": [[600, "non-member-swap"], [612, "non-member-swap"], [624, "non-member-swap"], [638, "non-member-swap"], [652, "non-member-swap"], [662, "non-member-swap"], [671, "non-member-swap"], [681, "non-member-swap"], [696, "non-member-swap"], [710, "non-member-swap"], [724, "non-member-swap"], [738, "non-member-swap"], [752, "non-member-swap"]], "Concurrently safe member functions": [[601, "concurrently-safe-member-functions"], [672, "concurrently-safe-member-functions"]], "Pushing elements": [[601, "pushing-elements"], [663, "pushing-elements"], [672, "pushing-elements"]], "Popping elements": [[601, "popping-elements"], [663, "popping-elements"], [672, "popping-elements"]], "abort": [[601, "abort"]], "Capacity of the queue": [[601, "capacity-of-the-queue"]], "Concurrently unsafe member functions": [[602, "concurrently-unsafe-member-functions"], [673, "concurrently-unsafe-member-functions"]], "The number of elements": [[602, "the-number-of-elements"], [673, "the-number-of-elements"]], "clear": [[602, "clear"], [615, "clear"], [665, "clear"], [673, "clear"], [755, "clear"], [870, "clear"]], "concurrent_hash_map": [[603, "concurrent-hash-map"]], "Member classes": [[603, "member-classes"], [616, "member-classes"], [631, "member-classes"], [805, "member-classes"], [806, "member-classes"], [807, "member-classes"], [808, "member-classes"], [809, "member-classes"], [810, "member-classes"], [811, "member-classes"], [812, "member-classes"], [813, "member-classes"], [814, "member-classes"]], "accessor and const_accessor": [[604, "accessor-and-const-accessor"]], "accessor member class": [[604, "accessor-member-class"]], "const_accessor member class": [[604, "const-accessor-member-class"]], "Construction and destruction": [[604, "construction-and-destruction"]], "Emptiness": [[604, "emptiness"]], "Key-value pair access": [[604, "key-value-pair-access"]], "Releasing": [[604, "releasing"]], "Hash policy": [[607, "hash-policy"], [692, "hash-policy"], [706, "hash-policy"], [720, "hash-policy"], [734, "hash-policy"]], "Rehashing": [[607, "rehashing"]], "bucket_count": [[607, "bucket-count"]], "begin and cbegin": [[608, "begin-and-cbegin"], [620, "begin-and-cbegin"], [634, "begin-and-cbegin"], [648, "begin-and-cbegin"], [677, "begin-and-cbegin"], [693, "begin-and-cbegin"], [707, "begin-and-cbegin"], [721, "begin-and-cbegin"], [735, "begin-and-cbegin"], [749, "begin-and-cbegin"]], "end and cend": [[608, "end-and-cend"], [620, "end-and-cend"], [634, "end-and-cend"], [648, "end-and-cend"], [677, "end-and-cend"], [693, "end-and-cend"], [707, "end-and-cend"], [721, "end-and-cend"], [735, "end-and-cend"], [749, "end-and-cend"]], "equal_range": [[608, "equal-range"], [621, "equal-range"], [635, "equal-range"], [649, "equal-range"], [678, "equal-range"], [694, "equal-range"], [708, "equal-range"], [722, "equal-range"], [736, "equal-range"]], "Lookup": [[609, "lookup"], [621, "lookup"], [635, "lookup"], [649, "lookup"], [678, "lookup"], [694, "lookup"], [708, "lookup"], [722, "lookup"], [736, "lookup"]], "find": [[609, "find"], [621, "find"], [635, "find"], [649, "find"], [678, "find"], [694, "find"], [708, "find"], [722, "find"], [736, "find"]], "count": [[609, "count"], [621, "count"], [635, "count"], [649, "count"], [678, "count"], [694, "count"], [708, "count"], [722, "count"], [736, "count"]], "Concurrently safe modifiers": [[610, "concurrently-safe-modifiers"], [627, "concurrently-safe-modifiers"], [641, "concurrently-safe-modifiers"], [655, "concurrently-safe-modifiers"], [663, "concurrently-safe-modifiers"], [684, "concurrently-safe-modifiers"], [699, "concurrently-safe-modifiers"], [713, "concurrently-safe-modifiers"], [727, "concurrently-safe-modifiers"], [741, "concurrently-safe-modifiers"], [868, "concurrently-safe-modifiers"]], "Inserting values": [[610, "inserting-values"], [627, "inserting-values"], [641, "inserting-values"], [655, "inserting-values"], [684, "inserting-values"], [699, "inserting-values"], [713, "inserting-values"], [727, "inserting-values"], [741, "inserting-values"]], "Inserting sequences of elements": [[610, "inserting-sequences-of-elements"], [627, "inserting-sequences-of-elements"], [641, "inserting-sequences-of-elements"], [655, "inserting-sequences-of-elements"], [684, "inserting-sequences-of-elements"], [699, "inserting-sequences-of-elements"], [713, "inserting-sequences-of-elements"], [727, "inserting-sequences-of-elements"], [741, "inserting-sequences-of-elements"]], "Emplacing elements": [[610, "emplacing-elements"], [627, "emplacing-elements"], [641, "emplacing-elements"], [655, "emplacing-elements"], [684, "emplacing-elements"], [699, "emplacing-elements"], [713, "emplacing-elements"], [727, "emplacing-elements"], [741, "emplacing-elements"]], "Erasing elements": [[610, "erasing-elements"], [629, "erasing-elements"], [643, "erasing-elements"], [657, "erasing-elements"], [686, "erasing-elements"], [701, "erasing-elements"], [715, "erasing-elements"], [729, "erasing-elements"], [743, "erasing-elements"]], "Parallel iteration": [[613, "parallel-iteration"], [626, "parallel-iteration"], [640, "parallel-iteration"], [654, "parallel-iteration"], [683, "parallel-iteration"], [698, "parallel-iteration"], [712, "parallel-iteration"], [726, "parallel-iteration"], [740, "parallel-iteration"], [753, "parallel-iteration"]], "range member function": [[613, "range-member-function"], [626, "range-member-function"], [640, "range-member-function"], [654, "range-member-function"], [683, "range-member-function"], [698, "range-member-function"], [712, "range-member-function"], [726, "range-member-function"], [740, "range-member-function"], [753, "range-member-function"]], "Size and capacity": [[614, "size-and-capacity"], [628, "size-and-capacity"], [642, "size-and-capacity"], [656, "size-and-capacity"], [664, "size-and-capacity"], [685, "size-and-capacity"], [700, "size-and-capacity"], [714, "size-and-capacity"], [728, "size-and-capacity"], [742, "size-and-capacity"], [754, "size-and-capacity"], [869, "size-and-capacity"]], "empty": [[614, "empty"], [628, "empty"], [642, "empty"], [656, "empty"], [664, "empty"], [685, "empty"], [700, "empty"], [714, "empty"], [728, "empty"], [742, "empty"], [754, "empty"]], "size": [[614, "size"], [628, "size"], [642, "size"], [656, "size"], [664, "size"], [685, "size"], [700, "size"], [714, "size"], [728, "size"], [742, "size"], [754, "size"]], "max_size": [[614, "max-size"], [628, "max-size"], [642, "max-size"], [656, "max-size"], [685, "max-size"], [700, "max-size"], [714, "max-size"], [728, "max-size"], [742, "max-size"], [754, "max-size"]], "Concurrently unsafe modifiers": [[615, "concurrently-unsafe-modifiers"], [629, "concurrently-unsafe-modifiers"], [643, "concurrently-unsafe-modifiers"], [657, "concurrently-unsafe-modifiers"], [665, "concurrently-unsafe-modifiers"], [686, "concurrently-unsafe-modifiers"], [701, "concurrently-unsafe-modifiers"], [715, "concurrently-unsafe-modifiers"], [729, "concurrently-unsafe-modifiers"], [743, "concurrently-unsafe-modifiers"], [870, "concurrently-unsafe-modifiers"]], "concurrent_map": [[616, "concurrent-map"]], "Element access": [[619, "element-access"], [691, "element-access"], [748, "element-access"]], "at": [[619, "at"], [691, "at"]], "operator[]": [[619, "operator"], [691, "operator"]], "contains": [[621, "contains"], [635, "contains"], [649, "contains"], [678, "contains"], [694, "contains"], [708, "contains"], [722, "contains"], [736, "contains"]], "lower_bound": [[621, "lower-bound"], [635, "lower-bound"], [649, "lower-bound"], [678, "lower-bound"]], "upper_bound": [[621, "upper-bound"], [635, "upper-bound"], [649, "upper-bound"], [678, "upper-bound"]], "Non-member lexicographical comparisons": [[623, "non-member-lexicographical-comparisons"], [637, "non-member-lexicographical-comparisons"], [651, "non-member-lexicographical-comparisons"], [680, "non-member-lexicographical-comparisons"], [751, "non-member-lexicographical-comparisons"]], "Observers": [[625, "observers"], [639, "observers"], [653, "observers"], [682, "observers"], [697, "observers"], [711, "observers"], [725, "observers"], [739, "observers"]], "key_comp": [[625, "key-comp"], [639, "key-comp"], [653, "key-comp"], [682, "key-comp"]], "value_comp": [[625, "value-comp"], [639, "value-comp"], [653, "value-comp"], [682, "value-comp"]], "Inserting nodes": [[627, "inserting-nodes"], [641, "inserting-nodes"], [655, "inserting-nodes"], [684, "inserting-nodes"], [699, "inserting-nodes"], [713, "inserting-nodes"], [727, "inserting-nodes"], [741, "inserting-nodes"]], "Clearing": [[629, "clearing"], [643, "clearing"], [657, "clearing"], [686, "clearing"], [701, "clearing"], [715, "clearing"], [729, "clearing"], [743, "clearing"]], "Erasing sequences": [[629, "erasing-sequences"], [643, "erasing-sequences"], [657, "erasing-sequences"], [686, "erasing-sequences"], [701, "erasing-sequences"], [715, "erasing-sequences"], [729, "erasing-sequences"], [743, "erasing-sequences"]], "Extracting nodes": [[629, "extracting-nodes"], [643, "extracting-nodes"], [657, "extracting-nodes"], [686, "extracting-nodes"], [701, "extracting-nodes"], [715, "extracting-nodes"], [729, "extracting-nodes"], [743, "extracting-nodes"]], "value_compare": [[630, "value-compare"], [644, "value-compare"]], "Class Synopsis": [[630, "class-synopsis"], [644, "class-synopsis"]], "Member objects": [[630, "member-objects"], [644, "member-objects"]], "concurrent_multimap": [[631, "concurrent-multimap"]], "Merging containers": [[641, "merging-containers"], [655, "merging-containers"], [684, "merging-containers"], [713, "merging-containers"], [727, "merging-containers"], [741, "merging-containers"]], "concurrent_multiset": [[645, "concurrent-multiset"]], "concurrent_priority_queue": [[658, "concurrent-priority-queue"]], "concurrent_queue": [[666, "concurrent-queue"]], "concurrent_set": [[674, "concurrent-set"]], "concurrent_unordered_map": [[687, "concurrent-unordered-map"]], "Bucket interface": [[688, "bucket-interface"], [703, "bucket-interface"], [717, "bucket-interface"], [731, "bucket-interface"]], "Bucket begin and bucket end": [[688, "bucket-begin-and-bucket-end"], [703, "bucket-begin-and-bucket-end"], [717, "bucket-begin-and-bucket-end"], [731, "bucket-begin-and-bucket-end"]], "The number of buckets": [[688, "the-number-of-buckets"], [703, "the-number-of-buckets"], [717, "the-number-of-buckets"], [731, "the-number-of-buckets"]], "Size of the bucket": [[688, "size-of-the-bucket"], [703, "size-of-the-bucket"], [717, "size-of-the-bucket"], [731, "size-of-the-bucket"]], "Bucket number": [[688, "bucket-number"], [703, "bucket-number"], [717, "bucket-number"], [731, "bucket-number"]], "Load factor": [[692, "load-factor"], [706, "load-factor"], [720, "load-factor"], [734, "load-factor"]], "Manual rehashing": [[692, "manual-rehashing"], [706, "manual-rehashing"], [720, "manual-rehashing"], [734, "manual-rehashing"]], "hash_function": [[697, "hash-function"], [711, "hash-function"], [725, "hash-function"], [739, "hash-function"]], "key_eq": [[697, "key-eq"], [711, "key-eq"], [725, "key-eq"], [739, "key-eq"]], "concurrent_unordered_multimap": [[702, "concurrent-unordered-multimap"]], "concurrent_unordered_multiset": [[716, "concurrent-unordered-multiset"]], "concurrent_unordered_set": [[730, "concurrent-unordered-set"]], "concurrent_vector": [[744, "concurrent-vector"]], "Exception Safety": [[744, "exception-safety"]], "Concurrent growth": [[745, "concurrent-growth"]], "grow_by": [[745, "grow-by"]], "grow_to_at_least": [[745, "grow-to-at-least"]], "push_back": [[745, "push-back"]], "emplace_back": [[745, "emplace-back"]], "Access by index": [[748, "access-by-index"]], "Access the first and the last element": [[748, "access-the-first-and-the-last-element"]], "rbegin and crbegin": [[749, "rbegin-and-crbegin"]], "rend and crend": [[749, "rend-and-crend"]], "capacity": [[754, "capacity"]], "Concurrently unsafe operations": [[755, "concurrently-unsafe-operations"]], "Reserving": [[755, "reserving"]], "Resizing": [[755, "resizing"]], "shrink_to_fit": [[755, "shrink-to-fit"]], "task_arena::attach": [[756, "task-arena-attach"]], "Member types and constants": [[756, "member-types-and-constants"], [852, "member-types-and-constants"], [854, "member-types-and-constants"], [856, "member-types-and-constants"]], "Flow Graph": [[757, "flow-graph"], [815, "flow-graph"]], "Graph Class": [[757, "graph-class"]], "Nodes": [[757, "nodes"]], "Abstract Interfaces": [[757, "abstract-interfaces"]], "Properties": [[757, "properties"]], "Functional Nodes": [[757, "functional-nodes"]], "Buffering Nodes": [[757, "buffering-nodes"]], "Service Nodes": [[757, "service-nodes"]], "Ports and Edges": [[757, "ports-and-edges"]], "Special Messages Types": [[757, "special-messages-types"]], "async_node": [[758, "async-node"]], "broadcast_node": [[759, "broadcast-node"]], "buffer_node": [[760, "buffer-node"]], "composite_node": [[761, "composite-node"]], "continue_msg": [[762, "continue-msg"]], "continue_node": [[763, "continue-node"]], "copy_body": [[764, "copy-body"]], "Dependency Flow Graph Example": [[765, "dependency-flow-graph-example"]], "Forwarding and Buffering": [[766, "forwarding-and-buffering"]], "Forwarding": [[766, "forwarding"]], "Buffering": [[766, "buffering"]], "Buffering and Forwarding properties summary": [[766, "id1"]], "function_node": [[767, "function-node"]], "Function Nodes Policies": [[768, "function-nodes-policies"]], "Queueing": [[768, "queueing"]], "Rejecting": [[768, "rejecting"]], "Lightweight": [[768, "lightweight"]], "graph": [[769, "graph"]], "reset_flags enumeration": [[769, "reset-flags-enumeration"]], "graph_node": [[770, "graph-node"]], "indexer_node": [[771, "indexer-node"]], "input_node": [[772, "input-node"]], "input_port": [[773, "input-port"]], "join_node": [[774, "join-node"]], "Non-Member Types": [[774, "non-member-types"]], "join_node Policies": [[775, "join-node-policies"]], "limiter_node": [[776, "limiter-node"]], "make_edge": [[777, "make-edge"]], "Message Flow Graph Example": [[778, "message-flow-graph-example"]], "multifunction_node": [[779, "multifunction-node"]], "Nodes Priorities": [[780, "nodes-priorities"]], "output_port": [[781, "output-port"]], "overwrite_node": [[782, "overwrite-node"]], "Predefined Concurrency Limits": [[783, "predefined-concurrency-limits"]], "priority_queue_node": [[784, "priority-queue-node"]], "queue_node": [[785, "queue-node"]], "receiver": [[786, "receiver"]], "remove_edge": [[787, "remove-edge"]], "reset_flags Enumeration": [[788, "reset-flags-enumeration"]], "sender": [[789, "sender"]], "sequencer_node": [[790, "sequencer-node"]], "split_node": [[791, "split-node"]], "tagged_msg": [[792, "tagged-msg"]], "write_once_node": [[793, "write-once-node"]], "Identifiers": [[794, "identifiers"]], "Case": [[794, "case"]], "Reserved Identifier Prefixes": [[794, "reserved-identifier-prefixes"]], "info Namespace": [[795, "info-namespace"]], "Types": [[795, "types"]], "Functions": [[795, "functions"]], "Memory Allocation": [[797, "memory-allocation"]], "Allocators": [[797, "allocators"]], "Memory Resources": [[797, "memory-resources"]], "Library Functions": [[797, "library-functions"]], "C Interface to Scalable Allocator": [[798, "c-interface-to-scalable-allocator"], [798, "id1"]], "cache_aligned_allocator": [[799, "cache-aligned-allocator"]], "Non-member Functions": [[799, "non-member-functions"], [801, "non-member-functions"], [803, "non-member-functions"], [855, "non-member-functions"], [856, "non-member-functions"]], "cache_aligned_resource": [[800, "cache-aligned-resource"]], "scalable_allocator": [[801, "scalable-allocator"]], "scalable_memory_resource": [[802, "scalable-memory-resource"]], "tbb_allocator": [[803, "tbb-allocator"]], "Mutual Exclusion": [[804, "mutual-exclusion"]], "Mutex Classes": [[804, "mutex-classes"]], "mutex": [[805, "mutex"]], "null_mutex": [[806, "null-mutex"]], "null_rw_mutex": [[807, "null-rw-mutex"]], "queuing_mutex": [[808, "queuing-mutex"]], "queuing_rw_mutex": [[809, "queuing-rw-mutex"]], "rw_mutex": [[810, "rw-mutex"]], "speculative_spin_mutex": [[811, "speculative-spin-mutex"]], "speculative_spin_rw_mutex": [[812, "speculative-spin-rw-mutex"]], "spin_mutex": [[813, "spin-mutex"]], "spin_rw_mutex": [[814, "spin-rw-mutex"]], "Named Requirements": [[815, "named-requirements"]], "Pseudo-Signatures": [[815, "pseudo-signatures"]], "Mutexes": [[815, "mutexes"]], "Task scheduler": [[815, "task-scheduler"]], "BlockedRangeValue": [[816, "blockedrangevalue"]], "ContainerBasedSequence": [[817, "containerbasedsequence"]], "FilterBody": [[818, "filterbody"]], "ParallelForBody": [[819, "parallelforbody"]], "ParallelForEachBody": [[820, "parallelforeachbody"]], "ParallelForFunc": [[821, "parallelforfunc"]], "ParallelForIndex": [[822, "parallelforindex"]], "ParallelReduceBody": [[823, "parallelreducebody"]], "ParallelReduceFunc": [[824, "parallelreducefunc"]], "ParallelReduceReduction": [[825, "parallelreducereduction"]], "ParallelScanBody": [[826, "parallelscanbody"]], "ParallelScanCombine": [[827, "parallelscancombine"]], "ParallelScanFunc": [[828, "parallelscanfunc"]], "Splittable": [[830, "splittable"]], "ContainerRange": [[831, "containerrange"]], "HashCompare": [[832, "hashcompare"]], "AsyncNodeBody": [[833, "asyncnodebody"]], "ContinueNodeBody": [[834, "continuenodebody"]], "FunctionNodeBody": [[835, "functionnodebody"]], "GatewayType": [[836, "gatewaytype"]], "InputNodeBody": [[837, "inputnodebody"]], "JoinNodeFunctionObject": [[838, "joinnodefunctionobject"]], "MultifunctionNodeBody": [[839, "multifunctionnodebody"]], "Sequencer": [[840, "sequencer"]], "Mutex": [[841, "mutex"]], "Provided guarantees for Mutexes that model the Mutex requirement": [[841, "id1"]], "ReaderWriterMutex": [[842, "readerwritermutex"]], "Provided guarantees for Mutexes that model the ReaderWriterMutex requirement": [[842, "id1"]], "SuspendFunc": [[843, "suspendfunc"]], "oneTBB Auxiliary Interfaces": [[844, "onetbb-auxiliary-interfaces"]], "oneTBB Deprecated Interfaces": [[845, "onetbb-deprecated-interfaces"]], "oneTBB": [[847, "onetbb"]], "oneTBB Interfaces": [[848, "onetbb-interfaces"]], "Notational Conventions": [[849, "notational-conventions"]], "Task Scheduler": [[850, "task-scheduler"]], "Scheduling controls": [[850, "scheduling-controls"]], "Task Group": [[850, "task-group"]], "Task Arena": [[850, "task-arena"]], "Helper types": [[850, "helper-types"]], "attach tag type": [[851, "attach-tag-type"]], "global_control": [[852, "global-control"]], "Resumable tasks": [[853, "resumable-tasks"]], "task_group_context": [[854, "task-group-context"]], "task_scheduler_handle": [[855, "task-scheduler-handle"]], "task_arena": [[856, "task-arena"]], "task_scheduler_observer": [[857, "task-scheduler-observer"]], "this_task_arena": [[858, "this-task-arena"]], "task_group": [[859, "task-group"]], "task_group_status": [[860, "task-group-status"]], "Member constants": [[860, "member-constants"]], "task_handle": [[861, "task-handle"]], "Thread Local Storage": [[862, "thread-local-storage"]], "combinable": [[863, "combinable"]], "enumerable_thread_specific": [[864, "enumerable-thread-specific"]], "Non-member types and constants": [[864, "non-member-types-and-constants"]], "Combining": [[865, "combining"]], "Iteration": [[867, "iteration"]], "flattened2d": [[871, "flattened2d"]], "Thread Safety": [[872, "thread-safety"]], "Timing": [[873, "timing"]], "Syntax": [[873, "syntax"]], "Classes": [[873, "classes"]], "tick_count class": [[874, "tick-count-class"]], "tick_count::interval_t class": [[874, "tick-count-interval-t-class"]], "oneAPI Specification": [[875, "oneapi-specification"]], "Target Audience": [[876, "target-audience"]], "Goals of the Specification": [[876, "goals-of-the-specification"]], "Contribution Guidelines": [[876, "contribution-guidelines"]], "Legal Notices and Disclaimers": [[877, "legal-notices-and-disclaimers"]]}, "indexentries": {"oneapi::dal::kmeans::descriptor (c++ class)": [[19, "_CPPv4I000EN6oneapi3dal6kmeans10descriptorE"]], "oneapi::dal::kmeans::descriptor::accuracy_threshold (c++ member)": [[19, "_CPPv4N6oneapi3dal6kmeans10descriptor18accuracy_thresholdE"]], "oneapi::dal::kmeans::descriptor::cluster_count (c++ member)": [[19, "_CPPv4N6oneapi3dal6kmeans10descriptor13cluster_countE"]], "oneapi::dal::kmeans::descriptor::descriptor (c++ function)": [[19, "_CPPv4N6oneapi3dal6kmeans10descriptor10descriptorENSt7int64_tE"]], "oneapi::dal::kmeans::descriptor::max_iteration_count (c++ member)": [[19, "_CPPv4N6oneapi3dal6kmeans10descriptor19max_iteration_countE"]], "oneapi::dal::kmeans::infer (c++ function)": [[19, "_CPPv4I000EN6oneapi3dal6kmeans5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE"]], "oneapi::dal::kmeans::infer_input (c++ class)": [[19, "_CPPv4I0EN6oneapi3dal6kmeans11infer_inputE"]], "oneapi::dal::kmeans::infer_input::data (c++ member)": [[19, "_CPPv4N6oneapi3dal6kmeans11infer_input4dataE"]], "oneapi::dal::kmeans::infer_input::infer_input (c++ function)": [[19, "_CPPv4N6oneapi3dal6kmeans11infer_input11infer_inputERK5modelI4TaskERK5table"]], "oneapi::dal::kmeans::infer_input::model (c++ member)": [[19, "_CPPv4N6oneapi3dal6kmeans11infer_input5modelE"]], "oneapi::dal::kmeans::infer_result (c++ class)": [[19, "_CPPv4I0EN6oneapi3dal6kmeans12infer_resultE"]], "oneapi::dal::kmeans::infer_result::get_labels (c++ function)": [[19, "_CPPv4NK6oneapi3dal6kmeans12infer_result10get_labelsEv"]], "oneapi::dal::kmeans::infer_result::get_objective_function_value (c++ function)": [[19, "_CPPv4NK6oneapi3dal6kmeans12infer_result28get_objective_function_valueEv"]], "oneapi::dal::kmeans::infer_result::infer_result (c++ function)": [[19, "_CPPv4N6oneapi3dal6kmeans12infer_result12infer_resultEv"]], "oneapi::dal::kmeans::method::by_default (c++ type)": [[19, "_CPPv4N6oneapi3dal6kmeans6method10by_defaultE"]], "oneapi::dal::kmeans::method::lloyd (c++ struct)": [[19, "_CPPv4N6oneapi3dal6kmeans6method5lloydE"]], "oneapi::dal::kmeans::model (c++ class)": [[19, "_CPPv4I0EN6oneapi3dal6kmeans5modelE"]], "oneapi::dal::kmeans::model::get_centroids (c++ function)": [[19, "_CPPv4NK6oneapi3dal6kmeans5model13get_centroidsEv"]], "oneapi::dal::kmeans::model::get_cluster_count (c++ function)": [[19, "_CPPv4NK6oneapi3dal6kmeans5model17get_cluster_countEv"]], "oneapi::dal::kmeans::model::model (c++ function)": [[19, "_CPPv4N6oneapi3dal6kmeans5model5modelEv"]], "oneapi::dal::kmeans::task::by_default (c++ type)": [[19, "_CPPv4N6oneapi3dal6kmeans4task10by_defaultE"]], "oneapi::dal::kmeans::task::clustering (c++ struct)": [[19, "_CPPv4N6oneapi3dal6kmeans4task10clusteringE"]], "oneapi::dal::kmeans::train (c++ function)": [[19, "_CPPv4I000EN6oneapi3dal6kmeans5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE"]], "oneapi::dal::kmeans::train_input (c++ class)": [[19, "_CPPv4I0EN6oneapi3dal6kmeans11train_inputE"]], "oneapi::dal::kmeans::train_input::data (c++ member)": [[19, "_CPPv4N6oneapi3dal6kmeans11train_input4dataE"]], "oneapi::dal::kmeans::train_input::initial_centroids (c++ member)": [[19, "_CPPv4N6oneapi3dal6kmeans11train_input17initial_centroidsE"]], "oneapi::dal::kmeans::train_input::train_input (c++ function)": [[19, "_CPPv4N6oneapi3dal6kmeans11train_input11train_inputERK5tableRK5table"]], "oneapi::dal::kmeans::train_result (c++ class)": [[19, "_CPPv4I0EN6oneapi3dal6kmeans12train_resultE"]], "oneapi::dal::kmeans::train_result::get_iteration_count (c++ function)": [[19, "_CPPv4NK6oneapi3dal6kmeans12train_result19get_iteration_countEv"]], "oneapi::dal::kmeans::train_result::get_labels (c++ function)": [[19, "_CPPv4NK6oneapi3dal6kmeans12train_result10get_labelsEv"]], "oneapi::dal::kmeans::train_result::get_model (c++ function)": [[19, "_CPPv4NK6oneapi3dal6kmeans12train_result9get_modelEv"]], "oneapi::dal::kmeans::train_result::get_objective_function_value (c++ function)": [[19, "_CPPv4NK6oneapi3dal6kmeans12train_result28get_objective_function_valueEv"]], "oneapi::dal::kmeans::train_result::train_result (c++ function)": [[19, "_CPPv4N6oneapi3dal6kmeans12train_result12train_resultEv"]], "oneapi::dal::kmeans_init::compute (c++ function)": [[20, "_CPPv4I000EN6oneapi3dal11kmeans_init7computeE14compute_resultI4TaskERK10descriptorI5Float6Method4TaskERK13compute_inputI4TaskE"]], "oneapi::dal::kmeans_init::compute_input (c++ class)": [[20, "_CPPv4I0EN6oneapi3dal11kmeans_init13compute_inputE"]], "oneapi::dal::kmeans_init::compute_input::compute_input (c++ function)": [[20, "_CPPv4N6oneapi3dal11kmeans_init13compute_input13compute_inputERK5table"]], "oneapi::dal::kmeans_init::compute_input::data (c++ member)": [[20, "_CPPv4N6oneapi3dal11kmeans_init13compute_input4dataE"]], "oneapi::dal::kmeans_init::compute_result (c++ class)": [[20, "_CPPv4I0EN6oneapi3dal11kmeans_init14compute_resultE"]], "oneapi::dal::kmeans_init::compute_result::compute_result (c++ function)": [[20, "_CPPv4N6oneapi3dal11kmeans_init14compute_result14compute_resultEv"]], "oneapi::dal::kmeans_init::compute_result::get_centroids (c++ function)": [[20, "_CPPv4NK6oneapi3dal11kmeans_init14compute_result13get_centroidsEv"]], "oneapi::dal::kmeans_init::descriptor (c++ class)": [[20, "_CPPv4I000EN6oneapi3dal11kmeans_init10descriptorE"]], "oneapi::dal::kmeans_init::descriptor::cluster_count (c++ member)": [[20, "_CPPv4N6oneapi3dal11kmeans_init10descriptor13cluster_countE"]], "oneapi::dal::kmeans_init::descriptor::descriptor (c++ function)": [[20, "_CPPv4N6oneapi3dal11kmeans_init10descriptor10descriptorENSt7int64_tE"]], "oneapi::dal::kmeans_init::method::by_default (c++ type)": [[20, "_CPPv4N6oneapi3dal11kmeans_init6method10by_defaultE"]], "oneapi::dal::kmeans_init::method::dense (c++ struct)": [[20, "_CPPv4N6oneapi3dal11kmeans_init6method5denseE"]], "oneapi::dal::kmeans_init::task::by_default (c++ type)": [[20, "_CPPv4N6oneapi3dal11kmeans_init4task10by_defaultE"]], "oneapi::dal::kmeans_init::task::init (c++ struct)": [[20, "_CPPv4N6oneapi3dal11kmeans_init4task4initE"]], "oneapi::dal::pca::descriptor (c++ class)": [[22, "_CPPv4I000EN6oneapi3dal3pca10descriptorE"]], "oneapi::dal::pca::descriptor::component_count (c++ member)": [[22, "_CPPv4N6oneapi3dal3pca10descriptor15component_countE"]], "oneapi::dal::pca::descriptor::descriptor (c++ function)": [[22, "_CPPv4N6oneapi3dal3pca10descriptor10descriptorENSt7int64_tE"]], "oneapi::dal::pca::descriptor::deterministic (c++ member)": [[22, "_CPPv4N6oneapi3dal3pca10descriptor13deterministicE"]], "oneapi::dal::pca::infer (c++ function)": [[22, "_CPPv4I000EN6oneapi3dal3pca5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE"]], "oneapi::dal::pca::infer_input (c++ class)": [[22, "_CPPv4I0EN6oneapi3dal3pca11infer_inputE"]], "oneapi::dal::pca::infer_input::data (c++ member)": [[22, "_CPPv4N6oneapi3dal3pca11infer_input4dataE"]], "oneapi::dal::pca::infer_input::infer_input (c++ function)": [[22, "_CPPv4N6oneapi3dal3pca11infer_input11infer_inputERK5modelI4TaskERK5table"]], "oneapi::dal::pca::infer_input::model (c++ member)": [[22, "_CPPv4N6oneapi3dal3pca11infer_input5modelE"]], "oneapi::dal::pca::infer_result (c++ class)": [[22, "_CPPv4I0EN6oneapi3dal3pca12infer_resultE"]], "oneapi::dal::pca::infer_result::get_transformed_data (c++ function)": [[22, "_CPPv4NK6oneapi3dal3pca12infer_result20get_transformed_dataEv"]], "oneapi::dal::pca::infer_result::infer_result (c++ function)": [[22, "_CPPv4N6oneapi3dal3pca12infer_result12infer_resultEv"]], "oneapi::dal::pca::method::by_default (c++ type)": [[22, "_CPPv4N6oneapi3dal3pca6method10by_defaultE"]], "oneapi::dal::pca::method::cov (c++ struct)": [[22, "_CPPv4N6oneapi3dal3pca6method3covE"]], "oneapi::dal::pca::method::svd (c++ struct)": [[22, "_CPPv4N6oneapi3dal3pca6method3svdE"]], "oneapi::dal::pca::model (c++ class)": [[22, "_CPPv4I0EN6oneapi3dal3pca5modelE"]], "oneapi::dal::pca::model::get_component_count (c++ function)": [[22, "_CPPv4NK6oneapi3dal3pca5model19get_component_countEv"]], "oneapi::dal::pca::model::get_eigenvectors (c++ function)": [[22, "_CPPv4NK6oneapi3dal3pca5model16get_eigenvectorsEv"]], "oneapi::dal::pca::model::model (c++ function)": [[22, "_CPPv4N6oneapi3dal3pca5model5modelEv"]], "oneapi::dal::pca::task::by_default (c++ type)": [[22, "_CPPv4N6oneapi3dal3pca4task10by_defaultE"]], "oneapi::dal::pca::task::dim_reduction (c++ struct)": [[22, "_CPPv4N6oneapi3dal3pca4task13dim_reductionE"]], "oneapi::dal::pca::train (c++ function)": [[22, "_CPPv4I000EN6oneapi3dal3pca5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE"]], "oneapi::dal::pca::train_input (c++ class)": [[22, "_CPPv4I0EN6oneapi3dal3pca11train_inputE"]], "oneapi::dal::pca::train_input::data (c++ member)": [[22, "_CPPv4N6oneapi3dal3pca11train_input4dataE"]], "oneapi::dal::pca::train_input::train_input (c++ function)": [[22, "_CPPv4N6oneapi3dal3pca11train_input11train_inputERK5table"]], "oneapi::dal::pca::train_result (c++ class)": [[22, "_CPPv4I0EN6oneapi3dal3pca12train_resultE"]], "oneapi::dal::pca::train_result::get_eigenvalues (c++ function)": [[22, "_CPPv4NK6oneapi3dal3pca12train_result15get_eigenvaluesEv"]], "oneapi::dal::pca::train_result::get_eigenvectors (c++ function)": [[22, "_CPPv4NK6oneapi3dal3pca12train_result16get_eigenvectorsEv"]], "oneapi::dal::pca::train_result::get_means (c++ function)": [[22, "_CPPv4NK6oneapi3dal3pca12train_result9get_meansEv"]], "oneapi::dal::pca::train_result::get_model (c++ function)": [[22, "_CPPv4NK6oneapi3dal3pca12train_result9get_modelEv"]], "oneapi::dal::pca::train_result::get_variances (c++ function)": [[22, "_CPPv4NK6oneapi3dal3pca12train_result13get_variancesEv"]], "oneapi::dal::pca::train_result::train_result (c++ function)": [[22, "_CPPv4N6oneapi3dal3pca12train_result12train_resultEv"]], "oneapi::dal::knn::descriptor (c++ class)": [[25, "_CPPv4I000EN6oneapi3dal3knn10descriptorE"]], "oneapi::dal::knn::descriptor::class_count (c++ member)": [[25, "_CPPv4N6oneapi3dal3knn10descriptor11class_countE"]], "oneapi::dal::knn::descriptor::descriptor (c++ function)": [[25, "_CPPv4N6oneapi3dal3knn10descriptor10descriptorENSt7int64_tENSt7int64_tE"]], "oneapi::dal::knn::descriptor::neighbor_count (c++ member)": [[25, "_CPPv4N6oneapi3dal3knn10descriptor14neighbor_countE"]], "oneapi::dal::knn::infer (c++ function)": [[25, "_CPPv4I000EN6oneapi3dal3knn5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE"]], "oneapi::dal::knn::infer_input (c++ class)": [[25, "_CPPv4I0EN6oneapi3dal3knn11infer_inputE"]], "oneapi::dal::knn::infer_input::data (c++ member)": [[25, "_CPPv4N6oneapi3dal3knn11infer_input4dataE"]], "oneapi::dal::knn::infer_input::infer_input (c++ function)": [[25, "_CPPv4N6oneapi3dal3knn11infer_input11infer_inputERK5modelI4TaskERK5table"]], "oneapi::dal::knn::infer_input::model (c++ member)": [[25, "_CPPv4N6oneapi3dal3knn11infer_input5modelE"]], "oneapi::dal::knn::infer_result (c++ class)": [[25, "_CPPv4I0EN6oneapi3dal3knn12infer_resultE"]], "oneapi::dal::knn::infer_result::get_labels (c++ function)": [[25, "_CPPv4NK6oneapi3dal3knn12infer_result10get_labelsEv"]], "oneapi::dal::knn::infer_result::infer_result (c++ function)": [[25, "_CPPv4N6oneapi3dal3knn12infer_result12infer_resultEv"]], "oneapi::dal::knn::method::bruteforce (c++ struct)": [[25, "_CPPv4N6oneapi3dal3knn6method10bruteforceE"]], "oneapi::dal::knn::method::by_default (c++ type)": [[25, "_CPPv4N6oneapi3dal3knn6method10by_defaultE"]], "oneapi::dal::knn::method::kd_tree (c++ struct)": [[25, "_CPPv4N6oneapi3dal3knn6method7kd_treeE"]], "oneapi::dal::knn::model (c++ class)": [[25, "_CPPv4I0EN6oneapi3dal3knn5modelE"]], "oneapi::dal::knn::model::model (c++ function)": [[25, "_CPPv4N6oneapi3dal3knn5model5modelEv"]], "oneapi::dal::knn::task::by_default (c++ type)": [[25, "_CPPv4N6oneapi3dal3knn4task10by_defaultE"]], "oneapi::dal::knn::task::classification (c++ struct)": [[25, "_CPPv4N6oneapi3dal3knn4task14classificationE"]], "oneapi::dal::knn::train (c++ function)": [[25, "_CPPv4I000EN6oneapi3dal3knn5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE"]], "oneapi::dal::knn::train_input (c++ class)": [[25, "_CPPv4I0EN6oneapi3dal3knn11train_inputE"]], "oneapi::dal::knn::train_input::data (c++ member)": [[25, "_CPPv4N6oneapi3dal3knn11train_input4dataE"]], "oneapi::dal::knn::train_input::labels (c++ member)": [[25, "_CPPv4N6oneapi3dal3knn11train_input6labelsE"]], "oneapi::dal::knn::train_input::train_input (c++ function)": [[25, "_CPPv4N6oneapi3dal3knn11train_input11train_inputERK5tableRK5table"]], "oneapi::dal::knn::train_result (c++ class)": [[25, "_CPPv4I0EN6oneapi3dal3knn12train_resultE"]], "oneapi::dal::knn::train_result::get_model (c++ function)": [[25, "_CPPv4NK6oneapi3dal3knn12train_result9get_modelEv"]], "oneapi::dal::knn::train_result::train_result (c++ function)": [[25, "_CPPv4N6oneapi3dal3knn12train_result12train_resultEv"]], "oneapi::dal::data_type (c++ enum)": [[29, "_CPPv4N6oneapi3dal9data_typeE"]], "oneapi::dal::range (c++ struct)": [[29, "_CPPv4N6oneapi3dal5rangeE"]], "oneapi::dal::range::get_element_count (c++ function)": [[29, "_CPPv4NK6oneapi3dal5range17get_element_countENSt7int64_tE"]], "oneapi::dal::range::range (c++ function)": [[29, "_CPPv4N6oneapi3dal5range5rangeENSt7int64_tENSt7int64_tE"]], "oneapi::dal::column_accessor (c++ class)": [[34, "_CPPv4I0EN6oneapi3dal15column_accessorE"]], "oneapi::dal::column_accessor::column_accessor (c++ function)": [[34, "_CPPv4N6oneapi3dal15column_accessor15column_accessorERK5table"]], "oneapi::dal::column_accessor::pull (c++ function)": [[34, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueENSt7int64_tERK5rangeRKN4sycl3usm5allocE"], [34, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueER5arrayI6data_tENSt7int64_tERK5rangeRKN4sycl3usm5allocE"]], "oneapi::dal::row_accessor (c++ class)": [[35, "_CPPv4I0EN6oneapi3dal12row_accessorE"]], "oneapi::dal::row_accessor::pull (c++ function)": [[35, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueER5arrayI6data_tERK5rangeRKN4sycl3usm5allocE"], [35, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueERK5rangeRKN4sycl3usm5allocE"]], "oneapi::dal::row_accessor::row_accessor (c++ function)": [[35, "_CPPv4N6oneapi3dal12row_accessor12row_accessorERK5table"]], "oneapi::dal::array (c++ class)": [[37, "_CPPv4I0EN6oneapi3dal5arrayE"]], "oneapi::dal::array::array (c++ function)": [[37, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI7RefDataEP7ExtDataNSt7int64_tE"], [37, "_CPPv4I00EN6oneapi3dal5array5arrayERKN4sycl5queueEP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE"], [37, "_CPPv4N6oneapi3dal5array5arrayERK5arrayI4DataE"], [37, "_CPPv4N6oneapi3dal5array5arrayERR5arrayI4DataE"], [37, "_CPPv4N6oneapi3dal5array5arrayEv"]], "oneapi::dal::array::empty (c++ function)": [[37, "_CPPv4N6oneapi3dal5array5emptyERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE"]], "oneapi::dal::array::full (c++ function)": [[37, "_CPPv4I0EN6oneapi3dal5array4fullE5arrayI4DataERN4sycl5queueENSt7int64_tERR7ElementRKN4sycl3usm5allocE"]], "oneapi::dal::array::get_count (c++ function)": [[37, "_CPPv4NK6oneapi3dal5array9get_countEv"]], "oneapi::dal::array::get_data (c++ function)": [[37, "_CPPv4NK6oneapi3dal5array8get_dataEv"]], "oneapi::dal::array::get_mutable_data (c++ function)": [[37, "_CPPv4NK6oneapi3dal5array16get_mutable_dataEv"]], "oneapi::dal::array::get_size (c++ function)": [[37, "_CPPv4NK6oneapi3dal5array8get_sizeEv"]], "oneapi::dal::array::has_mutable_data (c++ function)": [[37, "_CPPv4NK6oneapi3dal5array16has_mutable_dataEv"]], "oneapi::dal::array::need_mutable_data (c++ function)": [[37, "_CPPv4N6oneapi3dal5array17need_mutable_dataERN4sycl5queueERKN4sycl3usm5allocE"]], "oneapi::dal::array::operator= (c++ function)": [[37, "_CPPv4N6oneapi3dal5arrayaSERK5arrayI4DataE"], [37, "_CPPv4N6oneapi3dal5arrayaSERR5arrayI4DataE"]], "oneapi::dal::array::operator[] (c++ function)": [[37, "_CPPv4NK6oneapi3dal5arrayixENSt7int64_tE"]], "oneapi::dal::array::reset (c++ function)": [[37, "_CPPv4I00EN6oneapi3dal5array5resetEvP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE"], [37, "_CPPv4I00EN6oneapi3dal5array5resetEvRK5arrayI7RefDataEP7ExtDataNSt7int64_tE"], [37, "_CPPv4N6oneapi3dal5array5resetERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE"], [37, "_CPPv4N6oneapi3dal5array5resetEv"]], "oneapi::dal::array::wrap (c++ function)": [[37, "_CPPv4I0EN6oneapi3dal5array4wrapE5arrayI4DataEP7ExtDataNSt7int64_tERKNSt6vectorIN4sycl5eventEEE"]], "oneapi::dal::array::zeros (c++ function)": [[37, "_CPPv4N6oneapi3dal5array5zerosERN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE"]], "oneapi::dal::csv::data_source (c++ class)": [[38, "_CPPv4N6oneapi3dal3csv11data_sourceE"]], "oneapi::dal::csv::data_source::data_source (c++ function)": [[38, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceEPKcc12read_options"], [38, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceERKNSt6stringEc12read_options"]], "oneapi::dal::csv::data_source::delimiter (c++ member)": [[38, "_CPPv4N6oneapi3dal3csv11data_source9delimiterE"]], "oneapi::dal::csv::data_source::file_name (c++ member)": [[38, "_CPPv4N6oneapi3dal3csv11data_source9file_nameE"]], "oneapi::dal::csv::data_source::options (c++ member)": [[38, "_CPPv4N6oneapi3dal3csv11data_source7optionsE"]], "oneapi::dal::csv::read_args (c++ class)": [[38, "_CPPv4I0EN6oneapi3dal3csv9read_argsE"]], "oneapi::dal::csv::read_args::read_args (c++ function)": [[38, "_CPPv4N6oneapi3dal3csv9read_args9read_argsEv"]], "oneapi::dal::read (c++ function)": [[38, "_CPPv4I00EN6oneapi3dal4readE6ObjectRK10DataSource"]], "oneapi::dal::homogen_table (c++ class)": [[41, "_CPPv4N6oneapi3dal13homogen_tableE"]], "oneapi::dal::homogen_table::get_data (c++ function)": [[41, "_CPPv4I0ENK6oneapi3dal13homogen_table8get_dataEPK4Datav"], [41, "_CPPv4NK6oneapi3dal13homogen_table8get_dataEv"]], "oneapi::dal::homogen_table::get_kind (c++ function)": [[41, "_CPPv4NK6oneapi3dal13homogen_table8get_kindEv"]], "oneapi::dal::homogen_table::homogen_table (c++ function)": [[41, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout"], [41, "_CPPv4N6oneapi3dal13homogen_table13homogen_tableEv"]], "oneapi::dal::homogen_table::kind (c++ function)": [[41, "_CPPv4N6oneapi3dal13homogen_table4kindEv"]], "oneapi::dal::homogen_table::wrap (c++ function)": [[41, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERKN4sycl12vector_classIN4sycl5eventEEE11data_layout"]], "oneapi::dal::data_layout (c++ enum)": [[42, "_CPPv4N6oneapi3dal11data_layoutE"]], "oneapi::dal::feature_type (c++ enum)": [[42, "_CPPv4N6oneapi3dal12feature_typeE"]], "oneapi::dal::table (c++ class)": [[42, "_CPPv4N6oneapi3dal5tableE"]], "oneapi::dal::table::get_column_count (c++ function)": [[42, "_CPPv4NK6oneapi3dal5table16get_column_countEv"]], "oneapi::dal::table::get_data_layout (c++ function)": [[42, "_CPPv4NK6oneapi3dal5table15get_data_layoutEv"]], "oneapi::dal::table::get_kind (c++ function)": [[42, "_CPPv4NK6oneapi3dal5table8get_kindEv"]], "oneapi::dal::table::get_metadata (c++ function)": [[42, "_CPPv4NK6oneapi3dal5table12get_metadataEv"]], "oneapi::dal::table::get_row_count (c++ function)": [[42, "_CPPv4NK6oneapi3dal5table13get_row_countEv"]], "oneapi::dal::table::has_data (c++ function)": [[42, "_CPPv4NK6oneapi3dal5table8has_dataEv"]], "oneapi::dal::table::operator= (c++ function)": [[42, "_CPPv4N6oneapi3dal5tableaSERK5table"], [42, "_CPPv4N6oneapi3dal5tableaSERR5table"]], "oneapi::dal::table::table (c++ function)": [[42, "_CPPv4N6oneapi3dal5table5tableERK5table"], [42, "_CPPv4N6oneapi3dal5table5tableERR5table"], [42, "_CPPv4N6oneapi3dal5table5tableEv"]], "oneapi::dal::table_metadata (c++ class)": [[42, "_CPPv4N6oneapi3dal14table_metadataE"]], "oneapi::dal::table_metadata::get_data_type (c++ function)": [[42, "_CPPv4NK6oneapi3dal14table_metadata13get_data_typeENSt7int64_tE"]], "oneapi::dal::table_metadata::get_feature_count (c++ function)": [[42, "_CPPv4NK6oneapi3dal14table_metadata17get_feature_countEv"]], "oneapi::dal::table_metadata::get_feature_type (c++ function)": [[42, "_CPPv4NK6oneapi3dal14table_metadata16get_feature_typeENSt7int64_tE"]], "oneapi::dal::table_metadata::table_metadata (c++ function)": [[42, "_CPPv4N6oneapi3dal14table_metadata14table_metadataERK5arrayI9data_typeERK5arrayI12feature_typeE"], [42, "_CPPv4N6oneapi3dal14table_metadata14table_metadataEv"]], "api": [[43, "term-API"]], "accessor": [[43, "term-Accessor"]], "batch mode": [[43, "term-Batch-mode"]], "builder": [[43, "term-Builder"]], "csv file": [[43, "term-CSV-file"]], "categorical feature": [[43, "term-Categorical-feature"]], "classification": [[43, "term-Classification"]], "clustering": [[43, "term-Clustering"]], "contiguous data": [[43, "term-Contiguous-data"]], "continuous feature": [[43, "term-Continuous-feature"]], "dpc++": [[43, "term-DPC"]], "data format": [[43, "term-Data-format"]], "data layout": [[43, "term-Data-layout"]], "data type": [[43, "term-Data-type"]], "dataset": [[43, "term-Dataset"]], "dimensionality reduction": [[43, "term-Dimensionality-reduction"]], "feature": [[43, "term-Feature"]], "feature vector": [[43, "term-Feature-vector"]], "flat data": [[43, "term-Flat-data"]], "getter": [[43, "term-Getter"]], "heterogeneous data": [[43, "term-Heterogeneous-data"]], "homogeneous data": [[43, "term-Homogeneous-data"]], "host/device": [[43, "term-Host-Device"]], "immutability": [[43, "term-Immutability"]], "inference": [[43, "term-Inference"]], "inference set": [[43, "term-Inference-set"]], "interval feature": [[43, "term-Interval-feature"]], "jit": [[43, "term-JIT"]], "kernel": [[43, "term-Kernel"]], "label": [[43, "term-Label"]], "metadata": [[43, "term-Metadata"]], "model": [[43, "term-Model"]], "nominal feature": [[43, "term-Nominal-feature"]], "observation": [[43, "term-Observation"]], "online mode": [[43, "term-Online-mode"]], "ordinal feature": [[43, "term-Ordinal-feature"]], "outlier": [[43, "term-Outlier"]], "ratio feature": [[43, "term-Ratio-feature"]], "reference-counted object": [[43, "term-Reference-counted-object"]], "regression": [[43, "term-Regression"]], "response": [[43, "term-Response"]], "spir-v": [[43, "term-SPIR-V"]], "sycl": [[43, "term-SYCL"]], "setter": [[43, "term-Setter"]], "supervised learning": [[43, "term-Supervised-learning"]], "table": [[43, "term-Table"]], "training": [[43, "term-Training"]], "training set": [[43, "term-Training-set"]], "unsupervised learning": [[43, "term-Unsupervised-learning"]], "workload": [[43, "term-Workload"]], "dnnl::memory::data_type (c++ enum)": [[55, "_CPPv4N4dnnl6memory9data_typeE"]], "dnnl::memory::data_type::bf16 (c++ enumerator)": [[55, "_CPPv4N4dnnl6memory9data_type4bf16E"]], "dnnl::memory::data_type::f16 (c++ enumerator)": [[55, "_CPPv4N4dnnl6memory9data_type3f16E"]], "dnnl::memory::data_type::f32 (c++ enumerator)": [[55, "_CPPv4N4dnnl6memory9data_type3f32E"]], "dnnl::memory::data_type::s32 (c++ enumerator)": [[55, "_CPPv4N4dnnl6memory9data_type3s32E"]], "dnnl::memory::data_type::s8 (c++ enumerator)": [[55, "_CPPv4N4dnnl6memory9data_type2s8E"]], "dnnl::memory::data_type::u8 (c++ enumerator)": [[55, "_CPPv4N4dnnl6memory9data_type2u8E"]], "dnnl::memory::data_type::undef (c++ enumerator)": [[55, "_CPPv4N4dnnl6memory9data_type5undefE"]], "dnnl::memory::format_tag (c++ enum)": [[58, "_CPPv4N4dnnl6memory10format_tagE"]], "dnnl::memory::format_tag::a (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag1aE"]], "dnnl::memory::format_tag::ab (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag2abE"]], "dnnl::memory::format_tag::abc (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag3abcE"]], "dnnl::memory::format_tag::abcd (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4abcdE"]], "dnnl::memory::format_tag::abcde (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5abcdeE"]], "dnnl::memory::format_tag::abcdef (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag6abcdefE"]], "dnnl::memory::format_tag::abdc (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4abdcE"]], "dnnl::memory::format_tag::abdec (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5abdecE"]], "dnnl::memory::format_tag::acb (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag3acbE"]], "dnnl::memory::format_tag::acbde (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5acbdeE"]], "dnnl::memory::format_tag::acbdef (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag6acbdefE"]], "dnnl::memory::format_tag::acdb (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4acdbE"]], "dnnl::memory::format_tag::acdeb (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5acdebE"]], "dnnl::memory::format_tag::any (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag3anyE"]], "dnnl::memory::format_tag::ba (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag2baE"]], "dnnl::memory::format_tag::bac (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag3bacE"]], "dnnl::memory::format_tag::bacd (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4bacdE"]], "dnnl::memory::format_tag::bacde (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5bacdeE"]], "dnnl::memory::format_tag::bca (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag3bcaE"]], "dnnl::memory::format_tag::bcda (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4bcdaE"]], "dnnl::memory::format_tag::bcdea (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5bcdeaE"]], "dnnl::memory::format_tag::cba (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag3cbaE"]], "dnnl::memory::format_tag::cdba (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4cdbaE"]], "dnnl::memory::format_tag::cdeba (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5cdebaE"]], "dnnl::memory::format_tag::chwn (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4chwnE"]], "dnnl::memory::format_tag::cn (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag2cnE"]], "dnnl::memory::format_tag::dcab (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4dcabE"]], "dnnl::memory::format_tag::decab (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5decabE"]], "dnnl::memory::format_tag::defcab (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag6defcabE"]], "dnnl::memory::format_tag::dhwigo (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag6dhwigoE"]], "dnnl::memory::format_tag::dhwio (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5dhwioE"]], "dnnl::memory::format_tag::giodhw (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag6giodhwE"]], "dnnl::memory::format_tag::giohw (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5giohwE"]], "dnnl::memory::format_tag::goidhw (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag6goidhwE"]], "dnnl::memory::format_tag::goihw (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5goihwE"]], "dnnl::memory::format_tag::goiw (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4goiwE"]], "dnnl::memory::format_tag::hwigo (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5hwigoE"]], "dnnl::memory::format_tag::hwio (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4hwioE"]], "dnnl::memory::format_tag::idhwo (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5idhwoE"]], "dnnl::memory::format_tag::ihwo (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4ihwoE"]], "dnnl::memory::format_tag::io (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag2ioE"]], "dnnl::memory::format_tag::iodhw (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5iodhwE"]], "dnnl::memory::format_tag::iohw (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4iohwE"]], "dnnl::memory::format_tag::iwo (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag3iwoE"]], "dnnl::memory::format_tag::ldgo (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4ldgoE"]], "dnnl::memory::format_tag::ldgoi (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5ldgoiE"]], "dnnl::memory::format_tag::ldigo (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5ldigoE"]], "dnnl::memory::format_tag::ldio (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4ldioE"]], "dnnl::memory::format_tag::ldnc (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4ldncE"]], "dnnl::memory::format_tag::ldoi (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4ldoiE"]], "dnnl::memory::format_tag::nc (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag2ncE"]], "dnnl::memory::format_tag::ncdhw (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5ncdhwE"]], "dnnl::memory::format_tag::nchw (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4nchwE"]], "dnnl::memory::format_tag::ncw (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag3ncwE"]], "dnnl::memory::format_tag::ndhwc (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5ndhwcE"]], "dnnl::memory::format_tag::nhwc (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4nhwcE"]], "dnnl::memory::format_tag::nt (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag2ntE"]], "dnnl::memory::format_tag::ntc (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag3ntcE"]], "dnnl::memory::format_tag::nwc (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag3nwcE"]], "dnnl::memory::format_tag::odhwi (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5odhwiE"]], "dnnl::memory::format_tag::ohwi (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4ohwiE"]], "dnnl::memory::format_tag::oi (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag2oiE"]], "dnnl::memory::format_tag::oidhw (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5oidhwE"]], "dnnl::memory::format_tag::oihw (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4oihwE"]], "dnnl::memory::format_tag::oiw (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag3oiwE"]], "dnnl::memory::format_tag::owi (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag3owiE"]], "dnnl::memory::format_tag::tn (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag2tnE"]], "dnnl::memory::format_tag::tnc (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag3tncE"]], "dnnl::memory::format_tag::undef (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5undefE"]], "dnnl::memory::format_tag::wigo (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4wigoE"]], "dnnl::memory::format_tag::wio (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag3wioE"]], "dnnl::memory::format_tag::x (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag1xE"]], "dnnl::memory::dim (c++ type)": [[59, "_CPPv4N4dnnl6memory3dimE"]], "dnnl::memory::dims (c++ type)": [[59, "_CPPv4N4dnnl6memory4dimsE"]], "dnnl_memory_allocate (c macro)": [[60, "c.DNNL_MEMORY_ALLOCATE"]], "dnnl_memory_none (c macro)": [[60, "c.DNNL_MEMORY_NONE"]], "dnnl::memory (c++ struct)": [[60, "_CPPv4N4dnnl6memoryE"]], "dnnl::memory::desc (c++ struct)": [[60, "_CPPv4N4dnnl6memory4descE"]], "dnnl::memory::desc::data_type (c++ function)": [[60, "_CPPv4NK4dnnl6memory4desc9data_typeEv"]], "dnnl::memory::desc::desc (c++ function)": [[60, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_type10format_tagb"], [60, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_typeRK4dimsb"], [60, "_CPPv4N4dnnl6memory4desc4descEv"]], "dnnl::memory::desc::dims (c++ function)": [[60, "_CPPv4NK4dnnl6memory4desc4dimsEv"]], "dnnl::memory::desc::get_size (c++ function)": [[60, "_CPPv4NK4dnnl6memory4desc8get_sizeEv"]], "dnnl::memory::desc::is_zero (c++ function)": [[60, "_CPPv4NK4dnnl6memory4desc7is_zeroEv"]], "dnnl::memory::desc::operator!= (c++ function)": [[60, "_CPPv4NK4dnnl6memory4descneERK4desc"]], "dnnl::memory::desc::operator== (c++ function)": [[60, "_CPPv4NK4dnnl6memory4desceqERK4desc"]], "dnnl::memory::desc::permute_axes (c++ function)": [[60, "_CPPv4NK4dnnl6memory4desc12permute_axesERKNSt6vectorIiEEb"]], "dnnl::memory::desc::reshape (c++ function)": [[60, "_CPPv4NK4dnnl6memory4desc7reshapeERK4dimsb"]], "dnnl::memory::desc::submemory_desc (c++ function)": [[60, "_CPPv4NK4dnnl6memory4desc14submemory_descERK4dimsRK4dimsb"]], "dnnl::memory::get_data_handle (c++ function)": [[60, "_CPPv4NK4dnnl6memory15get_data_handleEv"]], "dnnl::memory::get_desc (c++ function)": [[60, "_CPPv4NK4dnnl6memory8get_descEv"]], "dnnl::memory::get_engine (c++ function)": [[60, "_CPPv4NK4dnnl6memory10get_engineEv"]], "dnnl::memory::map_data (c++ function)": [[60, "_CPPv4I0ENK4dnnl6memory8map_dataEP1Tv"]], "dnnl::memory::memory (c++ function)": [[60, "_CPPv4N4dnnl6memory6memoryERK4descRK6engine"], [60, "_CPPv4N4dnnl6memory6memoryERK4descRK6enginePv"], [60, "_CPPv4N4dnnl6memory6memoryEv"]], "dnnl::memory::set_data_handle (c++ function)": [[60, "_CPPv4NK4dnnl6memory15set_data_handleEPv"], [60, "_CPPv4NK4dnnl6memory15set_data_handleEPvRK6stream"]], "dnnl::memory::unmap_data (c++ function)": [[60, "_CPPv4NK4dnnl6memory10unmap_dataEPv"]], "dnnl::sycl_interop::get_buffer (c++ function)": [[60, "_CPPv4I0_iEN4dnnl12sycl_interop10get_bufferEN2cl4sycl6bufferI1T5ndimsEERK6memory"]], "dnnl::sycl_interop::get_memory_kind (c++ function)": [[60, "_CPPv4N4dnnl12sycl_interop15get_memory_kindERK6memory"]], "dnnl::sycl_interop::make_memory (c++ function)": [[60, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6engineN2cl4sycl6bufferI1T5ndimsEE"], [60, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6streamN2cl4sycl6bufferI1T5ndimsEE"], [60, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6engine11memory_kindPv"], [60, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6stream11memory_kindPv"]], "dnnl::sycl_interop::memory_kind (c++ enum)": [[60, "_CPPv4N4dnnl12sycl_interop11memory_kindE"]], "dnnl::sycl_interop::memory_kind::buffer (c++ enumerator)": [[60, "_CPPv4N4dnnl12sycl_interop11memory_kind6bufferE"]], "dnnl::sycl_interop::memory_kind::usm (c++ enumerator)": [[60, "_CPPv4N4dnnl12sycl_interop11memory_kind3usmE"]], "dnnl::sycl_interop::set_buffer (c++ function)": [[60, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEE"], [60, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEER6stream"]], "dnnl::engine (c++ struct)": [[61, "_CPPv4N4dnnl6engineE"]], "dnnl::engine::engine (c++ function)": [[61, "_CPPv4N4dnnl6engine6engineE4kind6size_t"], [61, "_CPPv4N4dnnl6engine6engineEv"]], "dnnl::engine::get_count (c++ function)": [[61, "_CPPv4N4dnnl6engine9get_countE4kind"]], "dnnl::engine::get_kind (c++ function)": [[61, "_CPPv4NK4dnnl6engine8get_kindEv"]], "dnnl::engine::kind (c++ enum)": [[61, "_CPPv4N4dnnl6engine4kindE"]], "dnnl::engine::kind::any (c++ enumerator)": [[61, "_CPPv4N4dnnl6engine4kind3anyE"]], "dnnl::engine::kind::cpu (c++ enumerator)": [[61, "_CPPv4N4dnnl6engine4kind3cpuE"]], "dnnl::engine::kind::gpu (c++ enumerator)": [[61, "_CPPv4N4dnnl6engine4kind3gpuE"]], "dnnl::stream (c++ struct)": [[61, "_CPPv4N4dnnl6streamE"]], "dnnl::stream::flags (c++ enum)": [[61, "_CPPv4N4dnnl6stream5flagsE"]], "dnnl::stream::flags::default_flags (c++ enumerator)": [[61, "_CPPv4N4dnnl6stream5flags13default_flagsE"]], "dnnl::stream::flags::in_order (c++ enumerator)": [[61, "_CPPv4N4dnnl6stream5flags8in_orderE"]], "dnnl::stream::flags::out_of_order (c++ enumerator)": [[61, "_CPPv4N4dnnl6stream5flags12out_of_orderE"]], "dnnl::stream::get_engine (c++ function)": [[61, "_CPPv4NK4dnnl6stream10get_engineEv"]], "dnnl::stream::stream (c++ function)": [[61, "_CPPv4N4dnnl6stream6streamERK6engine5flags"], [61, "_CPPv4N4dnnl6stream6streamEv"]], "dnnl::stream::wait (c++ function)": [[61, "_CPPv4N4dnnl6stream4waitEv"]], "dnnl::sycl_interop::get_context (c++ function)": [[61, "_CPPv4N4dnnl12sycl_interop11get_contextERK6engine"]], "dnnl::sycl_interop::get_device (c++ function)": [[61, "_CPPv4N4dnnl12sycl_interop10get_deviceERK6engine"]], "dnnl::sycl_interop::get_queue (c++ function)": [[61, "_CPPv4N4dnnl12sycl_interop9get_queueERK6stream"]], "dnnl::sycl_interop::make_engine (c++ function)": [[61, "_CPPv4N4dnnl12sycl_interop11make_engineERKN2cl4sycl6deviceERKN2cl4sycl7contextE"]], "dnnl::sycl_interop::make_stream (c++ function)": [[61, "_CPPv4N4dnnl12sycl_interop11make_streamERK6engineRN2cl4sycl5queueE"]], "dnnl_graph_unknown_dim (c macro)": [[63, "c.DNNL_GRAPH_UNKNOWN_DIM"]], "dnnl_graph_unknown_ndims (c macro)": [[63, "c.DNNL_GRAPH_UNKNOWN_NDIMS"]], "dnnl::graph::graph (c++ struct)": [[63, "_CPPv4N4dnnl5graph5graphE"]], "dnnl::graph::graph::add_op (c++ function)": [[63, "_CPPv4N4dnnl5graph5graph6add_opERK2opb"]], "dnnl::graph::graph::finalize (c++ function)": [[63, "_CPPv4N4dnnl5graph5graph8finalizeEv"]], "dnnl::graph::graph::get_partitions (c++ function)": [[63, "_CPPv4N4dnnl5graph5graph14get_partitionsEN9partition6policyE"]], "dnnl::graph::graph::graph (c++ function)": [[63, "_CPPv4N4dnnl5graph5graph5graphEN4dnnl6engine4kindE"], [63, "_CPPv4N4dnnl5graph5graph5graphEN4dnnl6engine4kindEN4dnnl11fpmath_modeE"]], "dnnl::graph::graph::is_finalized (c++ function)": [[63, "_CPPv4NK4dnnl5graph5graph12is_finalizedEv"]], "dnnl::graph::logical_tensor (c++ struct)": [[63, "_CPPv4N4dnnl5graph14logical_tensorE"]], "dnnl::graph::logical_tensor::data_type (c++ enum)": [[63, "_CPPv4N4dnnl5graph14logical_tensor9data_typeE"]], "dnnl::graph::logical_tensor::data_type::bf16 (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph14logical_tensor9data_type4bf16E"]], "dnnl::graph::logical_tensor::data_type::boolean (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph14logical_tensor9data_type7booleanE"]], "dnnl::graph::logical_tensor::data_type::f16 (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph14logical_tensor9data_type3f16E"]], "dnnl::graph::logical_tensor::data_type::f32 (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph14logical_tensor9data_type3f32E"]], "dnnl::graph::logical_tensor::data_type::s32 (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph14logical_tensor9data_type3s32E"]], "dnnl::graph::logical_tensor::data_type::s8 (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph14logical_tensor9data_type2s8E"]], "dnnl::graph::logical_tensor::data_type::u8 (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph14logical_tensor9data_type2u8E"]], "dnnl::graph::logical_tensor::data_type::undef (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph14logical_tensor9data_type5undefE"]], "dnnl::graph::logical_tensor::dim (c++ type)": [[63, "_CPPv4N4dnnl5graph14logical_tensor3dimE"]], "dnnl::graph::logical_tensor::dims (c++ type)": [[63, "_CPPv4N4dnnl5graph14logical_tensor4dimsE"]], "dnnl::graph::logical_tensor::get_data_type (c++ function)": [[63, "_CPPv4N4dnnl5graph14logical_tensor13get_data_typeEv"]], "dnnl::graph::logical_tensor::get_dims (c++ function)": [[63, "_CPPv4NK4dnnl5graph14logical_tensor8get_dimsEv"]], "dnnl::graph::logical_tensor::get_id (c++ function)": [[63, "_CPPv4NK4dnnl5graph14logical_tensor6get_idEv"]], "dnnl::graph::logical_tensor::get_layout_id (c++ function)": [[63, "_CPPv4NK4dnnl5graph14logical_tensor13get_layout_idEv"]], "dnnl::graph::logical_tensor::get_layout_type (c++ function)": [[63, "_CPPv4NK4dnnl5graph14logical_tensor15get_layout_typeEv"]], "dnnl::graph::logical_tensor::get_mem_size (c++ function)": [[63, "_CPPv4NK4dnnl5graph14logical_tensor12get_mem_sizeEv"]], "dnnl::graph::logical_tensor::get_property_type (c++ function)": [[63, "_CPPv4NK4dnnl5graph14logical_tensor17get_property_typeEv"]], "dnnl::graph::logical_tensor::get_strides (c++ function)": [[63, "_CPPv4NK4dnnl5graph14logical_tensor11get_stridesEv"]], "dnnl::graph::logical_tensor::is_equal (c++ function)": [[63, "_CPPv4N4dnnl5graph14logical_tensor8is_equalERK14logical_tensor"]], "dnnl::graph::logical_tensor::layout_type (c++ enum)": [[63, "_CPPv4N4dnnl5graph14logical_tensor11layout_typeE"]], "dnnl::graph::logical_tensor::layout_type::any (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph14logical_tensor11layout_type3anyE"]], "dnnl::graph::logical_tensor::layout_type::opaque (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph14logical_tensor11layout_type6opaqueE"]], "dnnl::graph::logical_tensor::layout_type::strided (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph14logical_tensor11layout_type7stridedE"]], "dnnl::graph::logical_tensor::layout_type::undef (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph14logical_tensor11layout_type5undefE"]], "dnnl::graph::logical_tensor::logical_tensor (c++ function)": [[63, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type11layout_type"], [63, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type7int32_t11layout_type13property_type"], [63, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims11layout_type13property_type"], [63, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims6size_t13property_type"], [63, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dimsRK4dims13property_type"], [63, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorERK14logical_tensor"], [63, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorEv"]], "dnnl::graph::logical_tensor::operator= (c++ function)": [[63, "_CPPv4N4dnnl5graph14logical_tensoraSERK14logical_tensor"]], "dnnl::graph::logical_tensor::property_type (c++ enum)": [[63, "_CPPv4N4dnnl5graph14logical_tensor13property_typeE"]], "dnnl::graph::logical_tensor::property_type::constant (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph14logical_tensor13property_type8constantE"]], "dnnl::graph::logical_tensor::property_type::undef (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph14logical_tensor13property_type5undefE"]], "dnnl::graph::logical_tensor::property_type::variable (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph14logical_tensor13property_type8variableE"]], "dnnl::graph::op (c++ struct)": [[63, "_CPPv4N4dnnl5graph2opE"]], "dnnl::graph::op::add_input (c++ function)": [[63, "_CPPv4N4dnnl5graph2op9add_inputERK14logical_tensor"]], "dnnl::graph::op::add_inputs (c++ function)": [[63, "_CPPv4N4dnnl5graph2op10add_inputsERKNSt6vectorI14logical_tensorEE"]], "dnnl::graph::op::add_output (c++ function)": [[63, "_CPPv4N4dnnl5graph2op10add_outputERK14logical_tensor"]], "dnnl::graph::op::add_outputs (c++ function)": [[63, "_CPPv4N4dnnl5graph2op11add_outputsERKNSt6vectorI14logical_tensorEE"]], "dnnl::graph::op::attr (c++ enum)": [[63, "_CPPv4N4dnnl5graph2op4attrE"]], "dnnl::graph::op::attr::alpha (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr5alphaE"]], "dnnl::graph::op::attr::auto_broadcast (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr14auto_broadcastE"]], "dnnl::graph::op::attr::auto_pad (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr8auto_padE"]], "dnnl::graph::op::attr::axes (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr4axesE"]], "dnnl::graph::op::attr::axis (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr4axisE"]], "dnnl::graph::op::attr::begin_norm_axis (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr15begin_norm_axisE"]], "dnnl::graph::op::attr::beta (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr4betaE"]], "dnnl::graph::op::attr::coordinate_transformation_mode (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr30coordinate_transformation_modeE"]], "dnnl::graph::op::attr::data_format (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr11data_formatE"]], "dnnl::graph::op::attr::dilations (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr9dilationsE"]], "dnnl::graph::op::attr::dst_shape (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr9dst_shapeE"]], "dnnl::graph::op::attr::epsilon (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr7epsilonE"]], "dnnl::graph::op::attr::exclude_pad (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr11exclude_padE"]], "dnnl::graph::op::attr::groups (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr6groupsE"]], "dnnl::graph::op::attr::keep_dims (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr9keep_dimsE"]], "dnnl::graph::op::attr::keep_stats (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr10keep_statsE"]], "dnnl::graph::op::attr::kernel (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr6kernelE"]], "dnnl::graph::op::attr::max (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr3maxE"]], "dnnl::graph::op::attr::min (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr3minE"]], "dnnl::graph::op::attr::mode (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr4modeE"]], "dnnl::graph::op::attr::momentum (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr8momentumE"]], "dnnl::graph::op::attr::order (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr5orderE"]], "dnnl::graph::op::attr::output_padding (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr14output_paddingE"]], "dnnl::graph::op::attr::pads_begin (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr10pads_beginE"]], "dnnl::graph::op::attr::pads_end (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr8pads_endE"]], "dnnl::graph::op::attr::per_channel_broadcast (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr21per_channel_broadcastE"]], "dnnl::graph::op::attr::qtype (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr5qtypeE"]], "dnnl::graph::op::attr::rounding_type (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr13rounding_typeE"]], "dnnl::graph::op::attr::scales (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr6scalesE"]], "dnnl::graph::op::attr::shape (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr5shapeE"]], "dnnl::graph::op::attr::sizes (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr5sizesE"]], "dnnl::graph::op::attr::special_zero (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr12special_zeroE"]], "dnnl::graph::op::attr::src_shape (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr9src_shapeE"]], "dnnl::graph::op::attr::strides (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr7stridesE"]], "dnnl::graph::op::attr::transpose_a (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr11transpose_aE"]], "dnnl::graph::op::attr::transpose_b (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr11transpose_bE"]], "dnnl::graph::op::attr::undef (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr5undefE"]], "dnnl::graph::op::attr::use_affine (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr10use_affineE"]], "dnnl::graph::op::attr::use_dst (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr7use_dstE"]], "dnnl::graph::op::attr::weights_format (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr14weights_formatE"]], "dnnl::graph::op::attr::weights_shape (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr13weights_shapeE"]], "dnnl::graph::op::attr::zps (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr3zpsE"]], "dnnl::graph::op::kind (c++ enum)": [[63, "_CPPv4N4dnnl5graph2op4kindE"]], "dnnl::graph::op::kind::abs (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind3AbsE"]], "dnnl::graph::op::kind::absbackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind11AbsBackwardE"]], "dnnl::graph::op::kind::add (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind3AddE"]], "dnnl::graph::op::kind::avgpool (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind7AvgPoolE"]], "dnnl::graph::op::kind::avgpoolbackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind15AvgPoolBackwardE"]], "dnnl::graph::op::kind::batchnormforwardtraining (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind24BatchNormForwardTrainingE"]], "dnnl::graph::op::kind::batchnorminference (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind18BatchNormInferenceE"]], "dnnl::graph::op::kind::batchnormtrainingbackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind25BatchNormTrainingBackwardE"]], "dnnl::graph::op::kind::biasadd (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind7BiasAddE"]], "dnnl::graph::op::kind::biasaddbackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind15BiasAddBackwardE"]], "dnnl::graph::op::kind::clamp (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind5ClampE"]], "dnnl::graph::op::kind::clampbackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind13ClampBackwardE"]], "dnnl::graph::op::kind::concat (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind6ConcatE"]], "dnnl::graph::op::kind::convtranspose (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind13ConvTransposeE"]], "dnnl::graph::op::kind::convtransposebackwarddata (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind25ConvTransposeBackwardDataE"]], "dnnl::graph::op::kind::convtransposebackwardweights (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind28ConvTransposeBackwardWeightsE"]], "dnnl::graph::op::kind::convolution (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind11ConvolutionE"]], "dnnl::graph::op::kind::convolutionbackwarddata (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind23ConvolutionBackwardDataE"]], "dnnl::graph::op::kind::convolutionbackwardweights (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind26ConvolutionBackwardWeightsE"]], "dnnl::graph::op::kind::dequantize (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind10DequantizeE"]], "dnnl::graph::op::kind::divide (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind6DivideE"]], "dnnl::graph::op::kind::dynamicdequantize (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind17DynamicDequantizeE"]], "dnnl::graph::op::kind::dynamicquantize (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind15DynamicQuantizeE"]], "dnnl::graph::op::kind::elu (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind3EluE"]], "dnnl::graph::op::kind::elubackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind11EluBackwardE"]], "dnnl::graph::op::kind::end (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind3EndE"]], "dnnl::graph::op::kind::exp (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind3ExpE"]], "dnnl::graph::op::kind::gelu (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind4GELUE"]], "dnnl::graph::op::kind::gelubackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind12GELUBackwardE"]], "dnnl::graph::op::kind::hardsigmoid (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind11HardSigmoidE"]], "dnnl::graph::op::kind::hardsigmoidbackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind19HardSigmoidBackwardE"]], "dnnl::graph::op::kind::hardswish (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind9HardSwishE"]], "dnnl::graph::op::kind::hardswishbackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind17HardSwishBackwardE"]], "dnnl::graph::op::kind::interpolate (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind11InterpolateE"]], "dnnl::graph::op::kind::interpolatebackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind19InterpolateBackwardE"]], "dnnl::graph::op::kind::lastsymbol (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind10LastSymbolE"]], "dnnl::graph::op::kind::layernorm (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind9LayerNormE"]], "dnnl::graph::op::kind::layernormbackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind17LayerNormBackwardE"]], "dnnl::graph::op::kind::leakyrelu (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind9LeakyReLUE"]], "dnnl::graph::op::kind::log (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind3LogE"]], "dnnl::graph::op::kind::logsoftmax (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind10LogSoftmaxE"]], "dnnl::graph::op::kind::logsoftmaxbackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind18LogSoftmaxBackwardE"]], "dnnl::graph::op::kind::matmul (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind6MatMulE"]], "dnnl::graph::op::kind::maxpool (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind7MaxPoolE"]], "dnnl::graph::op::kind::maxpoolbackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind15MaxPoolBackwardE"]], "dnnl::graph::op::kind::maximum (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind7MaximumE"]], "dnnl::graph::op::kind::minimum (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind7MinimumE"]], "dnnl::graph::op::kind::mish (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind4MishE"]], "dnnl::graph::op::kind::mishbackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind12MishBackwardE"]], "dnnl::graph::op::kind::multiply (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind8MultiplyE"]], "dnnl::graph::op::kind::prelu (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind5PReLUE"]], "dnnl::graph::op::kind::prelubackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind13PReLUBackwardE"]], "dnnl::graph::op::kind::pow (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind3PowE"]], "dnnl::graph::op::kind::quantize (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind8QuantizeE"]], "dnnl::graph::op::kind::relu (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind4ReLUE"]], "dnnl::graph::op::kind::relubackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind12ReLUBackwardE"]], "dnnl::graph::op::kind::reciprocal (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind10ReciprocalE"]], "dnnl::graph::op::kind::reducel1 (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind8ReduceL1E"]], "dnnl::graph::op::kind::reducel2 (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind8ReduceL2E"]], "dnnl::graph::op::kind::reducemax (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind9ReduceMaxE"]], "dnnl::graph::op::kind::reducemean (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind10ReduceMeanE"]], "dnnl::graph::op::kind::reducemin (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind9ReduceMinE"]], "dnnl::graph::op::kind::reduceprod (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind10ReduceProdE"]], "dnnl::graph::op::kind::reducesum (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind9ReduceSumE"]], "dnnl::graph::op::kind::reorder (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind7ReorderE"]], "dnnl::graph::op::kind::round (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind5RoundE"]], "dnnl::graph::op::kind::select (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind6SelectE"]], "dnnl::graph::op::kind::sigmoid (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind7SigmoidE"]], "dnnl::graph::op::kind::sigmoidbackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind15SigmoidBackwardE"]], "dnnl::graph::op::kind::softmax (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind7SoftMaxE"]], "dnnl::graph::op::kind::softmaxbackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind15SoftMaxBackwardE"]], "dnnl::graph::op::kind::softplus (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind8SoftPlusE"]], "dnnl::graph::op::kind::softplusbackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind16SoftPlusBackwardE"]], "dnnl::graph::op::kind::sqrt (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind4SqrtE"]], "dnnl::graph::op::kind::sqrtbackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind12SqrtBackwardE"]], "dnnl::graph::op::kind::square (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind6SquareE"]], "dnnl::graph::op::kind::squareddifference (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind17SquaredDifferenceE"]], "dnnl::graph::op::kind::staticreshape (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind13StaticReshapeE"]], "dnnl::graph::op::kind::statictranspose (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind15StaticTransposeE"]], "dnnl::graph::op::kind::subtract (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind8SubtractE"]], "dnnl::graph::op::kind::tanh (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind4TanhE"]], "dnnl::graph::op::kind::tanhbackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind12TanhBackwardE"]], "dnnl::graph::op::kind::typecast (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind8TypeCastE"]], "dnnl::graph::op::kind::wildcard (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind8WildcardE"]], "dnnl::graph::op::op (c++ function)": [[63, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6stringE"], [63, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6vectorI14logical_tensorEERKNSt6vectorI14logical_tensorEERKNSt6stringE"]], "dnnl::graph::op::set_attr (c++ function)": [[63, "_CPPv4I0EN4dnnl5graph2op8set_attrER2op4attrRK4Type"]], "dnnl::error (c++ struct)": [[151, "_CPPv4N4dnnl5errorE"]], "dnnl::primitive_attr (c++ struct)": [[152, "_CPPv4N4dnnl14primitive_attrE"]], "dnnl::primitive_attr::get_fpmath_mode (c++ function)": [[152, "_CPPv4NK4dnnl14primitive_attr15get_fpmath_modeEv"]], "dnnl::primitive_attr::get_post_ops (c++ function)": [[152, "_CPPv4NK4dnnl14primitive_attr12get_post_opsEv"]], "dnnl::primitive_attr::get_scales_mask (c++ function)": [[152, "_CPPv4NK4dnnl14primitive_attr15get_scales_maskEi"]], "dnnl::primitive_attr::get_scratchpad_mode (c++ function)": [[152, "_CPPv4NK4dnnl14primitive_attr19get_scratchpad_modeEv"]], "dnnl::primitive_attr::primitive_attr (c++ function)": [[152, "_CPPv4N4dnnl14primitive_attr14primitive_attrEv"]], "dnnl::primitive_attr::set_fpmath_mode (c++ function)": [[152, "_CPPv4N4dnnl14primitive_attr15set_fpmath_modeE11fpmath_mode"]], "dnnl::primitive_attr::set_post_ops (c++ function)": [[152, "_CPPv4N4dnnl14primitive_attr12set_post_opsEK8post_ops"]], "dnnl::primitive_attr::set_rnn_data_qparams (c++ function)": [[152, "_CPPv4N4dnnl14primitive_attr20set_rnn_data_qparamsEff"]], "dnnl::primitive_attr::set_rnn_weights_qparams (c++ function)": [[152, "_CPPv4N4dnnl14primitive_attr23set_rnn_weights_qparamsEiRKNSt6vectorIfEE"]], "dnnl::primitive_attr::set_scales_mask (c++ function)": [[152, "_CPPv4N4dnnl14primitive_attr15set_scales_maskEii"]], "dnnl::primitive_attr::set_scratchpad_mode (c++ function)": [[152, "_CPPv4N4dnnl14primitive_attr19set_scratchpad_modeE15scratchpad_mode"]], "dnnl::primitive_attr::set_zero_points_mask (c++ function)": [[152, "_CPPv4N4dnnl14primitive_attr20set_zero_points_maskEii"]], "dnnl::scratchpad_mode (c++ enum)": [[152, "_CPPv4N4dnnl15scratchpad_modeE"]], "dnnl::scratchpad_mode::library (c++ enumerator)": [[152, "_CPPv4N4dnnl15scratchpad_mode7libraryE"]], "dnnl::scratchpad_mode::user (c++ enumerator)": [[152, "_CPPv4N4dnnl15scratchpad_mode4userE"]], "dnnl::post_ops (c++ struct)": [[153, "_CPPv4N4dnnl8post_opsE"]], "dnnl::post_ops::append_binary (c++ function)": [[153, "_CPPv4N4dnnl8post_ops13append_binaryE9algorithmRKN6memory4descE"]], "dnnl::post_ops::append_eltwise (c++ function)": [[153, "_CPPv4N4dnnl8post_ops14append_eltwiseE9algorithmff"]], "dnnl::post_ops::append_sum (c++ function)": [[153, "_CPPv4N4dnnl8post_ops10append_sumEN6memory9data_typeE"]], "dnnl::post_ops::get_params_binary (c++ function)": [[153, "_CPPv4NK4dnnl8post_ops17get_params_binaryEiR9algorithmRN6memory4descE"]], "dnnl::post_ops::get_params_eltwise (c++ function)": [[153, "_CPPv4NK4dnnl8post_ops18get_params_eltwiseEiR9algorithmRfRf"]], "dnnl::post_ops::get_params_sum (c++ function)": [[153, "_CPPv4NK4dnnl8post_ops14get_params_sumEiRf"], [153, "_CPPv4NK4dnnl8post_ops14get_params_sumEiRfRN6memory9data_typeE"]], "dnnl::post_ops::kind (c++ function)": [[153, "_CPPv4NK4dnnl8post_ops4kindEi"]], "dnnl::post_ops::len (c++ function)": [[153, "_CPPv4NK4dnnl8post_ops3lenEv"]], "dnnl::post_ops::post_ops (c++ function)": [[153, "_CPPv4N4dnnl8post_ops8post_opsEv"]], "dnnl::batch_normalization_backward (c++ struct)": [[154, "_CPPv4N4dnnl28batch_normalization_backwardE"]], "dnnl::batch_normalization_backward::batch_normalization_backward (c++ function)": [[154, "_CPPv4N4dnnl28batch_normalization_backward28batch_normalization_backwardERK14primitive_desc"], [154, "_CPPv4N4dnnl28batch_normalization_backward28batch_normalization_backwardEv"]], "dnnl::batch_normalization_backward::primitive_desc (c++ struct)": [[154, "_CPPv4N4dnnl28batch_normalization_backward14primitive_descE"]], "dnnl::batch_normalization_backward::primitive_desc::diff_dst_desc (c++ function)": [[154, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc13diff_dst_descEv"]], "dnnl::batch_normalization_backward::primitive_desc::diff_src_desc (c++ function)": [[154, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc13diff_src_descEv"]], "dnnl::batch_normalization_backward::primitive_desc::diff_weights_desc (c++ function)": [[154, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc17diff_weights_descEv"]], "dnnl::batch_normalization_backward::primitive_desc::dst_desc (c++ function)": [[154, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc8dst_descEv"]], "dnnl::batch_normalization_backward::primitive_desc::get_epsilon (c++ function)": [[154, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc11get_epsilonEv"]], "dnnl::batch_normalization_backward::primitive_desc::get_flags (c++ function)": [[154, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc9get_flagsEv"]], "dnnl::batch_normalization_backward::primitive_desc::get_prop_kind (c++ function)": [[154, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc13get_prop_kindEv"]], "dnnl::batch_normalization_backward::primitive_desc::mean_desc (c++ function)": [[154, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc9mean_descEv"]], "dnnl::batch_normalization_backward::primitive_desc::primitive_desc (c++ function)": [[154, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb"], [154, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descEv"]], "dnnl::batch_normalization_backward::primitive_desc::src_desc (c++ function)": [[154, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc8src_descEv"]], "dnnl::batch_normalization_backward::primitive_desc::variance_desc (c++ function)": [[154, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc13variance_descEv"]], "dnnl::batch_normalization_backward::primitive_desc::weights_desc (c++ function)": [[154, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc12weights_descEv"]], "dnnl::batch_normalization_backward::primitive_desc::workspace_desc (c++ function)": [[154, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc14workspace_descEv"]], "dnnl::batch_normalization_forward (c++ struct)": [[154, "_CPPv4N4dnnl27batch_normalization_forwardE"]], "dnnl::batch_normalization_forward::batch_normalization_forward (c++ function)": [[154, "_CPPv4N4dnnl27batch_normalization_forward27batch_normalization_forwardERK14primitive_desc"], [154, "_CPPv4N4dnnl27batch_normalization_forward27batch_normalization_forwardEv"]], "dnnl::batch_normalization_forward::primitive_desc (c++ struct)": [[154, "_CPPv4N4dnnl27batch_normalization_forward14primitive_descE"]], "dnnl::batch_normalization_forward::primitive_desc::dst_desc (c++ function)": [[154, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc8dst_descEv"]], "dnnl::batch_normalization_forward::primitive_desc::get_epsilon (c++ function)": [[154, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc11get_epsilonEv"]], "dnnl::batch_normalization_forward::primitive_desc::get_flags (c++ function)": [[154, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc9get_flagsEv"]], "dnnl::batch_normalization_forward::primitive_desc::get_prop_kind (c++ function)": [[154, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc13get_prop_kindEv"]], "dnnl::batch_normalization_forward::primitive_desc::mean_desc (c++ function)": [[154, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc9mean_descEv"]], "dnnl::batch_normalization_forward::primitive_desc::primitive_desc (c++ function)": [[154, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb"], [154, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descEv"]], "dnnl::batch_normalization_forward::primitive_desc::src_desc (c++ function)": [[154, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc8src_descEv"]], "dnnl::batch_normalization_forward::primitive_desc::variance_desc (c++ function)": [[154, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc13variance_descEv"]], "dnnl::batch_normalization_forward::primitive_desc::weights_desc (c++ function)": [[154, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc12weights_descEv"]], "dnnl::batch_normalization_forward::primitive_desc::workspace_desc (c++ function)": [[154, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc14workspace_descEv"]], "dnnl::binary (c++ struct)": [[155, "_CPPv4N4dnnl6binaryE"]], "dnnl::binary::binary (c++ function)": [[155, "_CPPv4N4dnnl6binary6binaryERK14primitive_desc"], [155, "_CPPv4N4dnnl6binary6binaryEv"]], "dnnl::binary::primitive_desc (c++ struct)": [[155, "_CPPv4N4dnnl6binary14primitive_descE"]], "dnnl::binary::primitive_desc::dst_desc (c++ function)": [[155, "_CPPv4NK4dnnl6binary14primitive_desc8dst_descEv"]], "dnnl::binary::primitive_desc::get_algorithm (c++ function)": [[155, "_CPPv4NK4dnnl6binary14primitive_desc13get_algorithmEv"]], "dnnl::binary::primitive_desc::primitive_desc (c++ function)": [[155, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [155, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descEv"]], "dnnl::binary::primitive_desc::src0_desc (c++ function)": [[155, "_CPPv4NK4dnnl6binary14primitive_desc9src0_descEv"]], "dnnl::binary::primitive_desc::src1_desc (c++ function)": [[155, "_CPPv4NK4dnnl6binary14primitive_desc9src1_descEv"]], "dnnl::binary::primitive_desc::src_desc (c++ function)": [[155, "_CPPv4NK4dnnl6binary14primitive_desc8src_descEi"]], "dnnl::concat (c++ struct)": [[156, "_CPPv4N4dnnl6concatE"]], "dnnl::concat::concat (c++ function)": [[156, "_CPPv4N4dnnl6concat6concatERK14primitive_desc"], [156, "_CPPv4N4dnnl6concat6concatEv"]], "dnnl::concat::primitive_desc (c++ struct)": [[156, "_CPPv4N4dnnl6concat14primitive_descE"]], "dnnl::concat::primitive_desc::dst_desc (c++ function)": [[156, "_CPPv4NK4dnnl6concat14primitive_desc8dst_descEv"]], "dnnl::concat::primitive_desc::primitive_desc (c++ function)": [[156, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descERKN6memory4descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr"], [156, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr"], [156, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descEv"]], "dnnl::concat::primitive_desc::src_desc (c++ function)": [[156, "_CPPv4NK4dnnl6concat14primitive_desc8src_descEi"]], "dnnl::convolution_backward_data (c++ struct)": [[157, "_CPPv4N4dnnl25convolution_backward_dataE"]], "dnnl::convolution_backward_data::convolution_backward_data (c++ function)": [[157, "_CPPv4N4dnnl25convolution_backward_data25convolution_backward_dataERK14primitive_desc"], [157, "_CPPv4N4dnnl25convolution_backward_data25convolution_backward_dataEv"]], "dnnl::convolution_backward_data::primitive_desc (c++ struct)": [[157, "_CPPv4N4dnnl25convolution_backward_data14primitive_descE"]], "dnnl::convolution_backward_data::primitive_desc::diff_dst_desc (c++ function)": [[157, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13diff_dst_descEv"]], "dnnl::convolution_backward_data::primitive_desc::diff_src_desc (c++ function)": [[157, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13diff_src_descEv"]], "dnnl::convolution_backward_data::primitive_desc::get_algorithm (c++ function)": [[157, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_algorithmEv"]], "dnnl::convolution_backward_data::primitive_desc::get_dilations (c++ function)": [[157, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_dilationsEv"]], "dnnl::convolution_backward_data::primitive_desc::get_padding_l (c++ function)": [[157, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_padding_lEv"]], "dnnl::convolution_backward_data::primitive_desc::get_padding_r (c++ function)": [[157, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_padding_rEv"]], "dnnl::convolution_backward_data::primitive_desc::get_prop_kind (c++ function)": [[157, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_prop_kindEv"]], "dnnl::convolution_backward_data::primitive_desc::get_strides (c++ function)": [[157, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc11get_stridesEv"]], "dnnl::convolution_backward_data::primitive_desc::primitive_desc (c++ function)": [[157, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb"], [157, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb"], [157, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descEv"]], "dnnl::convolution_backward_data::primitive_desc::weights_desc (c++ function)": [[157, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc12weights_descEv"]], "dnnl::convolution_backward_weights (c++ struct)": [[157, "_CPPv4N4dnnl28convolution_backward_weightsE"]], "dnnl::convolution_backward_weights::convolution_backward_weights (c++ function)": [[157, "_CPPv4N4dnnl28convolution_backward_weights28convolution_backward_weightsERK14primitive_desc"], [157, "_CPPv4N4dnnl28convolution_backward_weights28convolution_backward_weightsEv"]], "dnnl::convolution_backward_weights::primitive_desc (c++ struct)": [[157, "_CPPv4N4dnnl28convolution_backward_weights14primitive_descE"]], "dnnl::convolution_backward_weights::primitive_desc::diff_bias_desc (c++ function)": [[157, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc14diff_bias_descEv"]], "dnnl::convolution_backward_weights::primitive_desc::diff_dst_desc (c++ function)": [[157, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13diff_dst_descEv"]], "dnnl::convolution_backward_weights::primitive_desc::diff_weights_desc (c++ function)": [[157, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc17diff_weights_descEv"]], "dnnl::convolution_backward_weights::primitive_desc::get_algorithm (c++ function)": [[157, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_algorithmEv"]], "dnnl::convolution_backward_weights::primitive_desc::get_dilations (c++ function)": [[157, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_dilationsEv"]], "dnnl::convolution_backward_weights::primitive_desc::get_padding_l (c++ function)": [[157, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_padding_lEv"]], "dnnl::convolution_backward_weights::primitive_desc::get_padding_r (c++ function)": [[157, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_padding_rEv"]], "dnnl::convolution_backward_weights::primitive_desc::get_prop_kind (c++ function)": [[157, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_prop_kindEv"]], "dnnl::convolution_backward_weights::primitive_desc::get_strides (c++ function)": [[157, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc11get_stridesEv"]], "dnnl::convolution_backward_weights::primitive_desc::primitive_desc (c++ function)": [[157, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb"], [157, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb"], [157, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb"], [157, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb"], [157, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descEv"]], "dnnl::convolution_backward_weights::primitive_desc::src_desc (c++ function)": [[157, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc8src_descEv"]], "dnnl::convolution_forward (c++ struct)": [[157, "_CPPv4N4dnnl19convolution_forwardE"]], "dnnl::convolution_forward::convolution_forward (c++ function)": [[157, "_CPPv4N4dnnl19convolution_forward19convolution_forwardERK14primitive_desc"], [157, "_CPPv4N4dnnl19convolution_forward19convolution_forwardEv"]], "dnnl::convolution_forward::primitive_desc (c++ struct)": [[157, "_CPPv4N4dnnl19convolution_forward14primitive_descE"]], "dnnl::convolution_forward::primitive_desc::bias_desc (c++ function)": [[157, "_CPPv4NK4dnnl19convolution_forward14primitive_desc9bias_descEv"]], "dnnl::convolution_forward::primitive_desc::dst_desc (c++ function)": [[157, "_CPPv4NK4dnnl19convolution_forward14primitive_desc8dst_descEv"]], "dnnl::convolution_forward::primitive_desc::get_algorithm (c++ function)": [[157, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_algorithmEv"]], "dnnl::convolution_forward::primitive_desc::get_dilations (c++ function)": [[157, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_dilationsEv"]], "dnnl::convolution_forward::primitive_desc::get_padding_l (c++ function)": [[157, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_padding_lEv"]], "dnnl::convolution_forward::primitive_desc::get_padding_r (c++ function)": [[157, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_padding_rEv"]], "dnnl::convolution_forward::primitive_desc::get_prop_kind (c++ function)": [[157, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_prop_kindEv"]], "dnnl::convolution_forward::primitive_desc::get_strides (c++ function)": [[157, "_CPPv4NK4dnnl19convolution_forward14primitive_desc11get_stridesEv"]], "dnnl::convolution_forward::primitive_desc::primitive_desc (c++ function)": [[157, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb"], [157, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb"], [157, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb"], [157, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb"], [157, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descEv"]], "dnnl::convolution_forward::primitive_desc::src_desc (c++ function)": [[157, "_CPPv4NK4dnnl19convolution_forward14primitive_desc8src_descEv"]], "dnnl::convolution_forward::primitive_desc::weights_desc (c++ function)": [[157, "_CPPv4NK4dnnl19convolution_forward14primitive_desc12weights_descEv"]], "dnnl::deconvolution_backward_data (c++ struct)": [[157, "_CPPv4N4dnnl27deconvolution_backward_dataE"]], "dnnl::deconvolution_backward_data::deconvolution_backward_data (c++ function)": [[157, "_CPPv4N4dnnl27deconvolution_backward_data27deconvolution_backward_dataERK14primitive_desc"], [157, "_CPPv4N4dnnl27deconvolution_backward_data27deconvolution_backward_dataEv"]], "dnnl::deconvolution_backward_data::primitive_desc (c++ struct)": [[157, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_descE"]], "dnnl::deconvolution_backward_data::primitive_desc::diff_dst_desc (c++ function)": [[157, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13diff_dst_descEv"]], "dnnl::deconvolution_backward_data::primitive_desc::diff_src_desc (c++ function)": [[157, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13diff_src_descEv"]], "dnnl::deconvolution_backward_data::primitive_desc::get_algorithm (c++ function)": [[157, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_algorithmEv"]], "dnnl::deconvolution_backward_data::primitive_desc::get_dilations (c++ function)": [[157, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_dilationsEv"]], "dnnl::deconvolution_backward_data::primitive_desc::get_padding_l (c++ function)": [[157, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_padding_lEv"]], "dnnl::deconvolution_backward_data::primitive_desc::get_padding_r (c++ function)": [[157, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_padding_rEv"]], "dnnl::deconvolution_backward_data::primitive_desc::get_prop_kind (c++ function)": [[157, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_prop_kindEv"]], "dnnl::deconvolution_backward_data::primitive_desc::get_strides (c++ function)": [[157, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc11get_stridesEv"]], "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc (c++ function)": [[157, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb"], [157, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb"], [157, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descEv"]], "dnnl::deconvolution_backward_data::primitive_desc::weights_desc (c++ function)": [[157, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc12weights_descEv"]], "dnnl::deconvolution_backward_weights (c++ struct)": [[157, "_CPPv4N4dnnl30deconvolution_backward_weightsE"]], "dnnl::deconvolution_backward_weights::deconvolution_backward_weights (c++ function)": [[157, "_CPPv4N4dnnl30deconvolution_backward_weights30deconvolution_backward_weightsERK14primitive_desc"], [157, "_CPPv4N4dnnl30deconvolution_backward_weights30deconvolution_backward_weightsEv"]], "dnnl::deconvolution_backward_weights::primitive_desc (c++ struct)": [[157, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_descE"]], "dnnl::deconvolution_backward_weights::primitive_desc::diff_bias_desc (c++ function)": [[157, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc14diff_bias_descEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::diff_dst_desc (c++ function)": [[157, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13diff_dst_descEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::diff_weights_desc (c++ function)": [[157, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc17diff_weights_descEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::get_algorithm (c++ function)": [[157, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_algorithmEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::get_dilations (c++ function)": [[157, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_dilationsEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::get_padding_l (c++ function)": [[157, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_padding_lEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::get_padding_r (c++ function)": [[157, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_padding_rEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::get_prop_kind (c++ function)": [[157, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_prop_kindEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::get_strides (c++ function)": [[157, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc11get_stridesEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc (c++ function)": [[157, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb"], [157, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb"], [157, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb"], [157, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb"], [157, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::src_desc (c++ function)": [[157, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc8src_descEv"]], "dnnl::deconvolution_forward (c++ struct)": [[157, "_CPPv4N4dnnl21deconvolution_forwardE"]], "dnnl::deconvolution_forward::deconvolution_forward (c++ function)": [[157, "_CPPv4N4dnnl21deconvolution_forward21deconvolution_forwardERK14primitive_desc"], [157, "_CPPv4N4dnnl21deconvolution_forward21deconvolution_forwardEv"]], "dnnl::deconvolution_forward::primitive_desc (c++ struct)": [[157, "_CPPv4N4dnnl21deconvolution_forward14primitive_descE"]], "dnnl::deconvolution_forward::primitive_desc::bias_desc (c++ function)": [[157, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc9bias_descEv"]], "dnnl::deconvolution_forward::primitive_desc::dst_desc (c++ function)": [[157, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc8dst_descEv"]], "dnnl::deconvolution_forward::primitive_desc::get_algorithm (c++ function)": [[157, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_algorithmEv"]], "dnnl::deconvolution_forward::primitive_desc::get_dilations (c++ function)": [[157, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_dilationsEv"]], "dnnl::deconvolution_forward::primitive_desc::get_padding_l (c++ function)": [[157, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_padding_lEv"]], "dnnl::deconvolution_forward::primitive_desc::get_padding_r (c++ function)": [[157, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_padding_rEv"]], "dnnl::deconvolution_forward::primitive_desc::get_prop_kind (c++ function)": [[157, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_prop_kindEv"]], "dnnl::deconvolution_forward::primitive_desc::get_strides (c++ function)": [[157, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc11get_stridesEv"]], "dnnl::deconvolution_forward::primitive_desc::primitive_desc (c++ function)": [[157, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb"], [157, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb"], [157, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb"], [157, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb"], [157, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descEv"]], "dnnl::deconvolution_forward::primitive_desc::src_desc (c++ function)": [[157, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc8src_descEv"]], "dnnl::deconvolution_forward::primitive_desc::weights_desc (c++ function)": [[157, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc12weights_descEv"]], "dnnl::eltwise_backward (c++ struct)": [[158, "_CPPv4N4dnnl16eltwise_backwardE"]], "dnnl::eltwise_backward::eltwise_backward (c++ function)": [[158, "_CPPv4N4dnnl16eltwise_backward16eltwise_backwardERK14primitive_desc"], [158, "_CPPv4N4dnnl16eltwise_backward16eltwise_backwardEv"]], "dnnl::eltwise_backward::primitive_desc (c++ struct)": [[158, "_CPPv4N4dnnl16eltwise_backward14primitive_descE"]], "dnnl::eltwise_backward::primitive_desc::diff_dst_desc (c++ function)": [[158, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc13diff_dst_descEv"]], "dnnl::eltwise_backward::primitive_desc::diff_src_desc (c++ function)": [[158, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc13diff_src_descEv"]], "dnnl::eltwise_backward::primitive_desc::get_algorithm (c++ function)": [[158, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc13get_algorithmEv"]], "dnnl::eltwise_backward::primitive_desc::get_alpha (c++ function)": [[158, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc9get_alphaEv"]], "dnnl::eltwise_backward::primitive_desc::get_beta (c++ function)": [[158, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc8get_betaEv"]], "dnnl::eltwise_backward::primitive_desc::get_prop_kind (c++ function)": [[158, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc13get_prop_kindEv"]], "dnnl::eltwise_backward::primitive_desc::primitive_desc (c++ function)": [[158, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb"], [158, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb"], [158, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb"], [158, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descEv"]], "dnnl::eltwise_backward::primitive_desc::src_desc (c++ function)": [[158, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc8src_descEv"]], "dnnl::eltwise_forward (c++ struct)": [[158, "_CPPv4N4dnnl15eltwise_forwardE"]], "dnnl::eltwise_forward::eltwise_forward (c++ function)": [[158, "_CPPv4N4dnnl15eltwise_forward15eltwise_forwardERK14primitive_desc"], [158, "_CPPv4N4dnnl15eltwise_forward15eltwise_forwardEv"]], "dnnl::eltwise_forward::primitive_desc (c++ struct)": [[158, "_CPPv4N4dnnl15eltwise_forward14primitive_descE"]], "dnnl::eltwise_forward::primitive_desc::dst_desc (c++ function)": [[158, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc8dst_descEv"]], "dnnl::eltwise_forward::primitive_desc::get_algorithm (c++ function)": [[158, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc13get_algorithmEv"]], "dnnl::eltwise_forward::primitive_desc::get_alpha (c++ function)": [[158, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc9get_alphaEv"]], "dnnl::eltwise_forward::primitive_desc::get_beta (c++ function)": [[158, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc8get_betaEv"]], "dnnl::eltwise_forward::primitive_desc::get_prop_kind (c++ function)": [[158, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc13get_prop_kindEv"]], "dnnl::eltwise_forward::primitive_desc::primitive_desc (c++ function)": [[158, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb"], [158, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb"], [158, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb"], [158, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descEv"]], "dnnl::eltwise_forward::primitive_desc::src_desc (c++ function)": [[158, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc8src_descEv"]], "dnnl_arg_attr_scales (c macro)": [[159, "c.DNNL_ARG_ATTR_SCALES"]], "dnnl_arg_attr_zero_points (c macro)": [[159, "c.DNNL_ARG_ATTR_ZERO_POINTS"]], "dnnl_arg_bias (c macro)": [[159, "c.DNNL_ARG_BIAS"]], "dnnl_arg_diff_bias (c macro)": [[159, "c.DNNL_ARG_DIFF_BIAS"]], "dnnl_arg_diff_dst (c macro)": [[159, "c.DNNL_ARG_DIFF_DST"]], "dnnl_arg_diff_dst_0 (c macro)": [[159, "c.DNNL_ARG_DIFF_DST_0"]], "dnnl_arg_diff_dst_1 (c macro)": [[159, "c.DNNL_ARG_DIFF_DST_1"]], "dnnl_arg_diff_dst_2 (c macro)": [[159, "c.DNNL_ARG_DIFF_DST_2"]], "dnnl_arg_diff_dst_iter (c macro)": [[159, "c.DNNL_ARG_DIFF_DST_ITER"]], "dnnl_arg_diff_dst_iter_c (c macro)": [[159, "c.DNNL_ARG_DIFF_DST_ITER_C"]], "dnnl_arg_diff_dst_layer (c macro)": [[159, "c.DNNL_ARG_DIFF_DST_LAYER"]], "dnnl_arg_diff_scale (c macro)": [[159, "c.DNNL_ARG_DIFF_SCALE"]], "dnnl_arg_diff_shift (c macro)": [[159, "c.DNNL_ARG_DIFF_SHIFT"]], "dnnl_arg_diff_src (c macro)": [[159, "c.DNNL_ARG_DIFF_SRC"]], "dnnl_arg_diff_src_0 (c macro)": [[159, "c.DNNL_ARG_DIFF_SRC_0"]], "dnnl_arg_diff_src_1 (c macro)": [[159, "c.DNNL_ARG_DIFF_SRC_1"]], "dnnl_arg_diff_src_2 (c macro)": [[159, "c.DNNL_ARG_DIFF_SRC_2"]], "dnnl_arg_diff_src_iter (c macro)": [[159, "c.DNNL_ARG_DIFF_SRC_ITER"]], "dnnl_arg_diff_src_iter_c (c macro)": [[159, "c.DNNL_ARG_DIFF_SRC_ITER_C"]], "dnnl_arg_diff_src_layer (c macro)": [[159, "c.DNNL_ARG_DIFF_SRC_LAYER"]], "dnnl_arg_diff_weights (c macro)": [[159, "c.DNNL_ARG_DIFF_WEIGHTS"]], "dnnl_arg_diff_weights_0 (c macro)": [[159, "c.DNNL_ARG_DIFF_WEIGHTS_0"]], "dnnl_arg_diff_weights_1 (c macro)": [[159, "c.DNNL_ARG_DIFF_WEIGHTS_1"]], "dnnl_arg_diff_weights_iter (c macro)": [[159, "c.DNNL_ARG_DIFF_WEIGHTS_ITER"]], "dnnl_arg_diff_weights_layer (c macro)": [[159, "c.DNNL_ARG_DIFF_WEIGHTS_LAYER"]], "dnnl_arg_dst (c macro)": [[159, "c.DNNL_ARG_DST"]], "dnnl_arg_dst_0 (c macro)": [[159, "c.DNNL_ARG_DST_0"]], "dnnl_arg_dst_1 (c macro)": [[159, "c.DNNL_ARG_DST_1"]], "dnnl_arg_dst_2 (c macro)": [[159, "c.DNNL_ARG_DST_2"]], "dnnl_arg_dst_iter (c macro)": [[159, "c.DNNL_ARG_DST_ITER"]], "dnnl_arg_dst_iter_c (c macro)": [[159, "c.DNNL_ARG_DST_ITER_C"]], "dnnl_arg_dst_layer (c macro)": [[159, "c.DNNL_ARG_DST_LAYER"]], "dnnl_arg_from (c macro)": [[159, "c.DNNL_ARG_FROM"]], "dnnl_arg_mean (c macro)": [[159, "c.DNNL_ARG_MEAN"]], "dnnl_arg_multiple_dst (c macro)": [[159, "c.DNNL_ARG_MULTIPLE_DST"]], "dnnl_arg_multiple_src (c macro)": [[159, "c.DNNL_ARG_MULTIPLE_SRC"]], "dnnl_arg_scale (c macro)": [[159, "c.DNNL_ARG_SCALE"]], "dnnl_arg_scratchpad (c macro)": [[159, "c.DNNL_ARG_SCRATCHPAD"]], "dnnl_arg_shift (c macro)": [[159, "c.DNNL_ARG_SHIFT"]], "dnnl_arg_src (c macro)": [[159, "c.DNNL_ARG_SRC"]], "dnnl_arg_src_0 (c macro)": [[159, "c.DNNL_ARG_SRC_0"]], "dnnl_arg_src_1 (c macro)": [[159, "c.DNNL_ARG_SRC_1"]], "dnnl_arg_src_2 (c macro)": [[159, "c.DNNL_ARG_SRC_2"]], "dnnl_arg_src_iter (c macro)": [[159, "c.DNNL_ARG_SRC_ITER"]], "dnnl_arg_src_iter_c (c macro)": [[159, "c.DNNL_ARG_SRC_ITER_C"]], "dnnl_arg_src_layer (c macro)": [[159, "c.DNNL_ARG_SRC_LAYER"]], "dnnl_arg_to (c macro)": [[159, "c.DNNL_ARG_TO"]], "dnnl_arg_variance (c macro)": [[159, "c.DNNL_ARG_VARIANCE"]], "dnnl_arg_weights (c macro)": [[159, "c.DNNL_ARG_WEIGHTS"]], "dnnl_arg_weights_0 (c macro)": [[159, "c.DNNL_ARG_WEIGHTS_0"]], "dnnl_arg_weights_1 (c macro)": [[159, "c.DNNL_ARG_WEIGHTS_1"]], "dnnl_arg_weights_iter (c macro)": [[159, "c.DNNL_ARG_WEIGHTS_ITER"]], "dnnl_arg_weights_layer (c macro)": [[159, "c.DNNL_ARG_WEIGHTS_LAYER"]], "dnnl_arg_workspace (c macro)": [[159, "c.DNNL_ARG_WORKSPACE"]], "dnnl_runtime_dim_val (c macro)": [[159, "c.DNNL_RUNTIME_DIM_VAL"]], "dnnl_runtime_f32_val (c macro)": [[159, "c.DNNL_RUNTIME_F32_VAL"]], "dnnl_runtime_s32_val (c macro)": [[159, "c.DNNL_RUNTIME_S32_VAL"]], "dnnl_runtime_size_val (c macro)": [[159, "c.DNNL_RUNTIME_SIZE_VAL"]], "dnnl::algorithm (c++ enum)": [[159, "_CPPv4N4dnnl9algorithmE"]], "dnnl::algorithm::binary_add (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm10binary_addE"]], "dnnl::algorithm::binary_div (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm10binary_divE"]], "dnnl::algorithm::binary_eq (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm9binary_eqE"]], "dnnl::algorithm::binary_ge (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm9binary_geE"]], "dnnl::algorithm::binary_gt (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm9binary_gtE"]], "dnnl::algorithm::binary_le (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm9binary_leE"]], "dnnl::algorithm::binary_lt (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm9binary_ltE"]], "dnnl::algorithm::binary_max (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm10binary_maxE"]], "dnnl::algorithm::binary_min (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm10binary_minE"]], "dnnl::algorithm::binary_mul (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm10binary_mulE"]], "dnnl::algorithm::binary_ne (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm9binary_neE"]], "dnnl::algorithm::binary_sub (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm10binary_subE"]], "dnnl::algorithm::convolution_auto (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm16convolution_autoE"]], "dnnl::algorithm::convolution_direct (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm18convolution_directE"]], "dnnl::algorithm::convolution_winograd (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm20convolution_winogradE"]], "dnnl::algorithm::deconvolution_direct (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm20deconvolution_directE"]], "dnnl::algorithm::deconvolution_winograd (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm22deconvolution_winogradE"]], "dnnl::algorithm::eltwise_abs (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm11eltwise_absE"]], "dnnl::algorithm::eltwise_bounded_relu (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm20eltwise_bounded_reluE"]], "dnnl::algorithm::eltwise_clip (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm12eltwise_clipE"]], "dnnl::algorithm::eltwise_clip_use_dst_for_bwd (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm28eltwise_clip_use_dst_for_bwdE"]], "dnnl::algorithm::eltwise_elu (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm11eltwise_eluE"]], "dnnl::algorithm::eltwise_elu_use_dst_for_bwd (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm27eltwise_elu_use_dst_for_bwdE"]], "dnnl::algorithm::eltwise_exp (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm11eltwise_expE"]], "dnnl::algorithm::eltwise_exp_use_dst_for_bwd (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm27eltwise_exp_use_dst_for_bwdE"]], "dnnl::algorithm::eltwise_gelu (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm12eltwise_geluE"]], "dnnl::algorithm::eltwise_gelu_erf (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm16eltwise_gelu_erfE"]], "dnnl::algorithm::eltwise_gelu_tanh (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm17eltwise_gelu_tanhE"]], "dnnl::algorithm::eltwise_hardsigmoid (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm19eltwise_hardsigmoidE"]], "dnnl::algorithm::eltwise_hardswish (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm17eltwise_hardswishE"]], "dnnl::algorithm::eltwise_linear (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm14eltwise_linearE"]], "dnnl::algorithm::eltwise_log (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm11eltwise_logE"]], "dnnl::algorithm::eltwise_logistic (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm16eltwise_logisticE"]], "dnnl::algorithm::eltwise_logistic_use_dst_for_bwd (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm32eltwise_logistic_use_dst_for_bwdE"]], "dnnl::algorithm::eltwise_mish (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm12eltwise_mishE"]], "dnnl::algorithm::eltwise_pow (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm11eltwise_powE"]], "dnnl::algorithm::eltwise_relu (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm12eltwise_reluE"]], "dnnl::algorithm::eltwise_relu_use_dst_for_bwd (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm28eltwise_relu_use_dst_for_bwdE"]], "dnnl::algorithm::eltwise_round (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm13eltwise_roundE"]], "dnnl::algorithm::eltwise_soft_relu (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm17eltwise_soft_reluE"]], "dnnl::algorithm::eltwise_sqrt (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm12eltwise_sqrtE"]], "dnnl::algorithm::eltwise_sqrt_use_dst_for_bwd (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm28eltwise_sqrt_use_dst_for_bwdE"]], "dnnl::algorithm::eltwise_square (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm14eltwise_squareE"]], "dnnl::algorithm::eltwise_swish (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm13eltwise_swishE"]], "dnnl::algorithm::eltwise_tanh (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm12eltwise_tanhE"]], "dnnl::algorithm::eltwise_tanh_use_dst_for_bwd (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm28eltwise_tanh_use_dst_for_bwdE"]], "dnnl::algorithm::lbr_gru (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm7lbr_gruE"]], "dnnl::algorithm::lrn_across_channels (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm19lrn_across_channelsE"]], "dnnl::algorithm::lrn_within_channel (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm18lrn_within_channelE"]], "dnnl::algorithm::pooling_avg (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm11pooling_avgE"]], "dnnl::algorithm::pooling_avg_exclude_padding (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm27pooling_avg_exclude_paddingE"]], "dnnl::algorithm::pooling_avg_include_padding (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm27pooling_avg_include_paddingE"]], "dnnl::algorithm::pooling_max (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm11pooling_maxE"]], "dnnl::algorithm::reduction_max (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm13reduction_maxE"]], "dnnl::algorithm::reduction_mean (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm14reduction_meanE"]], "dnnl::algorithm::reduction_min (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm13reduction_minE"]], "dnnl::algorithm::reduction_mul (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm13reduction_mulE"]], "dnnl::algorithm::reduction_norm_lp_max (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm21reduction_norm_lp_maxE"]], "dnnl::algorithm::reduction_norm_lp_power_p_max (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm29reduction_norm_lp_power_p_maxE"]], "dnnl::algorithm::reduction_norm_lp_power_p_sum (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm29reduction_norm_lp_power_p_sumE"]], "dnnl::algorithm::reduction_norm_lp_sum (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm21reduction_norm_lp_sumE"]], "dnnl::algorithm::reduction_sum (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm13reduction_sumE"]], "dnnl::algorithm::resampling_linear (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm17resampling_linearE"]], "dnnl::algorithm::resampling_nearest (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm18resampling_nearestE"]], "dnnl::algorithm::softmax_accurate (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm16softmax_accurateE"]], "dnnl::algorithm::softmax_log (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm11softmax_logE"]], "dnnl::algorithm::undef (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm5undefE"]], "dnnl::algorithm::vanilla_gru (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm11vanilla_gruE"]], "dnnl::algorithm::vanilla_lstm (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm12vanilla_lstmE"]], "dnnl::algorithm::vanilla_rnn (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm11vanilla_rnnE"]], "dnnl::normalization_flags (c++ enum)": [[159, "_CPPv4N4dnnl19normalization_flagsE"]], "dnnl::normalization_flags::fuse_norm_relu (c++ enumerator)": [[159, "_CPPv4N4dnnl19normalization_flags14fuse_norm_reluE"]], "dnnl::normalization_flags::none (c++ enumerator)": [[159, "_CPPv4N4dnnl19normalization_flags4noneE"]], "dnnl::normalization_flags::use_global_stats (c++ enumerator)": [[159, "_CPPv4N4dnnl19normalization_flags16use_global_statsE"]], "dnnl::normalization_flags::use_scale (c++ enumerator)": [[159, "_CPPv4N4dnnl19normalization_flags9use_scaleE"]], "dnnl::normalization_flags::use_shift (c++ enumerator)": [[159, "_CPPv4N4dnnl19normalization_flags9use_shiftE"]], "dnnl::primitive (c++ struct)": [[159, "_CPPv4N4dnnl9primitiveE"]], "dnnl::primitive::execute (c++ function)": [[159, "_CPPv4NK4dnnl9primitive7executeERK6streamRKNSt13unordered_mapIi6memoryEE"]], "dnnl::primitive::get_kind (c++ function)": [[159, "_CPPv4NK4dnnl9primitive8get_kindEv"]], "dnnl::primitive::kind (c++ enum)": [[159, "_CPPv4N4dnnl9primitive4kindE"]], "dnnl::primitive::kind::batch_normalization (c++ enumerator)": [[159, "_CPPv4N4dnnl9primitive4kind19batch_normalizationE"]], "dnnl::primitive::kind::binary (c++ enumerator)": [[159, "_CPPv4N4dnnl9primitive4kind6binaryE"]], "dnnl::primitive::kind::concat (c++ enumerator)": [[159, "_CPPv4N4dnnl9primitive4kind6concatE"]], "dnnl::primitive::kind::convolution (c++ enumerator)": [[159, "_CPPv4N4dnnl9primitive4kind11convolutionE"]], "dnnl::primitive::kind::deconvolution (c++ enumerator)": [[159, "_CPPv4N4dnnl9primitive4kind13deconvolutionE"]], "dnnl::primitive::kind::eltwise (c++ enumerator)": [[159, "_CPPv4N4dnnl9primitive4kind7eltwiseE"]], "dnnl::primitive::kind::inner_product (c++ enumerator)": [[159, "_CPPv4N4dnnl9primitive4kind13inner_productE"]], "dnnl::primitive::kind::layer_normalization (c++ enumerator)": [[159, "_CPPv4N4dnnl9primitive4kind19layer_normalizationE"]], "dnnl::primitive::kind::lrn (c++ enumerator)": [[159, "_CPPv4N4dnnl9primitive4kind3lrnE"]], "dnnl::primitive::kind::matmul (c++ enumerator)": [[159, "_CPPv4N4dnnl9primitive4kind6matmulE"]], "dnnl::primitive::kind::pooling (c++ enumerator)": [[159, "_CPPv4N4dnnl9primitive4kind7poolingE"]], "dnnl::primitive::kind::prelu (c++ enumerator)": [[159, "_CPPv4N4dnnl9primitive4kind5preluE"]], "dnnl::primitive::kind::reorder (c++ enumerator)": [[159, "_CPPv4N4dnnl9primitive4kind7reorderE"]], "dnnl::primitive::kind::resampling (c++ enumerator)": [[159, "_CPPv4N4dnnl9primitive4kind10resamplingE"]], "dnnl::primitive::kind::rnn (c++ enumerator)": [[159, "_CPPv4N4dnnl9primitive4kind3rnnE"]], "dnnl::primitive::kind::shuffle (c++ enumerator)": [[159, "_CPPv4N4dnnl9primitive4kind7shuffleE"]], "dnnl::primitive::kind::softmax (c++ enumerator)": [[159, "_CPPv4N4dnnl9primitive4kind7softmaxE"]], "dnnl::primitive::kind::sum (c++ enumerator)": [[159, "_CPPv4N4dnnl9primitive4kind3sumE"]], "dnnl::primitive::kind::undef (c++ enumerator)": [[159, "_CPPv4N4dnnl9primitive4kind5undefE"]], "dnnl::primitive::operator= (c++ function)": [[159, "_CPPv4N4dnnl9primitiveaSERK9primitive"]], "dnnl::primitive::primitive (c++ function)": [[159, "_CPPv4N4dnnl9primitive9primitiveERK19primitive_desc_base"], [159, "_CPPv4N4dnnl9primitive9primitiveEv"]], "dnnl::primitive_desc (c++ struct)": [[159, "_CPPv4N4dnnl14primitive_descE"]], "dnnl::primitive_desc::next_impl (c++ function)": [[159, "_CPPv4N4dnnl14primitive_desc9next_implEv"]], "dnnl::primitive_desc::primitive_desc (c++ function)": [[159, "_CPPv4N4dnnl14primitive_desc14primitive_descEv"]], "dnnl::primitive_desc_base (c++ struct)": [[159, "_CPPv4N4dnnl19primitive_desc_baseE"]], "dnnl::primitive_desc_base::bias_desc (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base9bias_descEv"]], "dnnl::primitive_desc_base::diff_dst_desc (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base13diff_dst_descEi"], [159, "_CPPv4NK4dnnl19primitive_desc_base13diff_dst_descEv"]], "dnnl::primitive_desc_base::diff_src_desc (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base13diff_src_descEi"], [159, "_CPPv4NK4dnnl19primitive_desc_base13diff_src_descEv"]], "dnnl::primitive_desc_base::diff_weights_desc (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base17diff_weights_descEi"], [159, "_CPPv4NK4dnnl19primitive_desc_base17diff_weights_descEv"]], "dnnl::primitive_desc_base::dst_desc (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base8dst_descEi"], [159, "_CPPv4NK4dnnl19primitive_desc_base8dst_descEv"]], "dnnl::primitive_desc_base::get_activation_kind (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base19get_activation_kindEv"]], "dnnl::primitive_desc_base::get_algorithm (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base13get_algorithmEv"]], "dnnl::primitive_desc_base::get_alpha (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base9get_alphaEv"]], "dnnl::primitive_desc_base::get_axis (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base8get_axisEv"]], "dnnl::primitive_desc_base::get_beta (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base8get_betaEv"]], "dnnl::primitive_desc_base::get_cell_kind (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base13get_cell_kindEv"]], "dnnl::primitive_desc_base::get_dilations (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base13get_dilationsEv"]], "dnnl::primitive_desc_base::get_direction (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base13get_directionEv"]], "dnnl::primitive_desc_base::get_engine (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base10get_engineEv"]], "dnnl::primitive_desc_base::get_epsilon (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base11get_epsilonEv"]], "dnnl::primitive_desc_base::get_factors (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base11get_factorsEv"]], "dnnl::primitive_desc_base::get_flags (c++ function)": [[159, "_CPPv4I0ENK4dnnl19primitive_desc_base9get_flagsE1Tv"]], "dnnl::primitive_desc_base::get_group_size (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base14get_group_sizeEv"]], "dnnl::primitive_desc_base::get_k (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base5get_kEv"]], "dnnl::primitive_desc_base::get_kernel (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base10get_kernelEv"]], "dnnl::primitive_desc_base::get_kind (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base8get_kindEv"]], "dnnl::primitive_desc_base::get_local_size (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base14get_local_sizeEv"]], "dnnl::primitive_desc_base::get_p (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base5get_pEv"]], "dnnl::primitive_desc_base::get_padding_l (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base13get_padding_lEv"]], "dnnl::primitive_desc_base::get_padding_r (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base13get_padding_rEv"]], "dnnl::primitive_desc_base::get_primitive_attr (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base18get_primitive_attrEv"]], "dnnl::primitive_desc_base::get_prop_kind (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base13get_prop_kindEv"]], "dnnl::primitive_desc_base::get_strides (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base11get_stridesEv"]], "dnnl::primitive_desc_base::impl_info_str (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base13impl_info_strEv"]], "dnnl::primitive_desc_base::primitive_desc_base (c++ function)": [[159, "_CPPv4N4dnnl19primitive_desc_base19primitive_desc_baseEv"]], "dnnl::primitive_desc_base::query_md (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base8query_mdE5queryi"]], "dnnl::primitive_desc_base::query_s64 (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base9query_s64E5query"]], "dnnl::primitive_desc_base::scratchpad_desc (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base15scratchpad_descEv"]], "dnnl::primitive_desc_base::scratchpad_engine (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base17scratchpad_engineEv"]], "dnnl::primitive_desc_base::src_desc (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base8src_descEi"], [159, "_CPPv4NK4dnnl19primitive_desc_base8src_descEv"]], "dnnl::primitive_desc_base::weights_desc (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base12weights_descEi"], [159, "_CPPv4NK4dnnl19primitive_desc_base12weights_descEv"]], "dnnl::primitive_desc_base::workspace_desc (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base14workspace_descEv"]], "dnnl::prop_kind (c++ enum)": [[159, "_CPPv4N4dnnl9prop_kindE"]], "dnnl::prop_kind::backward (c++ enumerator)": [[159, "_CPPv4N4dnnl9prop_kind8backwardE"]], "dnnl::prop_kind::backward_bias (c++ enumerator)": [[159, "_CPPv4N4dnnl9prop_kind13backward_biasE"]], "dnnl::prop_kind::backward_data (c++ enumerator)": [[159, "_CPPv4N4dnnl9prop_kind13backward_dataE"]], "dnnl::prop_kind::backward_weights (c++ enumerator)": [[159, "_CPPv4N4dnnl9prop_kind16backward_weightsE"]], "dnnl::prop_kind::forward (c++ enumerator)": [[159, "_CPPv4N4dnnl9prop_kind7forwardE"]], "dnnl::prop_kind::forward_inference (c++ enumerator)": [[159, "_CPPv4N4dnnl9prop_kind17forward_inferenceE"]], "dnnl::prop_kind::forward_scoring (c++ enumerator)": [[159, "_CPPv4N4dnnl9prop_kind15forward_scoringE"]], "dnnl::prop_kind::forward_training (c++ enumerator)": [[159, "_CPPv4N4dnnl9prop_kind16forward_trainingE"]], "dnnl::prop_kind::undef (c++ enumerator)": [[159, "_CPPv4N4dnnl9prop_kind5undefE"]], "dnnl::rnn_primitive_desc_base (c++ struct)": [[159, "_CPPv4N4dnnl23rnn_primitive_desc_baseE"]], "dnnl::rnn_primitive_desc_base::augru_attention_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base20augru_attention_descEv"]], "dnnl::rnn_primitive_desc_base::bias_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base9bias_descEv"]], "dnnl::rnn_primitive_desc_base::diff_augru_attention_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base25diff_augru_attention_descEv"]], "dnnl::rnn_primitive_desc_base::diff_bias_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base14diff_bias_descEv"]], "dnnl::rnn_primitive_desc_base::diff_dst_iter_c_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base20diff_dst_iter_c_descEv"]], "dnnl::rnn_primitive_desc_base::diff_dst_iter_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base18diff_dst_iter_descEv"]], "dnnl::rnn_primitive_desc_base::diff_dst_layer_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base19diff_dst_layer_descEv"]], "dnnl::rnn_primitive_desc_base::diff_src_iter_c_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base20diff_src_iter_c_descEv"]], "dnnl::rnn_primitive_desc_base::diff_src_iter_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base18diff_src_iter_descEv"]], "dnnl::rnn_primitive_desc_base::diff_src_layer_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base19diff_src_layer_descEv"]], "dnnl::rnn_primitive_desc_base::diff_weights_iter_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base22diff_weights_iter_descEv"]], "dnnl::rnn_primitive_desc_base::diff_weights_layer_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base23diff_weights_layer_descEv"]], "dnnl::rnn_primitive_desc_base::diff_weights_peephole_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base26diff_weights_peephole_descEv"]], "dnnl::rnn_primitive_desc_base::diff_weights_projection_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base28diff_weights_projection_descEv"]], "dnnl::rnn_primitive_desc_base::dst_iter_c_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base15dst_iter_c_descEv"]], "dnnl::rnn_primitive_desc_base::dst_iter_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base13dst_iter_descEv"]], "dnnl::rnn_primitive_desc_base::dst_layer_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base14dst_layer_descEv"]], "dnnl::rnn_primitive_desc_base::rnn_primitive_desc_base (c++ function)": [[159, "_CPPv4N4dnnl23rnn_primitive_desc_base23rnn_primitive_desc_baseEv"]], "dnnl::rnn_primitive_desc_base::src_iter_c_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base15src_iter_c_descEv"]], "dnnl::rnn_primitive_desc_base::src_iter_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base13src_iter_descEv"]], "dnnl::rnn_primitive_desc_base::src_layer_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base14src_layer_descEv"]], "dnnl::rnn_primitive_desc_base::weights_iter_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base17weights_iter_descEv"]], "dnnl::rnn_primitive_desc_base::weights_layer_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base18weights_layer_descEv"]], "dnnl::rnn_primitive_desc_base::weights_peephole_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base21weights_peephole_descEv"]], "dnnl::rnn_primitive_desc_base::weights_projection_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base23weights_projection_descEv"]], "dnnl::sycl_interop::execute (c++ function)": [[159, "_CPPv4N4dnnl12sycl_interop7executeERK9primitiveRK6streamRKNSt13unordered_mapIi6memoryEERKNSt6vectorIN2cl4sycl5eventEEE"]], "dnnl::inner_product_backward_data (c++ struct)": [[161, "_CPPv4N4dnnl27inner_product_backward_dataE"]], "dnnl::inner_product_backward_data::inner_product_backward_data (c++ function)": [[161, "_CPPv4N4dnnl27inner_product_backward_data27inner_product_backward_dataERK14primitive_desc"], [161, "_CPPv4N4dnnl27inner_product_backward_data27inner_product_backward_dataEv"]], "dnnl::inner_product_backward_data::primitive_desc (c++ struct)": [[161, "_CPPv4N4dnnl27inner_product_backward_data14primitive_descE"]], "dnnl::inner_product_backward_data::primitive_desc::diff_dst_desc (c++ function)": [[161, "_CPPv4NK4dnnl27inner_product_backward_data14primitive_desc13diff_dst_descEv"]], "dnnl::inner_product_backward_data::primitive_desc::diff_src_desc (c++ function)": [[161, "_CPPv4NK4dnnl27inner_product_backward_data14primitive_desc13diff_src_descEv"]], "dnnl::inner_product_backward_data::primitive_desc::get_prop_kind (c++ function)": [[161, "_CPPv4NK4dnnl27inner_product_backward_data14primitive_desc13get_prop_kindEv"]], "dnnl::inner_product_backward_data::primitive_desc::primitive_desc (c++ function)": [[161, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb"], [161, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descEv"]], "dnnl::inner_product_backward_data::primitive_desc::weights_desc (c++ function)": [[161, "_CPPv4NK4dnnl27inner_product_backward_data14primitive_desc12weights_descEv"]], "dnnl::inner_product_backward_weights (c++ struct)": [[161, "_CPPv4N4dnnl30inner_product_backward_weightsE"]], "dnnl::inner_product_backward_weights::inner_product_backward_weights (c++ function)": [[161, "_CPPv4N4dnnl30inner_product_backward_weights30inner_product_backward_weightsERK14primitive_desc"], [161, "_CPPv4N4dnnl30inner_product_backward_weights30inner_product_backward_weightsEv"]], "dnnl::inner_product_backward_weights::primitive_desc (c++ struct)": [[161, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_descE"]], "dnnl::inner_product_backward_weights::primitive_desc::diff_bias_desc (c++ function)": [[161, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc14diff_bias_descEv"]], "dnnl::inner_product_backward_weights::primitive_desc::diff_dst_desc (c++ function)": [[161, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc13diff_dst_descEv"]], "dnnl::inner_product_backward_weights::primitive_desc::diff_weights_desc (c++ function)": [[161, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc17diff_weights_descEv"]], "dnnl::inner_product_backward_weights::primitive_desc::get_prop_kind (c++ function)": [[161, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc13get_prop_kindEv"]], "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc (c++ function)": [[161, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb"], [161, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb"], [161, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descEv"]], "dnnl::inner_product_backward_weights::primitive_desc::src_desc (c++ function)": [[161, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc8src_descEv"]], "dnnl::inner_product_forward (c++ struct)": [[161, "_CPPv4N4dnnl21inner_product_forwardE"]], "dnnl::inner_product_forward::inner_product_forward (c++ function)": [[161, "_CPPv4N4dnnl21inner_product_forward21inner_product_forwardERK14primitive_desc"], [161, "_CPPv4N4dnnl21inner_product_forward21inner_product_forwardEv"]], "dnnl::inner_product_forward::primitive_desc (c++ struct)": [[161, "_CPPv4N4dnnl21inner_product_forward14primitive_descE"]], "dnnl::inner_product_forward::primitive_desc::bias_desc (c++ function)": [[161, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc9bias_descEv"]], "dnnl::inner_product_forward::primitive_desc::dst_desc (c++ function)": [[161, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc8dst_descEv"]], "dnnl::inner_product_forward::primitive_desc::get_prop_kind (c++ function)": [[161, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc13get_prop_kindEv"]], "dnnl::inner_product_forward::primitive_desc::primitive_desc (c++ function)": [[161, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [161, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [161, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descEv"]], "dnnl::inner_product_forward::primitive_desc::src_desc (c++ function)": [[161, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc8src_descEv"]], "dnnl::inner_product_forward::primitive_desc::weights_desc (c++ function)": [[161, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc12weights_descEv"]], "dnnl::layer_normalization_backward (c++ struct)": [[162, "_CPPv4N4dnnl28layer_normalization_backwardE"]], "dnnl::layer_normalization_backward::layer_normalization_backward (c++ function)": [[162, "_CPPv4N4dnnl28layer_normalization_backward28layer_normalization_backwardERK14primitive_desc"], [162, "_CPPv4N4dnnl28layer_normalization_backward28layer_normalization_backwardEv"]], "dnnl::layer_normalization_backward::primitive_desc (c++ struct)": [[162, "_CPPv4N4dnnl28layer_normalization_backward14primitive_descE"]], "dnnl::layer_normalization_backward::primitive_desc::diff_dst_desc (c++ function)": [[162, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc13diff_dst_descEv"]], "dnnl::layer_normalization_backward::primitive_desc::diff_src_desc (c++ function)": [[162, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc13diff_src_descEv"]], "dnnl::layer_normalization_backward::primitive_desc::diff_weights_desc (c++ function)": [[162, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc17diff_weights_descEv"]], "dnnl::layer_normalization_backward::primitive_desc::dst_desc (c++ function)": [[162, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc8dst_descEv"]], "dnnl::layer_normalization_backward::primitive_desc::get_epsilon (c++ function)": [[162, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc11get_epsilonEv"]], "dnnl::layer_normalization_backward::primitive_desc::get_flags (c++ function)": [[162, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc9get_flagsEv"]], "dnnl::layer_normalization_backward::primitive_desc::get_prop_kind (c++ function)": [[162, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc13get_prop_kindEv"]], "dnnl::layer_normalization_backward::primitive_desc::mean_desc (c++ function)": [[162, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc9mean_descEv"]], "dnnl::layer_normalization_backward::primitive_desc::primitive_desc (c++ function)": [[162, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb"], [162, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb"], [162, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descEv"]], "dnnl::layer_normalization_backward::primitive_desc::src_desc (c++ function)": [[162, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc8src_descEv"]], "dnnl::layer_normalization_backward::primitive_desc::variance_desc (c++ function)": [[162, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc13variance_descEv"]], "dnnl::layer_normalization_backward::primitive_desc::weights_desc (c++ function)": [[162, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc12weights_descEv"]], "dnnl::layer_normalization_backward::primitive_desc::workspace_desc (c++ function)": [[162, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc14workspace_descEv"]], "dnnl::layer_normalization_forward (c++ struct)": [[162, "_CPPv4N4dnnl27layer_normalization_forwardE"]], "dnnl::layer_normalization_forward::layer_normalization_forward (c++ function)": [[162, "_CPPv4N4dnnl27layer_normalization_forward27layer_normalization_forwardERK14primitive_desc"], [162, "_CPPv4N4dnnl27layer_normalization_forward27layer_normalization_forwardEv"]], "dnnl::layer_normalization_forward::primitive_desc (c++ struct)": [[162, "_CPPv4N4dnnl27layer_normalization_forward14primitive_descE"]], "dnnl::layer_normalization_forward::primitive_desc::dst_desc (c++ function)": [[162, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc8dst_descEv"]], "dnnl::layer_normalization_forward::primitive_desc::get_epsilon (c++ function)": [[162, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc11get_epsilonEv"]], "dnnl::layer_normalization_forward::primitive_desc::get_flags (c++ function)": [[162, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc9get_flagsEv"]], "dnnl::layer_normalization_forward::primitive_desc::get_prop_kind (c++ function)": [[162, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc13get_prop_kindEv"]], "dnnl::layer_normalization_forward::primitive_desc::mean_desc (c++ function)": [[162, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc9mean_descEv"]], "dnnl::layer_normalization_forward::primitive_desc::primitive_desc (c++ function)": [[162, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb"], [162, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb"], [162, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descEv"]], "dnnl::layer_normalization_forward::primitive_desc::src_desc (c++ function)": [[162, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc8src_descEv"]], "dnnl::layer_normalization_forward::primitive_desc::variance_desc (c++ function)": [[162, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc13variance_descEv"]], "dnnl::layer_normalization_forward::primitive_desc::weights_desc (c++ function)": [[162, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc12weights_descEv"]], "dnnl::layer_normalization_forward::primitive_desc::workspace_desc (c++ function)": [[162, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc14workspace_descEv"]], "dnnl::lrn_backward (c++ struct)": [[163, "_CPPv4N4dnnl12lrn_backwardE"]], "dnnl::lrn_backward::lrn_backward (c++ function)": [[163, "_CPPv4N4dnnl12lrn_backward12lrn_backwardERK14primitive_desc"], [163, "_CPPv4N4dnnl12lrn_backward12lrn_backwardEv"]], "dnnl::lrn_backward::primitive_desc (c++ struct)": [[163, "_CPPv4N4dnnl12lrn_backward14primitive_descE"]], "dnnl::lrn_backward::primitive_desc::diff_dst_desc (c++ function)": [[163, "_CPPv4NK4dnnl12lrn_backward14primitive_desc13diff_dst_descEv"]], "dnnl::lrn_backward::primitive_desc::diff_src_desc (c++ function)": [[163, "_CPPv4NK4dnnl12lrn_backward14primitive_desc13diff_src_descEv"]], "dnnl::lrn_backward::primitive_desc::get_algorithm (c++ function)": [[163, "_CPPv4NK4dnnl12lrn_backward14primitive_desc13get_algorithmEv"]], "dnnl::lrn_backward::primitive_desc::get_alpha (c++ function)": [[163, "_CPPv4NK4dnnl12lrn_backward14primitive_desc9get_alphaEv"]], "dnnl::lrn_backward::primitive_desc::get_beta (c++ function)": [[163, "_CPPv4NK4dnnl12lrn_backward14primitive_desc8get_betaEv"]], "dnnl::lrn_backward::primitive_desc::get_k (c++ function)": [[163, "_CPPv4NK4dnnl12lrn_backward14primitive_desc5get_kEv"]], "dnnl::lrn_backward::primitive_desc::get_local_size (c++ function)": [[163, "_CPPv4NK4dnnl12lrn_backward14primitive_desc14get_local_sizeEv"]], "dnnl::lrn_backward::primitive_desc::get_prop_kind (c++ function)": [[163, "_CPPv4NK4dnnl12lrn_backward14primitive_desc13get_prop_kindEv"]], "dnnl::lrn_backward::primitive_desc::primitive_desc (c++ function)": [[163, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb"], [163, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descEv"]], "dnnl::lrn_backward::primitive_desc::workspace_desc (c++ function)": [[163, "_CPPv4NK4dnnl12lrn_backward14primitive_desc14workspace_descEv"]], "dnnl::lrn_forward (c++ struct)": [[163, "_CPPv4N4dnnl11lrn_forwardE"]], "dnnl::lrn_forward::lrn_forward (c++ function)": [[163, "_CPPv4N4dnnl11lrn_forward11lrn_forwardERK14primitive_desc"], [163, "_CPPv4N4dnnl11lrn_forward11lrn_forwardEv"]], "dnnl::lrn_forward::primitive_desc (c++ struct)": [[163, "_CPPv4N4dnnl11lrn_forward14primitive_descE"]], "dnnl::lrn_forward::primitive_desc::dst_desc (c++ function)": [[163, "_CPPv4NK4dnnl11lrn_forward14primitive_desc8dst_descEv"]], "dnnl::lrn_forward::primitive_desc::get_algorithm (c++ function)": [[163, "_CPPv4NK4dnnl11lrn_forward14primitive_desc13get_algorithmEv"]], "dnnl::lrn_forward::primitive_desc::get_alpha (c++ function)": [[163, "_CPPv4NK4dnnl11lrn_forward14primitive_desc9get_alphaEv"]], "dnnl::lrn_forward::primitive_desc::get_beta (c++ function)": [[163, "_CPPv4NK4dnnl11lrn_forward14primitive_desc8get_betaEv"]], "dnnl::lrn_forward::primitive_desc::get_k (c++ function)": [[163, "_CPPv4NK4dnnl11lrn_forward14primitive_desc5get_kEv"]], "dnnl::lrn_forward::primitive_desc::get_local_size (c++ function)": [[163, "_CPPv4NK4dnnl11lrn_forward14primitive_desc14get_local_sizeEv"]], "dnnl::lrn_forward::primitive_desc::get_prop_kind (c++ function)": [[163, "_CPPv4NK4dnnl11lrn_forward14primitive_desc13get_prop_kindEv"]], "dnnl::lrn_forward::primitive_desc::primitive_desc (c++ function)": [[163, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb"], [163, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descEv"]], "dnnl::lrn_forward::primitive_desc::src_desc (c++ function)": [[163, "_CPPv4NK4dnnl11lrn_forward14primitive_desc8src_descEv"]], "dnnl::lrn_forward::primitive_desc::workspace_desc (c++ function)": [[163, "_CPPv4NK4dnnl11lrn_forward14primitive_desc14workspace_descEv"]], "dnnl::matmul (c++ struct)": [[164, "_CPPv4N4dnnl6matmulE"]], "dnnl::matmul::matmul (c++ function)": [[164, "_CPPv4N4dnnl6matmul6matmulERK14primitive_desc"], [164, "_CPPv4N4dnnl6matmul6matmulEv"]], "dnnl::matmul::primitive_desc (c++ struct)": [[164, "_CPPv4N4dnnl6matmul14primitive_descE"]], "dnnl::matmul::primitive_desc::bias_desc (c++ function)": [[164, "_CPPv4NK4dnnl6matmul14primitive_desc9bias_descEv"]], "dnnl::matmul::primitive_desc::dst_desc (c++ function)": [[164, "_CPPv4NK4dnnl6matmul14primitive_desc8dst_descEv"]], "dnnl::matmul::primitive_desc::primitive_desc (c++ function)": [[164, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [164, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [164, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descEv"]], "dnnl::matmul::primitive_desc::src_desc (c++ function)": [[164, "_CPPv4NK4dnnl6matmul14primitive_desc8src_descEv"]], "dnnl::matmul::primitive_desc::weights_desc (c++ function)": [[164, "_CPPv4NK4dnnl6matmul14primitive_desc12weights_descEv"]], "dnnl::pooling_backward (c++ struct)": [[165, "_CPPv4N4dnnl16pooling_backwardE"]], "dnnl::pooling_backward::pooling_backward (c++ function)": [[165, "_CPPv4N4dnnl16pooling_backward16pooling_backwardERK14primitive_desc"], [165, "_CPPv4N4dnnl16pooling_backward16pooling_backwardEv"]], "dnnl::pooling_backward::primitive_desc (c++ struct)": [[165, "_CPPv4N4dnnl16pooling_backward14primitive_descE"]], "dnnl::pooling_backward::primitive_desc::diff_dst_desc (c++ function)": [[165, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13diff_dst_descEv"]], "dnnl::pooling_backward::primitive_desc::diff_src_desc (c++ function)": [[165, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13diff_src_descEv"]], "dnnl::pooling_backward::primitive_desc::get_algorithm (c++ function)": [[165, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_algorithmEv"]], "dnnl::pooling_backward::primitive_desc::get_dilations (c++ function)": [[165, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_dilationsEv"]], "dnnl::pooling_backward::primitive_desc::get_kernel (c++ function)": [[165, "_CPPv4NK4dnnl16pooling_backward14primitive_desc10get_kernelEv"]], "dnnl::pooling_backward::primitive_desc::get_padding_l (c++ function)": [[165, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_padding_lEv"]], "dnnl::pooling_backward::primitive_desc::get_padding_r (c++ function)": [[165, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_padding_rEv"]], "dnnl::pooling_backward::primitive_desc::get_prop_kind (c++ function)": [[165, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_prop_kindEv"]], "dnnl::pooling_backward::primitive_desc::get_strides (c++ function)": [[165, "_CPPv4NK4dnnl16pooling_backward14primitive_desc11get_stridesEv"]], "dnnl::pooling_backward::primitive_desc::primitive_desc (c++ function)": [[165, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb"], [165, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descEv"]], "dnnl::pooling_backward::primitive_desc::workspace_desc (c++ function)": [[165, "_CPPv4NK4dnnl16pooling_backward14primitive_desc14workspace_descEv"]], "dnnl::pooling_forward (c++ struct)": [[165, "_CPPv4N4dnnl15pooling_forwardE"]], "dnnl::pooling_forward::pooling_forward (c++ function)": [[165, "_CPPv4N4dnnl15pooling_forward15pooling_forwardERK14primitive_desc"], [165, "_CPPv4N4dnnl15pooling_forward15pooling_forwardEv"]], "dnnl::pooling_forward::primitive_desc (c++ struct)": [[165, "_CPPv4N4dnnl15pooling_forward14primitive_descE"]], "dnnl::pooling_forward::primitive_desc::dst_desc (c++ function)": [[165, "_CPPv4NK4dnnl15pooling_forward14primitive_desc8dst_descEv"]], "dnnl::pooling_forward::primitive_desc::get_algorithm (c++ function)": [[165, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_algorithmEv"]], "dnnl::pooling_forward::primitive_desc::get_dilations (c++ function)": [[165, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_dilationsEv"]], "dnnl::pooling_forward::primitive_desc::get_kernel (c++ function)": [[165, "_CPPv4NK4dnnl15pooling_forward14primitive_desc10get_kernelEv"]], "dnnl::pooling_forward::primitive_desc::get_padding_l (c++ function)": [[165, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_padding_lEv"]], "dnnl::pooling_forward::primitive_desc::get_padding_r (c++ function)": [[165, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_padding_rEv"]], "dnnl::pooling_forward::primitive_desc::get_prop_kind (c++ function)": [[165, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_prop_kindEv"]], "dnnl::pooling_forward::primitive_desc::get_strides (c++ function)": [[165, "_CPPv4NK4dnnl15pooling_forward14primitive_desc11get_stridesEv"]], "dnnl::pooling_forward::primitive_desc::primitive_desc (c++ function)": [[165, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb"], [165, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descEv"]], "dnnl::pooling_forward::primitive_desc::src_desc (c++ function)": [[165, "_CPPv4NK4dnnl15pooling_forward14primitive_desc8src_descEv"]], "dnnl::pooling_forward::primitive_desc::workspace_desc (c++ function)": [[165, "_CPPv4NK4dnnl15pooling_forward14primitive_desc14workspace_descEv"]], "dnnl::prelu_backward (c++ struct)": [[166, "_CPPv4N4dnnl14prelu_backwardE"]], "dnnl::prelu_backward::prelu_backward (c++ function)": [[166, "_CPPv4N4dnnl14prelu_backward14prelu_backwardERK14primitive_desc"], [166, "_CPPv4N4dnnl14prelu_backward14prelu_backwardEv"]], "dnnl::prelu_backward::primitive_desc (c++ struct)": [[166, "_CPPv4N4dnnl14prelu_backward14primitive_descE"]], "dnnl::prelu_backward::primitive_desc::diff_dst_desc (c++ function)": [[166, "_CPPv4NK4dnnl14prelu_backward14primitive_desc13diff_dst_descEv"]], "dnnl::prelu_backward::primitive_desc::diff_src_desc (c++ function)": [[166, "_CPPv4NK4dnnl14prelu_backward14primitive_desc13diff_src_descEv"]], "dnnl::prelu_backward::primitive_desc::get_prop_kind (c++ function)": [[166, "_CPPv4NK4dnnl14prelu_backward14primitive_desc13get_prop_kindEv"]], "dnnl::prelu_backward::primitive_desc::primitive_desc (c++ function)": [[166, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb"], [166, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descEv"]], "dnnl::prelu_backward::primitive_desc::src_desc (c++ function)": [[166, "_CPPv4NK4dnnl14prelu_backward14primitive_desc8src_descEv"]], "dnnl::prelu_forward (c++ struct)": [[166, "_CPPv4N4dnnl13prelu_forwardE"]], "dnnl::prelu_forward::prelu_forward (c++ function)": [[166, "_CPPv4N4dnnl13prelu_forward13prelu_forwardERK14primitive_desc"], [166, "_CPPv4N4dnnl13prelu_forward13prelu_forwardEv"]], "dnnl::prelu_forward::primitive_desc (c++ struct)": [[166, "_CPPv4N4dnnl13prelu_forward14primitive_descE"]], "dnnl::prelu_forward::primitive_desc::dst_desc (c++ function)": [[166, "_CPPv4NK4dnnl13prelu_forward14primitive_desc8dst_descEv"]], "dnnl::prelu_forward::primitive_desc::get_prop_kind (c++ function)": [[166, "_CPPv4NK4dnnl13prelu_forward14primitive_desc13get_prop_kindEv"]], "dnnl::prelu_forward::primitive_desc::primitive_desc (c++ function)": [[166, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [166, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descEv"]], "dnnl::prelu_forward::primitive_desc::src_desc (c++ function)": [[166, "_CPPv4NK4dnnl13prelu_forward14primitive_desc8src_descEv"]], "dnnl::reduction (c++ struct)": [[167, "_CPPv4N4dnnl9reductionE"]], "dnnl::reduction::primitive_desc (c++ struct)": [[167, "_CPPv4N4dnnl9reduction14primitive_descE"]], "dnnl::reduction::primitive_desc::dst_desc (c++ function)": [[167, "_CPPv4NK4dnnl9reduction14primitive_desc8dst_descEv"]], "dnnl::reduction::primitive_desc::get_algorithm (c++ function)": [[167, "_CPPv4NK4dnnl9reduction14primitive_desc13get_algorithmEv"]], "dnnl::reduction::primitive_desc::get_epsilon (c++ function)": [[167, "_CPPv4NK4dnnl9reduction14primitive_desc11get_epsilonEv"]], "dnnl::reduction::primitive_desc::get_p (c++ function)": [[167, "_CPPv4NK4dnnl9reduction14primitive_desc5get_pEv"]], "dnnl::reduction::primitive_desc::primitive_desc (c++ function)": [[167, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb"], [167, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descEv"]], "dnnl::reduction::primitive_desc::src_desc (c++ function)": [[167, "_CPPv4NK4dnnl9reduction14primitive_desc8src_descEv"]], "dnnl::reduction::reduction (c++ function)": [[167, "_CPPv4N4dnnl9reduction9reductionEv"]], "dnnl::reorder (c++ struct)": [[168, "_CPPv4N4dnnl7reorderE"]], "dnnl::reorder::execute (c++ function)": [[168, "_CPPv4NK4dnnl7reorder7executeERK6streamR6memoryR6memory"]], "dnnl::reorder::primitive_desc (c++ struct)": [[168, "_CPPv4N4dnnl7reorder14primitive_descE"]], "dnnl::reorder::primitive_desc::dst_desc (c++ function)": [[168, "_CPPv4NK4dnnl7reorder14primitive_desc8dst_descEv"]], "dnnl::reorder::primitive_desc::get_dst_engine (c++ function)": [[168, "_CPPv4NK4dnnl7reorder14primitive_desc14get_dst_engineEv"]], "dnnl::reorder::primitive_desc::get_src_engine (c++ function)": [[168, "_CPPv4NK4dnnl7reorder14primitive_desc14get_src_engineEv"]], "dnnl::reorder::primitive_desc::primitive_desc (c++ function)": [[168, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6engineRKN6memory4descERK6engineRKN6memory4descERK14primitive_attrb"], [168, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6memoryRK6memoryRK14primitive_attrb"], [168, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descEv"]], "dnnl::reorder::primitive_desc::src_desc (c++ function)": [[168, "_CPPv4NK4dnnl7reorder14primitive_desc8src_descEv"]], "dnnl::reorder::reorder (c++ function)": [[168, "_CPPv4N4dnnl7reorder7reorderERK14primitive_desc"], [168, "_CPPv4N4dnnl7reorder7reorderERK6memoryRK6memoryRK14primitive_attr"], [168, "_CPPv4N4dnnl7reorder7reorderEv"]], "dnnl::resampling_backward (c++ struct)": [[169, "_CPPv4N4dnnl19resampling_backwardE"]], "dnnl::resampling_backward::primitive_desc (c++ struct)": [[169, "_CPPv4N4dnnl19resampling_backward14primitive_descE"]], "dnnl::resampling_backward::primitive_desc::diff_dst_desc (c++ function)": [[169, "_CPPv4NK4dnnl19resampling_backward14primitive_desc13diff_dst_descEv"]], "dnnl::resampling_backward::primitive_desc::diff_src_desc (c++ function)": [[169, "_CPPv4NK4dnnl19resampling_backward14primitive_desc13diff_src_descEv"]], "dnnl::resampling_backward::primitive_desc::primitive_desc (c++ function)": [[169, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb"], [169, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb"], [169, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descEv"]], "dnnl::resampling_backward::resampling_backward (c++ function)": [[169, "_CPPv4N4dnnl19resampling_backward19resampling_backwardERK14primitive_desc"], [169, "_CPPv4N4dnnl19resampling_backward19resampling_backwardEv"]], "dnnl::resampling_forward (c++ struct)": [[169, "_CPPv4N4dnnl18resampling_forwardE"]], "dnnl::resampling_forward::primitive_desc (c++ struct)": [[169, "_CPPv4N4dnnl18resampling_forward14primitive_descE"]], "dnnl::resampling_forward::primitive_desc::dst_desc (c++ function)": [[169, "_CPPv4NK4dnnl18resampling_forward14primitive_desc8dst_descEv"]], "dnnl::resampling_forward::primitive_desc::primitive_desc (c++ function)": [[169, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb"], [169, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERK14primitive_attrb"], [169, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb"], [169, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descEv"]], "dnnl::resampling_forward::primitive_desc::src_desc (c++ function)": [[169, "_CPPv4NK4dnnl18resampling_forward14primitive_desc8src_descEv"]], "dnnl::resampling_forward::resampling_forward (c++ function)": [[169, "_CPPv4N4dnnl18resampling_forward18resampling_forwardERK14primitive_desc"], [169, "_CPPv4N4dnnl18resampling_forward18resampling_forwardEv"]], "dnnl::gru_backward (c++ struct)": [[170, "_CPPv4N4dnnl12gru_backwardE"]], "dnnl::gru_backward::gru_backward (c++ function)": [[170, "_CPPv4N4dnnl12gru_backward12gru_backwardERK14primitive_desc"], [170, "_CPPv4N4dnnl12gru_backward12gru_backwardEv"]], "dnnl::gru_backward::primitive_desc (c++ struct)": [[170, "_CPPv4N4dnnl12gru_backward14primitive_descE"]], "dnnl::gru_backward::primitive_desc::bias_desc (c++ function)": [[170, "_CPPv4NK4dnnl12gru_backward14primitive_desc9bias_descEv"]], "dnnl::gru_backward::primitive_desc::diff_bias_desc (c++ function)": [[170, "_CPPv4NK4dnnl12gru_backward14primitive_desc14diff_bias_descEv"]], "dnnl::gru_backward::primitive_desc::diff_dst_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl12gru_backward14primitive_desc18diff_dst_iter_descEv"]], "dnnl::gru_backward::primitive_desc::diff_dst_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl12gru_backward14primitive_desc19diff_dst_layer_descEv"]], "dnnl::gru_backward::primitive_desc::diff_src_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl12gru_backward14primitive_desc18diff_src_iter_descEv"]], "dnnl::gru_backward::primitive_desc::diff_src_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl12gru_backward14primitive_desc19diff_src_layer_descEv"]], "dnnl::gru_backward::primitive_desc::diff_weights_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl12gru_backward14primitive_desc22diff_weights_iter_descEv"]], "dnnl::gru_backward::primitive_desc::diff_weights_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl12gru_backward14primitive_desc23diff_weights_layer_descEv"]], "dnnl::gru_backward::primitive_desc::dst_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl12gru_backward14primitive_desc13dst_iter_descEv"]], "dnnl::gru_backward::primitive_desc::dst_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl12gru_backward14primitive_desc14dst_layer_descEv"]], "dnnl::gru_backward::primitive_desc::get_cell_kind (c++ function)": [[170, "_CPPv4NK4dnnl12gru_backward14primitive_desc13get_cell_kindEv"]], "dnnl::gru_backward::primitive_desc::get_direction (c++ function)": [[170, "_CPPv4NK4dnnl12gru_backward14primitive_desc13get_directionEv"]], "dnnl::gru_backward::primitive_desc::get_prop_kind (c++ function)": [[170, "_CPPv4NK4dnnl12gru_backward14primitive_desc13get_prop_kindEv"]], "dnnl::gru_backward::primitive_desc::primitive_desc (c++ function)": [[170, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb"], [170, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descEv"]], "dnnl::gru_backward::primitive_desc::src_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl12gru_backward14primitive_desc13src_iter_descEv"]], "dnnl::gru_backward::primitive_desc::src_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl12gru_backward14primitive_desc14src_layer_descEv"]], "dnnl::gru_backward::primitive_desc::weights_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl12gru_backward14primitive_desc17weights_iter_descEv"]], "dnnl::gru_backward::primitive_desc::weights_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl12gru_backward14primitive_desc18weights_layer_descEv"]], "dnnl::gru_backward::primitive_desc::workspace_desc (c++ function)": [[170, "_CPPv4NK4dnnl12gru_backward14primitive_desc14workspace_descEv"]], "dnnl::gru_forward (c++ struct)": [[170, "_CPPv4N4dnnl11gru_forwardE"]], "dnnl::gru_forward::gru_forward (c++ function)": [[170, "_CPPv4N4dnnl11gru_forward11gru_forwardERK14primitive_desc"], [170, "_CPPv4N4dnnl11gru_forward11gru_forwardEv"]], "dnnl::gru_forward::primitive_desc (c++ struct)": [[170, "_CPPv4N4dnnl11gru_forward14primitive_descE"]], "dnnl::gru_forward::primitive_desc::bias_desc (c++ function)": [[170, "_CPPv4NK4dnnl11gru_forward14primitive_desc9bias_descEv"]], "dnnl::gru_forward::primitive_desc::dst_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl11gru_forward14primitive_desc13dst_iter_descEv"]], "dnnl::gru_forward::primitive_desc::dst_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl11gru_forward14primitive_desc14dst_layer_descEv"]], "dnnl::gru_forward::primitive_desc::get_cell_kind (c++ function)": [[170, "_CPPv4NK4dnnl11gru_forward14primitive_desc13get_cell_kindEv"]], "dnnl::gru_forward::primitive_desc::get_direction (c++ function)": [[170, "_CPPv4NK4dnnl11gru_forward14primitive_desc13get_directionEv"]], "dnnl::gru_forward::primitive_desc::get_prop_kind (c++ function)": [[170, "_CPPv4NK4dnnl11gru_forward14primitive_desc13get_prop_kindEv"]], "dnnl::gru_forward::primitive_desc::primitive_desc (c++ function)": [[170, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [170, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descEv"]], "dnnl::gru_forward::primitive_desc::src_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl11gru_forward14primitive_desc13src_iter_descEv"]], "dnnl::gru_forward::primitive_desc::src_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl11gru_forward14primitive_desc14src_layer_descEv"]], "dnnl::gru_forward::primitive_desc::weights_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl11gru_forward14primitive_desc17weights_iter_descEv"]], "dnnl::gru_forward::primitive_desc::weights_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl11gru_forward14primitive_desc18weights_layer_descEv"]], "dnnl::gru_forward::primitive_desc::workspace_desc (c++ function)": [[170, "_CPPv4NK4dnnl11gru_forward14primitive_desc14workspace_descEv"]], "dnnl::lbr_gru_backward (c++ struct)": [[170, "_CPPv4N4dnnl16lbr_gru_backwardE"]], "dnnl::lbr_gru_backward::lbr_gru_backward (c++ function)": [[170, "_CPPv4N4dnnl16lbr_gru_backward16lbr_gru_backwardERK14primitive_desc"], [170, "_CPPv4N4dnnl16lbr_gru_backward16lbr_gru_backwardEv"]], "dnnl::lbr_gru_backward::primitive_desc (c++ struct)": [[170, "_CPPv4N4dnnl16lbr_gru_backward14primitive_descE"]], "dnnl::lbr_gru_backward::primitive_desc::bias_desc (c++ function)": [[170, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc9bias_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::diff_bias_desc (c++ function)": [[170, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc14diff_bias_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::diff_dst_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc18diff_dst_iter_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::diff_dst_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc19diff_dst_layer_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::diff_src_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc18diff_src_iter_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::diff_src_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc19diff_src_layer_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::diff_weights_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc22diff_weights_iter_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::diff_weights_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc23diff_weights_layer_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::dst_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13dst_iter_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::dst_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc14dst_layer_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::get_cell_kind (c++ function)": [[170, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13get_cell_kindEv"]], "dnnl::lbr_gru_backward::primitive_desc::get_direction (c++ function)": [[170, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13get_directionEv"]], "dnnl::lbr_gru_backward::primitive_desc::get_prop_kind (c++ function)": [[170, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13get_prop_kindEv"]], "dnnl::lbr_gru_backward::primitive_desc::primitive_desc (c++ function)": [[170, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb"], [170, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::src_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13src_iter_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::src_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc14src_layer_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::weights_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc17weights_iter_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::weights_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc18weights_layer_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::workspace_desc (c++ function)": [[170, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc14workspace_descEv"]], "dnnl::lbr_gru_forward (c++ struct)": [[170, "_CPPv4N4dnnl15lbr_gru_forwardE"]], "dnnl::lbr_gru_forward::lbr_gru_forward (c++ function)": [[170, "_CPPv4N4dnnl15lbr_gru_forward15lbr_gru_forwardERK14primitive_desc"], [170, "_CPPv4N4dnnl15lbr_gru_forward15lbr_gru_forwardEv"]], "dnnl::lbr_gru_forward::primitive_desc (c++ struct)": [[170, "_CPPv4N4dnnl15lbr_gru_forward14primitive_descE"]], "dnnl::lbr_gru_forward::primitive_desc::bias_desc (c++ function)": [[170, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc9bias_descEv"]], "dnnl::lbr_gru_forward::primitive_desc::dst_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13dst_iter_descEv"]], "dnnl::lbr_gru_forward::primitive_desc::dst_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc14dst_layer_descEv"]], "dnnl::lbr_gru_forward::primitive_desc::get_cell_kind (c++ function)": [[170, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13get_cell_kindEv"]], "dnnl::lbr_gru_forward::primitive_desc::get_direction (c++ function)": [[170, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13get_directionEv"]], "dnnl::lbr_gru_forward::primitive_desc::get_prop_kind (c++ function)": [[170, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13get_prop_kindEv"]], "dnnl::lbr_gru_forward::primitive_desc::primitive_desc (c++ function)": [[170, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [170, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descEv"]], "dnnl::lbr_gru_forward::primitive_desc::src_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13src_iter_descEv"]], "dnnl::lbr_gru_forward::primitive_desc::src_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc14src_layer_descEv"]], "dnnl::lbr_gru_forward::primitive_desc::weights_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc17weights_iter_descEv"]], "dnnl::lbr_gru_forward::primitive_desc::weights_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc18weights_layer_descEv"]], "dnnl::lbr_gru_forward::primitive_desc::workspace_desc (c++ function)": [[170, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc14workspace_descEv"]], "dnnl::lstm_backward (c++ struct)": [[170, "_CPPv4N4dnnl13lstm_backwardE"]], "dnnl::lstm_backward::lstm_backward (c++ function)": [[170, "_CPPv4N4dnnl13lstm_backward13lstm_backwardERK14primitive_desc"], [170, "_CPPv4N4dnnl13lstm_backward13lstm_backwardEv"]], "dnnl::lstm_backward::primitive_desc (c++ struct)": [[170, "_CPPv4N4dnnl13lstm_backward14primitive_descE"]], "dnnl::lstm_backward::primitive_desc::bias_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc9bias_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_bias_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc14diff_bias_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_dst_iter_c_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc20diff_dst_iter_c_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_dst_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc18diff_dst_iter_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_dst_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc19diff_dst_layer_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_src_iter_c_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc20diff_src_iter_c_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_src_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc18diff_src_iter_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_src_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc19diff_src_layer_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_weights_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc22diff_weights_iter_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_weights_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc23diff_weights_layer_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_weights_peephole_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc26diff_weights_peephole_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_weights_projection_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc28diff_weights_projection_descEv"]], "dnnl::lstm_backward::primitive_desc::dst_iter_c_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc15dst_iter_c_descEv"]], "dnnl::lstm_backward::primitive_desc::dst_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13dst_iter_descEv"]], "dnnl::lstm_backward::primitive_desc::dst_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc14dst_layer_descEv"]], "dnnl::lstm_backward::primitive_desc::get_cell_kind (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13get_cell_kindEv"]], "dnnl::lstm_backward::primitive_desc::get_direction (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13get_directionEv"]], "dnnl::lstm_backward::primitive_desc::get_prop_kind (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13get_prop_kindEv"]], "dnnl::lstm_backward::primitive_desc::primitive_desc (c++ function)": [[170, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb"], [170, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb"], [170, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb"], [170, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descEv"]], "dnnl::lstm_backward::primitive_desc::src_iter_c_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc15src_iter_c_descEv"]], "dnnl::lstm_backward::primitive_desc::src_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13src_iter_descEv"]], "dnnl::lstm_backward::primitive_desc::src_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc14src_layer_descEv"]], "dnnl::lstm_backward::primitive_desc::weights_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc17weights_iter_descEv"]], "dnnl::lstm_backward::primitive_desc::weights_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc18weights_layer_descEv"]], "dnnl::lstm_backward::primitive_desc::weights_peephole_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc21weights_peephole_descEv"]], "dnnl::lstm_backward::primitive_desc::weights_projection_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc23weights_projection_descEv"]], "dnnl::lstm_backward::primitive_desc::workspace_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc14workspace_descEv"]], "dnnl::lstm_forward (c++ struct)": [[170, "_CPPv4N4dnnl12lstm_forwardE"]], "dnnl::lstm_forward::lstm_forward (c++ function)": [[170, "_CPPv4N4dnnl12lstm_forward12lstm_forwardERK14primitive_desc"], [170, "_CPPv4N4dnnl12lstm_forward12lstm_forwardEv"]], "dnnl::lstm_forward::primitive_desc (c++ struct)": [[170, "_CPPv4N4dnnl12lstm_forward14primitive_descE"]], "dnnl::lstm_forward::primitive_desc::bias_desc (c++ function)": [[170, "_CPPv4NK4dnnl12lstm_forward14primitive_desc9bias_descEv"]], "dnnl::lstm_forward::primitive_desc::dst_iter_c_desc (c++ function)": [[170, "_CPPv4NK4dnnl12lstm_forward14primitive_desc15dst_iter_c_descEv"]], "dnnl::lstm_forward::primitive_desc::dst_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13dst_iter_descEv"]], "dnnl::lstm_forward::primitive_desc::dst_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl12lstm_forward14primitive_desc14dst_layer_descEv"]], "dnnl::lstm_forward::primitive_desc::get_cell_kind (c++ function)": [[170, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13get_cell_kindEv"]], "dnnl::lstm_forward::primitive_desc::get_direction (c++ function)": [[170, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13get_directionEv"]], "dnnl::lstm_forward::primitive_desc::get_prop_kind (c++ function)": [[170, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13get_prop_kindEv"]], "dnnl::lstm_forward::primitive_desc::primitive_desc (c++ function)": [[170, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [170, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [170, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [170, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descEv"]], "dnnl::lstm_forward::primitive_desc::src_iter_c_desc (c++ function)": [[170, "_CPPv4NK4dnnl12lstm_forward14primitive_desc15src_iter_c_descEv"]], "dnnl::lstm_forward::primitive_desc::src_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13src_iter_descEv"]], "dnnl::lstm_forward::primitive_desc::src_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl12lstm_forward14primitive_desc14src_layer_descEv"]], "dnnl::lstm_forward::primitive_desc::weights_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl12lstm_forward14primitive_desc17weights_iter_descEv"]], "dnnl::lstm_forward::primitive_desc::weights_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl12lstm_forward14primitive_desc18weights_layer_descEv"]], "dnnl::lstm_forward::primitive_desc::weights_peephole_desc (c++ function)": [[170, "_CPPv4NK4dnnl12lstm_forward14primitive_desc21weights_peephole_descEv"]], "dnnl::lstm_forward::primitive_desc::weights_projection_desc (c++ function)": [[170, "_CPPv4NK4dnnl12lstm_forward14primitive_desc23weights_projection_descEv"]], "dnnl::lstm_forward::primitive_desc::workspace_desc (c++ function)": [[170, "_CPPv4NK4dnnl12lstm_forward14primitive_desc14workspace_descEv"]], "dnnl::rnn_direction (c++ enum)": [[170, "_CPPv4N4dnnl13rnn_directionE"]], "dnnl::rnn_direction::bidirectional_concat (c++ enumerator)": [[170, "_CPPv4N4dnnl13rnn_direction20bidirectional_concatE"]], "dnnl::rnn_direction::bidirectional_sum (c++ enumerator)": [[170, "_CPPv4N4dnnl13rnn_direction17bidirectional_sumE"]], "dnnl::rnn_direction::undef (c++ enumerator)": [[170, "_CPPv4N4dnnl13rnn_direction5undefE"]], "dnnl::rnn_direction::unidirectional (c++ enumerator)": [[170, "_CPPv4N4dnnl13rnn_direction14unidirectionalE"]], "dnnl::rnn_direction::unidirectional_left2right (c++ enumerator)": [[170, "_CPPv4N4dnnl13rnn_direction25unidirectional_left2rightE"]], "dnnl::rnn_direction::unidirectional_right2left (c++ enumerator)": [[170, "_CPPv4N4dnnl13rnn_direction25unidirectional_right2leftE"]], "dnnl::rnn_flags (c++ enum)": [[170, "_CPPv4N4dnnl9rnn_flagsE"]], "dnnl::rnn_flags::undef (c++ enumerator)": [[170, "_CPPv4N4dnnl9rnn_flags5undefE"]], "dnnl::vanilla_rnn_backward (c++ struct)": [[170, "_CPPv4N4dnnl20vanilla_rnn_backwardE"]], "dnnl::vanilla_rnn_backward::primitive_desc (c++ struct)": [[170, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_descE"]], "dnnl::vanilla_rnn_backward::primitive_desc::bias_desc (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc9bias_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::diff_bias_desc (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc14diff_bias_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::diff_dst_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc18diff_dst_iter_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::diff_dst_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc19diff_dst_layer_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::diff_src_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc18diff_src_iter_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::diff_src_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc19diff_src_layer_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::diff_weights_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc22diff_weights_iter_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::diff_weights_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc23diff_weights_layer_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::dst_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13dst_iter_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::dst_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc14dst_layer_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::get_activation_kind (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc19get_activation_kindEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::get_alpha (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc9get_alphaEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::get_beta (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc8get_betaEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::get_cell_kind (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13get_cell_kindEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::get_direction (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13get_directionEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::get_prop_kind (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13get_prop_kindEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc (c++ function)": [[170, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb"], [170, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb"], [170, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::src_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13src_iter_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::src_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc14src_layer_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::weights_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc17weights_iter_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::weights_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc18weights_layer_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::workspace_desc (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc14workspace_descEv"]], "dnnl::vanilla_rnn_backward::vanilla_rnn_backward (c++ function)": [[170, "_CPPv4N4dnnl20vanilla_rnn_backward20vanilla_rnn_backwardERK14primitive_desc"], [170, "_CPPv4N4dnnl20vanilla_rnn_backward20vanilla_rnn_backwardEv"]], "dnnl::vanilla_rnn_forward (c++ struct)": [[170, "_CPPv4N4dnnl19vanilla_rnn_forwardE"]], "dnnl::vanilla_rnn_forward::primitive_desc (c++ struct)": [[170, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_descE"]], "dnnl::vanilla_rnn_forward::primitive_desc::bias_desc (c++ function)": [[170, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc9bias_descEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::dst_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13dst_iter_descEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::dst_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc14dst_layer_descEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::get_activation_kind (c++ function)": [[170, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc19get_activation_kindEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::get_alpha (c++ function)": [[170, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc9get_alphaEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::get_beta (c++ function)": [[170, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc8get_betaEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::get_cell_kind (c++ function)": [[170, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13get_cell_kindEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::get_direction (c++ function)": [[170, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13get_directionEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::get_prop_kind (c++ function)": [[170, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13get_prop_kindEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc (c++ function)": [[170, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [170, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb"], [170, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::src_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13src_iter_descEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::src_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc14src_layer_descEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::weights_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc17weights_iter_descEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::weights_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc18weights_layer_descEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::workspace_desc (c++ function)": [[170, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc14workspace_descEv"]], "dnnl::vanilla_rnn_forward::vanilla_rnn_forward (c++ function)": [[170, "_CPPv4N4dnnl19vanilla_rnn_forward19vanilla_rnn_forwardERK14primitive_desc"], [170, "_CPPv4N4dnnl19vanilla_rnn_forward19vanilla_rnn_forwardEv"]], "dnnl::shuffle_backward (c++ struct)": [[171, "_CPPv4N4dnnl16shuffle_backwardE"]], "dnnl::shuffle_backward::primitive_desc (c++ struct)": [[171, "_CPPv4N4dnnl16shuffle_backward14primitive_descE"]], "dnnl::shuffle_backward::primitive_desc::diff_dst_desc (c++ function)": [[171, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc13diff_dst_descEv"]], "dnnl::shuffle_backward::primitive_desc::diff_src_desc (c++ function)": [[171, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc13diff_src_descEv"]], "dnnl::shuffle_backward::primitive_desc::get_axis (c++ function)": [[171, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc8get_axisEv"]], "dnnl::shuffle_backward::primitive_desc::get_group_size (c++ function)": [[171, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc14get_group_sizeEv"]], "dnnl::shuffle_backward::primitive_desc::get_prop_kind (c++ function)": [[171, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc13get_prop_kindEv"]], "dnnl::shuffle_backward::primitive_desc::primitive_desc (c++ function)": [[171, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb"], [171, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descEv"]], "dnnl::shuffle_backward::shuffle_backward (c++ function)": [[171, "_CPPv4N4dnnl16shuffle_backward16shuffle_backwardERK14primitive_desc"], [171, "_CPPv4N4dnnl16shuffle_backward16shuffle_backwardEv"]], "dnnl::shuffle_forward (c++ struct)": [[171, "_CPPv4N4dnnl15shuffle_forwardE"]], "dnnl::shuffle_forward::primitive_desc (c++ struct)": [[171, "_CPPv4N4dnnl15shuffle_forward14primitive_descE"]], "dnnl::shuffle_forward::primitive_desc::dst_desc (c++ function)": [[171, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc8dst_descEv"]], "dnnl::shuffle_forward::primitive_desc::get_axis (c++ function)": [[171, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc8get_axisEv"]], "dnnl::shuffle_forward::primitive_desc::get_group_size (c++ function)": [[171, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc14get_group_sizeEv"]], "dnnl::shuffle_forward::primitive_desc::get_prop_kind (c++ function)": [[171, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc13get_prop_kindEv"]], "dnnl::shuffle_forward::primitive_desc::primitive_desc (c++ function)": [[171, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb"], [171, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descEv"]], "dnnl::shuffle_forward::primitive_desc::src_desc (c++ function)": [[171, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc8src_descEv"]], "dnnl::shuffle_forward::shuffle_forward (c++ function)": [[171, "_CPPv4N4dnnl15shuffle_forward15shuffle_forwardERK14primitive_desc"], [171, "_CPPv4N4dnnl15shuffle_forward15shuffle_forwardEv"]], "dnnl::softmax_backward (c++ struct)": [[172, "_CPPv4N4dnnl16softmax_backwardE"]], "dnnl::softmax_backward::primitive_desc (c++ struct)": [[172, "_CPPv4N4dnnl16softmax_backward14primitive_descE"]], "dnnl::softmax_backward::primitive_desc::diff_dst_desc (c++ function)": [[172, "_CPPv4NK4dnnl16softmax_backward14primitive_desc13diff_dst_descEv"]], "dnnl::softmax_backward::primitive_desc::diff_src_desc (c++ function)": [[172, "_CPPv4NK4dnnl16softmax_backward14primitive_desc13diff_src_descEv"]], "dnnl::softmax_backward::primitive_desc::dst_desc (c++ function)": [[172, "_CPPv4NK4dnnl16softmax_backward14primitive_desc8dst_descEv"]], "dnnl::softmax_backward::primitive_desc::get_algorithm (c++ function)": [[172, "_CPPv4NK4dnnl16softmax_backward14primitive_desc13get_algorithmEv"]], "dnnl::softmax_backward::primitive_desc::get_axis (c++ function)": [[172, "_CPPv4NK4dnnl16softmax_backward14primitive_desc8get_axisEv"]], "dnnl::softmax_backward::primitive_desc::get_prop_kind (c++ function)": [[172, "_CPPv4NK4dnnl16softmax_backward14primitive_desc13get_prop_kindEv"]], "dnnl::softmax_backward::primitive_desc::primitive_desc (c++ function)": [[172, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb"], [172, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descEv"]], "dnnl::softmax_backward::softmax_backward (c++ function)": [[172, "_CPPv4N4dnnl16softmax_backward16softmax_backwardERK14primitive_desc"], [172, "_CPPv4N4dnnl16softmax_backward16softmax_backwardEv"]], "dnnl::softmax_forward (c++ struct)": [[172, "_CPPv4N4dnnl15softmax_forwardE"]], "dnnl::softmax_forward::primitive_desc (c++ struct)": [[172, "_CPPv4N4dnnl15softmax_forward14primitive_descE"]], "dnnl::softmax_forward::primitive_desc::dst_desc (c++ function)": [[172, "_CPPv4NK4dnnl15softmax_forward14primitive_desc8dst_descEv"]], "dnnl::softmax_forward::primitive_desc::get_algorithm (c++ function)": [[172, "_CPPv4NK4dnnl15softmax_forward14primitive_desc13get_algorithmEv"]], "dnnl::softmax_forward::primitive_desc::get_axis (c++ function)": [[172, "_CPPv4NK4dnnl15softmax_forward14primitive_desc8get_axisEv"]], "dnnl::softmax_forward::primitive_desc::get_prop_kind (c++ function)": [[172, "_CPPv4NK4dnnl15softmax_forward14primitive_desc13get_prop_kindEv"]], "dnnl::softmax_forward::primitive_desc::primitive_desc (c++ function)": [[172, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb"], [172, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descEv"]], "dnnl::softmax_forward::primitive_desc::src_desc (c++ function)": [[172, "_CPPv4NK4dnnl15softmax_forward14primitive_desc8src_descEv"]], "dnnl::softmax_forward::softmax_forward (c++ function)": [[172, "_CPPv4N4dnnl15softmax_forward15softmax_forwardERK14primitive_desc"], [172, "_CPPv4N4dnnl15softmax_forward15softmax_forwardEv"]], "dnnl::sum (c++ struct)": [[173, "_CPPv4N4dnnl3sumE"]], "dnnl::sum::primitive_desc (c++ struct)": [[173, "_CPPv4N4dnnl3sum14primitive_descE"]], "dnnl::sum::primitive_desc::dst_desc (c++ function)": [[173, "_CPPv4NK4dnnl3sum14primitive_desc8dst_descEv"]], "dnnl::sum::primitive_desc::primitive_desc (c++ function)": [[173, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKN6memory4descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr"], [173, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr"], [173, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descEv"]], "dnnl::sum::primitive_desc::src_desc (c++ function)": [[173, "_CPPv4NK4dnnl3sum14primitive_desc8src_descEi"]], "dnnl::sum::sum (c++ function)": [[173, "_CPPv4N4dnnl3sum3sumERK14primitive_desc"], [173, "_CPPv4N4dnnl3sum3sumEv"]], "begin (c++ function)": [[565, "_CPPv4NK5beginEv"]], "blocked_range (c++ function)": [[565, "_CPPv413blocked_range5Value5Value9size_type"], [565, "_CPPv413blocked_rangeR13blocked_range18proportional_split"], [565, "_CPPv413blocked_rangeR13blocked_range5split"]], "const_iterator (c++ type)": [[565, "_CPPv414const_iterator"]], "empty (c++ function)": [[565, "_CPPv4NK5emptyEv"]], "end (c++ function)": [[565, "_CPPv4NK3endEv"]], "grainsize (c++ function)": [[565, "_CPPv4NK9grainsizeEv"]], "is_divisible (c++ function)": [[565, "_CPPv4NK12is_divisibleEv"]], "size (c++ function)": [[565, "_CPPv4NK4sizeEv"]], "size_type (c++ type)": [[565, "_CPPv49size_type"]], "collaborative_once_flag (c++ function)": [[567, "_CPPv423collaborative_once_flagv"]], "add (c++ function)": [[568, "_CPPv43addRK4Item"], [568, "_CPPv43addRR4Item"]], "clear (c++ function)": [[574, "_CPPv45clearv"]], "filter (c++ function)": [[574, "_CPPv46filterv"], [574, "_CPPv4I0E6filter11filter_modeRK4Body"]], "make_filter (c++ function)": [[574, "_CPPv4I000E11make_filter6filterI1T1UEN6filter4modeERK4Func"]], "operator& (c++ function)": [[574, "_CPPv4I000Ean6filterI1T1UERK6filterI1T1VERK6filterI1V1UE"]], "stop (c++ function)": [[576, "_CPPv44stopv"]], "is_final_scan (c++ function)": [[580, "_CPPv413is_final_scanv"]], "operator bool (c++ function)": [[580, "_CPPv4cvbv"], [855, "_CPPv4NKcvbEv"]], "left (c++ function)": [[585, "_CPPv4NK4leftEv"]], "operator split (c++ function)": [[585, "_CPPv4NKcv5splitEv"]], "proportional_split (c++ function)": [[585, "_CPPv418proportional_splitNSt6size_tENSt6size_tE"]], "right (c++ function)": [[585, "_CPPv4NK5rightEv"]], "attach (c++ struct)": [[756, "_CPPv46attach"]], "initialize (c++ function)": [[756, "_CPPv410initializeN10task_arena6attachE"], [856, "_CPPv410initialize11constraintsj8priority"], [856, "_CPPv410initializeN6oneapi3tbb6attachE"], [856, "_CPPv410initializeij8priority"], [856, "_CPPv410initializev"]], "task_arena (c++ function)": [[756, "_CPPv410task_arenaN10task_arena6attachE"], [856, "_CPPv410task_arena11constraintsj8priority"], [856, "_CPPv410task_arenaN6oneapi3tbb6attachE"], [856, "_CPPv410task_arenaRK10task_arena"], [856, "_CPPv410task_arenaij8priority"]], "broadcast_node (c++ function)": [[759, "_CPPv414broadcast_nodeR5graph"], [759, "_CPPv414broadcast_nodeRK14broadcast_node"]], "try_get (c++ function)": [[759, "_CPPv47try_getR11output_type"], [760, "_CPPv47try_getR1T"], [772, "_CPPv47try_getR6Output"]], "try_put (c++ function)": [[759, "_CPPv47try_putRK10input_type"], [760, "_CPPv47try_putRK1T"]], "buffer_node (c++ function)": [[760, "_CPPv411buffer_nodeR5graph"], [760, "_CPPv411buffer_nodeRK11buffer_node"]], "composite_node (c++ function)": [[761, "_CPPv414composite_nodeR5graph"]], "input_ports (c++ function)": [[761, "_CPPv411input_portsv"]], "output_ports (c++ function)": [[761, "_CPPv412output_portsv"]], "set_external_ports (c++ function)": [[761, "_CPPv418set_external_portsRR16input_ports_typeRR17output_ports_type"]], "cancel (c++ function)": [[769, "_CPPv46cancelv"]], "exception_thrown (c++ function)": [[769, "_CPPv416exception_thrownv"]], "graph (c++ function)": [[769, "_CPPv45graphR18task_group_context"]], "is_cancelled (c++ function)": [[769, "_CPPv412is_cancelledv"]], "reset (c++ function)": [[769, "_CPPv45reset11reset_flags"], [854, "_CPPv45resetv"]], "wait_for_all (c++ function)": [[769, "_CPPv412wait_for_allv"]], "~graph (c++ function)": [[769, "_CPPv4D0v"]], "oneapi::tbb::flow::indexer_node::indexer_node (c++ function)": [[771, "_CPPv4N6oneapi3tbb4flow12indexer_node12indexer_nodeER5graph"], [771, "_CPPv4N6oneapi3tbb4flow12indexer_node12indexer_nodeERK12indexer_node"]], "oneapi::tbb::flow::indexer_node::input_ports (c++ function)": [[771, "_CPPv4N6oneapi3tbb4flow12indexer_node11input_portsEv"]], "oneapi::tbb::flow::indexer_node::try_get (c++ function)": [[771, "_CPPv4N6oneapi3tbb4flow12indexer_node7try_getER11output_type"]], "activate (c++ function)": [[772, "_CPPv48activatev"]], "input_node (c++ function)": [[772, "_CPPv410input_nodeRK10input_node"], [772, "_CPPv4I0E10input_nodeR5graph4Body"]], "oneapi::tbb::flow::limiter_node::decrementer (c++ function)": [[776, "_CPPv4N6oneapi3tbb4flow12limiter_node11decrementerEv"]], "oneapi::tbb::flow::limiter_node::limiter_node (c++ function)": [[776, "_CPPv4N6oneapi3tbb4flow12limiter_node12limiter_nodeER5graph6size_t"], [776, "_CPPv4N6oneapi3tbb4flow12limiter_node12limiter_nodeERK12limiter_node"]], "oneapi::tbb::flow::limiter_node::try_get (c++ function)": [[776, "_CPPv4N6oneapi3tbb4flow12limiter_node7try_getER1T"]], "oneapi::tbb::flow::limiter_node::try_put (c++ function)": [[776, "_CPPv4N6oneapi3tbb4flow12limiter_node7try_putERK1T"]], "oneapi::tbb::flow::overwrite_node::clear (c++ function)": [[782, "_CPPv4N6oneapi3tbb4flow14overwrite_node5clearEv"]], "oneapi::tbb::flow::overwrite_node::is_valid (c++ function)": [[782, "_CPPv4N6oneapi3tbb4flow14overwrite_node8is_validEv"]], "oneapi::tbb::flow::overwrite_node::overwrite_node (c++ function)": [[782, "_CPPv4N6oneapi3tbb4flow14overwrite_node14overwrite_nodeER5graph"], [782, "_CPPv4N6oneapi3tbb4flow14overwrite_node14overwrite_nodeERK14overwrite_node"]], "oneapi::tbb::flow::overwrite_node::try_get (c++ function)": [[782, "_CPPv4N6oneapi3tbb4flow14overwrite_node7try_getER1T"]], "oneapi::tbb::flow::overwrite_node::try_put (c++ function)": [[782, "_CPPv4N6oneapi3tbb4flow14overwrite_node7try_putERK1T"]], "oneapi::tbb::flow::overwrite_node::~overwrite_node (c++ function)": [[782, "_CPPv4N6oneapi3tbb4flow14overwrite_nodeD0Ev"]], "oneapi::tbb::flow::priority_node_queue::priority_queue_node (c++ function)": [[784, "_CPPv4N6oneapi3tbb4flow19priority_node_queue19priority_queue_nodeER5graph"], [784, "_CPPv4N6oneapi3tbb4flow19priority_node_queue19priority_queue_nodeERK19priority_queue_node"]], "oneapi::tbb::flow::priority_node_queue::try_get (c++ function)": [[784, "_CPPv4N6oneapi3tbb4flow19priority_node_queue7try_getER1T"]], "oneapi::tbb::flow::priority_node_queue::try_put (c++ function)": [[784, "_CPPv4N6oneapi3tbb4flow19priority_node_queue7try_putERK1T"]], "oneapi::tbb::flow::queue_node::queue_node (c++ function)": [[785, "_CPPv4N6oneapi3tbb4flow10queue_node10queue_nodeER5graph"], [785, "_CPPv4N6oneapi3tbb4flow10queue_node10queue_nodeERK10queue_node"]], "oneapi::tbb::flow::queue_node::try_get (c++ function)": [[785, "_CPPv4N6oneapi3tbb4flow10queue_node7try_getER1T"]], "oneapi::tbb::flow::queue_node::try_put (c++ function)": [[785, "_CPPv4N6oneapi3tbb4flow10queue_node7try_putERK1T"]], "oneapi::tbb::flow::sequencer_node::sequencer_node (c++ function)": [[790, "_CPPv4I0EN6oneapi3tbb4flow14sequencer_node14sequencer_nodeER5graphRK9Sequencer"], [790, "_CPPv4N6oneapi3tbb4flow14sequencer_node14sequencer_nodeERK14sequencer_node"]], "oneapi::tbb::flow::sequencer_node::try_get (c++ function)": [[790, "_CPPv4N6oneapi3tbb4flow14sequencer_node7try_getER1T"]], "oneapi::tbb::flow::sequencer_node::try_put (c++ function)": [[790, "_CPPv4N6oneapi3tbb4flow14sequencer_node7try_putERK1T"]], "oneapi::tbb::flow::split_node::output_ports (c++ function)": [[791, "_CPPv4N6oneapi3tbb4flow10split_node12output_portsEv"]], "oneapi::tbb::flow::split_node::split_node (c++ function)": [[791, "_CPPv4N6oneapi3tbb4flow10split_node10split_nodeER5graph"], [791, "_CPPv4N6oneapi3tbb4flow10split_node10split_nodeERK10split_node"]], "oneapi::tbb::flow::split_node::try_put (c++ function)": [[791, "_CPPv4N6oneapi3tbb4flow10split_node7try_putERK9TupleType"]], "oneapi::tbb::flow::split_node::~split_node (c++ function)": [[791, "_CPPv4N6oneapi3tbb4flow10split_nodeD0Ev"]], "cast_to (c++ function)": [[792, "_CPPv4I0ENK7cast_toERK1Vv"]], "is_a (c++ function)": [[792, "_CPPv4I0ENK4is_aEbv"]], "tag (c++ function)": [[792, "_CPPv4NK3tagEv"]], "tagged_msg (c++ function)": [[792, "_CPPv4I00E10tagged_msgRK1TRK1R"]], "oneapi::tbb::flow::write_once_mode::clear (c++ function)": [[793, "_CPPv4N6oneapi3tbb4flow15write_once_mode5clearEv"]], "oneapi::tbb::flow::write_once_mode::is_valid (c++ function)": [[793, "_CPPv4N6oneapi3tbb4flow15write_once_mode8is_validEv"]], "oneapi::tbb::flow::write_once_mode::try_get (c++ function)": [[793, "_CPPv4N6oneapi3tbb4flow15write_once_mode7try_getER1T"]], "oneapi::tbb::flow::write_once_mode::try_put (c++ function)": [[793, "_CPPv4N6oneapi3tbb4flow15write_once_mode7try_putERK1T"]], "oneapi::tbb::flow::write_once_mode::write_once_node (c++ function)": [[793, "_CPPv4N6oneapi3tbb4flow15write_once_mode15write_once_nodeER5graph"], [793, "_CPPv4N6oneapi3tbb4flow15write_once_mode15write_once_nodeERK15write_once_node"]], "oneapi::tbb::flow::write_once_mode::~write_once_node (c++ function)": [[793, "_CPPv4N6oneapi3tbb4flow15write_once_modeD0Ev"]], "core_types (c++ function)": [[795, "_CPPv410core_typesv"]], "default_concurrency (c++ function)": [[795, "_CPPv419default_concurrency12numa_node_id"], [795, "_CPPv419default_concurrencyN10task_arena11constraintsE"]], "numa_nodes (c++ function)": [[795, "_CPPv410numa_nodesv"]], "tbbmalloc_clean_all_buffers (c macro)": [[798, "c.TBBMALLOC_CLEAN_ALL_BUFFERS"]], "tbbmalloc_clean_thread_buffers (c macro)": [[798, "c.TBBMALLOC_CLEAN_THREAD_BUFFERS"]], "tbbmalloc_set_huge_size_threshold (c macro)": [[798, "c.TBBMALLOC_SET_HUGE_SIZE_THRESHOLD"]], "tbbmalloc_set_soft_heap_limit (c macro)": [[798, "c.TBBMALLOC_SET_SOFT_HEAP_LIMIT"]], "tbbmalloc_use_huge_pages (c macro)": [[798, "c.TBBMALLOC_USE_HUGE_PAGES"]], "scalable_allocation_command (c function)": [[798, "c.scalable_allocation_command"]], "scalable_allocation_mode (c++ function)": [[798, "_CPPv424scalable_allocation_modei8intptr_t"]], "scalable_msize (c++ function)": [[798, "_CPPv414scalable_msizePv"]], "allocate (c++ function)": [[799, "_CPPv48allocate9size_type"]], "deallocate (c++ function)": [[799, "_CPPv410deallocateP1T9size_type"]], "max_size (c++ function)": [[799, "_CPPv4NK8max_sizeEv"]], "operator!= (c++ function)": [[799, "_CPPv4I00EnebRK23cache_aligned_allocatorI1TERK23cache_aligned_allocatorI1UE"]], "operator== (c++ function)": [[799, "_CPPv4I00EeqbRK23cache_aligned_allocatorI1TERK23cache_aligned_allocatorI1UE"]], "cache_aligned_resource (c++ function)": [[800, "_CPPv422cache_aligned_resourcePNSt3pmr15memory_resourceE"], [800, "_CPPv422cache_aligned_resourcev"]], "do_allocate (c++ function)": [[800, "_CPPv411do_allocate6size_t6size_t"]], "do_deallocate (c++ function)": [[800, "_CPPv413do_deallocatePv6size_t6size_t"]], "do_is_equal (c++ function)": [[800, "_CPPv4NK11do_is_equalERKNSt3pmr15memory_resourceE"]], "upstream_resource (c++ function)": [[800, "_CPPv4NK17upstream_resourceEv"]], "oneapi::tbb::scalable_allocator::allocate (c++ function)": [[801, "_CPPv4N6oneapi3tbb18scalable_allocator8allocateE9size_type"]], "oneapi::tbb::scalable_allocator::deallocate (c++ function)": [[801, "_CPPv4N6oneapi3tbb18scalable_allocator10deallocateEP10value_type9size_type"]], "oneapi::tbb::scalable_allocator::operator!= (c++ function)": [[801, "_CPPv4I00EN6oneapi3tbb18scalable_allocatorneEbRK18scalable_allocatorI1TERK18scalable_allocatorI1UE"]], "oneapi::tbb::scalable_allocator::operator== (c++ function)": [[801, "_CPPv4I00EN6oneapi3tbb18scalable_allocatoreqEbRK18scalable_allocatorI1TERK18scalable_allocatorI1UE"]], "oneapi::tbb::tbb_allocator::allocate (c++ function)": [[803, "_CPPv4N6oneapi3tbb13tbb_allocator8allocateE9size_type"]], "oneapi::tbb::tbb_allocator::allocator_type (c++ function)": [[803, "_CPPv4N6oneapi3tbb13tbb_allocator14allocator_typeEv"]], "oneapi::tbb::tbb_allocator::deallocate (c++ function)": [[803, "_CPPv4N6oneapi3tbb13tbb_allocator10deallocateEP1T9size_type"]], "oneapi::tbb::tbb_allocator::operator!= (c++ function)": [[803, "_CPPv4I00EN6oneapi3tbb13tbb_allocatorneEbRK13tbb_allocatorI1TERK13tbb_allocatorI1UE"]], "oneapi::tbb::tbb_allocator::operator== (c++ function)": [[803, "_CPPv4I00EN6oneapi3tbb13tbb_allocatoreqEbRK13tbb_allocatorI1TERK13tbb_allocatorI1UE"]], "oneapi::tbb::mutex::lock (c++ function)": [[805, "_CPPv4N6oneapi3tbb5mutex4lockEv"]], "oneapi::tbb::mutex::mutex (c++ function)": [[805, "_CPPv4N6oneapi3tbb5mutex5mutexEv"]], "oneapi::tbb::mutex::scoped_lock (c++ class)": [[805, "_CPPv4N6oneapi3tbb5mutex11scoped_lockE"]], "oneapi::tbb::mutex::try_lock (c++ function)": [[805, "_CPPv4N6oneapi3tbb5mutex8try_lockEv"]], "oneapi::tbb::mutex::unlock (c++ function)": [[805, "_CPPv4N6oneapi3tbb5mutex6unlockEv"]], "oneapi::tbb::mutex::~mutex (c++ function)": [[805, "_CPPv4N6oneapi3tbb5mutexD0Ev"]], "lock (c++ function)": [[806, "_CPPv44lockv"]], "null_mutex (c++ function)": [[806, "_CPPv410null_mutexv"]], "scoped_lock (c++ class)": [[806, "_CPPv411scoped_lock"]], "try_lock (c++ function)": [[806, "_CPPv48try_lockv"]], "unlock (c++ function)": [[806, "_CPPv46unlockv"]], "~null_mutex (c++ function)": [[806, "_CPPv4D0v"]], "oneapi::tbb::null_rw_mutex::lock (c++ function)": [[807, "_CPPv4N6oneapi3tbb13null_rw_mutex4lockEv"]], "oneapi::tbb::null_rw_mutex::lock_shared (c++ function)": [[807, "_CPPv4N6oneapi3tbb13null_rw_mutex11lock_sharedEv"]], "oneapi::tbb::null_rw_mutex::null_rw_mutex (c++ function)": [[807, "_CPPv4N6oneapi3tbb13null_rw_mutex13null_rw_mutexEv"]], "oneapi::tbb::null_rw_mutex::scoped_lock (c++ class)": [[807, "_CPPv4N6oneapi3tbb13null_rw_mutex11scoped_lockE"]], "oneapi::tbb::null_rw_mutex::try_lock (c++ function)": [[807, "_CPPv4N6oneapi3tbb13null_rw_mutex8try_lockEv"]], "oneapi::tbb::null_rw_mutex::try_lock_shared (c++ function)": [[807, "_CPPv4N6oneapi3tbb13null_rw_mutex15try_lock_sharedEv"]], "oneapi::tbb::null_rw_mutex::unlock (c++ function)": [[807, "_CPPv4N6oneapi3tbb13null_rw_mutex6unlockEv"]], "oneapi::tbb::null_rw_mutex::unlock_shared (c++ function)": [[807, "_CPPv4N6oneapi3tbb13null_rw_mutex13unlock_sharedEv"]], "oneapi::tbb::null_rw_mutex::~null_rw_mutex (c++ function)": [[807, "_CPPv4N6oneapi3tbb13null_rw_mutexD0Ev"]], "oneapi::tbb::queueing_mutex::queuing_mutex (c++ function)": [[808, "_CPPv4N6oneapi3tbb14queueing_mutex13queuing_mutexEv"]], "oneapi::tbb::queueing_mutex::scoped_lock (c++ class)": [[808, "_CPPv4N6oneapi3tbb14queueing_mutex11scoped_lockE"]], "oneapi::tbb::queueing_mutex::~queuing_mutex (c++ function)": [[808, "_CPPv4N6oneapi3tbb14queueing_mutexD0Ev"]], "oneapi::tbb::queueing_rw_mutex::queuing_rw_mutex (c++ function)": [[809, "_CPPv4N6oneapi3tbb17queueing_rw_mutex16queuing_rw_mutexEv"]], "oneapi::tbb::queueing_rw_mutex::scoped_lock (c++ class)": [[809, "_CPPv4N6oneapi3tbb17queueing_rw_mutex11scoped_lockE"]], "oneapi::tbb::queueing_rw_mutex::~queuing_rw_mutex (c++ function)": [[809, "_CPPv4N6oneapi3tbb17queueing_rw_mutexD0Ev"]], "oneapi::tbb::rw_mutex::lock (c++ function)": [[810, "_CPPv4N6oneapi3tbb8rw_mutex4lockEv"]], "oneapi::tbb::rw_mutex::lock_shared (c++ function)": [[810, "_CPPv4N6oneapi3tbb8rw_mutex11lock_sharedEv"]], "oneapi::tbb::rw_mutex::rw_mutex (c++ function)": [[810, "_CPPv4N6oneapi3tbb8rw_mutex8rw_mutexEv"]], "oneapi::tbb::rw_mutex::scoped_lock (c++ class)": [[810, "_CPPv4N6oneapi3tbb8rw_mutex11scoped_lockE"]], "oneapi::tbb::rw_mutex::try_lock (c++ function)": [[810, "_CPPv4N6oneapi3tbb8rw_mutex8try_lockEv"]], "oneapi::tbb::rw_mutex::try_lock_shared (c++ function)": [[810, "_CPPv4N6oneapi3tbb8rw_mutex15try_lock_sharedEv"]], "oneapi::tbb::rw_mutex::unlock (c++ function)": [[810, "_CPPv4N6oneapi3tbb8rw_mutex6unlockEv"]], "oneapi::tbb::rw_mutex::unlock_shared (c++ function)": [[810, "_CPPv4N6oneapi3tbb8rw_mutex13unlock_sharedEv"]], "oneapi::tbb::rw_mutex::~rw_mutex (c++ function)": [[810, "_CPPv4N6oneapi3tbb8rw_mutexD0Ev"]], "oneapi::tbb::speculative_spin_mutex::scoped_lock (c++ class)": [[811, "_CPPv4N6oneapi3tbb22speculative_spin_mutex11scoped_lockE"]], "oneapi::tbb::speculative_spin_mutex::speculative_spin_mutex (c++ function)": [[811, "_CPPv4N6oneapi3tbb22speculative_spin_mutex22speculative_spin_mutexEv"]], "oneapi::tbb::speculative_spin_mutex::~speculative_spin_mutex (c++ function)": [[811, "_CPPv4N6oneapi3tbb22speculative_spin_mutexD0Ev"]], "oneapi::tbb::speculative_spin_rw_mutex::scoped_lock (c++ class)": [[812, "_CPPv4N6oneapi3tbb25speculative_spin_rw_mutex11scoped_lockE"]], "oneapi::tbb::speculative_spin_rw_mutex::speculative_spin_rw_mutex (c++ function)": [[812, "_CPPv4N6oneapi3tbb25speculative_spin_rw_mutex25speculative_spin_rw_mutexEv"]], "oneapi::tbb::speculative_spin_rw_mutex::~speculative_spin_rw_mutex (c++ function)": [[812, "_CPPv4N6oneapi3tbb25speculative_spin_rw_mutexD0Ev"]], "oneapi::tbb::spin_mutex::lock (c++ function)": [[813, "_CPPv4N6oneapi3tbb10spin_mutex4lockEv"]], "oneapi::tbb::spin_mutex::scoped_lock (c++ class)": [[813, "_CPPv4N6oneapi3tbb10spin_mutex11scoped_lockE"]], "oneapi::tbb::spin_mutex::spin_mutex (c++ function)": [[813, "_CPPv4N6oneapi3tbb10spin_mutex10spin_mutexEv"]], "oneapi::tbb::spin_mutex::try_lock (c++ function)": [[813, "_CPPv4N6oneapi3tbb10spin_mutex8try_lockEv"]], "oneapi::tbb::spin_mutex::unlock (c++ function)": [[813, "_CPPv4N6oneapi3tbb10spin_mutex6unlockEv"]], "oneapi::tbb::spin_mutex::~spin_mutex (c++ function)": [[813, "_CPPv4N6oneapi3tbb10spin_mutexD0Ev"]], "oneapi::tbb::spin_rw_mutex::lock (c++ function)": [[814, "_CPPv4N6oneapi3tbb13spin_rw_mutex4lockEv"]], "oneapi::tbb::spin_rw_mutex::lock_shared (c++ function)": [[814, "_CPPv4N6oneapi3tbb13spin_rw_mutex11lock_sharedEv"]], "oneapi::tbb::spin_rw_mutex::scoped_lock (c++ class)": [[814, "_CPPv4N6oneapi3tbb13spin_rw_mutex11scoped_lockE"]], "oneapi::tbb::spin_rw_mutex::spin_rw_mutex (c++ function)": [[814, "_CPPv4N6oneapi3tbb13spin_rw_mutex13spin_rw_mutexEv"]], "oneapi::tbb::spin_rw_mutex::try_lock (c++ function)": [[814, "_CPPv4N6oneapi3tbb13spin_rw_mutex8try_lockEv"]], "oneapi::tbb::spin_rw_mutex::try_lock_shared (c++ function)": [[814, "_CPPv4N6oneapi3tbb13spin_rw_mutex15try_lock_sharedEv"]], "oneapi::tbb::spin_rw_mutex::unlock (c++ function)": [[814, "_CPPv4N6oneapi3tbb13spin_rw_mutex6unlockEv"]], "oneapi::tbb::spin_rw_mutex::unlock_shared (c++ function)": [[814, "_CPPv4N6oneapi3tbb13spin_rw_mutex13unlock_sharedEv"]], "oneapi::tbb::spin_rw_mutex::~spin_rw_mutex (c++ function)": [[814, "_CPPv4N6oneapi3tbb13spin_rw_mutexD0Ev"]], "operator< (c++ function)": [[815, "_CPPv4ltRK1TRK1T"], [816, "_CPPv4ltRK5ValueRK5Value"], [822, "_CPPv4ltRK5IndexRK5Index"]], "swap (c++ function)": [[815, "_CPPv44swapR1TR1T"]], "value::value (c++ function)": [[816, "_CPPv4N5Value5ValueERK5Value"]], "value::~value (c++ function)": [[816, "_CPPv4N5ValueD0Ev"]], "operator+ (c++ function)": [[816, "_CPPv4plRK5Value1D"], [822, "_CPPv4plRK5Index1D"], [822, "_CPPv4plRK5IndexRK5Index"]], "operator- (c++ function)": [[816, "_CPPv4miRK5ValueRK5Value"], [822, "_CPPv4miRK5IndexRK5Index"]], "operator= (c++ function)": [[816, "_CPPv4aSRK5Value"], [822, "_CPPv4aSRK5Index"], [855, "_CPPv4aSRR21task_scheduler_handle"]], "std::begin (c++ function)": [[817, "_CPPv4NSt5beginE1c"]], "std::end (c++ function)": [[817, "_CPPv4NSt3endE1c"]], "firstfilterbody::body::operator() (c++ function)": [[818, "_CPPv4NK15FirstFilterBody4BodyclERN6oneapi3tbb12flow_controlE"]], "lastfilterbody::body::operator() (c++ function)": [[818, "_CPPv4NK14LastFilterBody4BodyclE9InputType"]], "middlefilterbody::body::operator() (c++ function)": [[818, "_CPPv4NK16MiddleFilterBody4BodyclE9InputType"]], "singlefilterbody::body::operator() (c++ function)": [[818, "_CPPv4NK16SingleFilterBody4BodyclERN6oneapi3tbb12flow_controlE"]], "body::body (c++ function)": [[819, "_CPPv4N4Body4BodyERK4Body"], [826, "_CPPv4N4Body4BodyER4Body5split"]], "body::operator() (c++ function)": [[819, "_CPPv4NK4BodyclER5Range"], [820, "_CPPv4NK4BodyclE13ReferenceType"], [820, "_CPPv4NK4BodyclE13ReferenceTypeRN6oneapi3tbb6feederI8ItemTypeEE"], [820, "_CPPv4NK4BodyclERR8ItemTypeRN6oneapi3tbb6feederI8ItemTypeEE"], [826, "_CPPv4N4BodyclERK5Range12pre_scan_tag"], [826, "_CPPv4N4BodyclERK5Range14final_scan_tag"]], "body::~body (c++ function)": [[819, "_CPPv4N4BodyD0Ev"]], "f::operator() (c++ function)": [[821, "_CPPv4NK1FclE5Index"]], "index::index (c++ function)": [[822, "_CPPv4N5Index5IndexERK5Index"], [822, "_CPPv4N5Index5IndexEi"]], "index::~index (c++ function)": [[822, "_CPPv4N5IndexD0Ev"]], "operator* (c++ function)": [[822, "_CPPv4mlRK5IndexRK5Index"]], "operator++ (c++ function)": [[822, "_CPPv4ppv"]], "operator/ (c++ function)": [[822, "_CPPv4dvRK5IndexRK5Index"]], "operator<= (c++ function)": [[822, "_CPPv4leRK5IndexRK5Index"]], "parallelreducebody::body::body (c++ function)": [[823, "_CPPv4N18ParallelReduceBody4Body4BodyER4Body5split"]], "parallelreducebody::body::join (c++ function)": [[823, "_CPPv4N18ParallelReduceBody4Body4joinER4Body"]], "parallelreducebody::body::operator() (c++ function)": [[823, "_CPPv4N18ParallelReduceBody4BodyclERK5Range"]], "parallelreducebody::body::~body (c++ function)": [[823, "_CPPv4N18ParallelReduceBody4BodyD0Ev"]], "func::operator() (c++ function)": [[824, "_CPPv4NK4FuncclERK5RangeRR5Value"], [838, "_CPPv4N4FuncclERK5Input"]], "reduction::operator() (c++ function)": [[825, "_CPPv4NK9ReductionclERR5ValueRR5Value"]], "body::assign (c++ function)": [[826, "_CPPv4N4Body6assignER4Body"]], "body::reverse_join (c++ function)": [[826, "_CPPv4N4Body12reverse_joinER4Body"]], "combine::operator() (c++ function)": [[827, "_CPPv4NK7CombineclERK5ValueRK5Value"]], "scan::operator() (c++ function)": [[828, "_CPPv4NK4ScanclERK5RangeRK5Valueb"]], "r::r (c++ function)": [[829, "_CPPv4N1R1RER1R18proportional_split"], [829, "_CPPv4N1R1RER1R5split"], [829, "_CPPv4N1R1RERK1R"]], "r::empty (c++ function)": [[829, "_CPPv4NK1R5emptyEv"]], "r::is_divisible (c++ function)": [[829, "_CPPv4NK1R12is_divisibleEv"]], "r::~r (c++ function)": [[829, "_CPPv4N1RD0Ev"]], "x::x (c++ function)": [[830, "_CPPv4N1X1XER1X5split"]], "cr::begin (c++ function)": [[831, "_CPPv4N2CR5beginEv"]], "cr::const_reference (c++ type)": [[831, "_CPPv4N2CR15const_referenceE"]], "cr::difference_type (c++ type)": [[831, "_CPPv4N2CR15difference_typeE"]], "cr::end (c++ function)": [[831, "_CPPv4N2CR3endEv"]], "cr::grainsize (c++ function)": [[831, "_CPPv4NK2CR9grainsizeEv"]], "cr::iterator (c++ type)": [[831, "_CPPv4N2CR8iteratorE"]], "cr::reference (c++ type)": [[831, "_CPPv4N2CR9referenceE"]], "cr::size_type (c++ type)": [[831, "_CPPv4N2CR9size_typeE"]], "cr::value_type (c++ type)": [[831, "_CPPv4N2CR10value_typeE"]], "h::h (c++ function)": [[832, "_CPPv4N1H1HERK1H"]], "h::equal (c++ function)": [[832, "_CPPv4NK1H5equalERK7KeyTypeRK7KeyType"]], "h::hash (c++ function)": [[832, "_CPPv4NK1H4hashERK7KeyType"]], "h::~h (c++ function)": [[832, "_CPPv4N1HD0Ev"]], "asyncnodebody::body::body (c++ function)": [[833, "_CPPv4N13AsyncNodeBody4Body4BodyERK4Body"]], "asyncnodebody::body::operator() (c++ function)": [[833, "_CPPv4N13AsyncNodeBody4BodyclERK5InputR11GatewayType"]], "asyncnodebody::body::~body (c++ function)": [[833, "_CPPv4N13AsyncNodeBody4BodyD0Ev"]], "continuenodebody::body::body (c++ function)": [[834, "_CPPv4N16ContinueNodeBody4Body4BodyERK4Body"]], "continuenodebody::body::operator() (c++ function)": [[834, "_CPPv4N16ContinueNodeBody4BodyclERK12continue_msg"]], "continuenodebody::body::~body (c++ function)": [[834, "_CPPv4N16ContinueNodeBody4BodyD0Ev"]], "functionnodebody::body::body (c++ function)": [[835, "_CPPv4N16FunctionNodeBody4Body4BodyERK4Body"]], "functionnodebody::body::operator() (c++ function)": [[835, "_CPPv4N16FunctionNodeBody4BodyclERK5Input"]], "functionnodebody::body::~body (c++ function)": [[835, "_CPPv4N16FunctionNodeBody4BodyD0Ev"]], "t::release_wait (c++ function)": [[836, "_CPPv4N1T12release_waitEv"]], "t::reserve_wait (c++ function)": [[836, "_CPPv4N1T12reserve_waitEv"]], "t::try_put (c++ function)": [[836, "_CPPv4N1T7try_putERK6Output"]], "inputnodebody::body::body (c++ function)": [[837, "_CPPv4N13InputNodeBody4Body4BodyERK4Body"]], "inputnodebody::body::operator() (c++ function)": [[837, "_CPPv4N13InputNodeBody4BodyclERN6oneapi3tbb12flow_controlE"]], "inputnodebody::body::~body (c++ function)": [[837, "_CPPv4N13InputNodeBody4BodyD0Ev"]], "func::func (c++ function)": [[838, "_CPPv4N4Func4FuncERK4Func"]], "func::~func (c++ function)": [[838, "_CPPv4N4FuncD0Ev"]], "multifunctionnodebody::body::body (c++ function)": [[839, "_CPPv4N21MultifunctionNodeBody4Body4BodyERK4Body"]], "multifunctionnodebody::body::operator() (c++ function)": [[839, "_CPPv4N21MultifunctionNodeBody4BodyclERK5InputR15OutputPortsType"]], "multifunctionnodebody::body::~body (c++ function)": [[839, "_CPPv4N21MultifunctionNodeBody4BodyD0Ev"]], "s::s (c++ function)": [[840, "_CPPv4N1S1SERK1S"]], "s::operator() (c++ function)": [[840, "_CPPv4N1SclERK1T"]], "s::~s (c++ function)": [[840, "_CPPv4N1SD0Ev"]], "mutex_func::m::is_fair_mutex (c++ member)": [[841, "_CPPv4N10mutex_func1M13is_fair_mutexE"]], "mutex_func::m::is_recursive_mutex (c++ member)": [[841, "_CPPv4N10mutex_func1M18is_recursive_mutexE"]], "mutex_func::m::is_rw_mutex (c++ member)": [[841, "_CPPv4N10mutex_func1M11is_rw_mutexE"]], "mutex_func::m::scoped_lock (c++ function)": [[841, "_CPPv4N10mutex_func1M11scoped_lockER1M"], [841, "_CPPv4N10mutex_func1M11scoped_lockEv"]], "mutex_func::m::scoped_lock::acquire (c++ function)": [[841, "_CPPv4N10mutex_func1M11scoped_lock7acquireER1M"]], "mutex_func::m::scoped_lock::release (c++ function)": [[841, "_CPPv4N10mutex_func1M11scoped_lock7releaseEv"]], "mutex_func::m::scoped_lock::try_acquire (c++ function)": [[841, "_CPPv4N10mutex_func1M11scoped_lock11try_acquireER1M"]], "mutex_func::m::~scoped_lock (c++ function)": [[841, "_CPPv4N10mutex_func1MD0Ev"]], "mutex_type::m::scoped_lock (c++ type)": [[841, "_CPPv4N10mutex_type1M11scoped_lockE"]], "rwm::scoped_lock (c++ type)": [[842, "_CPPv4N3RWM11scoped_lockE"]], "rwm::scoped_lock::m::is_fair_mutex (c++ member)": [[842, "_CPPv4N3RWM11scoped_lock1M13is_fair_mutexE"]], "rwm::scoped_lock::m::is_recursive_mutex (c++ member)": [[842, "_CPPv4N3RWM11scoped_lock1M18is_recursive_mutexE"]], "rwm::scoped_lock::m::is_rw_mutex (c++ member)": [[842, "_CPPv4N3RWM11scoped_lock1M11is_rw_mutexE"]], "rwm::scoped_lock::rwm::scoped_lock (c++ function)": [[842, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lockER3RWMb"], [842, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lockEv"]], "rwm::scoped_lock::rwm::scoped_lock::acquire (c++ function)": [[842, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock7acquireER3RWMb"]], "rwm::scoped_lock::rwm::scoped_lock::downgrade_to_reader (c++ function)": [[842, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock19downgrade_to_readerEv"]], "rwm::scoped_lock::rwm::scoped_lock::release (c++ function)": [[842, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock7releaseEv"]], "rwm::scoped_lock::rwm::scoped_lock::try_acquire (c++ function)": [[842, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock11try_acquireER3RWMb"]], "rwm::scoped_lock::rwm::scoped_lock::upgrade_to_writer (c++ function)": [[842, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock17upgrade_to_writerEv"]], "rwm::scoped_lock::rwm::~scoped_lock (c++ function)": [[842, "_CPPv4N3RWM11scoped_lock3RWMD0Ev"]], "suspendfunc::func::func (c++ function)": [[843, "_CPPv4N11SuspendFunc4Func4FuncERK4Func"]], "suspendfunc::func::operator() (c++ function)": [[843, "_CPPv4N11SuspendFunc4FuncclEN6oneapi3tbb4task13suspend_pointE"]], "active_value (c++ function)": [[852, "_CPPv412active_value9parameter"]], "global_control (c++ function)": [[852, "_CPPv414global_control9parameter6size_t"]], "parameter::max_allowed_parallelism (c++ enum)": [[852, "_CPPv4N9parameter23max_allowed_parallelismE"]], "parameter::terminate_on_exception (c++ enum)": [[852, "_CPPv4N9parameter22terminate_on_exceptionE"]], "parameter::thread_stack_size (c++ enum)": [[852, "_CPPv4N9parameter17thread_stack_sizeE"]], "~global_control (c++ function)": [[852, "_CPPv4D0v"]], "cancel_group_execution (c++ function)": [[854, "_CPPv422cancel_group_executionv"]], "capture_fp_settings (c++ function)": [[854, "_CPPv419capture_fp_settingsv"]], "is_group_execution_cancelled (c++ function)": [[854, "_CPPv4NK28is_group_execution_cancelledEv"]], "kind_t::bound (c++ enum)": [[854, "_CPPv4N6kind_t5boundE"]], "kind_t::isolated (c++ enum)": [[854, "_CPPv4N6kind_t8isolatedE"]], "task_group_context (c++ function)": [[854, "_CPPv418task_group_context6kind_t9uintptr_t"]], "traits (c++ function)": [[854, "_CPPv4NK6traitsEv"]], "traits_type::fp_settings (c++ enum)": [[854, "_CPPv4N11traits_type11fp_settingsE"]], "~task_group_context (c++ function)": [[854, "_CPPv4D0v"]], "finalize (c++ function)": [[855, "_CPPv48finalizeR21task_scheduler_handle"], [855, "_CPPv48finalizeR21task_scheduler_handleRKNSt9nothrow_tE"]], "release (c++ function)": [[855, "_CPPv47releasev"]], "task_scheduler_handle (c++ function)": [[855, "_CPPv421task_scheduler_handleN6oneapi3tbb6attachE"], [855, "_CPPv421task_scheduler_handleRR21task_scheduler_handle"], [855, "_CPPv421task_scheduler_handlev"]], "~task_scheduler_handle (c++ function)": [[855, "_CPPv4D0v"]], "automatic (c++ member)": [[856, "_CPPv49automatic"]], "constraints (c++ struct)": [[856, "_CPPv411constraints"]], "constraints::constraints (c++ function)": [[856, "_CPPv4N11constraints11constraintsE12numa_node_idi"]], "constraints::core_type (c++ member)": [[856, "_CPPv4N11constraints9core_typeE"]], "constraints::max_concurrency (c++ member)": [[856, "_CPPv4N11constraints15max_concurrencyE"]], "constraints::max_threads_per_core (c++ member)": [[856, "_CPPv4N11constraints20max_threads_per_coreE"]], "constraints::numa_id (c++ member)": [[856, "_CPPv4N11constraints7numa_idE"]], "constraints::set_core_type (c++ function)": [[856, "_CPPv4N11constraints13set_core_typeE12core_type_id"]], "constraints::set_max_concurrency (c++ function)": [[856, "_CPPv4N11constraints19set_max_concurrencyEi"]], "constraints::set_max_threads_per_core (c++ function)": [[856, "_CPPv4N11constraints24set_max_threads_per_coreEi"]], "constraints::set_numa_id (c++ function)": [[856, "_CPPv4N11constraints11set_numa_idE12numa_node_id"]], "create_numa_task_arenas (c++ function)": [[856, "_CPPv423create_numa_task_arenasN10task_arena11constraintsEj"]], "enqueue (c++ function)": [[856, "_CPPv47enqueueRR11task_handle"], [856, "_CPPv4I0E7enqueuevRR1F"], [856, "_CPPv4I0E7enqueuevRR1FR10task_group"]], "execute (c++ function)": [[856, "_CPPv4I0E7executeDTcl1fEERR1F"]], "is_active (c++ function)": [[856, "_CPPv4NK9is_activeEv"]], "max_concurrency (c++ function)": [[856, "_CPPv4NK15max_concurrencyEv"]], "not_initialized (c++ member)": [[856, "_CPPv415not_initialized"]], "priority::high (c++ enum)": [[856, "_CPPv4N8priority4highE"]], "priority::low (c++ enum)": [[856, "_CPPv4N8priority3lowE"]], "priority::normal (c++ enum)": [[856, "_CPPv4N8priority6normalE"]], "task_arena::wait_for (c++ function)": [[856, "_CPPv4N10task_arena8wait_forER10task_group"]], "terminate (c++ function)": [[856, "_CPPv49terminatev"]], "~task_arena (c++ function)": [[856, "_CPPv4D0v"]], "is_observing (c++ function)": [[857, "_CPPv4NK12is_observingEv"]], "observe (c++ function)": [[857, "_CPPv47observeb"]], "on_scheduler_entry (c++ function)": [[857, "_CPPv418on_scheduler_entryb"]], "on_scheduler_exit (c++ function)": [[857, "_CPPv417on_scheduler_exitb"]], "task_scheduler_observer (c++ function)": [[857, "_CPPv423task_scheduler_observerR10task_arena"], [857, "_CPPv423task_scheduler_observerv"]], "~task_scheduler_observer (c++ function)": [[857, "_CPPv4D0v"]], "tbb::this_task_arena::current_thread_index (c++ function)": [[858, "_CPPv4N3tbb15this_task_arena20current_thread_indexEv"]], "tbb::this_task_arena::enqueue (c++ function)": [[858, "_CPPv4I0EN3tbb15this_task_arena7enqueueEvRR1F"], [858, "_CPPv4I0EN3tbb15this_task_arena7enqueueEvRR1FR10task_group"], [858, "_CPPv4N3tbb15this_task_arena7enqueueERR11task_handle"]], "tbb::this_task_arena::isolate (c++ function)": [[858, "_CPPv4I0EN3tbb15this_task_arena7isolateEDTcl1fEERR1F"]], "tbb::this_task_arena::max_concurrency (c++ function)": [[858, "_CPPv4N3tbb15this_task_arena15max_concurrencyEv"]], "oneapi::tbb::task_group::cancel (c++ function)": [[859, "_CPPv4N6oneapi3tbb10task_group6cancelEv"]], "oneapi::tbb::task_group::defer (c++ function)": [[859, "_CPPv4I0EN6oneapi3tbb10task_group5deferE11task_handleRR1F"]], "oneapi::tbb::task_group::is_current_task_group_canceling (c++ function)": [[859, "_CPPv4N6oneapi3tbb10task_group31is_current_task_group_cancelingEv"]], "oneapi::tbb::task_group::run (c++ function)": [[859, "_CPPv4I0EN6oneapi3tbb10task_group3runEvRR4Func"], [859, "_CPPv4N6oneapi3tbb10task_group3runERR11task_handle"]], "oneapi::tbb::task_group::run_and_wait (c++ function)": [[859, "_CPPv4I0EN6oneapi3tbb10task_group12run_and_waitE17task_group_statusRK4Func"]], "oneapi::tbb::task_group::task_group (c++ function)": [[859, "_CPPv4N6oneapi3tbb10task_group10task_groupER18task_group_context"], [859, "_CPPv4N6oneapi3tbb10task_group10task_groupEv"]], "oneapi::tbb::task_group::wait (c++ function)": [[859, "_CPPv4N6oneapi3tbb10task_group4waitEv"]], "oneapi::tbb::task_group::~task_group (c++ function)": [[859, "_CPPv4N6oneapi3tbb10task_groupD0Ev"]], "canceled (c macro)": [[860, "c.canceled"]], "complete (c macro)": [[860, "c.complete"]], "not_complete (c macro)": [[860, "c.not_complete"]], "tbb::task_handle::operator bool (c++ function)": [[861, "_CPPv4NK3tbb11task_handlecvbEv"]], "tbb::task_handle::operator= (c++ function)": [[861, "_CPPv4N3tbb11task_handleaSERR11task_handle"]], "tbb::task_handle::task_handle (c++ function)": [[861, "_CPPv4N3tbb11task_handle11task_handleERR11task_handle"], [861, "_CPPv4N3tbb11task_handle11task_handleEv"]], "tbb::task_handle::~task_handle (c++ function)": [[861, "_CPPv4N3tbb11task_handleD0Ev"]], "oneapi::tbb::combinable::clear (c++ function)": [[863, "_CPPv4N6oneapi3tbb10combinable5clearEv"]], "oneapi::tbb::combinable::combinable (c++ function)": [[863, "_CPPv4I0EN6oneapi3tbb10combinable10combinableE5FInit"], [863, "_CPPv4N6oneapi3tbb10combinable10combinableERK10combinable"], [863, "_CPPv4N6oneapi3tbb10combinable10combinableERR10combinable"], [863, "_CPPv4N6oneapi3tbb10combinable10combinableEv"]], "oneapi::tbb::combinable::combine (c++ function)": [[863, "_CPPv4I0EN6oneapi3tbb10combinable7combineE1T10BinaryFunc"]], "oneapi::tbb::combinable::combine_each (c++ function)": [[863, "_CPPv4I0EN6oneapi3tbb10combinable12combine_eachEv9UnaryFunc"]], "oneapi::tbb::combinable::local (c++ function)": [[863, "_CPPv4N6oneapi3tbb10combinable5localERb"], [863, "_CPPv4N6oneapi3tbb10combinable5localEv"]], "oneapi::tbb::combinable::operator= (c++ function)": [[863, "_CPPv4N6oneapi3tbb10combinableaSERK10combinable"], [863, "_CPPv4N6oneapi3tbb10combinableaSERR10combinable"]], "oneapi::tbb::combinable::~combinable (c++ function)": [[863, "_CPPv4N6oneapi3tbb10combinableD0Ev"]], "ets_key_usage_type::ets_key_per_instance (c++ enum)": [[864, "_CPPv4N18ets_key_usage_type20ets_key_per_instanceE"]], "ets_key_usage_type::ets_no_key (c++ enum)": [[864, "_CPPv4N18ets_key_usage_type10ets_no_keyE"]], "ets_key_usage_type::ets_suspend_aware (c++ enum)": [[864, "_CPPv4N18ets_key_usage_type17ets_suspend_awareE"]], "oneapi::tbb::enumerable_thread_specific::combine (c++ function)": [[865, "_CPPv4I0EN6oneapi3tbb26enumerable_thread_specific7combineE1T10BinaryFunc"]], "oneapi::tbb::enumerable_thread_specific::combine_each (c++ function)": [[865, "_CPPv4I0EN6oneapi3tbb26enumerable_thread_specific12combine_eachEv9UnaryFunc"]], "oneapi::tbb::enumerable_thread_specific::begin (c++ function)": [[867, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5beginEv"], [867, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific5beginEv"]], "oneapi::tbb::enumerable_thread_specific::end (c++ function)": [[867, "_CPPv4N6oneapi3tbb26enumerable_thread_specific3endEv"], [867, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific3endEv"]], "oneapi::tbb::enumerable_thread_specific::range (c++ function)": [[867, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5rangeE6size_t"], [867, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific5rangeE6size_t"]], "oneapi::tbb::enumerable_thread_specific::local (c++ function)": [[868, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5localERb"], [868, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5localEv"]], "oneapi::tbb::enumerable_thread_specific::empty (c++ function)": [[869, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific5emptyEv"]], "oneapi::tbb::enumerable_thread_specific::size (c++ function)": [[869, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific4sizeEv"]], "oneapi::tbb::flatten2d::begin (c++ function)": [[871, "_CPPv4N6oneapi3tbb9flatten2d5beginEv"], [871, "_CPPv4NK6oneapi3tbb9flatten2d5beginEv"]], "oneapi::tbb::flatten2d::end (c++ function)": [[871, "_CPPv4N6oneapi3tbb9flatten2d3endEv"], [871, "_CPPv4NK6oneapi3tbb9flatten2d3endEv"]], "oneapi::tbb::flatten2d::flatten2d (c++ function)": [[871, "_CPPv4I0EN6oneapi3tbb9flatten2d9flatten2dE11flattened2dI9ContainerERK9ContainerKN9Container14const_iteratorEKN9Container14const_iteratorE"]], "oneapi::tbb::flatten2d::flattened2d (c++ function)": [[871, "_CPPv4I0EN6oneapi3tbb9flatten2d11flattened2dERK9Container"], [871, "_CPPv4N6oneapi3tbb9flatten2d11flattened2dERK9Container"], [871, "_CPPv4N6oneapi3tbb9flatten2d11flattened2dERK9ContainerN9Container14const_iteratorEN9Container14const_iteratorE"]], "oneapi::tbb::flatten2d::size (c++ function)": [[871, "_CPPv4NK6oneapi3tbb9flatten2d4sizeEv"]]}})